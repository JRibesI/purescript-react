// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (
  modules,
  entry,
  mainEntry,
  parcelRequireName,
  externals,
  distDir,
  publicUrl,
  devServer
) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var importMap = previousRequire.i || {};
  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        if (externals[name]) {
          return externals[name];
        }
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        globalObject
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.require = nodeRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.distDir = distDir;
  newRequire.publicUrl = publicUrl;
  newRequire.devServer = devServer;
  newRequire.i = importMap;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  // Only insert newRequire.load when it is actually used.
  // The code in this file is linted against ES5, so dynamic import is not allowed.
  // INSERT_LOAD_HERE

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });
    }
  }
})({"5j6Kf":[function(require,module,exports,__globalThis) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SERVER_PORT = 1234;
var HMR_SECURE = false;
var HMR_ENV_HASH = "439701173a9199ea";
var HMR_USE_SSE = false;
module.bundle.HMR_BUNDLE_ID = "d68ad56631b563d9";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_SERVER_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var HMR_USE_SSE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , disposedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ , bundleNotFound = false;
function getHostname() {
    return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
}
function getPort() {
    return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);
}
// eslint-disable-next-line no-redeclare
let WebSocket = globalThis.WebSocket;
if (!WebSocket && typeof module.bundle.root === 'function') try {
    // eslint-disable-next-line no-global-assign
    WebSocket = module.bundle.root('ws');
} catch  {
// ignore.
}
var hostname = getHostname();
var port = getPort();
var protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && ![
    'localhost',
    '127.0.0.1',
    '0.0.0.0'
].includes(hostname) ? 'wss' : 'ws';
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if (!parent || !parent.isParcelRequire) {
    // Web extension context
    var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes('test.js');
    }
    var ws;
    if (HMR_USE_SSE) ws = new EventSource('/__parcel_hmr');
    else try {
        // If we're running in the dev server's node runner, listen for messages on the parent port.
        let { workerData, parentPort } = module.bundle.root('node:worker_threads') /*: any*/ ;
        if (workerData !== null && workerData !== void 0 && workerData.__parcel) {
            parentPort.on('message', async (message)=>{
                try {
                    await handleMessage(message);
                    parentPort.postMessage('updated');
                } catch  {
                    parentPort.postMessage('restart');
                }
            });
            // After the bundle has finished running, notify the dev server that the HMR update is complete.
            queueMicrotask(()=>parentPort.postMessage('ready'));
        }
    } catch  {
        if (typeof WebSocket !== 'undefined') try {
            ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');
        } catch (err) {
            // Ignore cloudflare workers error.
            if (err.message && !err.message.includes('Disallowed operation called within global scope')) console.error(err.message);
        }
    }
    if (ws) {
        // $FlowFixMe
        ws.onmessage = async function(event /*: {data: string, ...} */ ) {
            var data /*: HMRMessage */  = JSON.parse(event.data);
            await handleMessage(data);
        };
        if (ws instanceof WebSocket) {
            ws.onerror = function(e) {
                if (e.message) console.error(e.message);
            };
            ws.onclose = function() {
                console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
            };
        }
    }
}
async function handleMessage(data /*: HMRMessage */ ) {
    checkedAssets = {} /*: {|[string]: boolean|} */ ;
    disposedAssets = {} /*: {|[string]: boolean|} */ ;
    assetsToAccept = [];
    assetsToDispose = [];
    bundleNotFound = false;
    if (data.type === 'reload') fullReload();
    else if (data.type === 'update') {
        // Remove error overlay if there is one
        if (typeof document !== 'undefined') removeErrorOverlay();
        let assets = data.assets;
        // Handle HMR Update
        let handled = assets.every((asset)=>{
            return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
        });
        // Dispatch a custom event in case a bundle was not found. This might mean
        // an asset on the server changed and we should reload the page. This event
        // gives the client an opportunity to refresh without losing state
        // (e.g. via React Server Components). If e.preventDefault() is not called,
        // we will trigger a full page reload.
        if (handled && bundleNotFound && assets.some((a)=>a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {
            cancelable: true
        }));
        if (handled) {
            console.clear();
            // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
            if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') window.dispatchEvent(new CustomEvent('parcelhmraccept'));
            await hmrApplyUpdates(assets);
            hmrDisposeQueue();
            // Run accept callbacks. This will also re-execute other disposed assets in topological order.
            let processedAssets = {};
            for(let i = 0; i < assetsToAccept.length; i++){
                let id = assetsToAccept[i][1];
                if (!processedAssets[id]) {
                    hmrAccept(assetsToAccept[i][0], id);
                    processedAssets[id] = true;
                }
            }
        } else fullReload();
    }
    if (data.type === 'error') {
        // Log parcel errors to console
        for (let ansiDiagnostic of data.diagnostics.ansi){
            let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
            console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
        }
        if (typeof document !== 'undefined') {
            // Render the fancy html overlay
            removeErrorOverlay();
            var overlay = createErrorOverlay(data.diagnostics.html);
            // $FlowFixMe
            document.body.appendChild(overlay);
        }
    }
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] \u2728 Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement('div');
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, '') : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          \u{1F6A8} ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + '</div>').join('')}
        </div>
        ${diagnostic.documentation ? `<div>\u{1F4DD} <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ''}
      </div>
    `;
    }
    errorHTML += '</div>';
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if (typeof location !== 'undefined' && 'reload' in location) location.reload();
    else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
    else try {
        let { workerData, parentPort } = module.bundle.root('node:worker_threads') /*: any*/ ;
        if (workerData !== null && workerData !== void 0 && workerData.__parcel) parentPort.postMessage('restart');
    } catch (err) {
        console.error("[parcel] \u26A0\uFE0F An HMR update was not accepted. Please restart the process.");
    }
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute('href');
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute('href', // $FlowFixMe
    href.split('?')[0] + '?' + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout || typeof document === 'undefined') return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute('href');
            var hostname = getHostname();
            var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === 'js') {
        if (typeof document !== 'undefined') {
            let script = document.createElement('script');
            script.src = asset.url + '?t=' + Date.now();
            if (asset.outputFormat === 'esmodule') script.type = 'module';
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === 'function') {
            // Worker scripts
            if (asset.outputFormat === 'esmodule') return import(asset.url + '?t=' + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + '?t=' + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension fix
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {
                        extCtx.runtime.reload();
                        return;
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === 'css') reloadCSS();
    else if (asset.type === 'js') {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        }
        // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.
        // This is required in case modules are duplicated. We need to ensure all instances have the updated code.
        if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    checkedAssets = {};
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else if (a !== null) {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) {
            bundleNotFound = true;
            return true;
        }
        return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return null;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    if (!cached) return true;
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
    return false;
}
function hmrDisposeQueue() {
    // Dispose all old assets.
    for(let i = 0; i < assetsToDispose.length; i++){
        let id = assetsToDispose[i][1];
        if (!disposedAssets[id]) {
            hmrDispose(assetsToDispose[i][0], id);
            disposedAssets[id] = true;
        }
    }
    assetsToDispose = [];
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
        let assetsToAlsoAccept = [];
        cached.hot._acceptCallbacks.forEach(function(cb) {
            let additionalAssets = cb(function() {
                return getParents(module.bundle.root, id);
            });
            if (Array.isArray(additionalAssets) && additionalAssets.length) assetsToAlsoAccept.push(...additionalAssets);
        });
        if (assetsToAlsoAccept.length) {
            let handled = assetsToAlsoAccept.every(function(a) {
                return hmrAcceptCheck(a[0], a[1]);
            });
            if (!handled) return fullReload();
            hmrDisposeQueue();
        }
    }
}

},{}],"a0t4e":[function(require,module,exports,__globalThis) {
var _main = require("../output/Main");
// Hot reloading. See https://parceljs.org/features/development/#hot-reloading
if (module.hot) module.hot.accept(function() {
    (0, _main.main)();
});
(0, _main.main)();

},{"../output/Main":"b4SvW"}],"b4SvW":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "main", ()=>main);
var _indexJs = require("../App/index.js");
var _indexJs1 = require("../Control.Bind/index.js");
var _indexJs2 = require("../Data.Functor/index.js");
var _indexJs3 = require("../Data.Maybe/index.js");
var _indexJs4 = require("../Effect/index.js");
var _indexJs5 = require("../Effect.Console/index.js");
var _indexJs6 = require("../React.Basic.DOM.Client/index.js");
var _indexJs7 = require("../Web.DOM.NonElementParentNode/index.js");
var _indexJs8 = require("../Web.HTML/index.js");
var _indexJs9 = require("../Web.HTML.HTMLDocument/index.js");
var _indexJs10 = require("../Web.HTML.Window/index.js");
var bindFlipped = /* #__PURE__ */ _indexJs1.bindFlipped(_indexJs4.bindEffect);
var main = function __do() {
    var maybeApp = bindFlipped(_indexJs7.getElementById("app"))(_indexJs2.map(_indexJs4.functorEffect)(_indexJs9.toNonElementParentNode)(bindFlipped(_indexJs10.document)(_indexJs8.window)))();
    if (maybeApp instanceof _indexJs3.Nothing) return _indexJs5.log("No element with id 'app' found.")();
    if (maybeApp instanceof _indexJs3.Just) {
        var root = _indexJs6.createRoot(maybeApp.value0)();
        var appComponent = _indexJs.mkApp();
        return _indexJs6.renderRoot(root)(appComponent({}))();
    }
    throw new Error("Failed pattern match at Main (line 20, column 3 - line 25, column 40): " + [
        maybeApp.constructor.name
    ]);
};

},{"../App/index.js":"84tW1","../Control.Bind/index.js":"3yoUR","../Data.Functor/index.js":"j9NCu","../Data.Maybe/index.js":"ff6lw","../Effect/index.js":"jyor1","../Effect.Console/index.js":"5l5kj","../React.Basic.DOM.Client/index.js":"2OjTO","../Web.DOM.NonElementParentNode/index.js":"erbdh","../Web.HTML/index.js":"3BP8C","../Web.HTML.HTMLDocument/index.js":"gRKYp","../Web.HTML.Window/index.js":"e88Om","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"84tW1":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mkApp", ()=>mkApp);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../React.Basic.DOM/index.js");
var _indexJs2 = require("../React.Basic.DOM.Generated/index.js");
var _indexJs3 = require("../React.Basic.Hooks/index.js");
var _indexJs4 = require("../React.Basic.Hooks.Internal/index.js");
var _indexJs5 = require("../Type.Equality/index.js");
var pure = /* #__PURE__ */ _indexJs.pure(/* #__PURE__ */ _indexJs4.applicativeRender(_indexJs5.refl));
var mkApp = /* #__PURE__ */ _indexJs3.component("App")(function(v) {
    return pure(_indexJs2.div_([
        _indexJs1.text("Hola desde App")
    ]));
});

},{"../Control.Applicative/index.js":"5JL6d","../React.Basic.DOM/index.js":"5UweE","../React.Basic.DOM.Generated/index.js":"bePe1","../React.Basic.Hooks/index.js":"kv6JX","../React.Basic.Hooks.Internal/index.js":"3ym3c","../Type.Equality/index.js":"frUGR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5JL6d":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "apply", ()=>(0, _indexJs.apply));
parcelHelpers.export(exports, "map", ()=>(0, _indexJs1.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs1.void));
parcelHelpers.export(exports, "pure", ()=>pure);
parcelHelpers.export(exports, "liftA1", ()=>liftA1);
parcelHelpers.export(exports, "unless", ()=>unless);
parcelHelpers.export(exports, "when", ()=>when);
parcelHelpers.export(exports, "applicativeFn", ()=>applicativeFn);
parcelHelpers.export(exports, "applicativeArray", ()=>applicativeArray);
parcelHelpers.export(exports, "applicativeProxy", ()=>applicativeProxy);
var _indexJs = require("../Control.Apply/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var _indexJs2 = require("../Data.Unit/index.js");
var _indexJs3 = require("../Type.Proxy/index.js");
var pure = function(dict) {
    return dict.pure;
};
var unless = function(dictApplicative) {
    var pure1 = pure(dictApplicative);
    return function(v) {
        return function(v1) {
            if (!v) return v1;
            if (v) return pure1(_indexJs2.unit);
            throw new Error("Failed pattern match at Control.Applicative (line 68, column 1 - line 68, column 65): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
};
var when = function(dictApplicative) {
    var pure1 = pure(dictApplicative);
    return function(v) {
        return function(v1) {
            if (v) return v1;
            if (!v) return pure1(_indexJs2.unit);
            throw new Error("Failed pattern match at Control.Applicative (line 63, column 1 - line 63, column 63): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
};
var liftA1 = function(dictApplicative) {
    var apply = _indexJs.apply(dictApplicative.Apply0());
    var pure1 = pure(dictApplicative);
    return function(f) {
        return function(a) {
            return apply(pure1(f))(a);
        };
    };
};
var applicativeProxy = {
    pure: function(v) {
        return _indexJs3["Proxy"].value;
    },
    Apply0: function() {
        return _indexJs.applyProxy;
    }
};
var applicativeFn = {
    pure: function(x) {
        return function(v) {
            return x;
        };
    },
    Apply0: function() {
        return _indexJs.applyFn;
    }
};
var applicativeArray = {
    pure: function(x) {
        return [
            x
        ];
    },
    Apply0: function() {
        return _indexJs.applyArray;
    }
};

},{"../Control.Apply/index.js":"ggN4S","../Data.Functor/index.js":"j9NCu","../Data.Unit/index.js":"fuCRN","../Type.Proxy/index.js":"293bb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ggN4S":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "map", ()=>(0, _indexJs2.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs2.void));
parcelHelpers.export(exports, "apply", ()=>apply);
parcelHelpers.export(exports, "applyFirst", ()=>applyFirst);
parcelHelpers.export(exports, "applySecond", ()=>applySecond);
parcelHelpers.export(exports, "lift2", ()=>lift2);
parcelHelpers.export(exports, "lift3", ()=>lift3);
parcelHelpers.export(exports, "lift4", ()=>lift4);
parcelHelpers.export(exports, "lift5", ()=>lift5);
parcelHelpers.export(exports, "applyFn", ()=>applyFn);
parcelHelpers.export(exports, "applyArray", ()=>applyArray);
parcelHelpers.export(exports, "applyProxy", ()=>applyProxy);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Function/index.js");
var _indexJs2 = require("../Data.Functor/index.js");
var _indexJs3 = require("../Type.Proxy/index.js");
var identity = /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn);
var applyProxy = {
    apply: function(v) {
        return function(v1) {
            return _indexJs3["Proxy"].value;
        };
    },
    Functor0: function() {
        return _indexJs2.functorProxy;
    }
};
var applyFn = {
    apply: function(f) {
        return function(g) {
            return function(x) {
                return f(x)(g(x));
            };
        };
    },
    Functor0: function() {
        return _indexJs2.functorFn;
    }
};
var applyArray = {
    apply: _foreignJs.arrayApply,
    Functor0: function() {
        return _indexJs2.functorArray;
    }
};
var apply = function(dict) {
    return dict.apply;
};
var applyFirst = function(dictApply) {
    var apply1 = apply(dictApply);
    var map = _indexJs2.map(dictApply.Functor0());
    return function(a) {
        return function(b) {
            return apply1(map(_indexJs1["const"])(a))(b);
        };
    };
};
var applySecond = function(dictApply) {
    var apply1 = apply(dictApply);
    var map = _indexJs2.map(dictApply.Functor0());
    return function(a) {
        return function(b) {
            return apply1(map(_indexJs1["const"](identity))(a))(b);
        };
    };
};
var lift2 = function(dictApply) {
    var apply1 = apply(dictApply);
    var map = _indexJs2.map(dictApply.Functor0());
    return function(f) {
        return function(a) {
            return function(b) {
                return apply1(map(f)(a))(b);
            };
        };
    };
};
var lift3 = function(dictApply) {
    var apply1 = apply(dictApply);
    var map = _indexJs2.map(dictApply.Functor0());
    return function(f) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return apply1(apply1(map(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift4 = function(dictApply) {
    var apply1 = apply(dictApply);
    var map = _indexJs2.map(dictApply.Functor0());
    return function(f) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return apply1(apply1(apply1(map(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift5 = function(dictApply) {
    var apply1 = apply(dictApply);
    var map = _indexJs2.map(dictApply.Functor0());
    return function(f) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return function(e) {
                            return apply1(apply1(apply1(apply1(map(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};

},{"./foreign.js":"eJtJP","../Control.Category/index.js":"iWlWa","../Data.Function/index.js":"64uwb","../Data.Functor/index.js":"j9NCu","../Type.Proxy/index.js":"293bb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eJtJP":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "arrayApply", ()=>arrayApply);
const arrayApply = function(fs) {
    return function(xs) {
        var l = fs.length;
        var k = xs.length;
        var result = new Array(l * k);
        var n = 0;
        for(var i = 0; i < l; i++){
            var f = fs[i];
            for(var j = 0; j < k; j++)result[n++] = f(xs[j]);
        }
        return result;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jnFvT":[function(require,module,exports,__globalThis) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, '__esModule', {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"iWlWa":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "compose", ()=>(0, _indexJs.compose));
parcelHelpers.export(exports, "identity", ()=>identity);
parcelHelpers.export(exports, "categoryFn", ()=>categoryFn);
var _indexJs = require("../Control.Semigroupoid/index.js");
var identity = function(dict) {
    return dict.identity;
};
var categoryFn = {
    identity: function(x) {
        return x;
    },
    Semigroupoid0: function() {
        return _indexJs.semigroupoidFn;
    }
};

},{"../Control.Semigroupoid/index.js":"lM9FC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lM9FC":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "compose", ()=>compose);
parcelHelpers.export(exports, "composeFlipped", ()=>composeFlipped);
parcelHelpers.export(exports, "semigroupoidFn", ()=>semigroupoidFn);
var semigroupoidFn = {
    compose: function(f) {
        return function(g) {
            return function(x) {
                return f(g(x));
            };
        };
    }
};
var compose = function(dict) {
    return dict.compose;
};
var composeFlipped = function(dictSemigroupoid) {
    var compose1 = compose(dictSemigroupoid);
    return function(f) {
        return function(g) {
            return compose1(g)(f);
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"64uwb":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "compose", ()=>(0, _indexJs.compose));
parcelHelpers.export(exports, "identity", ()=>(0, _indexJs.identity));
parcelHelpers.export(exports, "flip", ()=>flip);
parcelHelpers.export(exports, "const", ()=>$$const);
parcelHelpers.export(exports, "apply", ()=>apply);
parcelHelpers.export(exports, "applyFlipped", ()=>applyFlipped);
parcelHelpers.export(exports, "applyN", ()=>applyN);
parcelHelpers.export(exports, "on", ()=>on);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Boolean/index.js");
var on = function(f) {
    return function(g) {
        return function(x) {
            return function(y) {
                return f(g(x))(g(y));
            };
        };
    };
};
var flip = function(f) {
    return function(b) {
        return function(a) {
            return f(a)(b);
        };
    };
};
var $$const = function(a) {
    return function(v) {
        return a;
    };
};
var applyN = function(f) {
    var go = function($copy_n) {
        return function($copy_acc) {
            var $tco_var_n = $copy_n;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(n, acc) {
                if (n <= 0) {
                    $tco_done = true;
                    return acc;
                }
                if (_indexJs1.otherwise) {
                    $tco_var_n = n - 1 | 0;
                    $copy_acc = f(acc);
                    return;
                }
                throw new Error("Failed pattern match at Data.Function (line 107, column 3 - line 109, column 37): " + [
                    n.constructor.name,
                    acc.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_n, $copy_acc);
            return $tco_result;
        };
    };
    return go;
};
var applyFlipped = function(x) {
    return function(f) {
        return f(x);
    };
};
var apply = function(f) {
    return function(x) {
        return f(x);
    };
};

},{"../Control.Category/index.js":"iWlWa","../Data.Boolean/index.js":"spBQ3","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"spBQ3":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "otherwise", ()=>otherwise);
var otherwise = true;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j9NCu":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "map", ()=>map);
parcelHelpers.export(exports, "mapFlipped", ()=>mapFlipped);
parcelHelpers.export(exports, "void", ()=>$$void);
parcelHelpers.export(exports, "voidRight", ()=>voidRight);
parcelHelpers.export(exports, "voidLeft", ()=>voidLeft);
parcelHelpers.export(exports, "flap", ()=>flap);
parcelHelpers.export(exports, "functorFn", ()=>functorFn);
parcelHelpers.export(exports, "functorArray", ()=>functorArray);
parcelHelpers.export(exports, "functorProxy", ()=>functorProxy);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Semigroupoid/index.js");
var _indexJs1 = require("../Data.Function/index.js");
var _indexJs2 = require("../Data.Unit/index.js");
var _indexJs3 = require("../Type.Proxy/index.js");
var map = function(dict) {
    return dict.map;
};
var mapFlipped = function(dictFunctor) {
    var map1 = map(dictFunctor);
    return function(fa) {
        return function(f) {
            return map1(f)(fa);
        };
    };
};
var $$void = function(dictFunctor) {
    return map(dictFunctor)(_indexJs1["const"](_indexJs2.unit));
};
var voidLeft = function(dictFunctor) {
    var map1 = map(dictFunctor);
    return function(f) {
        return function(x) {
            return map1(_indexJs1["const"](x))(f);
        };
    };
};
var voidRight = function(dictFunctor) {
    var map1 = map(dictFunctor);
    return function(x) {
        return map1(_indexJs1["const"](x));
    };
};
var functorProxy = {
    map: function(v) {
        return function(v1) {
            return _indexJs3["Proxy"].value;
        };
    }
};
var functorFn = {
    map: /* #__PURE__ */ _indexJs.compose(_indexJs.semigroupoidFn)
};
var functorArray = {
    map: _foreignJs.arrayMap
};
var flap = function(dictFunctor) {
    var map1 = map(dictFunctor);
    return function(ff) {
        return function(x) {
            return map1(function(f) {
                return f(x);
            })(ff);
        };
    };
};

},{"./foreign.js":"iNKcO","../Control.Semigroupoid/index.js":"lM9FC","../Data.Function/index.js":"64uwb","../Data.Unit/index.js":"fuCRN","../Type.Proxy/index.js":"293bb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iNKcO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "arrayMap", ()=>arrayMap);
const arrayMap = function(f) {
    return function(arr) {
        var l = arr.length;
        var result = new Array(l);
        for(var i = 0; i < l; i++)result[i] = f(arr[i]);
        return result;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fuCRN":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unit", ()=>(0, _foreignJs.unit));
var _foreignJs = require("./foreign.js");

},{"./foreign.js":"jDWG8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jDWG8":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unit", ()=>unit);
const unit = undefined;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"293bb":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Proxy", ()=>$$Proxy);
var $$Proxy = /* #__PURE__ */ function() {
    function $$Proxy() {}
    $$Proxy.value = new $$Proxy();
    return $$Proxy;
}();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5UweE":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unmount", ()=>(0, _foreignJs.unmount));
parcelHelpers.export(exports, "createPortal", ()=>(0, _foreignJs.createPortal));
parcelHelpers.export(exports, "flushSync", ()=>(0, _foreignJs.flushSync));
parcelHelpers.export(exports, "a", ()=>(0, _indexJs3.a));
parcelHelpers.export(exports, "a$prime", ()=>(0, _indexJs3.a$prime));
parcelHelpers.export(exports, "a_", ()=>(0, _indexJs3.a_));
parcelHelpers.export(exports, "abbr", ()=>(0, _indexJs3.abbr));
parcelHelpers.export(exports, "abbr$prime", ()=>(0, _indexJs3.abbr$prime));
parcelHelpers.export(exports, "abbr_", ()=>(0, _indexJs3.abbr_));
parcelHelpers.export(exports, "address", ()=>(0, _indexJs3.address));
parcelHelpers.export(exports, "address$prime", ()=>(0, _indexJs3.address$prime));
parcelHelpers.export(exports, "address_", ()=>(0, _indexJs3.address_));
parcelHelpers.export(exports, "area", ()=>(0, _indexJs3.area));
parcelHelpers.export(exports, "area$prime", ()=>(0, _indexJs3.area$prime));
parcelHelpers.export(exports, "article", ()=>(0, _indexJs3.article));
parcelHelpers.export(exports, "article$prime", ()=>(0, _indexJs3.article$prime));
parcelHelpers.export(exports, "article_", ()=>(0, _indexJs3.article_));
parcelHelpers.export(exports, "aside", ()=>(0, _indexJs3.aside));
parcelHelpers.export(exports, "aside$prime", ()=>(0, _indexJs3.aside$prime));
parcelHelpers.export(exports, "aside_", ()=>(0, _indexJs3.aside_));
parcelHelpers.export(exports, "audio", ()=>(0, _indexJs3.audio));
parcelHelpers.export(exports, "audio$prime", ()=>(0, _indexJs3.audio$prime));
parcelHelpers.export(exports, "audio_", ()=>(0, _indexJs3.audio_));
parcelHelpers.export(exports, "b", ()=>(0, _indexJs3.b));
parcelHelpers.export(exports, "b$prime", ()=>(0, _indexJs3.b$prime));
parcelHelpers.export(exports, "b_", ()=>(0, _indexJs3.b_));
parcelHelpers.export(exports, "base", ()=>(0, _indexJs3.base));
parcelHelpers.export(exports, "base$prime", ()=>(0, _indexJs3.base$prime));
parcelHelpers.export(exports, "bdi", ()=>(0, _indexJs3.bdi));
parcelHelpers.export(exports, "bdi$prime", ()=>(0, _indexJs3.bdi$prime));
parcelHelpers.export(exports, "bdi_", ()=>(0, _indexJs3.bdi_));
parcelHelpers.export(exports, "bdo", ()=>(0, _indexJs3.bdo));
parcelHelpers.export(exports, "bdo$prime", ()=>(0, _indexJs3.bdo$prime));
parcelHelpers.export(exports, "bdo_", ()=>(0, _indexJs3.bdo_));
parcelHelpers.export(exports, "blockquote", ()=>(0, _indexJs3.blockquote));
parcelHelpers.export(exports, "blockquote$prime", ()=>(0, _indexJs3.blockquote$prime));
parcelHelpers.export(exports, "blockquote_", ()=>(0, _indexJs3.blockquote_));
parcelHelpers.export(exports, "body", ()=>(0, _indexJs3.body));
parcelHelpers.export(exports, "body$prime", ()=>(0, _indexJs3.body$prime));
parcelHelpers.export(exports, "body_", ()=>(0, _indexJs3.body_));
parcelHelpers.export(exports, "br", ()=>(0, _indexJs3.br));
parcelHelpers.export(exports, "br$prime", ()=>(0, _indexJs3.br$prime));
parcelHelpers.export(exports, "button", ()=>(0, _indexJs3.button));
parcelHelpers.export(exports, "button$prime", ()=>(0, _indexJs3.button$prime));
parcelHelpers.export(exports, "button_", ()=>(0, _indexJs3.button_));
parcelHelpers.export(exports, "canvas", ()=>(0, _indexJs3.canvas));
parcelHelpers.export(exports, "canvas$prime", ()=>(0, _indexJs3.canvas$prime));
parcelHelpers.export(exports, "canvas_", ()=>(0, _indexJs3.canvas_));
parcelHelpers.export(exports, "caption", ()=>(0, _indexJs3.caption));
parcelHelpers.export(exports, "caption$prime", ()=>(0, _indexJs3.caption$prime));
parcelHelpers.export(exports, "caption_", ()=>(0, _indexJs3.caption_));
parcelHelpers.export(exports, "cite", ()=>(0, _indexJs3.cite));
parcelHelpers.export(exports, "cite$prime", ()=>(0, _indexJs3.cite$prime));
parcelHelpers.export(exports, "cite_", ()=>(0, _indexJs3.cite_));
parcelHelpers.export(exports, "code", ()=>(0, _indexJs3.code));
parcelHelpers.export(exports, "code$prime", ()=>(0, _indexJs3.code$prime));
parcelHelpers.export(exports, "code_", ()=>(0, _indexJs3.code_));
parcelHelpers.export(exports, "col", ()=>(0, _indexJs3.col));
parcelHelpers.export(exports, "col$prime", ()=>(0, _indexJs3.col$prime));
parcelHelpers.export(exports, "colgroup", ()=>(0, _indexJs3.colgroup));
parcelHelpers.export(exports, "colgroup$prime", ()=>(0, _indexJs3.colgroup$prime));
parcelHelpers.export(exports, "colgroup_", ()=>(0, _indexJs3.colgroup_));
parcelHelpers.export(exports, "data$prime", ()=>(0, _indexJs3.data$prime));
parcelHelpers.export(exports, "data$prime$prime", ()=>(0, _indexJs3.data$prime$prime));
parcelHelpers.export(exports, "data_", ()=>(0, _indexJs3.data_));
parcelHelpers.export(exports, "datalist", ()=>(0, _indexJs3.datalist));
parcelHelpers.export(exports, "datalist$prime", ()=>(0, _indexJs3.datalist$prime));
parcelHelpers.export(exports, "datalist_", ()=>(0, _indexJs3.datalist_));
parcelHelpers.export(exports, "dd", ()=>(0, _indexJs3.dd));
parcelHelpers.export(exports, "dd$prime", ()=>(0, _indexJs3.dd$prime));
parcelHelpers.export(exports, "dd_", ()=>(0, _indexJs3.dd_));
parcelHelpers.export(exports, "del", ()=>(0, _indexJs3.del));
parcelHelpers.export(exports, "del$prime", ()=>(0, _indexJs3.del$prime));
parcelHelpers.export(exports, "del_", ()=>(0, _indexJs3.del_));
parcelHelpers.export(exports, "details", ()=>(0, _indexJs3.details));
parcelHelpers.export(exports, "details$prime", ()=>(0, _indexJs3.details$prime));
parcelHelpers.export(exports, "details_", ()=>(0, _indexJs3.details_));
parcelHelpers.export(exports, "dfn", ()=>(0, _indexJs3.dfn));
parcelHelpers.export(exports, "dfn$prime", ()=>(0, _indexJs3.dfn$prime));
parcelHelpers.export(exports, "dfn_", ()=>(0, _indexJs3.dfn_));
parcelHelpers.export(exports, "dialog", ()=>(0, _indexJs3.dialog));
parcelHelpers.export(exports, "dialog$prime", ()=>(0, _indexJs3.dialog$prime));
parcelHelpers.export(exports, "dialog_", ()=>(0, _indexJs3.dialog_));
parcelHelpers.export(exports, "div", ()=>(0, _indexJs3.div));
parcelHelpers.export(exports, "div$prime", ()=>(0, _indexJs3.div$prime));
parcelHelpers.export(exports, "div_", ()=>(0, _indexJs3.div_));
parcelHelpers.export(exports, "dl", ()=>(0, _indexJs3.dl));
parcelHelpers.export(exports, "dl$prime", ()=>(0, _indexJs3.dl$prime));
parcelHelpers.export(exports, "dl_", ()=>(0, _indexJs3.dl_));
parcelHelpers.export(exports, "dt", ()=>(0, _indexJs3.dt));
parcelHelpers.export(exports, "dt$prime", ()=>(0, _indexJs3.dt$prime));
parcelHelpers.export(exports, "dt_", ()=>(0, _indexJs3.dt_));
parcelHelpers.export(exports, "em", ()=>(0, _indexJs3.em));
parcelHelpers.export(exports, "em$prime", ()=>(0, _indexJs3.em$prime));
parcelHelpers.export(exports, "em_", ()=>(0, _indexJs3.em_));
parcelHelpers.export(exports, "embed", ()=>(0, _indexJs3.embed));
parcelHelpers.export(exports, "embed$prime", ()=>(0, _indexJs3.embed$prime));
parcelHelpers.export(exports, "fieldset", ()=>(0, _indexJs3.fieldset));
parcelHelpers.export(exports, "fieldset$prime", ()=>(0, _indexJs3.fieldset$prime));
parcelHelpers.export(exports, "fieldset_", ()=>(0, _indexJs3.fieldset_));
parcelHelpers.export(exports, "figcaption", ()=>(0, _indexJs3.figcaption));
parcelHelpers.export(exports, "figcaption$prime", ()=>(0, _indexJs3.figcaption$prime));
parcelHelpers.export(exports, "figcaption_", ()=>(0, _indexJs3.figcaption_));
parcelHelpers.export(exports, "figure", ()=>(0, _indexJs3.figure));
parcelHelpers.export(exports, "figure$prime", ()=>(0, _indexJs3.figure$prime));
parcelHelpers.export(exports, "figure_", ()=>(0, _indexJs3.figure_));
parcelHelpers.export(exports, "footer", ()=>(0, _indexJs3.footer));
parcelHelpers.export(exports, "footer$prime", ()=>(0, _indexJs3.footer$prime));
parcelHelpers.export(exports, "footer_", ()=>(0, _indexJs3.footer_));
parcelHelpers.export(exports, "form", ()=>(0, _indexJs3.form));
parcelHelpers.export(exports, "form$prime", ()=>(0, _indexJs3.form$prime));
parcelHelpers.export(exports, "form_", ()=>(0, _indexJs3.form_));
parcelHelpers.export(exports, "h1", ()=>(0, _indexJs3.h1));
parcelHelpers.export(exports, "h1$prime", ()=>(0, _indexJs3.h1$prime));
parcelHelpers.export(exports, "h1_", ()=>(0, _indexJs3.h1_));
parcelHelpers.export(exports, "h2", ()=>(0, _indexJs3.h2));
parcelHelpers.export(exports, "h2$prime", ()=>(0, _indexJs3.h2$prime));
parcelHelpers.export(exports, "h2_", ()=>(0, _indexJs3.h2_));
parcelHelpers.export(exports, "h3", ()=>(0, _indexJs3.h3));
parcelHelpers.export(exports, "h3$prime", ()=>(0, _indexJs3.h3$prime));
parcelHelpers.export(exports, "h3_", ()=>(0, _indexJs3.h3_));
parcelHelpers.export(exports, "h4", ()=>(0, _indexJs3.h4));
parcelHelpers.export(exports, "h4$prime", ()=>(0, _indexJs3.h4$prime));
parcelHelpers.export(exports, "h4_", ()=>(0, _indexJs3.h4_));
parcelHelpers.export(exports, "h5", ()=>(0, _indexJs3.h5));
parcelHelpers.export(exports, "h5$prime", ()=>(0, _indexJs3.h5$prime));
parcelHelpers.export(exports, "h5_", ()=>(0, _indexJs3.h5_));
parcelHelpers.export(exports, "h6", ()=>(0, _indexJs3.h6));
parcelHelpers.export(exports, "h6$prime", ()=>(0, _indexJs3.h6$prime));
parcelHelpers.export(exports, "h6_", ()=>(0, _indexJs3.h6_));
parcelHelpers.export(exports, "head", ()=>(0, _indexJs3.head));
parcelHelpers.export(exports, "head$prime", ()=>(0, _indexJs3.head$prime));
parcelHelpers.export(exports, "head_", ()=>(0, _indexJs3.head_));
parcelHelpers.export(exports, "header", ()=>(0, _indexJs3.header));
parcelHelpers.export(exports, "header$prime", ()=>(0, _indexJs3.header$prime));
parcelHelpers.export(exports, "header_", ()=>(0, _indexJs3.header_));
parcelHelpers.export(exports, "hgroup", ()=>(0, _indexJs3.hgroup));
parcelHelpers.export(exports, "hgroup$prime", ()=>(0, _indexJs3.hgroup$prime));
parcelHelpers.export(exports, "hgroup_", ()=>(0, _indexJs3.hgroup_));
parcelHelpers.export(exports, "hr", ()=>(0, _indexJs3.hr));
parcelHelpers.export(exports, "hr$prime", ()=>(0, _indexJs3.hr$prime));
parcelHelpers.export(exports, "html", ()=>(0, _indexJs3.html));
parcelHelpers.export(exports, "html$prime", ()=>(0, _indexJs3.html$prime));
parcelHelpers.export(exports, "html_", ()=>(0, _indexJs3.html_));
parcelHelpers.export(exports, "i", ()=>(0, _indexJs3.i));
parcelHelpers.export(exports, "i$prime", ()=>(0, _indexJs3.i$prime));
parcelHelpers.export(exports, "i_", ()=>(0, _indexJs3.i_));
parcelHelpers.export(exports, "iframe", ()=>(0, _indexJs3.iframe));
parcelHelpers.export(exports, "iframe$prime", ()=>(0, _indexJs3.iframe$prime));
parcelHelpers.export(exports, "iframe_", ()=>(0, _indexJs3.iframe_));
parcelHelpers.export(exports, "img", ()=>(0, _indexJs3.img));
parcelHelpers.export(exports, "img$prime", ()=>(0, _indexJs3.img$prime));
parcelHelpers.export(exports, "input", ()=>(0, _indexJs3.input));
parcelHelpers.export(exports, "input$prime", ()=>(0, _indexJs3.input$prime));
parcelHelpers.export(exports, "ins", ()=>(0, _indexJs3.ins));
parcelHelpers.export(exports, "ins$prime", ()=>(0, _indexJs3.ins$prime));
parcelHelpers.export(exports, "ins_", ()=>(0, _indexJs3.ins_));
parcelHelpers.export(exports, "kbd", ()=>(0, _indexJs3.kbd));
parcelHelpers.export(exports, "kbd$prime", ()=>(0, _indexJs3.kbd$prime));
parcelHelpers.export(exports, "kbd_", ()=>(0, _indexJs3.kbd_));
parcelHelpers.export(exports, "keygen", ()=>(0, _indexJs3.keygen));
parcelHelpers.export(exports, "keygen$prime", ()=>(0, _indexJs3.keygen$prime));
parcelHelpers.export(exports, "keygen_", ()=>(0, _indexJs3.keygen_));
parcelHelpers.export(exports, "label", ()=>(0, _indexJs3.label));
parcelHelpers.export(exports, "label$prime", ()=>(0, _indexJs3.label$prime));
parcelHelpers.export(exports, "label_", ()=>(0, _indexJs3.label_));
parcelHelpers.export(exports, "legend", ()=>(0, _indexJs3.legend));
parcelHelpers.export(exports, "legend$prime", ()=>(0, _indexJs3.legend$prime));
parcelHelpers.export(exports, "legend_", ()=>(0, _indexJs3.legend_));
parcelHelpers.export(exports, "li", ()=>(0, _indexJs3.li));
parcelHelpers.export(exports, "li$prime", ()=>(0, _indexJs3.li$prime));
parcelHelpers.export(exports, "li_", ()=>(0, _indexJs3.li_));
parcelHelpers.export(exports, "link", ()=>(0, _indexJs3.link));
parcelHelpers.export(exports, "link$prime", ()=>(0, _indexJs3.link$prime));
parcelHelpers.export(exports, "main", ()=>(0, _indexJs3.main));
parcelHelpers.export(exports, "main$prime", ()=>(0, _indexJs3.main$prime));
parcelHelpers.export(exports, "main_", ()=>(0, _indexJs3.main_));
parcelHelpers.export(exports, "map", ()=>(0, _indexJs3.map));
parcelHelpers.export(exports, "map$prime", ()=>(0, _indexJs3.map$prime));
parcelHelpers.export(exports, "map_", ()=>(0, _indexJs3.map_));
parcelHelpers.export(exports, "mark", ()=>(0, _indexJs3.mark));
parcelHelpers.export(exports, "mark$prime", ()=>(0, _indexJs3.mark$prime));
parcelHelpers.export(exports, "mark_", ()=>(0, _indexJs3.mark_));
parcelHelpers.export(exports, "math", ()=>(0, _indexJs3.math));
parcelHelpers.export(exports, "math$prime", ()=>(0, _indexJs3.math$prime));
parcelHelpers.export(exports, "math_", ()=>(0, _indexJs3.math_));
parcelHelpers.export(exports, "menu", ()=>(0, _indexJs3.menu));
parcelHelpers.export(exports, "menu$prime", ()=>(0, _indexJs3.menu$prime));
parcelHelpers.export(exports, "menu_", ()=>(0, _indexJs3.menu_));
parcelHelpers.export(exports, "menuitem", ()=>(0, _indexJs3.menuitem));
parcelHelpers.export(exports, "menuitem$prime", ()=>(0, _indexJs3.menuitem$prime));
parcelHelpers.export(exports, "menuitem_", ()=>(0, _indexJs3.menuitem_));
parcelHelpers.export(exports, "meta", ()=>(0, _indexJs3.meta));
parcelHelpers.export(exports, "meta$prime", ()=>(0, _indexJs3.meta$prime));
parcelHelpers.export(exports, "meter", ()=>(0, _indexJs3.meter));
parcelHelpers.export(exports, "meter$prime", ()=>(0, _indexJs3.meter$prime));
parcelHelpers.export(exports, "meter_", ()=>(0, _indexJs3.meter_));
parcelHelpers.export(exports, "nav", ()=>(0, _indexJs3.nav));
parcelHelpers.export(exports, "nav$prime", ()=>(0, _indexJs3.nav$prime));
parcelHelpers.export(exports, "nav_", ()=>(0, _indexJs3.nav_));
parcelHelpers.export(exports, "noscript", ()=>(0, _indexJs3.noscript));
parcelHelpers.export(exports, "noscript$prime", ()=>(0, _indexJs3.noscript$prime));
parcelHelpers.export(exports, "noscript_", ()=>(0, _indexJs3.noscript_));
parcelHelpers.export(exports, "object", ()=>(0, _indexJs3.object));
parcelHelpers.export(exports, "object$prime", ()=>(0, _indexJs3.object$prime));
parcelHelpers.export(exports, "object_", ()=>(0, _indexJs3.object_));
parcelHelpers.export(exports, "ol", ()=>(0, _indexJs3.ol));
parcelHelpers.export(exports, "ol$prime", ()=>(0, _indexJs3.ol$prime));
parcelHelpers.export(exports, "ol_", ()=>(0, _indexJs3.ol_));
parcelHelpers.export(exports, "optgroup", ()=>(0, _indexJs3.optgroup));
parcelHelpers.export(exports, "optgroup$prime", ()=>(0, _indexJs3.optgroup$prime));
parcelHelpers.export(exports, "optgroup_", ()=>(0, _indexJs3.optgroup_));
parcelHelpers.export(exports, "option", ()=>(0, _indexJs3.option));
parcelHelpers.export(exports, "option$prime", ()=>(0, _indexJs3.option$prime));
parcelHelpers.export(exports, "option_", ()=>(0, _indexJs3.option_));
parcelHelpers.export(exports, "output", ()=>(0, _indexJs3.output));
parcelHelpers.export(exports, "output$prime", ()=>(0, _indexJs3.output$prime));
parcelHelpers.export(exports, "output_", ()=>(0, _indexJs3.output_));
parcelHelpers.export(exports, "p", ()=>(0, _indexJs3.p));
parcelHelpers.export(exports, "p$prime", ()=>(0, _indexJs3.p$prime));
parcelHelpers.export(exports, "p_", ()=>(0, _indexJs3.p_));
parcelHelpers.export(exports, "param", ()=>(0, _indexJs3.param));
parcelHelpers.export(exports, "param$prime", ()=>(0, _indexJs3.param$prime));
parcelHelpers.export(exports, "picture", ()=>(0, _indexJs3.picture));
parcelHelpers.export(exports, "picture$prime", ()=>(0, _indexJs3.picture$prime));
parcelHelpers.export(exports, "picture_", ()=>(0, _indexJs3.picture_));
parcelHelpers.export(exports, "pre", ()=>(0, _indexJs3.pre));
parcelHelpers.export(exports, "pre$prime", ()=>(0, _indexJs3.pre$prime));
parcelHelpers.export(exports, "pre_", ()=>(0, _indexJs3.pre_));
parcelHelpers.export(exports, "progress", ()=>(0, _indexJs3.progress));
parcelHelpers.export(exports, "progress$prime", ()=>(0, _indexJs3.progress$prime));
parcelHelpers.export(exports, "progress_", ()=>(0, _indexJs3.progress_));
parcelHelpers.export(exports, "q", ()=>(0, _indexJs3.q));
parcelHelpers.export(exports, "q$prime", ()=>(0, _indexJs3.q$prime));
parcelHelpers.export(exports, "q_", ()=>(0, _indexJs3.q_));
parcelHelpers.export(exports, "rb", ()=>(0, _indexJs3.rb));
parcelHelpers.export(exports, "rb$prime", ()=>(0, _indexJs3.rb$prime));
parcelHelpers.export(exports, "rb_", ()=>(0, _indexJs3.rb_));
parcelHelpers.export(exports, "rp", ()=>(0, _indexJs3.rp));
parcelHelpers.export(exports, "rp$prime", ()=>(0, _indexJs3.rp$prime));
parcelHelpers.export(exports, "rp_", ()=>(0, _indexJs3.rp_));
parcelHelpers.export(exports, "rt", ()=>(0, _indexJs3.rt));
parcelHelpers.export(exports, "rt$prime", ()=>(0, _indexJs3.rt$prime));
parcelHelpers.export(exports, "rt_", ()=>(0, _indexJs3.rt_));
parcelHelpers.export(exports, "rtc", ()=>(0, _indexJs3.rtc));
parcelHelpers.export(exports, "rtc$prime", ()=>(0, _indexJs3.rtc$prime));
parcelHelpers.export(exports, "rtc_", ()=>(0, _indexJs3.rtc_));
parcelHelpers.export(exports, "ruby", ()=>(0, _indexJs3.ruby));
parcelHelpers.export(exports, "ruby$prime", ()=>(0, _indexJs3.ruby$prime));
parcelHelpers.export(exports, "ruby_", ()=>(0, _indexJs3.ruby_));
parcelHelpers.export(exports, "s", ()=>(0, _indexJs3.s));
parcelHelpers.export(exports, "s$prime", ()=>(0, _indexJs3.s$prime));
parcelHelpers.export(exports, "s_", ()=>(0, _indexJs3.s_));
parcelHelpers.export(exports, "samp", ()=>(0, _indexJs3.samp));
parcelHelpers.export(exports, "samp$prime", ()=>(0, _indexJs3.samp$prime));
parcelHelpers.export(exports, "samp_", ()=>(0, _indexJs3.samp_));
parcelHelpers.export(exports, "script", ()=>(0, _indexJs3.script));
parcelHelpers.export(exports, "script$prime", ()=>(0, _indexJs3.script$prime));
parcelHelpers.export(exports, "script_", ()=>(0, _indexJs3.script_));
parcelHelpers.export(exports, "section", ()=>(0, _indexJs3.section));
parcelHelpers.export(exports, "section$prime", ()=>(0, _indexJs3.section$prime));
parcelHelpers.export(exports, "section_", ()=>(0, _indexJs3.section_));
parcelHelpers.export(exports, "select", ()=>(0, _indexJs3.select));
parcelHelpers.export(exports, "select$prime", ()=>(0, _indexJs3.select$prime));
parcelHelpers.export(exports, "select_", ()=>(0, _indexJs3.select_));
parcelHelpers.export(exports, "slot", ()=>(0, _indexJs3.slot));
parcelHelpers.export(exports, "slot$prime", ()=>(0, _indexJs3.slot$prime));
parcelHelpers.export(exports, "slot_", ()=>(0, _indexJs3.slot_));
parcelHelpers.export(exports, "small", ()=>(0, _indexJs3.small));
parcelHelpers.export(exports, "small$prime", ()=>(0, _indexJs3.small$prime));
parcelHelpers.export(exports, "small_", ()=>(0, _indexJs3.small_));
parcelHelpers.export(exports, "source", ()=>(0, _indexJs3.source));
parcelHelpers.export(exports, "source$prime", ()=>(0, _indexJs3.source$prime));
parcelHelpers.export(exports, "span", ()=>(0, _indexJs3.span));
parcelHelpers.export(exports, "span$prime", ()=>(0, _indexJs3.span$prime));
parcelHelpers.export(exports, "span_", ()=>(0, _indexJs3.span_));
parcelHelpers.export(exports, "strong", ()=>(0, _indexJs3.strong));
parcelHelpers.export(exports, "strong$prime", ()=>(0, _indexJs3.strong$prime));
parcelHelpers.export(exports, "strong_", ()=>(0, _indexJs3.strong_));
parcelHelpers.export(exports, "style", ()=>(0, _indexJs3.style));
parcelHelpers.export(exports, "style$prime", ()=>(0, _indexJs3.style$prime));
parcelHelpers.export(exports, "style_", ()=>(0, _indexJs3.style_));
parcelHelpers.export(exports, "sub", ()=>(0, _indexJs3.sub));
parcelHelpers.export(exports, "sub$prime", ()=>(0, _indexJs3.sub$prime));
parcelHelpers.export(exports, "sub_", ()=>(0, _indexJs3.sub_));
parcelHelpers.export(exports, "summary", ()=>(0, _indexJs3.summary));
parcelHelpers.export(exports, "summary$prime", ()=>(0, _indexJs3.summary$prime));
parcelHelpers.export(exports, "summary_", ()=>(0, _indexJs3.summary_));
parcelHelpers.export(exports, "sup", ()=>(0, _indexJs3.sup));
parcelHelpers.export(exports, "sup$prime", ()=>(0, _indexJs3.sup$prime));
parcelHelpers.export(exports, "sup_", ()=>(0, _indexJs3.sup_));
parcelHelpers.export(exports, "table", ()=>(0, _indexJs3.table));
parcelHelpers.export(exports, "table$prime", ()=>(0, _indexJs3.table$prime));
parcelHelpers.export(exports, "table_", ()=>(0, _indexJs3.table_));
parcelHelpers.export(exports, "tbody", ()=>(0, _indexJs3.tbody));
parcelHelpers.export(exports, "tbody$prime", ()=>(0, _indexJs3.tbody$prime));
parcelHelpers.export(exports, "tbody_", ()=>(0, _indexJs3.tbody_));
parcelHelpers.export(exports, "td", ()=>(0, _indexJs3.td));
parcelHelpers.export(exports, "td$prime", ()=>(0, _indexJs3.td$prime));
parcelHelpers.export(exports, "td_", ()=>(0, _indexJs3.td_));
parcelHelpers.export(exports, "template", ()=>(0, _indexJs3.template));
parcelHelpers.export(exports, "template$prime", ()=>(0, _indexJs3.template$prime));
parcelHelpers.export(exports, "template_", ()=>(0, _indexJs3.template_));
parcelHelpers.export(exports, "textarea", ()=>(0, _indexJs3.textarea));
parcelHelpers.export(exports, "textarea$prime", ()=>(0, _indexJs3.textarea$prime));
parcelHelpers.export(exports, "textarea_", ()=>(0, _indexJs3.textarea_));
parcelHelpers.export(exports, "tfoot", ()=>(0, _indexJs3.tfoot));
parcelHelpers.export(exports, "tfoot$prime", ()=>(0, _indexJs3.tfoot$prime));
parcelHelpers.export(exports, "tfoot_", ()=>(0, _indexJs3.tfoot_));
parcelHelpers.export(exports, "th", ()=>(0, _indexJs3.th));
parcelHelpers.export(exports, "th$prime", ()=>(0, _indexJs3.th$prime));
parcelHelpers.export(exports, "th_", ()=>(0, _indexJs3.th_));
parcelHelpers.export(exports, "thead", ()=>(0, _indexJs3.thead));
parcelHelpers.export(exports, "thead$prime", ()=>(0, _indexJs3.thead$prime));
parcelHelpers.export(exports, "thead_", ()=>(0, _indexJs3.thead_));
parcelHelpers.export(exports, "time", ()=>(0, _indexJs3.time));
parcelHelpers.export(exports, "time$prime", ()=>(0, _indexJs3.time$prime));
parcelHelpers.export(exports, "time_", ()=>(0, _indexJs3.time_));
parcelHelpers.export(exports, "title", ()=>(0, _indexJs3.title));
parcelHelpers.export(exports, "title$prime", ()=>(0, _indexJs3.title$prime));
parcelHelpers.export(exports, "title_", ()=>(0, _indexJs3.title_));
parcelHelpers.export(exports, "tr", ()=>(0, _indexJs3.tr));
parcelHelpers.export(exports, "tr$prime", ()=>(0, _indexJs3.tr$prime));
parcelHelpers.export(exports, "tr_", ()=>(0, _indexJs3.tr_));
parcelHelpers.export(exports, "track", ()=>(0, _indexJs3.track));
parcelHelpers.export(exports, "track$prime", ()=>(0, _indexJs3.track$prime));
parcelHelpers.export(exports, "u", ()=>(0, _indexJs3.u));
parcelHelpers.export(exports, "u$prime", ()=>(0, _indexJs3.u$prime));
parcelHelpers.export(exports, "u_", ()=>(0, _indexJs3.u_));
parcelHelpers.export(exports, "ul", ()=>(0, _indexJs3.ul));
parcelHelpers.export(exports, "ul$prime", ()=>(0, _indexJs3.ul$prime));
parcelHelpers.export(exports, "ul_", ()=>(0, _indexJs3.ul_));
parcelHelpers.export(exports, "var", ()=>(0, _indexJs3.var));
parcelHelpers.export(exports, "var$prime", ()=>(0, _indexJs3.var$prime));
parcelHelpers.export(exports, "var_", ()=>(0, _indexJs3.var_));
parcelHelpers.export(exports, "video", ()=>(0, _indexJs3.video));
parcelHelpers.export(exports, "video$prime", ()=>(0, _indexJs3.video$prime));
parcelHelpers.export(exports, "video_", ()=>(0, _indexJs3.video_));
parcelHelpers.export(exports, "wbr", ()=>(0, _indexJs3.wbr));
parcelHelpers.export(exports, "wbr$prime", ()=>(0, _indexJs3.wbr$prime));
parcelHelpers.export(exports, "css", ()=>(0, _indexJs4.css));
parcelHelpers.export(exports, "mergeStyles", ()=>(0, _indexJs4.mergeStyles));
parcelHelpers.export(exports, "unsafeCreateDOMComponent", ()=>(0, _indexJs4.unsafeCreateDOMComponent));
parcelHelpers.export(exports, "render", ()=>render);
parcelHelpers.export(exports, "render$prime", ()=>render$prime);
parcelHelpers.export(exports, "hydrate", ()=>hydrate);
parcelHelpers.export(exports, "hydrate$prime", ()=>hydrate$prime);
parcelHelpers.export(exports, "text", ()=>text);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Data.Unit/index.js");
var _indexJs2 = require("../Effect/index.js");
var _indexJs3 = require("../React.Basic.DOM.Generated/index.js");
var _indexJs4 = require("../React.Basic.DOM.Internal/index.js");
var _indexJs5 = require("../Unsafe.Coerce/index.js");
var pure = /* #__PURE__ */ _indexJs.pure(_indexJs2.applicativeEffect);
var text = _indexJs5.unsafeCoerce;
var render$prime = function() {
    return _foreignJs.renderThen;
};
var render$prime1 = /* #__PURE__ */ render$prime();
var render = function() {
    return function(jsx) {
        return function(node) {
            return render$prime1(jsx)(node)(pure(_indexJs1.unit));
        };
    };
};
var hydrate$prime = function() {
    return _foreignJs.hydrateThen;
};
var hydrate$prime1 = /* #__PURE__ */ hydrate$prime();
var hydrate = function() {
    return function(jsx) {
        return function(node) {
            return hydrate$prime1(jsx)(node)(pure(_indexJs1.unit));
        };
    };
};

},{"./foreign.js":"fhrt3","../Control.Applicative/index.js":"5JL6d","../Data.Unit/index.js":"fuCRN","../Effect/index.js":"jyor1","../React.Basic.DOM.Generated/index.js":"bePe1","../React.Basic.DOM.Internal/index.js":"avkjs","../Unsafe.Coerce/index.js":"kRX7u","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fhrt3":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "renderThen", ()=>renderThen);
parcelHelpers.export(exports, "hydrateThen", ()=>hydrateThen);
parcelHelpers.export(exports, "unmount", ()=>unmount);
parcelHelpers.export(exports, "createPortal", ()=>createPortal);
parcelHelpers.export(exports, "flushSync", ()=>flushSync);
var _reactDom = require("react-dom");
var _reactDomDefault = parcelHelpers.interopDefault(_reactDom);
"use strict";
function renderThen(jsx) {
    return (node)=>(callback)=>()=>(0, _reactDomDefault.default).render(jsx, node, callback);
}
function hydrateThen(jsx) {
    return (node)=>(callback)=>()=>(0, _reactDomDefault.default).hydrate(jsx, node, callback);
}
function unmount(node) {
    return ()=>(0, _reactDomDefault.default).unmountComponentAtNode(node);
}
function createPortal(jsx) {
    return (node)=>(0, _reactDomDefault.default).createPortal(jsx, node);
}
function flushSync(callback) {
    return ()=>(0, _reactDomDefault.default).flushSync(callback);
}

},{"react-dom":"i4X7T","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"i4X7T":[function(require,module,exports,__globalThis) {
'use strict';
function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') return;
    var err;
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
}
module.exports = require("b0f0e6b9e8349dac");

},{"b0f0e6b9e8349dac":"cLd8p"}],"cLd8p":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function noop() {}
    function testStringCoercion(value) {
        return "" + value;
    }
    function createPortal$1(children, containerInfo, implementation) {
        var key = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
        try {
            testStringCoercion(key);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        JSCompiler_inline_result && (console.error("The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", "function" === typeof Symbol && Symbol.toStringTag && key[Symbol.toStringTag] || key.constructor.name || "Object"), testStringCoercion(key));
        return {
            $$typeof: REACT_PORTAL_TYPE,
            key: null == key ? null : "" + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
        };
    }
    function getCrossOriginStringAs(as, input) {
        if ("font" === as) return "";
        if ("string" === typeof input) return "use-credentials" === input ? input : "";
    }
    function getValueDescriptorExpectingObjectForWarning(thing) {
        return null === thing ? "`null`" : void 0 === thing ? "`undefined`" : "" === thing ? "an empty string" : 'something with type "' + typeof thing + '"';
    }
    function getValueDescriptorExpectingEnumForWarning(thing) {
        return null === thing ? "`null`" : void 0 === thing ? "`undefined`" : "" === thing ? "an empty string" : "string" === typeof thing ? JSON.stringify(thing) : "number" === typeof thing ? "`" + thing + "`" : 'something with type "' + typeof thing + '"';
    }
    function resolveDispatcher() {
        var dispatcher = ReactSharedInternals.H;
        null === dispatcher && console.error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.");
        return dispatcher;
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var React = require("6f0162e9ab224cd4"), Internals = {
        d: {
            f: noop,
            r: function() {
                throw Error("Invalid form element. requestFormReset must be passed a form that was rendered by React.");
            },
            D: noop,
            C: noop,
            L: noop,
            m: noop,
            X: noop,
            S: noop,
            M: noop
        },
        p: 0,
        findDOMNode: null
    }, REACT_PORTAL_TYPE = Symbol.for("react.portal"), ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
    "function" === typeof Map && null != Map.prototype && "function" === typeof Map.prototype.forEach && "function" === typeof Set && null != Set.prototype && "function" === typeof Set.prototype.clear && "function" === typeof Set.prototype.forEach || console.error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    exports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = Internals;
    exports.createPortal = function(children, container) {
        var key = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
        if (!container || 1 !== container.nodeType && 9 !== container.nodeType && 11 !== container.nodeType) throw Error("Target container is not a DOM element.");
        return createPortal$1(children, container, null, key);
    };
    exports.flushSync = function(fn) {
        var previousTransition = ReactSharedInternals.T, previousUpdatePriority = Internals.p;
        try {
            if (ReactSharedInternals.T = null, Internals.p = 2, fn) return fn();
        } finally{
            ReactSharedInternals.T = previousTransition, Internals.p = previousUpdatePriority, Internals.d.f() && console.error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
        }
    };
    exports.preconnect = function(href, options) {
        "string" === typeof href && href ? null != options && "object" !== typeof options ? console.error("ReactDOM.preconnect(): Expected the `options` argument (second) to be an object but encountered %s instead. The only supported option at this time is `crossOrigin` which accepts a string.", getValueDescriptorExpectingEnumForWarning(options)) : null != options && "string" !== typeof options.crossOrigin && console.error("ReactDOM.preconnect(): Expected the `crossOrigin` option (second argument) to be a string but encountered %s instead. Try removing this option or passing a string value instead.", getValueDescriptorExpectingObjectForWarning(options.crossOrigin)) : console.error("ReactDOM.preconnect(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.", getValueDescriptorExpectingObjectForWarning(href));
        "string" === typeof href && (options ? (options = options.crossOrigin, options = "string" === typeof options ? "use-credentials" === options ? options : "" : void 0) : options = null, Internals.d.C(href, options));
    };
    exports.prefetchDNS = function(href) {
        if ("string" !== typeof href || !href) console.error("ReactDOM.prefetchDNS(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.", getValueDescriptorExpectingObjectForWarning(href));
        else if (1 < arguments.length) {
            var options = arguments[1];
            "object" === typeof options && options.hasOwnProperty("crossOrigin") ? console.error("ReactDOM.prefetchDNS(): Expected only one argument, `href`, but encountered %s as a second argument instead. This argument is reserved for future options and is currently disallowed. It looks like the you are attempting to set a crossOrigin property for this DNS lookup hint. Browsers do not perform DNS queries using CORS and setting this attribute on the resource hint has no effect. Try calling ReactDOM.prefetchDNS() with just a single string argument, `href`.", getValueDescriptorExpectingEnumForWarning(options)) : console.error("ReactDOM.prefetchDNS(): Expected only one argument, `href`, but encountered %s as a second argument instead. This argument is reserved for future options and is currently disallowed. Try calling ReactDOM.prefetchDNS() with just a single string argument, `href`.", getValueDescriptorExpectingEnumForWarning(options));
        }
        "string" === typeof href && Internals.d.D(href);
    };
    exports.preinit = function(href, options) {
        "string" === typeof href && href ? null == options || "object" !== typeof options ? console.error("ReactDOM.preinit(): Expected the `options` argument (second) to be an object with an `as` property describing the type of resource to be preinitialized but encountered %s instead.", getValueDescriptorExpectingEnumForWarning(options)) : "style" !== options.as && "script" !== options.as && console.error('ReactDOM.preinit(): Expected the `as` property in the `options` argument (second) to contain a valid value describing the type of resource to be preinitialized but encountered %s instead. Valid values for `as` are "style" and "script".', getValueDescriptorExpectingEnumForWarning(options.as)) : console.error("ReactDOM.preinit(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.", getValueDescriptorExpectingObjectForWarning(href));
        if ("string" === typeof href && options && "string" === typeof options.as) {
            var as = options.as, crossOrigin = getCrossOriginStringAs(as, options.crossOrigin), integrity = "string" === typeof options.integrity ? options.integrity : void 0, fetchPriority = "string" === typeof options.fetchPriority ? options.fetchPriority : void 0;
            "style" === as ? Internals.d.S(href, "string" === typeof options.precedence ? options.precedence : void 0, {
                crossOrigin: crossOrigin,
                integrity: integrity,
                fetchPriority: fetchPriority
            }) : "script" === as && Internals.d.X(href, {
                crossOrigin: crossOrigin,
                integrity: integrity,
                fetchPriority: fetchPriority,
                nonce: "string" === typeof options.nonce ? options.nonce : void 0
            });
        }
    };
    exports.preinitModule = function(href, options) {
        var encountered = "";
        "string" === typeof href && href || (encountered += " The `href` argument encountered was " + getValueDescriptorExpectingObjectForWarning(href) + ".");
        void 0 !== options && "object" !== typeof options ? encountered += " The `options` argument encountered was " + getValueDescriptorExpectingObjectForWarning(options) + "." : options && "as" in options && "script" !== options.as && (encountered += " The `as` option encountered was " + getValueDescriptorExpectingEnumForWarning(options.as) + ".");
        if (encountered) console.error("ReactDOM.preinitModule(): Expected up to two arguments, a non-empty `href` string and, optionally, an `options` object with a valid `as` property.%s", encountered);
        else switch(encountered = options && "string" === typeof options.as ? options.as : "script", encountered){
            case "script":
                break;
            default:
                encountered = getValueDescriptorExpectingEnumForWarning(encountered), console.error('ReactDOM.preinitModule(): Currently the only supported "as" type for this function is "script" but received "%s" instead. This warning was generated for `href` "%s". In the future other module types will be supported, aligning with the import-attributes proposal. Learn more here: (https://github.com/tc39/proposal-import-attributes)', encountered, href);
        }
        if ("string" === typeof href) {
            if ("object" === typeof options && null !== options) {
                if (null == options.as || "script" === options.as) encountered = getCrossOriginStringAs(options.as, options.crossOrigin), Internals.d.M(href, {
                    crossOrigin: encountered,
                    integrity: "string" === typeof options.integrity ? options.integrity : void 0,
                    nonce: "string" === typeof options.nonce ? options.nonce : void 0
                });
            } else null == options && Internals.d.M(href);
        }
    };
    exports.preload = function(href, options) {
        var encountered = "";
        "string" === typeof href && href || (encountered += " The `href` argument encountered was " + getValueDescriptorExpectingObjectForWarning(href) + ".");
        null == options || "object" !== typeof options ? encountered += " The `options` argument encountered was " + getValueDescriptorExpectingObjectForWarning(options) + "." : "string" === typeof options.as && options.as || (encountered += " The `as` option encountered was " + getValueDescriptorExpectingObjectForWarning(options.as) + ".");
        encountered && console.error('ReactDOM.preload(): Expected two arguments, a non-empty `href` string and an `options` object with an `as` property valid for a `<link rel="preload" as="..." />` tag.%s', encountered);
        if ("string" === typeof href && "object" === typeof options && null !== options && "string" === typeof options.as) {
            encountered = options.as;
            var crossOrigin = getCrossOriginStringAs(encountered, options.crossOrigin);
            Internals.d.L(href, encountered, {
                crossOrigin: crossOrigin,
                integrity: "string" === typeof options.integrity ? options.integrity : void 0,
                nonce: "string" === typeof options.nonce ? options.nonce : void 0,
                type: "string" === typeof options.type ? options.type : void 0,
                fetchPriority: "string" === typeof options.fetchPriority ? options.fetchPriority : void 0,
                referrerPolicy: "string" === typeof options.referrerPolicy ? options.referrerPolicy : void 0,
                imageSrcSet: "string" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,
                imageSizes: "string" === typeof options.imageSizes ? options.imageSizes : void 0,
                media: "string" === typeof options.media ? options.media : void 0
            });
        }
    };
    exports.preloadModule = function(href, options) {
        var encountered = "";
        "string" === typeof href && href || (encountered += " The `href` argument encountered was " + getValueDescriptorExpectingObjectForWarning(href) + ".");
        void 0 !== options && "object" !== typeof options ? encountered += " The `options` argument encountered was " + getValueDescriptorExpectingObjectForWarning(options) + "." : options && "as" in options && "string" !== typeof options.as && (encountered += " The `as` option encountered was " + getValueDescriptorExpectingObjectForWarning(options.as) + ".");
        encountered && console.error('ReactDOM.preloadModule(): Expected two arguments, a non-empty `href` string and, optionally, an `options` object with an `as` property valid for a `<link rel="modulepreload" as="..." />` tag.%s', encountered);
        "string" === typeof href && (options ? (encountered = getCrossOriginStringAs(options.as, options.crossOrigin), Internals.d.m(href, {
            as: "string" === typeof options.as && "script" !== options.as ? options.as : void 0,
            crossOrigin: encountered,
            integrity: "string" === typeof options.integrity ? options.integrity : void 0
        })) : Internals.d.m(href));
    };
    exports.requestFormReset = function(form) {
        Internals.d.r(form);
    };
    exports.unstable_batchedUpdates = function(fn, a) {
        return fn(a);
    };
    exports.useFormState = function(action, initialState, permalink) {
        return resolveDispatcher().useFormState(action, initialState, permalink);
    };
    exports.useFormStatus = function() {
        return resolveDispatcher().useHostTransitionStatus();
    };
    exports.version = "19.1.0";
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{"6f0162e9ab224cd4":"jMk1U"}],"jMk1U":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("a569817e6ea559f6");

},{"a569817e6ea559f6":"ghslp"}],"ghslp":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function defineDeprecationWarning(methodName, info) {
        Object.defineProperty(Component.prototype, methodName, {
            get: function() {
                console.warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
            }
        });
    }
    function getIteratorFn(maybeIterable) {
        if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
        maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
        return "function" === typeof maybeIterable ? maybeIterable : null;
    }
    function warnNoop(publicInstance, callerName) {
        publicInstance = (publicInstance = publicInstance.constructor) && (publicInstance.displayName || publicInstance.name) || "ReactClass";
        var warningKey = publicInstance + "." + callerName;
        didWarnStateUpdateForUnmountedComponent[warningKey] || (console.error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, publicInstance), didWarnStateUpdateForUnmountedComponent[warningKey] = !0);
    }
    function Component(props, context, updater) {
        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
    }
    function ComponentDummy() {}
    function PureComponent(props, context, updater) {
        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        try {
            testStringCoercion(value);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        if (JSCompiler_inline_result) {
            JSCompiler_inline_result = console;
            var JSCompiler_temp_const = JSCompiler_inline_result.error;
            var JSCompiler_inline_result$jscomp$0 = "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            JSCompiler_temp_const.call(JSCompiler_inline_result, "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", JSCompiler_inline_result$jscomp$0);
            return testStringCoercion(value);
        }
    }
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            case REACT_ACTIVITY_TYPE:
                return "Activity";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_CONTEXT_TYPE:
                return (type.displayName || "Context") + ".Provider";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function getTaskName(type) {
        if (type === REACT_FRAGMENT_TYPE) return "<>";
        if ("object" === typeof type && null !== type && type.$$typeof === REACT_LAZY_TYPE) return "<...>";
        try {
            var name = getComponentNameFromType(type);
            return name ? "<" + name + ">" : "<...>";
        } catch (x) {
            return "<...>";
        }
    }
    function getOwner() {
        var dispatcher = ReactSharedInternals.A;
        return null === dispatcher ? null : dispatcher.getOwner();
    }
    function UnknownOwner() {
        return Error("react-stack-top-frame");
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return !1;
        }
        return void 0 !== config.key;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        function warnAboutAccessingKey() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, console.error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)", displayName));
        }
        warnAboutAccessingKey.isReactWarning = !0;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
        });
    }
    function elementRefGetterWithDeprecationWarning() {
        var componentName = getComponentNameFromType(this.type);
        didWarnAboutElementRef[componentName] || (didWarnAboutElementRef[componentName] = !0, console.error("Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."));
        componentName = this.props.ref;
        return void 0 !== componentName ? componentName : null;
    }
    function ReactElement(type, key, self, source, owner, props, debugStack, debugTask) {
        self = props.ref;
        type = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key,
            props: props,
            _owner: owner
        };
        null !== (void 0 !== self ? self : null) ? Object.defineProperty(type, "ref", {
            enumerable: !1,
            get: elementRefGetterWithDeprecationWarning
        }) : Object.defineProperty(type, "ref", {
            enumerable: !1,
            value: null
        });
        type._store = {};
        Object.defineProperty(type._store, "validated", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: 0
        });
        Object.defineProperty(type, "_debugInfo", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: null
        });
        Object.defineProperty(type, "_debugStack", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugStack
        });
        Object.defineProperty(type, "_debugTask", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugTask
        });
        Object.freeze && (Object.freeze(type.props), Object.freeze(type));
        return type;
    }
    function cloneAndReplaceKey(oldElement, newKey) {
        newKey = ReactElement(oldElement.type, newKey, void 0, void 0, oldElement._owner, oldElement.props, oldElement._debugStack, oldElement._debugTask);
        oldElement._store && (newKey._store.validated = oldElement._store.validated);
        return newKey;
    }
    function isValidElement(object) {
        return "object" === typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function escape(key) {
        var escaperLookup = {
            "=": "=0",
            ":": "=2"
        };
        return "$" + key.replace(/[=:]/g, function(match) {
            return escaperLookup[match];
        });
    }
    function getElementKey(element, index) {
        return "object" === typeof element && null !== element && null != element.key ? (checkKeyStringCoercion(element.key), escape("" + element.key)) : index.toString(36);
    }
    function noop$1() {}
    function resolveThenable(thenable) {
        switch(thenable.status){
            case "fulfilled":
                return thenable.value;
            case "rejected":
                throw thenable.reason;
            default:
                switch("string" === typeof thenable.status ? thenable.then(noop$1, noop$1) : (thenable.status = "pending", thenable.then(function(fulfilledValue) {
                    "pending" === thenable.status && (thenable.status = "fulfilled", thenable.value = fulfilledValue);
                }, function(error) {
                    "pending" === thenable.status && (thenable.status = "rejected", thenable.reason = error);
                })), thenable.status){
                    case "fulfilled":
                        return thenable.value;
                    case "rejected":
                        throw thenable.reason;
                }
        }
        throw thenable;
    }
    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
        var type = typeof children;
        if ("undefined" === type || "boolean" === type) children = null;
        var invokeCallback = !1;
        if (null === children) invokeCallback = !0;
        else switch(type){
            case "bigint":
            case "string":
            case "number":
                invokeCallback = !0;
                break;
            case "object":
                switch(children.$$typeof){
                    case REACT_ELEMENT_TYPE:
                    case REACT_PORTAL_TYPE:
                        invokeCallback = !0;
                        break;
                    case REACT_LAZY_TYPE:
                        return invokeCallback = children._init, mapIntoArray(invokeCallback(children._payload), array, escapedPrefix, nameSoFar, callback);
                }
        }
        if (invokeCallback) {
            invokeCallback = children;
            callback = callback(invokeCallback);
            var childKey = "" === nameSoFar ? "." + getElementKey(invokeCallback, 0) : nameSoFar;
            isArrayImpl(callback) ? (escapedPrefix = "", null != childKey && (escapedPrefix = childKey.replace(userProvidedKeyEscapeRegex, "$&/") + "/"), mapIntoArray(callback, array, escapedPrefix, "", function(c) {
                return c;
            })) : null != callback && (isValidElement(callback) && (null != callback.key && (invokeCallback && invokeCallback.key === callback.key || checkKeyStringCoercion(callback.key)), escapedPrefix = cloneAndReplaceKey(callback, escapedPrefix + (null == callback.key || invokeCallback && invokeCallback.key === callback.key ? "" : ("" + callback.key).replace(userProvidedKeyEscapeRegex, "$&/") + "/") + childKey), "" !== nameSoFar && null != invokeCallback && isValidElement(invokeCallback) && null == invokeCallback.key && invokeCallback._store && !invokeCallback._store.validated && (escapedPrefix._store.validated = 2), callback = escapedPrefix), array.push(callback));
            return 1;
        }
        invokeCallback = 0;
        childKey = "" === nameSoFar ? "." : nameSoFar + ":";
        if (isArrayImpl(children)) for(var i = 0; i < children.length; i++)nameSoFar = children[i], type = childKey + getElementKey(nameSoFar, i), invokeCallback += mapIntoArray(nameSoFar, array, escapedPrefix, type, callback);
        else if (i = getIteratorFn(children), "function" === typeof i) for(i === children.entries && (didWarnAboutMaps || console.warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), didWarnAboutMaps = !0), children = i.call(children), i = 0; !(nameSoFar = children.next()).done;)nameSoFar = nameSoFar.value, type = childKey + getElementKey(nameSoFar, i++), invokeCallback += mapIntoArray(nameSoFar, array, escapedPrefix, type, callback);
        else if ("object" === type) {
            if ("function" === typeof children.then) return mapIntoArray(resolveThenable(children), array, escapedPrefix, nameSoFar, callback);
            array = String(children);
            throw Error("Objects are not valid as a React child (found: " + ("[object Object]" === array ? "object with keys {" + Object.keys(children).join(", ") + "}" : array) + "). If you meant to render a collection of children, use an array instead.");
        }
        return invokeCallback;
    }
    function mapChildren(children, func, context) {
        if (null == children) return children;
        var result = [], count = 0;
        mapIntoArray(children, result, "", "", function(child) {
            return func.call(context, child, count++);
        });
        return result;
    }
    function lazyInitializer(payload) {
        if (-1 === payload._status) {
            var ctor = payload._result;
            ctor = ctor();
            ctor.then(function(moduleObject) {
                if (0 === payload._status || -1 === payload._status) payload._status = 1, payload._result = moduleObject;
            }, function(error) {
                if (0 === payload._status || -1 === payload._status) payload._status = 2, payload._result = error;
            });
            -1 === payload._status && (payload._status = 0, payload._result = ctor);
        }
        if (1 === payload._status) return ctor = payload._result, void 0 === ctor && console.error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", ctor), "default" in ctor || console.error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", ctor), ctor.default;
        throw payload._result;
    }
    function resolveDispatcher() {
        var dispatcher = ReactSharedInternals.H;
        null === dispatcher && console.error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.");
        return dispatcher;
    }
    function noop() {}
    function enqueueTask(task) {
        if (null === enqueueTaskImpl) try {
            var requireString = ("require" + Math.random()).slice(0, 7);
            enqueueTaskImpl = (module && module[requireString]).call(module, "timers").setImmediate;
        } catch (_err) {
            enqueueTaskImpl = function(callback) {
                !1 === didWarnAboutMessageChannel && (didWarnAboutMessageChannel = !0, "undefined" === typeof MessageChannel && console.error("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));
                var channel = new MessageChannel();
                channel.port1.onmessage = callback;
                channel.port2.postMessage(void 0);
            };
        }
        return enqueueTaskImpl(task);
    }
    function aggregateErrors(errors) {
        return 1 < errors.length && "function" === typeof AggregateError ? new AggregateError(errors) : errors[0];
    }
    function popActScope(prevActQueue, prevActScopeDepth) {
        prevActScopeDepth !== actScopeDepth - 1 && console.error("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
        actScopeDepth = prevActScopeDepth;
    }
    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
        var queue = ReactSharedInternals.actQueue;
        if (null !== queue) {
            if (0 !== queue.length) try {
                flushActQueue(queue);
                enqueueTask(function() {
                    return recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                });
                return;
            } catch (error) {
                ReactSharedInternals.thrownErrors.push(error);
            }
            else ReactSharedInternals.actQueue = null;
        }
        0 < ReactSharedInternals.thrownErrors.length ? (queue = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, reject(queue)) : resolve(returnValue);
    }
    function flushActQueue(queue) {
        if (!isFlushing) {
            isFlushing = !0;
            var i = 0;
            try {
                for(; i < queue.length; i++){
                    var callback = queue[i];
                    do {
                        ReactSharedInternals.didUsePromise = !1;
                        var continuation = callback(!1);
                        if (null !== continuation) {
                            if (ReactSharedInternals.didUsePromise) {
                                queue[i] = callback;
                                queue.splice(0, i);
                                return;
                            }
                            callback = continuation;
                        } else break;
                    }while (1);
                }
                queue.length = 0;
            } catch (error) {
                queue.splice(0, i + 1), ReactSharedInternals.thrownErrors.push(error);
            } finally{
                isFlushing = !1;
            }
        }
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_ACTIVITY_TYPE = Symbol.for("react.activity"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, didWarnStateUpdateForUnmountedComponent = {}, ReactNoopUpdateQueue = {
        isMounted: function() {
            return !1;
        },
        enqueueForceUpdate: function(publicInstance) {
            warnNoop(publicInstance, "forceUpdate");
        },
        enqueueReplaceState: function(publicInstance) {
            warnNoop(publicInstance, "replaceState");
        },
        enqueueSetState: function(publicInstance) {
            warnNoop(publicInstance, "setState");
        }
    }, assign = Object.assign, emptyObject = {};
    Object.freeze(emptyObject);
    Component.prototype.isReactComponent = {};
    Component.prototype.setState = function(partialState, callback) {
        if ("object" !== typeof partialState && "function" !== typeof partialState && null != partialState) throw Error("takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, partialState, callback, "setState");
    };
    Component.prototype.forceUpdate = function(callback) {
        this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
    };
    var deprecatedAPIs = {
        isMounted: [
            "isMounted",
            "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."
        ],
        replaceState: [
            "replaceState",
            "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."
        ]
    }, fnName;
    for(fnName in deprecatedAPIs)deprecatedAPIs.hasOwnProperty(fnName) && defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    ComponentDummy.prototype = Component.prototype;
    deprecatedAPIs = PureComponent.prototype = new ComponentDummy();
    deprecatedAPIs.constructor = PureComponent;
    assign(deprecatedAPIs, Component.prototype);
    deprecatedAPIs.isPureReactComponent = !0;
    var isArrayImpl = Array.isArray, REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), ReactSharedInternals = {
        H: null,
        A: null,
        T: null,
        S: null,
        V: null,
        actQueue: null,
        isBatchingLegacy: !1,
        didScheduleLegacyUpdate: !1,
        didUsePromise: !1,
        thrownErrors: [],
        getCurrentStack: null,
        recentlyCreatedOwnerStacks: 0
    }, hasOwnProperty = Object.prototype.hasOwnProperty, createTask = console.createTask ? console.createTask : function() {
        return null;
    };
    deprecatedAPIs = {
        "react-stack-bottom-frame": function(callStackForError) {
            return callStackForError();
        }
    };
    var specialPropKeyWarningShown, didWarnAboutOldJSXRuntime;
    var didWarnAboutElementRef = {};
    var unknownOwnerDebugStack = deprecatedAPIs["react-stack-bottom-frame"].bind(deprecatedAPIs, UnknownOwner)();
    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));
    var didWarnAboutMaps = !1, userProvidedKeyEscapeRegex = /\/+/g, reportGlobalError = "function" === typeof reportError ? reportError : function(error) {
        if ("object" === typeof window && "function" === typeof window.ErrorEvent) {
            var event = new window.ErrorEvent("error", {
                bubbles: !0,
                cancelable: !0,
                message: "object" === typeof error && null !== error && "string" === typeof error.message ? String(error.message) : String(error),
                error: error
            });
            if (!window.dispatchEvent(event)) return;
        }
        console.error(error);
    }, didWarnAboutMessageChannel = !1, enqueueTaskImpl = null, actScopeDepth = 0, didWarnNoAwaitAct = !1, isFlushing = !1, queueSeveralMicrotasks = "function" === typeof queueMicrotask ? function(callback) {
        queueMicrotask(function() {
            return queueMicrotask(callback);
        });
    } : enqueueTask;
    deprecatedAPIs = Object.freeze({
        __proto__: null,
        c: function(size) {
            return resolveDispatcher().useMemoCache(size);
        }
    });
    exports.Children = {
        map: mapChildren,
        forEach: function(children, forEachFunc, forEachContext) {
            mapChildren(children, function() {
                forEachFunc.apply(this, arguments);
            }, forEachContext);
        },
        count: function(children) {
            var n = 0;
            mapChildren(children, function() {
                n++;
            });
            return n;
        },
        toArray: function(children) {
            return mapChildren(children, function(child) {
                return child;
            }) || [];
        },
        only: function(children) {
            if (!isValidElement(children)) throw Error("React.Children.only expected to receive a single React element child.");
            return children;
        }
    };
    exports.Component = Component;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.Profiler = REACT_PROFILER_TYPE;
    exports.PureComponent = PureComponent;
    exports.StrictMode = REACT_STRICT_MODE_TYPE;
    exports.Suspense = REACT_SUSPENSE_TYPE;
    exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = ReactSharedInternals;
    exports.__COMPILER_RUNTIME = deprecatedAPIs;
    exports.act = function(callback) {
        var prevActQueue = ReactSharedInternals.actQueue, prevActScopeDepth = actScopeDepth;
        actScopeDepth++;
        var queue = ReactSharedInternals.actQueue = null !== prevActQueue ? prevActQueue : [], didAwaitActCall = !1;
        try {
            var result = callback();
        } catch (error) {
            ReactSharedInternals.thrownErrors.push(error);
        }
        if (0 < ReactSharedInternals.thrownErrors.length) throw popActScope(prevActQueue, prevActScopeDepth), callback = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, callback;
        if (null !== result && "object" === typeof result && "function" === typeof result.then) {
            var thenable = result;
            queueSeveralMicrotasks(function() {
                didAwaitActCall || didWarnNoAwaitAct || (didWarnNoAwaitAct = !0, console.error("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"));
            });
            return {
                then: function(resolve, reject) {
                    didAwaitActCall = !0;
                    thenable.then(function(returnValue) {
                        popActScope(prevActQueue, prevActScopeDepth);
                        if (0 === prevActScopeDepth) {
                            try {
                                flushActQueue(queue), enqueueTask(function() {
                                    return recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                                });
                            } catch (error$0) {
                                ReactSharedInternals.thrownErrors.push(error$0);
                            }
                            if (0 < ReactSharedInternals.thrownErrors.length) {
                                var _thrownError = aggregateErrors(ReactSharedInternals.thrownErrors);
                                ReactSharedInternals.thrownErrors.length = 0;
                                reject(_thrownError);
                            }
                        } else resolve(returnValue);
                    }, function(error) {
                        popActScope(prevActQueue, prevActScopeDepth);
                        0 < ReactSharedInternals.thrownErrors.length ? (error = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, reject(error)) : reject(error);
                    });
                }
            };
        }
        var returnValue$jscomp$0 = result;
        popActScope(prevActQueue, prevActScopeDepth);
        0 === prevActScopeDepth && (flushActQueue(queue), 0 !== queue.length && queueSeveralMicrotasks(function() {
            didAwaitActCall || didWarnNoAwaitAct || (didWarnNoAwaitAct = !0, console.error("A component suspended inside an `act` scope, but the `act` call was not awaited. When testing React components that depend on asynchronous data, you must await the result:\n\nawait act(() => ...)"));
        }), ReactSharedInternals.actQueue = null);
        if (0 < ReactSharedInternals.thrownErrors.length) throw callback = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, callback;
        return {
            then: function(resolve, reject) {
                didAwaitActCall = !0;
                0 === prevActScopeDepth ? (ReactSharedInternals.actQueue = queue, enqueueTask(function() {
                    return recursivelyFlushAsyncActWork(returnValue$jscomp$0, resolve, reject);
                })) : resolve(returnValue$jscomp$0);
            }
        };
    };
    exports.cache = function(fn) {
        return function() {
            return fn.apply(null, arguments);
        };
    };
    exports.captureOwnerStack = function() {
        var getCurrentStack = ReactSharedInternals.getCurrentStack;
        return null === getCurrentStack ? null : getCurrentStack();
    };
    exports.cloneElement = function(element, config, children) {
        if (null === element || void 0 === element) throw Error("The argument must be a React element, but you passed " + element + ".");
        var props = assign({}, element.props), key = element.key, owner = element._owner;
        if (null != config) {
            var JSCompiler_inline_result;
            a: {
                if (hasOwnProperty.call(config, "ref") && (JSCompiler_inline_result = Object.getOwnPropertyDescriptor(config, "ref").get) && JSCompiler_inline_result.isReactWarning) {
                    JSCompiler_inline_result = !1;
                    break a;
                }
                JSCompiler_inline_result = void 0 !== config.ref;
            }
            JSCompiler_inline_result && (owner = getOwner());
            hasValidKey(config) && (checkKeyStringCoercion(config.key), key = "" + config.key);
            for(propName in config)!hasOwnProperty.call(config, propName) || "key" === propName || "__self" === propName || "__source" === propName || "ref" === propName && void 0 === config.ref || (props[propName] = config[propName]);
        }
        var propName = arguments.length - 2;
        if (1 === propName) props.children = children;
        else if (1 < propName) {
            JSCompiler_inline_result = Array(propName);
            for(var i = 0; i < propName; i++)JSCompiler_inline_result[i] = arguments[i + 2];
            props.children = JSCompiler_inline_result;
        }
        props = ReactElement(element.type, key, void 0, void 0, owner, props, element._debugStack, element._debugTask);
        for(key = 2; key < arguments.length; key++)owner = arguments[key], isValidElement(owner) && owner._store && (owner._store.validated = 1);
        return props;
    };
    exports.createContext = function(defaultValue) {
        defaultValue = {
            $$typeof: REACT_CONTEXT_TYPE,
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            _threadCount: 0,
            Provider: null,
            Consumer: null
        };
        defaultValue.Provider = defaultValue;
        defaultValue.Consumer = {
            $$typeof: REACT_CONSUMER_TYPE,
            _context: defaultValue
        };
        defaultValue._currentRenderer = null;
        defaultValue._currentRenderer2 = null;
        return defaultValue;
    };
    exports.createElement = function(type, config, children) {
        for(var i = 2; i < arguments.length; i++){
            var node = arguments[i];
            isValidElement(node) && node._store && (node._store.validated = 1);
        }
        i = {};
        node = null;
        if (null != config) for(propName in didWarnAboutOldJSXRuntime || !("__self" in config) || "key" in config || (didWarnAboutOldJSXRuntime = !0, console.warn("Your app (or one of its dependencies) is using an outdated JSX transform. Update to the modern JSX transform for faster performance: https://react.dev/link/new-jsx-transform")), hasValidKey(config) && (checkKeyStringCoercion(config.key), node = "" + config.key), config)hasOwnProperty.call(config, propName) && "key" !== propName && "__self" !== propName && "__source" !== propName && (i[propName] = config[propName]);
        var childrenLength = arguments.length - 2;
        if (1 === childrenLength) i.children = children;
        else if (1 < childrenLength) {
            for(var childArray = Array(childrenLength), _i = 0; _i < childrenLength; _i++)childArray[_i] = arguments[_i + 2];
            Object.freeze && Object.freeze(childArray);
            i.children = childArray;
        }
        if (type && type.defaultProps) for(propName in childrenLength = type.defaultProps, childrenLength)void 0 === i[propName] && (i[propName] = childrenLength[propName]);
        node && defineKeyPropWarningGetter(i, "function" === typeof type ? type.displayName || type.name || "Unknown" : type);
        var propName = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;
        return ReactElement(type, node, void 0, void 0, getOwner(), i, propName ? Error("react-stack-top-frame") : unknownOwnerDebugStack, propName ? createTask(getTaskName(type)) : unknownOwnerDebugTask);
    };
    exports.createRef = function() {
        var refObject = {
            current: null
        };
        Object.seal(refObject);
        return refObject;
    };
    exports.forwardRef = function(render) {
        null != render && render.$$typeof === REACT_MEMO_TYPE ? console.error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).") : "function" !== typeof render ? console.error("forwardRef requires a render function but was given %s.", null === render ? "null" : typeof render) : 0 !== render.length && 2 !== render.length && console.error("forwardRef render functions accept exactly two parameters: props and ref. %s", 1 === render.length ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
        null != render && null != render.defaultProps && console.error("forwardRef render functions do not support defaultProps. Did you accidentally pass a React component?");
        var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: render
        }, ownName;
        Object.defineProperty(elementType, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name;
                render.name || render.displayName || (Object.defineProperty(render, "name", {
                    value: name
                }), render.displayName = name);
            }
        });
        return elementType;
    };
    exports.isValidElement = isValidElement;
    exports.lazy = function(ctor) {
        return {
            $$typeof: REACT_LAZY_TYPE,
            _payload: {
                _status: -1,
                _result: ctor
            },
            _init: lazyInitializer
        };
    };
    exports.memo = function(type, compare) {
        null == type && console.error("memo: The first argument must be a component. Instead received: %s", null === type ? "null" : typeof type);
        compare = {
            $$typeof: REACT_MEMO_TYPE,
            type: type,
            compare: void 0 === compare ? null : compare
        };
        var ownName;
        Object.defineProperty(compare, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name;
                type.name || type.displayName || (Object.defineProperty(type, "name", {
                    value: name
                }), type.displayName = name);
            }
        });
        return compare;
    };
    exports.startTransition = function(scope) {
        var prevTransition = ReactSharedInternals.T, currentTransition = {};
        ReactSharedInternals.T = currentTransition;
        currentTransition._updatedFibers = new Set();
        try {
            var returnValue = scope(), onStartTransitionFinish = ReactSharedInternals.S;
            null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
            "object" === typeof returnValue && null !== returnValue && "function" === typeof returnValue.then && returnValue.then(noop, reportGlobalError);
        } catch (error) {
            reportGlobalError(error);
        } finally{
            null === prevTransition && currentTransition._updatedFibers && (scope = currentTransition._updatedFibers.size, currentTransition._updatedFibers.clear(), 10 < scope && console.warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.")), ReactSharedInternals.T = prevTransition;
        }
    };
    exports.unstable_useCacheRefresh = function() {
        return resolveDispatcher().useCacheRefresh();
    };
    exports.use = function(usable) {
        return resolveDispatcher().use(usable);
    };
    exports.useActionState = function(action, initialState, permalink) {
        return resolveDispatcher().useActionState(action, initialState, permalink);
    };
    exports.useCallback = function(callback, deps) {
        return resolveDispatcher().useCallback(callback, deps);
    };
    exports.useContext = function(Context) {
        var dispatcher = resolveDispatcher();
        Context.$$typeof === REACT_CONSUMER_TYPE && console.error("Calling useContext(Context.Consumer) is not supported and will cause bugs. Did you mean to call useContext(Context) instead?");
        return dispatcher.useContext(Context);
    };
    exports.useDebugValue = function(value, formatterFn) {
        return resolveDispatcher().useDebugValue(value, formatterFn);
    };
    exports.useDeferredValue = function(value, initialValue) {
        return resolveDispatcher().useDeferredValue(value, initialValue);
    };
    exports.useEffect = function(create, createDeps, update) {
        null == create && console.warn("React Hook useEffect requires an effect callback. Did you forget to pass a callback to the hook?");
        var dispatcher = resolveDispatcher();
        if ("function" === typeof update) throw Error("useEffect CRUD overload is not enabled in this build of React.");
        return dispatcher.useEffect(create, createDeps);
    };
    exports.useId = function() {
        return resolveDispatcher().useId();
    };
    exports.useImperativeHandle = function(ref, create, deps) {
        return resolveDispatcher().useImperativeHandle(ref, create, deps);
    };
    exports.useInsertionEffect = function(create, deps) {
        null == create && console.warn("React Hook useInsertionEffect requires an effect callback. Did you forget to pass a callback to the hook?");
        return resolveDispatcher().useInsertionEffect(create, deps);
    };
    exports.useLayoutEffect = function(create, deps) {
        null == create && console.warn("React Hook useLayoutEffect requires an effect callback. Did you forget to pass a callback to the hook?");
        return resolveDispatcher().useLayoutEffect(create, deps);
    };
    exports.useMemo = function(create, deps) {
        return resolveDispatcher().useMemo(create, deps);
    };
    exports.useOptimistic = function(passthrough, reducer) {
        return resolveDispatcher().useOptimistic(passthrough, reducer);
    };
    exports.useReducer = function(reducer, initialArg, init) {
        return resolveDispatcher().useReducer(reducer, initialArg, init);
    };
    exports.useRef = function(initialValue) {
        return resolveDispatcher().useRef(initialValue);
    };
    exports.useState = function(initialState) {
        return resolveDispatcher().useState(initialState);
    };
    exports.useSyncExternalStore = function(subscribe, getSnapshot, getServerSnapshot) {
        return resolveDispatcher().useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    };
    exports.useTransition = function() {
        return resolveDispatcher().useTransition();
    };
    exports.version = "19.1.0";
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{}],"jyor1":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "untilE", ()=>(0, _foreignJs.untilE));
parcelHelpers.export(exports, "whileE", ()=>(0, _foreignJs.whileE));
parcelHelpers.export(exports, "forE", ()=>(0, _foreignJs.forE));
parcelHelpers.export(exports, "foreachE", ()=>(0, _foreignJs.foreachE));
parcelHelpers.export(exports, "functorEffect", ()=>functorEffect);
parcelHelpers.export(exports, "applyEffect", ()=>applyEffect);
parcelHelpers.export(exports, "applicativeEffect", ()=>applicativeEffect);
parcelHelpers.export(exports, "bindEffect", ()=>bindEffect);
parcelHelpers.export(exports, "monadEffect", ()=>monadEffect);
parcelHelpers.export(exports, "semigroupEffect", ()=>semigroupEffect);
parcelHelpers.export(exports, "monoidEffect", ()=>monoidEffect);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Monad/index.js");
var _indexJs3 = require("../Data.Monoid/index.js");
var _indexJs4 = require("../Data.Semigroup/index.js");
var $runtime_lazy = function(name, moduleName, init) {
    var state = 0;
    var val;
    return function(lineNumber) {
        if (state === 2) return val;
        if (state === 1) throw new ReferenceError(name + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state = 1;
        val = init();
        state = 2;
        return val;
    };
};
var monadEffect = {
    Applicative0: function() {
        return applicativeEffect;
    },
    Bind1: function() {
        return bindEffect;
    }
};
var bindEffect = {
    bind: _foreignJs.bindE,
    Apply0: function() {
        return $lazy_applyEffect(0);
    }
};
var applicativeEffect = {
    pure: _foreignJs.pureE,
    Apply0: function() {
        return $lazy_applyEffect(0);
    }
};
var $lazy_functorEffect = /* #__PURE__ */ $runtime_lazy("functorEffect", "Effect", function() {
    return {
        map: _indexJs.liftA1(applicativeEffect)
    };
});
var $lazy_applyEffect = /* #__PURE__ */ $runtime_lazy("applyEffect", "Effect", function() {
    return {
        apply: _indexJs2.ap(monadEffect),
        Functor0: function() {
            return $lazy_functorEffect(0);
        }
    };
});
var functorEffect = /* #__PURE__ */ $lazy_functorEffect(20);
var applyEffect = /* #__PURE__ */ $lazy_applyEffect(23);
var lift2 = /* #__PURE__ */ _indexJs1.lift2(applyEffect);
var semigroupEffect = function(dictSemigroup) {
    return {
        append: lift2(_indexJs4.append(dictSemigroup))
    };
};
var monoidEffect = function(dictMonoid) {
    var semigroupEffect1 = semigroupEffect(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.pureE(_indexJs3.mempty(dictMonoid)),
        Semigroup0: function() {
            return semigroupEffect1;
        }
    };
};

},{"./foreign.js":"7Rvnt","../Control.Applicative/index.js":"5JL6d","../Control.Apply/index.js":"ggN4S","../Control.Monad/index.js":"7GweJ","../Data.Monoid/index.js":"6chRZ","../Data.Semigroup/index.js":"evJTv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7Rvnt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "pureE", ()=>pureE);
parcelHelpers.export(exports, "bindE", ()=>bindE);
parcelHelpers.export(exports, "untilE", ()=>untilE);
parcelHelpers.export(exports, "whileE", ()=>whileE);
parcelHelpers.export(exports, "forE", ()=>forE);
parcelHelpers.export(exports, "foreachE", ()=>foreachE);
const pureE = function(a) {
    return function() {
        return a;
    };
};
const bindE = function(a) {
    return function(f) {
        return function() {
            return f(a())();
        };
    };
};
const untilE = function(f) {
    return function() {
        while(!f());
    };
};
const whileE = function(f) {
    return function(a) {
        return function() {
            while(f())a();
        };
    };
};
const forE = function(lo) {
    return function(hi) {
        return function(f) {
            return function() {
                for(var i = lo; i < hi; i++)f(i)();
            };
        };
    };
};
const foreachE = function(as) {
    return function(f) {
        return function() {
            for(var i = 0, l = as.length; i < l; i++)f(as[i])();
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7GweJ":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "liftA1", ()=>(0, _indexJs.liftA1));
parcelHelpers.export(exports, "pure", ()=>(0, _indexJs.pure));
parcelHelpers.export(exports, "unless", ()=>(0, _indexJs.unless));
parcelHelpers.export(exports, "when", ()=>(0, _indexJs.when));
parcelHelpers.export(exports, "apply", ()=>(0, _indexJs1.apply));
parcelHelpers.export(exports, "bind", ()=>(0, _indexJs2.bind));
parcelHelpers.export(exports, "ifM", ()=>(0, _indexJs2.ifM));
parcelHelpers.export(exports, "join", ()=>(0, _indexJs2.join));
parcelHelpers.export(exports, "map", ()=>(0, _indexJs3.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs3.void));
parcelHelpers.export(exports, "liftM1", ()=>liftM1);
parcelHelpers.export(exports, "whenM", ()=>whenM);
parcelHelpers.export(exports, "unlessM", ()=>unlessM);
parcelHelpers.export(exports, "ap", ()=>ap);
parcelHelpers.export(exports, "monadFn", ()=>monadFn);
parcelHelpers.export(exports, "monadArray", ()=>monadArray);
parcelHelpers.export(exports, "monadProxy", ()=>monadProxy);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Bind/index.js");
var _indexJs3 = require("../Data.Functor/index.js");
var whenM = function(dictMonad) {
    var bind = _indexJs2.bind(dictMonad.Bind1());
    var when = _indexJs.when(dictMonad.Applicative0());
    return function(mb) {
        return function(m) {
            return bind(mb)(function(b) {
                return when(b)(m);
            });
        };
    };
};
var unlessM = function(dictMonad) {
    var bind = _indexJs2.bind(dictMonad.Bind1());
    var unless = _indexJs.unless(dictMonad.Applicative0());
    return function(mb) {
        return function(m) {
            return bind(mb)(function(b) {
                return unless(b)(m);
            });
        };
    };
};
var monadProxy = {
    Applicative0: function() {
        return _indexJs.applicativeProxy;
    },
    Bind1: function() {
        return _indexJs2.bindProxy;
    }
};
var monadFn = {
    Applicative0: function() {
        return _indexJs.applicativeFn;
    },
    Bind1: function() {
        return _indexJs2.bindFn;
    }
};
var monadArray = {
    Applicative0: function() {
        return _indexJs.applicativeArray;
    },
    Bind1: function() {
        return _indexJs2.bindArray;
    }
};
var liftM1 = function(dictMonad) {
    var bind = _indexJs2.bind(dictMonad.Bind1());
    var pure = _indexJs.pure(dictMonad.Applicative0());
    return function(f) {
        return function(a) {
            return bind(a)(function(a$prime) {
                return pure(f(a$prime));
            });
        };
    };
};
var ap = function(dictMonad) {
    var bind = _indexJs2.bind(dictMonad.Bind1());
    var pure = _indexJs.pure(dictMonad.Applicative0());
    return function(f) {
        return function(a) {
            return bind(f)(function(f$prime) {
                return bind(a)(function(a$prime) {
                    return pure(f$prime(a$prime));
                });
            });
        };
    };
};

},{"../Control.Applicative/index.js":"5JL6d","../Control.Apply/index.js":"ggN4S","../Control.Bind/index.js":"3yoUR","../Data.Functor/index.js":"j9NCu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3yoUR":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "liftA1", ()=>(0, _indexJs.liftA1));
parcelHelpers.export(exports, "pure", ()=>(0, _indexJs.pure));
parcelHelpers.export(exports, "unless", ()=>(0, _indexJs.unless));
parcelHelpers.export(exports, "when", ()=>(0, _indexJs.when));
parcelHelpers.export(exports, "apply", ()=>(0, _indexJs1.apply));
parcelHelpers.export(exports, "map", ()=>(0, _indexJs4.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs4.void));
parcelHelpers.export(exports, "bind", ()=>bind);
parcelHelpers.export(exports, "bindFlipped", ()=>bindFlipped);
parcelHelpers.export(exports, "discard", ()=>discard);
parcelHelpers.export(exports, "join", ()=>join);
parcelHelpers.export(exports, "composeKleisli", ()=>composeKleisli);
parcelHelpers.export(exports, "composeKleisliFlipped", ()=>composeKleisliFlipped);
parcelHelpers.export(exports, "ifM", ()=>ifM);
parcelHelpers.export(exports, "bindFn", ()=>bindFn);
parcelHelpers.export(exports, "bindArray", ()=>bindArray);
parcelHelpers.export(exports, "bindProxy", ()=>bindProxy);
parcelHelpers.export(exports, "discardUnit", ()=>discardUnit);
parcelHelpers.export(exports, "discardProxy", ()=>discardProxy);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Category/index.js");
var _indexJs3 = require("../Data.Function/index.js");
var _indexJs4 = require("../Data.Functor/index.js");
var _indexJs5 = require("../Type.Proxy/index.js");
var identity = /* #__PURE__ */ _indexJs2.identity(_indexJs2.categoryFn);
var discard = function(dict) {
    return dict.discard;
};
var bindProxy = {
    bind: function(v) {
        return function(v1) {
            return _indexJs5["Proxy"].value;
        };
    },
    Apply0: function() {
        return _indexJs1.applyProxy;
    }
};
var bindFn = {
    bind: function(m) {
        return function(f) {
            return function(x) {
                return f(m(x))(x);
            };
        };
    },
    Apply0: function() {
        return _indexJs1.applyFn;
    }
};
var bindArray = {
    bind: _foreignJs.arrayBind,
    Apply0: function() {
        return _indexJs1.applyArray;
    }
};
var bind = function(dict) {
    return dict.bind;
};
var bindFlipped = function(dictBind) {
    return _indexJs3.flip(bind(dictBind));
};
var composeKleisliFlipped = function(dictBind) {
    var bindFlipped1 = bindFlipped(dictBind);
    return function(f) {
        return function(g) {
            return function(a) {
                return bindFlipped1(f)(g(a));
            };
        };
    };
};
var composeKleisli = function(dictBind) {
    var bind1 = bind(dictBind);
    return function(f) {
        return function(g) {
            return function(a) {
                return bind1(f(a))(g);
            };
        };
    };
};
var discardProxy = {
    discard: function(dictBind) {
        return bind(dictBind);
    }
};
var discardUnit = {
    discard: function(dictBind) {
        return bind(dictBind);
    }
};
var ifM = function(dictBind) {
    var bind1 = bind(dictBind);
    return function(cond) {
        return function(t) {
            return function(f) {
                return bind1(cond)(function(cond$prime) {
                    if (cond$prime) return t;
                    return f;
                });
            };
        };
    };
};
var join = function(dictBind) {
    var bind1 = bind(dictBind);
    return function(m) {
        return bind1(m)(identity);
    };
};

},{"./foreign.js":"k1Wbr","../Control.Applicative/index.js":"5JL6d","../Control.Apply/index.js":"ggN4S","../Control.Category/index.js":"iWlWa","../Data.Function/index.js":"64uwb","../Data.Functor/index.js":"j9NCu","../Type.Proxy/index.js":"293bb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"k1Wbr":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "arrayBind", ()=>arrayBind);
const arrayBind = typeof Array.prototype.flatMap === "function" ? function(arr) {
    return function(f) {
        return arr.flatMap(f);
    };
} : function(arr) {
    return function(f) {
        var result = [];
        var l = arr.length;
        for(var i = 0; i < l; i++){
            var xs = f(arr[i]);
            var k = xs.length;
            for(var j = 0; j < k; j++)result.push(xs[j]);
        }
        return result;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6chRZ":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mempty", ()=>mempty);
parcelHelpers.export(exports, "power", ()=>power);
parcelHelpers.export(exports, "guard", ()=>guard);
parcelHelpers.export(exports, "memptyRecord", ()=>memptyRecord);
parcelHelpers.export(exports, "monoidUnit", ()=>monoidUnit);
parcelHelpers.export(exports, "monoidOrdering", ()=>monoidOrdering);
parcelHelpers.export(exports, "monoidFn", ()=>monoidFn);
parcelHelpers.export(exports, "monoidString", ()=>monoidString);
parcelHelpers.export(exports, "monoidArray", ()=>monoidArray);
parcelHelpers.export(exports, "monoidRecord", ()=>monoidRecord);
parcelHelpers.export(exports, "monoidRecordNil", ()=>monoidRecordNil);
parcelHelpers.export(exports, "monoidRecordCons", ()=>monoidRecordCons);
var _indexJs = require("../Data.Boolean/index.js");
var _indexJs1 = require("../Data.EuclideanRing/index.js");
var _indexJs2 = require("../Data.Ordering/index.js");
var _indexJs3 = require("../Data.Semigroup/index.js");
var _indexJs4 = require("../Data.Symbol/index.js");
var _indexJs5 = require("../Data.Unit/index.js");
var _indexJs6 = require("../Record.Unsafe/index.js");
var _indexJs7 = require("../Type.Proxy/index.js");
var semigroupRecord = /* #__PURE__ */ _indexJs3.semigroupRecord();
var mod = /* #__PURE__ */ _indexJs1.mod(_indexJs1.euclideanRingInt);
var div = /* #__PURE__ */ _indexJs1.div(_indexJs1.euclideanRingInt);
var monoidUnit = {
    mempty: _indexJs5.unit,
    Semigroup0: function() {
        return _indexJs3.semigroupUnit;
    }
};
var monoidString = {
    mempty: "",
    Semigroup0: function() {
        return _indexJs3.semigroupString;
    }
};
var monoidRecordNil = {
    memptyRecord: function(v) {
        return {};
    },
    SemigroupRecord0: function() {
        return _indexJs3.semigroupRecordNil;
    }
};
var monoidOrdering = /* #__PURE__ */ function() {
    return {
        mempty: _indexJs2.EQ.value,
        Semigroup0: function() {
            return _indexJs2.semigroupOrdering;
        }
    };
}();
var monoidArray = {
    mempty: [],
    Semigroup0: function() {
        return _indexJs3.semigroupArray;
    }
};
var memptyRecord = function(dict) {
    return dict.memptyRecord;
};
var monoidRecord = function() {
    return function(dictMonoidRecord) {
        var semigroupRecord1 = semigroupRecord(dictMonoidRecord.SemigroupRecord0());
        return {
            mempty: memptyRecord(dictMonoidRecord)(_indexJs7["Proxy"].value),
            Semigroup0: function() {
                return semigroupRecord1;
            }
        };
    };
};
var mempty = function(dict) {
    return dict.mempty;
};
var monoidFn = function(dictMonoid) {
    var mempty1 = mempty(dictMonoid);
    var semigroupFn = _indexJs3.semigroupFn(dictMonoid.Semigroup0());
    return {
        mempty: function(v) {
            return mempty1;
        },
        Semigroup0: function() {
            return semigroupFn;
        }
    };
};
var monoidRecordCons = function(dictIsSymbol) {
    var reflectSymbol = _indexJs4.reflectSymbol(dictIsSymbol);
    var semigroupRecordCons = _indexJs3.semigroupRecordCons(dictIsSymbol)();
    return function(dictMonoid) {
        var mempty1 = mempty(dictMonoid);
        var Semigroup0 = dictMonoid.Semigroup0();
        return function() {
            return function(dictMonoidRecord) {
                var memptyRecord1 = memptyRecord(dictMonoidRecord);
                var semigroupRecordCons1 = semigroupRecordCons(dictMonoidRecord.SemigroupRecord0())(Semigroup0);
                return {
                    memptyRecord: function(v) {
                        var tail = memptyRecord1(_indexJs7["Proxy"].value);
                        var key = reflectSymbol(_indexJs7["Proxy"].value);
                        var insert = _indexJs6.unsafeSet(key);
                        return insert(mempty1)(tail);
                    },
                    SemigroupRecord0: function() {
                        return semigroupRecordCons1;
                    }
                };
            };
        };
    };
};
var power = function(dictMonoid) {
    var mempty1 = mempty(dictMonoid);
    var append = _indexJs3.append(dictMonoid.Semigroup0());
    return function(x) {
        var go = function(p) {
            if (p <= 0) return mempty1;
            if (p === 1) return x;
            if (mod(p)(2) === 0) {
                var x$prime = go(div(p)(2));
                return append(x$prime)(x$prime);
            }
            if (_indexJs.otherwise) {
                var x$prime = go(div(p)(2));
                return append(x$prime)(append(x$prime)(x));
            }
            throw new Error("Failed pattern match at Data.Monoid (line 88, column 3 - line 88, column 17): " + [
                p.constructor.name
            ]);
        };
        return go;
    };
};
var guard = function(dictMonoid) {
    var mempty1 = mempty(dictMonoid);
    return function(v) {
        return function(v1) {
            if (v) return v1;
            if (!v) return mempty1;
            throw new Error("Failed pattern match at Data.Monoid (line 96, column 1 - line 96, column 49): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
};

},{"../Data.Boolean/index.js":"spBQ3","../Data.EuclideanRing/index.js":"3Tsom","../Data.Ordering/index.js":"2NvYx","../Data.Semigroup/index.js":"evJTv","../Data.Symbol/index.js":"dzOca","../Data.Unit/index.js":"fuCRN","../Record.Unsafe/index.js":"8BjRm","../Type.Proxy/index.js":"293bb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3Tsom":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "sub", ()=>(0, _indexJs2.sub));
parcelHelpers.export(exports, "add", ()=>(0, _indexJs3.add));
parcelHelpers.export(exports, "mul", ()=>(0, _indexJs3.mul));
parcelHelpers.export(exports, "one", ()=>(0, _indexJs3.one));
parcelHelpers.export(exports, "zero", ()=>(0, _indexJs3.zero));
parcelHelpers.export(exports, "degree", ()=>degree);
parcelHelpers.export(exports, "div", ()=>div);
parcelHelpers.export(exports, "mod", ()=>mod);
parcelHelpers.export(exports, "gcd", ()=>gcd);
parcelHelpers.export(exports, "lcm", ()=>lcm);
parcelHelpers.export(exports, "euclideanRingInt", ()=>euclideanRingInt);
parcelHelpers.export(exports, "euclideanRingNumber", ()=>euclideanRingNumber);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.CommutativeRing/index.js");
var _indexJs1 = require("../Data.Eq/index.js");
var _indexJs2 = require("../Data.Ring/index.js");
var _indexJs3 = require("../Data.Semiring/index.js");
var mod = function(dict) {
    return dict.mod;
};
var gcd = function(dictEq) {
    var eq = _indexJs1.eq(dictEq);
    return function(dictEuclideanRing) {
        var zero = _indexJs3.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0());
        var mod1 = mod(dictEuclideanRing);
        return function(a) {
            return function(b) {
                var $24 = eq(b)(zero);
                if ($24) return a;
                return gcd(dictEq)(dictEuclideanRing)(b)(mod1(a)(b));
            };
        };
    };
};
var euclideanRingNumber = {
    degree: function(v) {
        return 1;
    },
    div: _foreignJs.numDiv,
    mod: function(v) {
        return function(v1) {
            return 0.0;
        };
    },
    CommutativeRing0: function() {
        return _indexJs.commutativeRingNumber;
    }
};
var euclideanRingInt = {
    degree: _foreignJs.intDegree,
    div: _foreignJs.intDiv,
    mod: _foreignJs.intMod,
    CommutativeRing0: function() {
        return _indexJs.commutativeRingInt;
    }
};
var div = function(dict) {
    return dict.div;
};
var lcm = function(dictEq) {
    var eq = _indexJs1.eq(dictEq);
    var gcd1 = gcd(dictEq);
    return function(dictEuclideanRing) {
        var Semiring0 = dictEuclideanRing.CommutativeRing0().Ring0().Semiring0();
        var zero = _indexJs3.zero(Semiring0);
        var div1 = div(dictEuclideanRing);
        var mul = _indexJs3.mul(Semiring0);
        var gcd2 = gcd1(dictEuclideanRing);
        return function(a) {
            return function(b) {
                var $26 = eq(a)(zero) || eq(b)(zero);
                if ($26) return zero;
                return div1(mul(a)(b))(gcd2(a)(b));
            };
        };
    };
};
var degree = function(dict) {
    return dict.degree;
};

},{"./foreign.js":"6B9Bh","../Data.CommutativeRing/index.js":"amnM9","../Data.Eq/index.js":"j3zMn","../Data.Ring/index.js":"hWPc6","../Data.Semiring/index.js":"1k57z","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6B9Bh":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "intDegree", ()=>intDegree);
parcelHelpers.export(exports, "intDiv", ()=>intDiv);
parcelHelpers.export(exports, "intMod", ()=>intMod);
parcelHelpers.export(exports, "numDiv", ()=>numDiv);
const intDegree = function(x) {
    return Math.min(Math.abs(x), 2147483647);
};
const intDiv = function(x) {
    return function(y) {
        if (y === 0) return 0;
        return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
};
const intMod = function(x) {
    return function(y) {
        if (y === 0) return 0;
        var yy = Math.abs(y);
        return (x % yy + yy) % yy;
    };
};
const numDiv = function(n1) {
    return function(n2) {
        return n1 / n2;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"amnM9":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "add", ()=>(0, _indexJs1.add));
parcelHelpers.export(exports, "mul", ()=>(0, _indexJs1.mul));
parcelHelpers.export(exports, "one", ()=>(0, _indexJs1.one));
parcelHelpers.export(exports, "zero", ()=>(0, _indexJs1.zero));
parcelHelpers.export(exports, "commutativeRingInt", ()=>commutativeRingInt);
parcelHelpers.export(exports, "commutativeRingNumber", ()=>commutativeRingNumber);
parcelHelpers.export(exports, "commutativeRingUnit", ()=>commutativeRingUnit);
parcelHelpers.export(exports, "commutativeRingFn", ()=>commutativeRingFn);
parcelHelpers.export(exports, "commutativeRingRecord", ()=>commutativeRingRecord);
parcelHelpers.export(exports, "commutativeRingProxy", ()=>commutativeRingProxy);
parcelHelpers.export(exports, "commutativeRingRecordNil", ()=>commutativeRingRecordNil);
parcelHelpers.export(exports, "commutativeRingRecordCons", ()=>commutativeRingRecordCons);
var _indexJs = require("../Data.Ring/index.js");
var _indexJs1 = require("../Data.Semiring/index.js");
var ringRecord = /* #__PURE__ */ _indexJs.ringRecord();
var commutativeRingUnit = {
    Ring0: function() {
        return _indexJs.ringUnit;
    }
};
var commutativeRingRecordNil = {
    RingRecord0: function() {
        return _indexJs.ringRecordNil;
    }
};
var commutativeRingRecordCons = function(dictIsSymbol) {
    var ringRecordCons = _indexJs.ringRecordCons(dictIsSymbol)();
    return function() {
        return function(dictCommutativeRingRecord) {
            var ringRecordCons1 = ringRecordCons(dictCommutativeRingRecord.RingRecord0());
            return function(dictCommutativeRing) {
                var ringRecordCons2 = ringRecordCons1(dictCommutativeRing.Ring0());
                return {
                    RingRecord0: function() {
                        return ringRecordCons2;
                    }
                };
            };
        };
    };
};
var commutativeRingRecord = function() {
    return function(dictCommutativeRingRecord) {
        var ringRecord1 = ringRecord(dictCommutativeRingRecord.RingRecord0());
        return {
            Ring0: function() {
                return ringRecord1;
            }
        };
    };
};
var commutativeRingProxy = {
    Ring0: function() {
        return _indexJs.ringProxy;
    }
};
var commutativeRingNumber = {
    Ring0: function() {
        return _indexJs.ringNumber;
    }
};
var commutativeRingInt = {
    Ring0: function() {
        return _indexJs.ringInt;
    }
};
var commutativeRingFn = function(dictCommutativeRing) {
    var ringFn = _indexJs.ringFn(dictCommutativeRing.Ring0());
    return {
        Ring0: function() {
            return ringFn;
        }
    };
};

},{"../Data.Ring/index.js":"hWPc6","../Data.Semiring/index.js":"1k57z","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hWPc6":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "add", ()=>(0, _indexJs.add));
parcelHelpers.export(exports, "mul", ()=>(0, _indexJs.mul));
parcelHelpers.export(exports, "one", ()=>(0, _indexJs.one));
parcelHelpers.export(exports, "zero", ()=>(0, _indexJs.zero));
parcelHelpers.export(exports, "sub", ()=>sub);
parcelHelpers.export(exports, "negate", ()=>negate);
parcelHelpers.export(exports, "subRecord", ()=>subRecord);
parcelHelpers.export(exports, "ringInt", ()=>ringInt);
parcelHelpers.export(exports, "ringNumber", ()=>ringNumber);
parcelHelpers.export(exports, "ringUnit", ()=>ringUnit);
parcelHelpers.export(exports, "ringFn", ()=>ringFn);
parcelHelpers.export(exports, "ringProxy", ()=>ringProxy);
parcelHelpers.export(exports, "ringRecord", ()=>ringRecord);
parcelHelpers.export(exports, "ringRecordNil", ()=>ringRecordNil);
parcelHelpers.export(exports, "ringRecordCons", ()=>ringRecordCons);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Semiring/index.js");
var _indexJs1 = require("../Data.Symbol/index.js");
var _indexJs2 = require("../Data.Unit/index.js");
var _indexJs3 = require("../Record.Unsafe/index.js");
var _indexJs4 = require("../Type.Proxy/index.js");
var semiringRecord = /* #__PURE__ */ _indexJs.semiringRecord();
var subRecord = function(dict) {
    return dict.subRecord;
};
var sub = function(dict) {
    return dict.sub;
};
var ringUnit = {
    sub: function(v) {
        return function(v1) {
            return _indexJs2.unit;
        };
    },
    Semiring0: function() {
        return _indexJs.semiringUnit;
    }
};
var ringRecordNil = {
    subRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return {};
            };
        };
    },
    SemiringRecord0: function() {
        return _indexJs.semiringRecordNil;
    }
};
var ringRecordCons = function(dictIsSymbol) {
    var reflectSymbol = _indexJs1.reflectSymbol(dictIsSymbol);
    var semiringRecordCons = _indexJs.semiringRecordCons(dictIsSymbol)();
    return function() {
        return function(dictRingRecord) {
            var subRecord1 = subRecord(dictRingRecord);
            var semiringRecordCons1 = semiringRecordCons(dictRingRecord.SemiringRecord0());
            return function(dictRing) {
                var sub1 = sub(dictRing);
                var semiringRecordCons2 = semiringRecordCons1(dictRing.Semiring0());
                return {
                    subRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var tail = subRecord1(_indexJs4["Proxy"].value)(ra)(rb);
                                var key = reflectSymbol(_indexJs4["Proxy"].value);
                                var insert = _indexJs3.unsafeSet(key);
                                var get = _indexJs3.unsafeGet(key);
                                return insert(sub1(get(ra))(get(rb)))(tail);
                            };
                        };
                    },
                    SemiringRecord0: function() {
                        return semiringRecordCons2;
                    }
                };
            };
        };
    };
};
var ringRecord = function() {
    return function(dictRingRecord) {
        var semiringRecord1 = semiringRecord(dictRingRecord.SemiringRecord0());
        return {
            sub: subRecord(dictRingRecord)(_indexJs4["Proxy"].value),
            Semiring0: function() {
                return semiringRecord1;
            }
        };
    };
};
var ringProxy = {
    sub: function(v) {
        return function(v1) {
            return _indexJs4["Proxy"].value;
        };
    },
    Semiring0: function() {
        return _indexJs.semiringProxy;
    }
};
var ringNumber = {
    sub: _foreignJs.numSub,
    Semiring0: function() {
        return _indexJs.semiringNumber;
    }
};
var ringInt = {
    sub: _foreignJs.intSub,
    Semiring0: function() {
        return _indexJs.semiringInt;
    }
};
var ringFn = function(dictRing) {
    var sub1 = sub(dictRing);
    var semiringFn = _indexJs.semiringFn(dictRing.Semiring0());
    return {
        sub: function(f) {
            return function(g) {
                return function(x) {
                    return sub1(f(x))(g(x));
                };
            };
        },
        Semiring0: function() {
            return semiringFn;
        }
    };
};
var negate = function(dictRing) {
    var sub1 = sub(dictRing);
    var zero = _indexJs.zero(dictRing.Semiring0());
    return function(a) {
        return sub1(zero)(a);
    };
};

},{"./foreign.js":"fGPE7","../Data.Semiring/index.js":"1k57z","../Data.Symbol/index.js":"dzOca","../Data.Unit/index.js":"fuCRN","../Record.Unsafe/index.js":"8BjRm","../Type.Proxy/index.js":"293bb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fGPE7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "intSub", ()=>intSub);
parcelHelpers.export(exports, "numSub", ()=>numSub);
const intSub = function(x) {
    return function(y) {
        /* jshint bitwise: false */ return x - y | 0;
    };
};
const numSub = function(n1) {
    return function(n2) {
        return n1 - n2;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1k57z":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "add", ()=>add);
parcelHelpers.export(exports, "zero", ()=>zero);
parcelHelpers.export(exports, "mul", ()=>mul);
parcelHelpers.export(exports, "one", ()=>one);
parcelHelpers.export(exports, "addRecord", ()=>addRecord);
parcelHelpers.export(exports, "mulRecord", ()=>mulRecord);
parcelHelpers.export(exports, "oneRecord", ()=>oneRecord);
parcelHelpers.export(exports, "zeroRecord", ()=>zeroRecord);
parcelHelpers.export(exports, "semiringInt", ()=>semiringInt);
parcelHelpers.export(exports, "semiringNumber", ()=>semiringNumber);
parcelHelpers.export(exports, "semiringFn", ()=>semiringFn);
parcelHelpers.export(exports, "semiringUnit", ()=>semiringUnit);
parcelHelpers.export(exports, "semiringProxy", ()=>semiringProxy);
parcelHelpers.export(exports, "semiringRecord", ()=>semiringRecord);
parcelHelpers.export(exports, "semiringRecordNil", ()=>semiringRecordNil);
parcelHelpers.export(exports, "semiringRecordCons", ()=>semiringRecordCons);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Symbol/index.js");
var _indexJs1 = require("../Data.Unit/index.js");
var _indexJs2 = require("../Record.Unsafe/index.js");
var _indexJs3 = require("../Type.Proxy/index.js");
var zeroRecord = function(dict) {
    return dict.zeroRecord;
};
var zero = function(dict) {
    return dict.zero;
};
var semiringUnit = {
    add: function(v) {
        return function(v1) {
            return _indexJs1.unit;
        };
    },
    zero: _indexJs1.unit,
    mul: function(v) {
        return function(v1) {
            return _indexJs1.unit;
        };
    },
    one: _indexJs1.unit
};
var semiringRecordNil = {
    addRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return {};
            };
        };
    },
    mulRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return {};
            };
        };
    },
    oneRecord: function(v) {
        return function(v1) {
            return {};
        };
    },
    zeroRecord: function(v) {
        return function(v1) {
            return {};
        };
    }
};
var semiringProxy = /* #__PURE__ */ function() {
    return {
        add: function(v) {
            return function(v1) {
                return _indexJs3["Proxy"].value;
            };
        },
        mul: function(v) {
            return function(v1) {
                return _indexJs3["Proxy"].value;
            };
        },
        one: _indexJs3["Proxy"].value,
        zero: _indexJs3["Proxy"].value
    };
}();
var semiringNumber = {
    add: _foreignJs.numAdd,
    zero: 0.0,
    mul: _foreignJs.numMul,
    one: 1.0
};
var semiringInt = {
    add: _foreignJs.intAdd,
    zero: 0,
    mul: _foreignJs.intMul,
    one: 1
};
var oneRecord = function(dict) {
    return dict.oneRecord;
};
var one = function(dict) {
    return dict.one;
};
var mulRecord = function(dict) {
    return dict.mulRecord;
};
var mul = function(dict) {
    return dict.mul;
};
var addRecord = function(dict) {
    return dict.addRecord;
};
var semiringRecord = function() {
    return function(dictSemiringRecord) {
        return {
            add: addRecord(dictSemiringRecord)(_indexJs3["Proxy"].value),
            mul: mulRecord(dictSemiringRecord)(_indexJs3["Proxy"].value),
            one: oneRecord(dictSemiringRecord)(_indexJs3["Proxy"].value)(_indexJs3["Proxy"].value),
            zero: zeroRecord(dictSemiringRecord)(_indexJs3["Proxy"].value)(_indexJs3["Proxy"].value)
        };
    };
};
var add = function(dict) {
    return dict.add;
};
var semiringFn = function(dictSemiring) {
    var add1 = add(dictSemiring);
    var zero1 = zero(dictSemiring);
    var mul1 = mul(dictSemiring);
    var one1 = one(dictSemiring);
    return {
        add: function(f) {
            return function(g) {
                return function(x) {
                    return add1(f(x))(g(x));
                };
            };
        },
        zero: function(v) {
            return zero1;
        },
        mul: function(f) {
            return function(g) {
                return function(x) {
                    return mul1(f(x))(g(x));
                };
            };
        },
        one: function(v) {
            return one1;
        }
    };
};
var semiringRecordCons = function(dictIsSymbol) {
    var reflectSymbol = _indexJs.reflectSymbol(dictIsSymbol);
    return function() {
        return function(dictSemiringRecord) {
            var addRecord1 = addRecord(dictSemiringRecord);
            var mulRecord1 = mulRecord(dictSemiringRecord);
            var oneRecord1 = oneRecord(dictSemiringRecord);
            var zeroRecord1 = zeroRecord(dictSemiringRecord);
            return function(dictSemiring) {
                var add1 = add(dictSemiring);
                var mul1 = mul(dictSemiring);
                var one1 = one(dictSemiring);
                var zero1 = zero(dictSemiring);
                return {
                    addRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var tail = addRecord1(_indexJs3["Proxy"].value)(ra)(rb);
                                var key = reflectSymbol(_indexJs3["Proxy"].value);
                                var insert = _indexJs2.unsafeSet(key);
                                var get = _indexJs2.unsafeGet(key);
                                return insert(add1(get(ra))(get(rb)))(tail);
                            };
                        };
                    },
                    mulRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var tail = mulRecord1(_indexJs3["Proxy"].value)(ra)(rb);
                                var key = reflectSymbol(_indexJs3["Proxy"].value);
                                var insert = _indexJs2.unsafeSet(key);
                                var get = _indexJs2.unsafeGet(key);
                                return insert(mul1(get(ra))(get(rb)))(tail);
                            };
                        };
                    },
                    oneRecord: function(v) {
                        return function(v1) {
                            var tail = oneRecord1(_indexJs3["Proxy"].value)(_indexJs3["Proxy"].value);
                            var key = reflectSymbol(_indexJs3["Proxy"].value);
                            var insert = _indexJs2.unsafeSet(key);
                            return insert(one1)(tail);
                        };
                    },
                    zeroRecord: function(v) {
                        return function(v1) {
                            var tail = zeroRecord1(_indexJs3["Proxy"].value)(_indexJs3["Proxy"].value);
                            var key = reflectSymbol(_indexJs3["Proxy"].value);
                            var insert = _indexJs2.unsafeSet(key);
                            return insert(zero1)(tail);
                        };
                    }
                };
            };
        };
    };
};

},{"./foreign.js":"2cgDS","../Data.Symbol/index.js":"dzOca","../Data.Unit/index.js":"fuCRN","../Record.Unsafe/index.js":"8BjRm","../Type.Proxy/index.js":"293bb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2cgDS":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "intAdd", ()=>intAdd);
parcelHelpers.export(exports, "intMul", ()=>intMul);
parcelHelpers.export(exports, "numAdd", ()=>numAdd);
parcelHelpers.export(exports, "numMul", ()=>numMul);
const intAdd = function(x) {
    return function(y) {
        /* jshint bitwise: false */ return x + y | 0;
    };
};
const intMul = function(x) {
    return function(y) {
        /* jshint bitwise: false */ return x * y | 0;
    };
};
const numAdd = function(n1) {
    return function(n2) {
        return n1 + n2;
    };
};
const numMul = function(n1) {
    return function(n2) {
        return n1 * n2;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dzOca":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "reflectSymbol", ()=>reflectSymbol);
parcelHelpers.export(exports, "reifySymbol", ()=>reifySymbol);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Type.Proxy/index.js");
var reifySymbol = function(s) {
    return function(f) {
        return _foreignJs.unsafeCoerce(function(dictIsSymbol) {
            return f(dictIsSymbol);
        })({
            reflectSymbol: function(v) {
                return s;
            }
        })(_indexJs["Proxy"].value);
    };
};
var reflectSymbol = function(dict) {
    return dict.reflectSymbol;
};

},{"./foreign.js":"N9jqC","../Type.Proxy/index.js":"293bb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"N9jqC":[function(require,module,exports,__globalThis) {
// module Data.Symbol
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafeCoerce", ()=>unsafeCoerce);
const unsafeCoerce = function(arg) {
    return arg;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8BjRm":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafeHas", ()=>(0, _foreignJs.unsafeHas));
parcelHelpers.export(exports, "unsafeGet", ()=>(0, _foreignJs.unsafeGet));
parcelHelpers.export(exports, "unsafeSet", ()=>(0, _foreignJs.unsafeSet));
parcelHelpers.export(exports, "unsafeDelete", ()=>(0, _foreignJs.unsafeDelete));
var _foreignJs = require("./foreign.js");

},{"./foreign.js":"8drk5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8drk5":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafeHas", ()=>unsafeHas);
parcelHelpers.export(exports, "unsafeGet", ()=>unsafeGet);
parcelHelpers.export(exports, "unsafeSet", ()=>unsafeSet);
parcelHelpers.export(exports, "unsafeDelete", ()=>unsafeDelete);
const unsafeHas = function(label) {
    return function(rec) {
        return ({}).hasOwnProperty.call(rec, label);
    };
};
const unsafeGet = function(label) {
    return function(rec) {
        return rec[label];
    };
};
const unsafeSet = function(label) {
    return function(value) {
        return function(rec) {
            var copy = {};
            for(var key in rec)if (({}).hasOwnProperty.call(rec, key)) copy[key] = rec[key];
            copy[label] = value;
            return copy;
        };
    };
};
const unsafeDelete = function(label) {
    return function(rec) {
        var copy = {};
        for(var key in rec)if (key !== label && ({}).hasOwnProperty.call(rec, key)) copy[key] = rec[key];
        return copy;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j3zMn":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "eq", ()=>eq);
parcelHelpers.export(exports, "notEq", ()=>notEq);
parcelHelpers.export(exports, "eq1", ()=>eq1);
parcelHelpers.export(exports, "notEq1", ()=>notEq1);
parcelHelpers.export(exports, "eqRecord", ()=>eqRecord);
parcelHelpers.export(exports, "eqBoolean", ()=>eqBoolean);
parcelHelpers.export(exports, "eqInt", ()=>eqInt);
parcelHelpers.export(exports, "eqNumber", ()=>eqNumber);
parcelHelpers.export(exports, "eqChar", ()=>eqChar);
parcelHelpers.export(exports, "eqString", ()=>eqString);
parcelHelpers.export(exports, "eqUnit", ()=>eqUnit);
parcelHelpers.export(exports, "eqVoid", ()=>eqVoid);
parcelHelpers.export(exports, "eqArray", ()=>eqArray);
parcelHelpers.export(exports, "eqRec", ()=>eqRec);
parcelHelpers.export(exports, "eqProxy", ()=>eqProxy);
parcelHelpers.export(exports, "eq1Array", ()=>eq1Array);
parcelHelpers.export(exports, "eqRowNil", ()=>eqRowNil);
parcelHelpers.export(exports, "eqRowCons", ()=>eqRowCons);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Symbol/index.js");
var _indexJs1 = require("../Record.Unsafe/index.js");
var _indexJs2 = require("../Type.Proxy/index.js");
var eqVoid = {
    eq: function(v) {
        return function(v1) {
            return true;
        };
    }
};
var eqUnit = {
    eq: function(v) {
        return function(v1) {
            return true;
        };
    }
};
var eqString = {
    eq: _foreignJs.eqStringImpl
};
var eqRowNil = {
    eqRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return true;
            };
        };
    }
};
var eqRecord = function(dict) {
    return dict.eqRecord;
};
var eqRec = function() {
    return function(dictEqRecord) {
        return {
            eq: eqRecord(dictEqRecord)(_indexJs2["Proxy"].value)
        };
    };
};
var eqProxy = {
    eq: function(v) {
        return function(v1) {
            return true;
        };
    }
};
var eqNumber = {
    eq: _foreignJs.eqNumberImpl
};
var eqInt = {
    eq: _foreignJs.eqIntImpl
};
var eqChar = {
    eq: _foreignJs.eqCharImpl
};
var eqBoolean = {
    eq: _foreignJs.eqBooleanImpl
};
var eq1 = function(dict) {
    return dict.eq1;
};
var eq = function(dict) {
    return dict.eq;
};
var eq2 = /* #__PURE__ */ eq(eqBoolean);
var eqArray = function(dictEq) {
    return {
        eq: _foreignJs.eqArrayImpl(eq(dictEq))
    };
};
var eq1Array = {
    eq1: function(dictEq) {
        return eq(eqArray(dictEq));
    }
};
var eqRowCons = function(dictEqRecord) {
    var eqRecord1 = eqRecord(dictEqRecord);
    return function() {
        return function(dictIsSymbol) {
            var reflectSymbol = _indexJs.reflectSymbol(dictIsSymbol);
            return function(dictEq) {
                var eq3 = eq(dictEq);
                return {
                    eqRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var tail = eqRecord1(_indexJs2["Proxy"].value)(ra)(rb);
                                var key = reflectSymbol(_indexJs2["Proxy"].value);
                                var get = _indexJs1.unsafeGet(key);
                                return eq3(get(ra))(get(rb)) && tail;
                            };
                        };
                    }
                };
            };
        };
    };
};
var notEq = function(dictEq) {
    var eq3 = eq(dictEq);
    return function(x) {
        return function(y) {
            return eq2(eq3(x)(y))(false);
        };
    };
};
var notEq1 = function(dictEq1) {
    var eq11 = eq1(dictEq1);
    return function(dictEq) {
        var eq12 = eq11(dictEq);
        return function(x) {
            return function(y) {
                return eq2(eq12(x)(y))(false);
            };
        };
    };
};

},{"./foreign.js":"doU4l","../Data.Symbol/index.js":"dzOca","../Record.Unsafe/index.js":"8BjRm","../Type.Proxy/index.js":"293bb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"doU4l":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "eqBooleanImpl", ()=>eqBooleanImpl);
parcelHelpers.export(exports, "eqIntImpl", ()=>eqIntImpl);
parcelHelpers.export(exports, "eqNumberImpl", ()=>eqNumberImpl);
parcelHelpers.export(exports, "eqCharImpl", ()=>eqCharImpl);
parcelHelpers.export(exports, "eqStringImpl", ()=>eqStringImpl);
parcelHelpers.export(exports, "eqArrayImpl", ()=>eqArrayImpl);
var refEq = function(r1) {
    return function(r2) {
        return r1 === r2;
    };
};
const eqBooleanImpl = refEq;
const eqIntImpl = refEq;
const eqNumberImpl = refEq;
const eqCharImpl = refEq;
const eqStringImpl = refEq;
const eqArrayImpl = function(f) {
    return function(xs) {
        return function(ys) {
            if (xs.length !== ys.length) return false;
            for(var i = 0; i < xs.length; i++){
                if (!f(xs[i])(ys[i])) return false;
            }
            return true;
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2NvYx":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LT", ()=>LT);
parcelHelpers.export(exports, "GT", ()=>GT);
parcelHelpers.export(exports, "EQ", ()=>EQ);
parcelHelpers.export(exports, "invert", ()=>invert);
parcelHelpers.export(exports, "eqOrdering", ()=>eqOrdering);
parcelHelpers.export(exports, "semigroupOrdering", ()=>semigroupOrdering);
parcelHelpers.export(exports, "showOrdering", ()=>showOrdering);
var LT = /* #__PURE__ */ function() {
    function LT() {}
    LT.value = new LT();
    return LT;
}();
var GT = /* #__PURE__ */ function() {
    function GT() {}
    GT.value = new GT();
    return GT;
}();
var EQ = /* #__PURE__ */ function() {
    function EQ() {}
    EQ.value = new EQ();
    return EQ;
}();
var showOrdering = {
    show: function(v) {
        if (v instanceof LT) return "LT";
        if (v instanceof GT) return "GT";
        if (v instanceof EQ) return "EQ";
        throw new Error("Failed pattern match at Data.Ordering (line 26, column 1 - line 29, column 17): " + [
            v.constructor.name
        ]);
    }
};
var semigroupOrdering = {
    append: function(v) {
        return function(v1) {
            if (v instanceof LT) return LT.value;
            if (v instanceof GT) return GT.value;
            if (v instanceof EQ) return v1;
            throw new Error("Failed pattern match at Data.Ordering (line 21, column 1 - line 24, column 18): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    }
};
var invert = function(v) {
    if (v instanceof GT) return LT.value;
    if (v instanceof EQ) return EQ.value;
    if (v instanceof LT) return GT.value;
    throw new Error("Failed pattern match at Data.Ordering (line 33, column 1 - line 33, column 31): " + [
        v.constructor.name
    ]);
};
var eqOrdering = {
    eq: function(v) {
        return function(v1) {
            if (v instanceof LT && v1 instanceof LT) return true;
            if (v instanceof GT && v1 instanceof GT) return true;
            if (v instanceof EQ && v1 instanceof EQ) return true;
            return false;
        };
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"evJTv":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "append", ()=>append);
parcelHelpers.export(exports, "appendRecord", ()=>appendRecord);
parcelHelpers.export(exports, "semigroupString", ()=>semigroupString);
parcelHelpers.export(exports, "semigroupUnit", ()=>semigroupUnit);
parcelHelpers.export(exports, "semigroupVoid", ()=>semigroupVoid);
parcelHelpers.export(exports, "semigroupFn", ()=>semigroupFn);
parcelHelpers.export(exports, "semigroupArray", ()=>semigroupArray);
parcelHelpers.export(exports, "semigroupProxy", ()=>semigroupProxy);
parcelHelpers.export(exports, "semigroupRecord", ()=>semigroupRecord);
parcelHelpers.export(exports, "semigroupRecordNil", ()=>semigroupRecordNil);
parcelHelpers.export(exports, "semigroupRecordCons", ()=>semigroupRecordCons);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Symbol/index.js");
var _indexJs1 = require("../Data.Unit/index.js");
var _indexJs2 = require("../Data.Void/index.js");
var _indexJs3 = require("../Record.Unsafe/index.js");
var _indexJs4 = require("../Type.Proxy/index.js");
var semigroupVoid = {
    append: function(v) {
        return _indexJs2.absurd;
    }
};
var semigroupUnit = {
    append: function(v) {
        return function(v1) {
            return _indexJs1.unit;
        };
    }
};
var semigroupString = {
    append: _foreignJs.concatString
};
var semigroupRecordNil = {
    appendRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return {};
            };
        };
    }
};
var semigroupProxy = {
    append: function(v) {
        return function(v1) {
            return _indexJs4["Proxy"].value;
        };
    }
};
var semigroupArray = {
    append: _foreignJs.concatArray
};
var appendRecord = function(dict) {
    return dict.appendRecord;
};
var semigroupRecord = function() {
    return function(dictSemigroupRecord) {
        return {
            append: appendRecord(dictSemigroupRecord)(_indexJs4["Proxy"].value)
        };
    };
};
var append = function(dict) {
    return dict.append;
};
var semigroupFn = function(dictSemigroup) {
    var append1 = append(dictSemigroup);
    return {
        append: function(f) {
            return function(g) {
                return function(x) {
                    return append1(f(x))(g(x));
                };
            };
        }
    };
};
var semigroupRecordCons = function(dictIsSymbol) {
    var reflectSymbol = _indexJs.reflectSymbol(dictIsSymbol);
    return function() {
        return function(dictSemigroupRecord) {
            var appendRecord1 = appendRecord(dictSemigroupRecord);
            return function(dictSemigroup) {
                var append1 = append(dictSemigroup);
                return {
                    appendRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var tail = appendRecord1(_indexJs4["Proxy"].value)(ra)(rb);
                                var key = reflectSymbol(_indexJs4["Proxy"].value);
                                var insert = _indexJs3.unsafeSet(key);
                                var get = _indexJs3.unsafeGet(key);
                                return insert(append1(get(ra))(get(rb)))(tail);
                            };
                        };
                    }
                };
            };
        };
    };
};

},{"./foreign.js":"86wkS","../Data.Symbol/index.js":"dzOca","../Data.Unit/index.js":"fuCRN","../Data.Void/index.js":"2M7Ux","../Record.Unsafe/index.js":"8BjRm","../Type.Proxy/index.js":"293bb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"86wkS":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "concatString", ()=>concatString);
parcelHelpers.export(exports, "concatArray", ()=>concatArray);
const concatString = function(s1) {
    return function(s2) {
        return s1 + s2;
    };
};
const concatArray = function(xs) {
    return function(ys) {
        if (xs.length === 0) return ys;
        if (ys.length === 0) return xs;
        return xs.concat(ys);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2M7Ux":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "absurd", ()=>absurd);
var Void = function(x) {
    return x;
};
var absurd = function(a) {
    var spin = function($copy_v) {
        var $tco_result;
        function $tco_loop(v) {
            $copy_v = v;
            return;
        }
        while(true)$tco_result = $tco_loop($copy_v);
        return $tco_result;
    };
    return spin(a);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bePe1":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "a", ()=>a);
parcelHelpers.export(exports, "a_", ()=>a_);
parcelHelpers.export(exports, "a$prime", ()=>a$prime);
parcelHelpers.export(exports, "_a$prime", ()=>_a$prime);
parcelHelpers.export(exports, "abbr", ()=>abbr);
parcelHelpers.export(exports, "abbr_", ()=>abbr_);
parcelHelpers.export(exports, "abbr$prime", ()=>abbr$prime);
parcelHelpers.export(exports, "_abbr$prime", ()=>_abbr$prime);
parcelHelpers.export(exports, "address", ()=>address);
parcelHelpers.export(exports, "address_", ()=>address_);
parcelHelpers.export(exports, "address$prime", ()=>address$prime);
parcelHelpers.export(exports, "_address$prime", ()=>_address$prime);
parcelHelpers.export(exports, "area", ()=>area);
parcelHelpers.export(exports, "area$prime", ()=>area$prime);
parcelHelpers.export(exports, "_area$prime", ()=>_area$prime);
parcelHelpers.export(exports, "article", ()=>article);
parcelHelpers.export(exports, "article_", ()=>article_);
parcelHelpers.export(exports, "article$prime", ()=>article$prime);
parcelHelpers.export(exports, "_article$prime", ()=>_article$prime);
parcelHelpers.export(exports, "aside", ()=>aside);
parcelHelpers.export(exports, "aside_", ()=>aside_);
parcelHelpers.export(exports, "aside$prime", ()=>aside$prime);
parcelHelpers.export(exports, "_aside$prime", ()=>_aside$prime);
parcelHelpers.export(exports, "audio", ()=>audio);
parcelHelpers.export(exports, "audio_", ()=>audio_);
parcelHelpers.export(exports, "audio$prime", ()=>audio$prime);
parcelHelpers.export(exports, "_audio$prime", ()=>_audio$prime);
parcelHelpers.export(exports, "b", ()=>b);
parcelHelpers.export(exports, "b_", ()=>b_);
parcelHelpers.export(exports, "b$prime", ()=>b$prime);
parcelHelpers.export(exports, "_b$prime", ()=>_b$prime);
parcelHelpers.export(exports, "base", ()=>base);
parcelHelpers.export(exports, "base$prime", ()=>base$prime);
parcelHelpers.export(exports, "_base$prime", ()=>_base$prime);
parcelHelpers.export(exports, "bdi", ()=>bdi);
parcelHelpers.export(exports, "bdi_", ()=>bdi_);
parcelHelpers.export(exports, "bdi$prime", ()=>bdi$prime);
parcelHelpers.export(exports, "_bdi$prime", ()=>_bdi$prime);
parcelHelpers.export(exports, "bdo", ()=>bdo);
parcelHelpers.export(exports, "bdo_", ()=>bdo_);
parcelHelpers.export(exports, "bdo$prime", ()=>bdo$prime);
parcelHelpers.export(exports, "_bdo$prime", ()=>_bdo$prime);
parcelHelpers.export(exports, "blockquote", ()=>blockquote);
parcelHelpers.export(exports, "blockquote_", ()=>blockquote_);
parcelHelpers.export(exports, "blockquote$prime", ()=>blockquote$prime);
parcelHelpers.export(exports, "_blockquote$prime", ()=>_blockquote$prime);
parcelHelpers.export(exports, "body", ()=>body);
parcelHelpers.export(exports, "body_", ()=>body_);
parcelHelpers.export(exports, "body$prime", ()=>body$prime);
parcelHelpers.export(exports, "_body$prime", ()=>_body$prime);
parcelHelpers.export(exports, "br", ()=>br);
parcelHelpers.export(exports, "br$prime", ()=>br$prime);
parcelHelpers.export(exports, "_br$prime", ()=>_br$prime);
parcelHelpers.export(exports, "button", ()=>button);
parcelHelpers.export(exports, "button_", ()=>button_);
parcelHelpers.export(exports, "button$prime", ()=>button$prime);
parcelHelpers.export(exports, "_button$prime", ()=>_button$prime);
parcelHelpers.export(exports, "canvas", ()=>canvas);
parcelHelpers.export(exports, "canvas_", ()=>canvas_);
parcelHelpers.export(exports, "canvas$prime", ()=>canvas$prime);
parcelHelpers.export(exports, "_canvas$prime", ()=>_canvas$prime);
parcelHelpers.export(exports, "caption", ()=>caption);
parcelHelpers.export(exports, "caption_", ()=>caption_);
parcelHelpers.export(exports, "caption$prime", ()=>caption$prime);
parcelHelpers.export(exports, "_caption$prime", ()=>_caption$prime);
parcelHelpers.export(exports, "cite", ()=>cite);
parcelHelpers.export(exports, "cite_", ()=>cite_);
parcelHelpers.export(exports, "cite$prime", ()=>cite$prime);
parcelHelpers.export(exports, "_cite$prime", ()=>_cite$prime);
parcelHelpers.export(exports, "code", ()=>code);
parcelHelpers.export(exports, "code_", ()=>code_);
parcelHelpers.export(exports, "code$prime", ()=>code$prime);
parcelHelpers.export(exports, "_code$prime", ()=>_code$prime);
parcelHelpers.export(exports, "col", ()=>col);
parcelHelpers.export(exports, "col$prime", ()=>col$prime);
parcelHelpers.export(exports, "_col$prime", ()=>_col$prime);
parcelHelpers.export(exports, "colgroup", ()=>colgroup);
parcelHelpers.export(exports, "colgroup_", ()=>colgroup_);
parcelHelpers.export(exports, "colgroup$prime", ()=>colgroup$prime);
parcelHelpers.export(exports, "_colgroup$prime", ()=>_colgroup$prime);
parcelHelpers.export(exports, "data$prime", ()=>data$prime);
parcelHelpers.export(exports, "data_", ()=>data_);
parcelHelpers.export(exports, "data$prime$prime", ()=>data$prime$prime);
parcelHelpers.export(exports, "_data$prime", ()=>_data$prime);
parcelHelpers.export(exports, "datalist", ()=>datalist);
parcelHelpers.export(exports, "datalist_", ()=>datalist_);
parcelHelpers.export(exports, "datalist$prime", ()=>datalist$prime);
parcelHelpers.export(exports, "_datalist$prime", ()=>_datalist$prime);
parcelHelpers.export(exports, "dd", ()=>dd);
parcelHelpers.export(exports, "dd_", ()=>dd_);
parcelHelpers.export(exports, "dd$prime", ()=>dd$prime);
parcelHelpers.export(exports, "_dd$prime", ()=>_dd$prime);
parcelHelpers.export(exports, "del", ()=>del);
parcelHelpers.export(exports, "del_", ()=>del_);
parcelHelpers.export(exports, "del$prime", ()=>del$prime);
parcelHelpers.export(exports, "_del$prime", ()=>_del$prime);
parcelHelpers.export(exports, "details", ()=>details);
parcelHelpers.export(exports, "details_", ()=>details_);
parcelHelpers.export(exports, "details$prime", ()=>details$prime);
parcelHelpers.export(exports, "_details$prime", ()=>_details$prime);
parcelHelpers.export(exports, "dfn", ()=>dfn);
parcelHelpers.export(exports, "dfn_", ()=>dfn_);
parcelHelpers.export(exports, "dfn$prime", ()=>dfn$prime);
parcelHelpers.export(exports, "_dfn$prime", ()=>_dfn$prime);
parcelHelpers.export(exports, "dialog", ()=>dialog);
parcelHelpers.export(exports, "dialog_", ()=>dialog_);
parcelHelpers.export(exports, "dialog$prime", ()=>dialog$prime);
parcelHelpers.export(exports, "_dialog$prime", ()=>_dialog$prime);
parcelHelpers.export(exports, "div", ()=>div);
parcelHelpers.export(exports, "div_", ()=>div_);
parcelHelpers.export(exports, "div$prime", ()=>div$prime);
parcelHelpers.export(exports, "_div$prime", ()=>_div$prime);
parcelHelpers.export(exports, "dl", ()=>dl);
parcelHelpers.export(exports, "dl_", ()=>dl_);
parcelHelpers.export(exports, "dl$prime", ()=>dl$prime);
parcelHelpers.export(exports, "_dl$prime", ()=>_dl$prime);
parcelHelpers.export(exports, "dt", ()=>dt);
parcelHelpers.export(exports, "dt_", ()=>dt_);
parcelHelpers.export(exports, "dt$prime", ()=>dt$prime);
parcelHelpers.export(exports, "_dt$prime", ()=>_dt$prime);
parcelHelpers.export(exports, "em", ()=>em);
parcelHelpers.export(exports, "em_", ()=>em_);
parcelHelpers.export(exports, "em$prime", ()=>em$prime);
parcelHelpers.export(exports, "_em$prime", ()=>_em$prime);
parcelHelpers.export(exports, "embed", ()=>embed);
parcelHelpers.export(exports, "embed$prime", ()=>embed$prime);
parcelHelpers.export(exports, "_embed$prime", ()=>_embed$prime);
parcelHelpers.export(exports, "fieldset", ()=>fieldset);
parcelHelpers.export(exports, "fieldset_", ()=>fieldset_);
parcelHelpers.export(exports, "fieldset$prime", ()=>fieldset$prime);
parcelHelpers.export(exports, "_fieldset$prime", ()=>_fieldset$prime);
parcelHelpers.export(exports, "figcaption", ()=>figcaption);
parcelHelpers.export(exports, "figcaption_", ()=>figcaption_);
parcelHelpers.export(exports, "figcaption$prime", ()=>figcaption$prime);
parcelHelpers.export(exports, "_figcaption$prime", ()=>_figcaption$prime);
parcelHelpers.export(exports, "figure", ()=>figure);
parcelHelpers.export(exports, "figure_", ()=>figure_);
parcelHelpers.export(exports, "figure$prime", ()=>figure$prime);
parcelHelpers.export(exports, "_figure$prime", ()=>_figure$prime);
parcelHelpers.export(exports, "footer", ()=>footer);
parcelHelpers.export(exports, "footer_", ()=>footer_);
parcelHelpers.export(exports, "footer$prime", ()=>footer$prime);
parcelHelpers.export(exports, "_footer$prime", ()=>_footer$prime);
parcelHelpers.export(exports, "form", ()=>form);
parcelHelpers.export(exports, "form_", ()=>form_);
parcelHelpers.export(exports, "form$prime", ()=>form$prime);
parcelHelpers.export(exports, "_form$prime", ()=>_form$prime);
parcelHelpers.export(exports, "h1", ()=>h1);
parcelHelpers.export(exports, "h1_", ()=>h1_);
parcelHelpers.export(exports, "h1$prime", ()=>h1$prime);
parcelHelpers.export(exports, "_h1$prime", ()=>_h1$prime);
parcelHelpers.export(exports, "h2", ()=>h2);
parcelHelpers.export(exports, "h2_", ()=>h2_);
parcelHelpers.export(exports, "h2$prime", ()=>h2$prime);
parcelHelpers.export(exports, "_h2$prime", ()=>_h2$prime);
parcelHelpers.export(exports, "h3", ()=>h3);
parcelHelpers.export(exports, "h3_", ()=>h3_);
parcelHelpers.export(exports, "h3$prime", ()=>h3$prime);
parcelHelpers.export(exports, "_h3$prime", ()=>_h3$prime);
parcelHelpers.export(exports, "h4", ()=>h4);
parcelHelpers.export(exports, "h4_", ()=>h4_);
parcelHelpers.export(exports, "h4$prime", ()=>h4$prime);
parcelHelpers.export(exports, "_h4$prime", ()=>_h4$prime);
parcelHelpers.export(exports, "h5", ()=>h5);
parcelHelpers.export(exports, "h5_", ()=>h5_);
parcelHelpers.export(exports, "h5$prime", ()=>h5$prime);
parcelHelpers.export(exports, "_h5$prime", ()=>_h5$prime);
parcelHelpers.export(exports, "h6", ()=>h6);
parcelHelpers.export(exports, "h6_", ()=>h6_);
parcelHelpers.export(exports, "h6$prime", ()=>h6$prime);
parcelHelpers.export(exports, "_h6$prime", ()=>_h6$prime);
parcelHelpers.export(exports, "head", ()=>head);
parcelHelpers.export(exports, "head_", ()=>head_);
parcelHelpers.export(exports, "head$prime", ()=>head$prime);
parcelHelpers.export(exports, "_head$prime", ()=>_head$prime);
parcelHelpers.export(exports, "header", ()=>header);
parcelHelpers.export(exports, "header_", ()=>header_);
parcelHelpers.export(exports, "header$prime", ()=>header$prime);
parcelHelpers.export(exports, "_header$prime", ()=>_header$prime);
parcelHelpers.export(exports, "hgroup", ()=>hgroup);
parcelHelpers.export(exports, "hgroup_", ()=>hgroup_);
parcelHelpers.export(exports, "hgroup$prime", ()=>hgroup$prime);
parcelHelpers.export(exports, "_hgroup$prime", ()=>_hgroup$prime);
parcelHelpers.export(exports, "hr", ()=>hr);
parcelHelpers.export(exports, "hr$prime", ()=>hr$prime);
parcelHelpers.export(exports, "_hr$prime", ()=>_hr$prime);
parcelHelpers.export(exports, "html", ()=>html);
parcelHelpers.export(exports, "html_", ()=>html_);
parcelHelpers.export(exports, "html$prime", ()=>html$prime);
parcelHelpers.export(exports, "_html$prime", ()=>_html$prime);
parcelHelpers.export(exports, "i", ()=>i);
parcelHelpers.export(exports, "i_", ()=>i_);
parcelHelpers.export(exports, "i$prime", ()=>i$prime);
parcelHelpers.export(exports, "_i$prime", ()=>_i$prime);
parcelHelpers.export(exports, "iframe", ()=>iframe);
parcelHelpers.export(exports, "iframe_", ()=>iframe_);
parcelHelpers.export(exports, "iframe$prime", ()=>iframe$prime);
parcelHelpers.export(exports, "_iframe$prime", ()=>_iframe$prime);
parcelHelpers.export(exports, "img", ()=>img);
parcelHelpers.export(exports, "img$prime", ()=>img$prime);
parcelHelpers.export(exports, "_img$prime", ()=>_img$prime);
parcelHelpers.export(exports, "input", ()=>input);
parcelHelpers.export(exports, "input$prime", ()=>input$prime);
parcelHelpers.export(exports, "_input$prime", ()=>_input$prime);
parcelHelpers.export(exports, "ins", ()=>ins);
parcelHelpers.export(exports, "ins_", ()=>ins_);
parcelHelpers.export(exports, "ins$prime", ()=>ins$prime);
parcelHelpers.export(exports, "_ins$prime", ()=>_ins$prime);
parcelHelpers.export(exports, "kbd", ()=>kbd);
parcelHelpers.export(exports, "kbd_", ()=>kbd_);
parcelHelpers.export(exports, "kbd$prime", ()=>kbd$prime);
parcelHelpers.export(exports, "_kbd$prime", ()=>_kbd$prime);
parcelHelpers.export(exports, "keygen", ()=>keygen);
parcelHelpers.export(exports, "keygen_", ()=>keygen_);
parcelHelpers.export(exports, "keygen$prime", ()=>keygen$prime);
parcelHelpers.export(exports, "_keygen$prime", ()=>_keygen$prime);
parcelHelpers.export(exports, "label", ()=>label);
parcelHelpers.export(exports, "label_", ()=>label_);
parcelHelpers.export(exports, "label$prime", ()=>label$prime);
parcelHelpers.export(exports, "_label$prime", ()=>_label$prime);
parcelHelpers.export(exports, "legend", ()=>legend);
parcelHelpers.export(exports, "legend_", ()=>legend_);
parcelHelpers.export(exports, "legend$prime", ()=>legend$prime);
parcelHelpers.export(exports, "_legend$prime", ()=>_legend$prime);
parcelHelpers.export(exports, "li", ()=>li);
parcelHelpers.export(exports, "li_", ()=>li_);
parcelHelpers.export(exports, "li$prime", ()=>li$prime);
parcelHelpers.export(exports, "_li$prime", ()=>_li$prime);
parcelHelpers.export(exports, "link", ()=>link);
parcelHelpers.export(exports, "link$prime", ()=>link$prime);
parcelHelpers.export(exports, "_link$prime", ()=>_link$prime);
parcelHelpers.export(exports, "main", ()=>main);
parcelHelpers.export(exports, "main_", ()=>main_);
parcelHelpers.export(exports, "main$prime", ()=>main$prime);
parcelHelpers.export(exports, "_main$prime", ()=>_main$prime);
parcelHelpers.export(exports, "map", ()=>map);
parcelHelpers.export(exports, "map_", ()=>map_);
parcelHelpers.export(exports, "map$prime", ()=>map$prime);
parcelHelpers.export(exports, "_map$prime", ()=>_map$prime);
parcelHelpers.export(exports, "mark", ()=>mark);
parcelHelpers.export(exports, "mark_", ()=>mark_);
parcelHelpers.export(exports, "mark$prime", ()=>mark$prime);
parcelHelpers.export(exports, "_mark$prime", ()=>_mark$prime);
parcelHelpers.export(exports, "math", ()=>math);
parcelHelpers.export(exports, "math_", ()=>math_);
parcelHelpers.export(exports, "math$prime", ()=>math$prime);
parcelHelpers.export(exports, "_math$prime", ()=>_math$prime);
parcelHelpers.export(exports, "menu", ()=>menu);
parcelHelpers.export(exports, "menu_", ()=>menu_);
parcelHelpers.export(exports, "menu$prime", ()=>menu$prime);
parcelHelpers.export(exports, "_menu$prime", ()=>_menu$prime);
parcelHelpers.export(exports, "menuitem", ()=>menuitem);
parcelHelpers.export(exports, "menuitem_", ()=>menuitem_);
parcelHelpers.export(exports, "menuitem$prime", ()=>menuitem$prime);
parcelHelpers.export(exports, "_menuitem$prime", ()=>_menuitem$prime);
parcelHelpers.export(exports, "meta", ()=>meta);
parcelHelpers.export(exports, "meta$prime", ()=>meta$prime);
parcelHelpers.export(exports, "_meta$prime", ()=>_meta$prime);
parcelHelpers.export(exports, "meter", ()=>meter);
parcelHelpers.export(exports, "meter_", ()=>meter_);
parcelHelpers.export(exports, "meter$prime", ()=>meter$prime);
parcelHelpers.export(exports, "_meter$prime", ()=>_meter$prime);
parcelHelpers.export(exports, "nav", ()=>nav);
parcelHelpers.export(exports, "nav_", ()=>nav_);
parcelHelpers.export(exports, "nav$prime", ()=>nav$prime);
parcelHelpers.export(exports, "_nav$prime", ()=>_nav$prime);
parcelHelpers.export(exports, "noscript", ()=>noscript);
parcelHelpers.export(exports, "noscript_", ()=>noscript_);
parcelHelpers.export(exports, "noscript$prime", ()=>noscript$prime);
parcelHelpers.export(exports, "_noscript$prime", ()=>_noscript$prime);
parcelHelpers.export(exports, "object", ()=>object);
parcelHelpers.export(exports, "object_", ()=>object_);
parcelHelpers.export(exports, "object$prime", ()=>object$prime);
parcelHelpers.export(exports, "_object$prime", ()=>_object$prime);
parcelHelpers.export(exports, "ol", ()=>ol);
parcelHelpers.export(exports, "ol_", ()=>ol_);
parcelHelpers.export(exports, "ol$prime", ()=>ol$prime);
parcelHelpers.export(exports, "_ol$prime", ()=>_ol$prime);
parcelHelpers.export(exports, "optgroup", ()=>optgroup);
parcelHelpers.export(exports, "optgroup_", ()=>optgroup_);
parcelHelpers.export(exports, "optgroup$prime", ()=>optgroup$prime);
parcelHelpers.export(exports, "_optgroup$prime", ()=>_optgroup$prime);
parcelHelpers.export(exports, "option", ()=>option);
parcelHelpers.export(exports, "option_", ()=>option_);
parcelHelpers.export(exports, "option$prime", ()=>option$prime);
parcelHelpers.export(exports, "_option$prime", ()=>_option$prime);
parcelHelpers.export(exports, "output", ()=>output);
parcelHelpers.export(exports, "output_", ()=>output_);
parcelHelpers.export(exports, "output$prime", ()=>output$prime);
parcelHelpers.export(exports, "_output$prime", ()=>_output$prime);
parcelHelpers.export(exports, "p", ()=>p);
parcelHelpers.export(exports, "p_", ()=>p_);
parcelHelpers.export(exports, "p$prime", ()=>p$prime);
parcelHelpers.export(exports, "_p$prime", ()=>_p$prime);
parcelHelpers.export(exports, "param", ()=>param);
parcelHelpers.export(exports, "param$prime", ()=>param$prime);
parcelHelpers.export(exports, "_param$prime", ()=>_param$prime);
parcelHelpers.export(exports, "picture", ()=>picture);
parcelHelpers.export(exports, "picture_", ()=>picture_);
parcelHelpers.export(exports, "picture$prime", ()=>picture$prime);
parcelHelpers.export(exports, "_picture$prime", ()=>_picture$prime);
parcelHelpers.export(exports, "pre", ()=>pre);
parcelHelpers.export(exports, "pre_", ()=>pre_);
parcelHelpers.export(exports, "pre$prime", ()=>pre$prime);
parcelHelpers.export(exports, "_pre$prime", ()=>_pre$prime);
parcelHelpers.export(exports, "progress", ()=>progress);
parcelHelpers.export(exports, "progress_", ()=>progress_);
parcelHelpers.export(exports, "progress$prime", ()=>progress$prime);
parcelHelpers.export(exports, "_progress$prime", ()=>_progress$prime);
parcelHelpers.export(exports, "q", ()=>q);
parcelHelpers.export(exports, "q_", ()=>q_);
parcelHelpers.export(exports, "q$prime", ()=>q$prime);
parcelHelpers.export(exports, "_q$prime", ()=>_q$prime);
parcelHelpers.export(exports, "rb", ()=>rb);
parcelHelpers.export(exports, "rb_", ()=>rb_);
parcelHelpers.export(exports, "rb$prime", ()=>rb$prime);
parcelHelpers.export(exports, "_rb$prime", ()=>_rb$prime);
parcelHelpers.export(exports, "rp", ()=>rp);
parcelHelpers.export(exports, "rp_", ()=>rp_);
parcelHelpers.export(exports, "rp$prime", ()=>rp$prime);
parcelHelpers.export(exports, "_rp$prime", ()=>_rp$prime);
parcelHelpers.export(exports, "rt", ()=>rt);
parcelHelpers.export(exports, "rt_", ()=>rt_);
parcelHelpers.export(exports, "rt$prime", ()=>rt$prime);
parcelHelpers.export(exports, "_rt$prime", ()=>_rt$prime);
parcelHelpers.export(exports, "rtc", ()=>rtc);
parcelHelpers.export(exports, "rtc_", ()=>rtc_);
parcelHelpers.export(exports, "rtc$prime", ()=>rtc$prime);
parcelHelpers.export(exports, "_rtc$prime", ()=>_rtc$prime);
parcelHelpers.export(exports, "ruby", ()=>ruby);
parcelHelpers.export(exports, "ruby_", ()=>ruby_);
parcelHelpers.export(exports, "ruby$prime", ()=>ruby$prime);
parcelHelpers.export(exports, "_ruby$prime", ()=>_ruby$prime);
parcelHelpers.export(exports, "s", ()=>s);
parcelHelpers.export(exports, "s_", ()=>s_);
parcelHelpers.export(exports, "s$prime", ()=>s$prime);
parcelHelpers.export(exports, "_s$prime", ()=>_s$prime);
parcelHelpers.export(exports, "samp", ()=>samp);
parcelHelpers.export(exports, "samp_", ()=>samp_);
parcelHelpers.export(exports, "samp$prime", ()=>samp$prime);
parcelHelpers.export(exports, "_samp$prime", ()=>_samp$prime);
parcelHelpers.export(exports, "script", ()=>script);
parcelHelpers.export(exports, "script_", ()=>script_);
parcelHelpers.export(exports, "script$prime", ()=>script$prime);
parcelHelpers.export(exports, "_script$prime", ()=>_script$prime);
parcelHelpers.export(exports, "section", ()=>section);
parcelHelpers.export(exports, "section_", ()=>section_);
parcelHelpers.export(exports, "section$prime", ()=>section$prime);
parcelHelpers.export(exports, "_section$prime", ()=>_section$prime);
parcelHelpers.export(exports, "select", ()=>select);
parcelHelpers.export(exports, "select_", ()=>select_);
parcelHelpers.export(exports, "select$prime", ()=>select$prime);
parcelHelpers.export(exports, "_select$prime", ()=>_select$prime);
parcelHelpers.export(exports, "slot", ()=>slot);
parcelHelpers.export(exports, "slot_", ()=>slot_);
parcelHelpers.export(exports, "slot$prime", ()=>slot$prime);
parcelHelpers.export(exports, "_slot$prime", ()=>_slot$prime);
parcelHelpers.export(exports, "small", ()=>small);
parcelHelpers.export(exports, "small_", ()=>small_);
parcelHelpers.export(exports, "small$prime", ()=>small$prime);
parcelHelpers.export(exports, "_small$prime", ()=>_small$prime);
parcelHelpers.export(exports, "source", ()=>source);
parcelHelpers.export(exports, "source$prime", ()=>source$prime);
parcelHelpers.export(exports, "_source$prime", ()=>_source$prime);
parcelHelpers.export(exports, "span", ()=>span);
parcelHelpers.export(exports, "span_", ()=>span_);
parcelHelpers.export(exports, "span$prime", ()=>span$prime);
parcelHelpers.export(exports, "_span$prime", ()=>_span$prime);
parcelHelpers.export(exports, "strong", ()=>strong);
parcelHelpers.export(exports, "strong_", ()=>strong_);
parcelHelpers.export(exports, "strong$prime", ()=>strong$prime);
parcelHelpers.export(exports, "_strong$prime", ()=>_strong$prime);
parcelHelpers.export(exports, "style", ()=>style);
parcelHelpers.export(exports, "style_", ()=>style_);
parcelHelpers.export(exports, "style$prime", ()=>style$prime);
parcelHelpers.export(exports, "_style$prime", ()=>_style$prime);
parcelHelpers.export(exports, "sub", ()=>sub);
parcelHelpers.export(exports, "sub_", ()=>sub_);
parcelHelpers.export(exports, "sub$prime", ()=>sub$prime);
parcelHelpers.export(exports, "_sub$prime", ()=>_sub$prime);
parcelHelpers.export(exports, "summary", ()=>summary);
parcelHelpers.export(exports, "summary_", ()=>summary_);
parcelHelpers.export(exports, "summary$prime", ()=>summary$prime);
parcelHelpers.export(exports, "_summary$prime", ()=>_summary$prime);
parcelHelpers.export(exports, "sup", ()=>sup);
parcelHelpers.export(exports, "sup_", ()=>sup_);
parcelHelpers.export(exports, "sup$prime", ()=>sup$prime);
parcelHelpers.export(exports, "_sup$prime", ()=>_sup$prime);
parcelHelpers.export(exports, "table", ()=>table);
parcelHelpers.export(exports, "table_", ()=>table_);
parcelHelpers.export(exports, "table$prime", ()=>table$prime);
parcelHelpers.export(exports, "_table$prime", ()=>_table$prime);
parcelHelpers.export(exports, "tbody", ()=>tbody);
parcelHelpers.export(exports, "tbody_", ()=>tbody_);
parcelHelpers.export(exports, "tbody$prime", ()=>tbody$prime);
parcelHelpers.export(exports, "_tbody$prime", ()=>_tbody$prime);
parcelHelpers.export(exports, "td", ()=>td);
parcelHelpers.export(exports, "td_", ()=>td_);
parcelHelpers.export(exports, "td$prime", ()=>td$prime);
parcelHelpers.export(exports, "_td$prime", ()=>_td$prime);
parcelHelpers.export(exports, "template", ()=>template);
parcelHelpers.export(exports, "template_", ()=>template_);
parcelHelpers.export(exports, "template$prime", ()=>template$prime);
parcelHelpers.export(exports, "_template$prime", ()=>_template$prime);
parcelHelpers.export(exports, "textarea", ()=>textarea);
parcelHelpers.export(exports, "textarea_", ()=>textarea_);
parcelHelpers.export(exports, "textarea$prime", ()=>textarea$prime);
parcelHelpers.export(exports, "_textarea$prime", ()=>_textarea$prime);
parcelHelpers.export(exports, "tfoot", ()=>tfoot);
parcelHelpers.export(exports, "tfoot_", ()=>tfoot_);
parcelHelpers.export(exports, "tfoot$prime", ()=>tfoot$prime);
parcelHelpers.export(exports, "_tfoot$prime", ()=>_tfoot$prime);
parcelHelpers.export(exports, "th", ()=>th);
parcelHelpers.export(exports, "th_", ()=>th_);
parcelHelpers.export(exports, "th$prime", ()=>th$prime);
parcelHelpers.export(exports, "_th$prime", ()=>_th$prime);
parcelHelpers.export(exports, "thead", ()=>thead);
parcelHelpers.export(exports, "thead_", ()=>thead_);
parcelHelpers.export(exports, "thead$prime", ()=>thead$prime);
parcelHelpers.export(exports, "_thead$prime", ()=>_thead$prime);
parcelHelpers.export(exports, "time", ()=>time);
parcelHelpers.export(exports, "time_", ()=>time_);
parcelHelpers.export(exports, "time$prime", ()=>time$prime);
parcelHelpers.export(exports, "_time$prime", ()=>_time$prime);
parcelHelpers.export(exports, "title", ()=>title);
parcelHelpers.export(exports, "title_", ()=>title_);
parcelHelpers.export(exports, "title$prime", ()=>title$prime);
parcelHelpers.export(exports, "_title$prime", ()=>_title$prime);
parcelHelpers.export(exports, "tr", ()=>tr);
parcelHelpers.export(exports, "tr_", ()=>tr_);
parcelHelpers.export(exports, "tr$prime", ()=>tr$prime);
parcelHelpers.export(exports, "_tr$prime", ()=>_tr$prime);
parcelHelpers.export(exports, "track", ()=>track);
parcelHelpers.export(exports, "track$prime", ()=>track$prime);
parcelHelpers.export(exports, "_track$prime", ()=>_track$prime);
parcelHelpers.export(exports, "u", ()=>u);
parcelHelpers.export(exports, "u_", ()=>u_);
parcelHelpers.export(exports, "u$prime", ()=>u$prime);
parcelHelpers.export(exports, "_u$prime", ()=>_u$prime);
parcelHelpers.export(exports, "ul", ()=>ul);
parcelHelpers.export(exports, "ul_", ()=>ul_);
parcelHelpers.export(exports, "ul$prime", ()=>ul$prime);
parcelHelpers.export(exports, "_ul$prime", ()=>_ul$prime);
parcelHelpers.export(exports, "var", ()=>$$var);
parcelHelpers.export(exports, "var_", ()=>var_);
parcelHelpers.export(exports, "var$prime", ()=>var$prime);
parcelHelpers.export(exports, "_var$prime", ()=>_var$prime);
parcelHelpers.export(exports, "video", ()=>video);
parcelHelpers.export(exports, "video_", ()=>video_);
parcelHelpers.export(exports, "video$prime", ()=>video$prime);
parcelHelpers.export(exports, "_video$prime", ()=>_video$prime);
parcelHelpers.export(exports, "wbr", ()=>wbr);
parcelHelpers.export(exports, "wbr$prime", ()=>wbr$prime);
parcelHelpers.export(exports, "_wbr$prime", ()=>_wbr$prime);
var _indexJs = require("../Effect.Unsafe/index.js");
var _indexJs1 = require("../React.Basic/index.js");
var _indexJs2 = require("../React.Basic.DOM.Internal/index.js");
var _wbr$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("wbr"));
var wbr$prime = function() {
    return _wbr$prime;
};
var wbr$prime1 = /* #__PURE__ */ wbr$prime();
var wbr = function() {
    return _indexJs1.element(wbr$prime1);
};
var _video$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("video"));
var video$prime = function() {
    return _video$prime;
};
var video$prime1 = /* #__PURE__ */ video$prime();
var video = function() {
    return _indexJs1.element(video$prime1);
};
var video1 = /* #__PURE__ */ video();
var video_ = function(children) {
    return video1({
        children: children
    });
};
var _var$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("var"));
var var$prime = function() {
    return _var$prime;
};
var var$prime1 = /* #__PURE__ */ var$prime();
var $$var = function() {
    return _indexJs1.element(var$prime1);
};
var var1 = /* #__PURE__ */ $$var();
var var_ = function(children) {
    return var1({
        children: children
    });
};
var _ul$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("ul"));
var ul$prime = function() {
    return _ul$prime;
};
var ul$prime1 = /* #__PURE__ */ ul$prime();
var ul = function() {
    return _indexJs1.element(ul$prime1);
};
var ul1 = /* #__PURE__ */ ul();
var ul_ = function(children) {
    return ul1({
        children: children
    });
};
var _u$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("u"));
var u$prime = function() {
    return _u$prime;
};
var u$prime1 = /* #__PURE__ */ u$prime();
var u = function() {
    return _indexJs1.element(u$prime1);
};
var u1 = /* #__PURE__ */ u();
var u_ = function(children) {
    return u1({
        children: children
    });
};
var _track$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("track"));
var track$prime = function() {
    return _track$prime;
};
var track$prime1 = /* #__PURE__ */ track$prime();
var track = function() {
    return _indexJs1.element(track$prime1);
};
var _tr$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("tr"));
var tr$prime = function() {
    return _tr$prime;
};
var tr$prime1 = /* #__PURE__ */ tr$prime();
var tr = function() {
    return _indexJs1.element(tr$prime1);
};
var tr1 = /* #__PURE__ */ tr();
var tr_ = function(children) {
    return tr1({
        children: children
    });
};
var _title$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("title"));
var title$prime = function() {
    return _title$prime;
};
var title$prime1 = /* #__PURE__ */ title$prime();
var title = function() {
    return _indexJs1.element(title$prime1);
};
var title1 = /* #__PURE__ */ title();
var title_ = function(children) {
    return title1({
        children: children
    });
};
var _time$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("time"));
var time$prime = function() {
    return _time$prime;
};
var time$prime1 = /* #__PURE__ */ time$prime();
var time = function() {
    return _indexJs1.element(time$prime1);
};
var time1 = /* #__PURE__ */ time();
var time_ = function(children) {
    return time1({
        children: children
    });
};
var _thead$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("thead"));
var thead$prime = function() {
    return _thead$prime;
};
var thead$prime1 = /* #__PURE__ */ thead$prime();
var thead = function() {
    return _indexJs1.element(thead$prime1);
};
var thead1 = /* #__PURE__ */ thead();
var thead_ = function(children) {
    return thead1({
        children: children
    });
};
var _th$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("th"));
var th$prime = function() {
    return _th$prime;
};
var th$prime1 = /* #__PURE__ */ th$prime();
var th = function() {
    return _indexJs1.element(th$prime1);
};
var th1 = /* #__PURE__ */ th();
var th_ = function(children) {
    return th1({
        children: children
    });
};
var _tfoot$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("tfoot"));
var tfoot$prime = function() {
    return _tfoot$prime;
};
var tfoot$prime1 = /* #__PURE__ */ tfoot$prime();
var tfoot = function() {
    return _indexJs1.element(tfoot$prime1);
};
var tfoot1 = /* #__PURE__ */ tfoot();
var tfoot_ = function(children) {
    return tfoot1({
        children: children
    });
};
var _textarea$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("textarea"));
var textarea$prime = function() {
    return _textarea$prime;
};
var textarea$prime1 = /* #__PURE__ */ textarea$prime();
var textarea = function() {
    return _indexJs1.element(textarea$prime1);
};
var textarea1 = /* #__PURE__ */ textarea();
var textarea_ = function(children) {
    return textarea1({
        children: children
    });
};
var _template$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("template"));
var template$prime = function() {
    return _template$prime;
};
var template$prime1 = /* #__PURE__ */ template$prime();
var template = function() {
    return _indexJs1.element(template$prime1);
};
var template1 = /* #__PURE__ */ template();
var template_ = function(children) {
    return template1({
        children: children
    });
};
var _td$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("td"));
var td$prime = function() {
    return _td$prime;
};
var td$prime1 = /* #__PURE__ */ td$prime();
var td = function() {
    return _indexJs1.element(td$prime1);
};
var td1 = /* #__PURE__ */ td();
var td_ = function(children) {
    return td1({
        children: children
    });
};
var _tbody$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("tbody"));
var tbody$prime = function() {
    return _tbody$prime;
};
var tbody$prime1 = /* #__PURE__ */ tbody$prime();
var tbody = function() {
    return _indexJs1.element(tbody$prime1);
};
var tbody1 = /* #__PURE__ */ tbody();
var tbody_ = function(children) {
    return tbody1({
        children: children
    });
};
var _table$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("table"));
var table$prime = function() {
    return _table$prime;
};
var table$prime1 = /* #__PURE__ */ table$prime();
var table = function() {
    return _indexJs1.element(table$prime1);
};
var table1 = /* #__PURE__ */ table();
var table_ = function(children) {
    return table1({
        children: children
    });
};
var _sup$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("sup"));
var sup$prime = function() {
    return _sup$prime;
};
var sup$prime1 = /* #__PURE__ */ sup$prime();
var sup = function() {
    return _indexJs1.element(sup$prime1);
};
var sup1 = /* #__PURE__ */ sup();
var sup_ = function(children) {
    return sup1({
        children: children
    });
};
var _summary$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("summary"));
var summary$prime = function() {
    return _summary$prime;
};
var summary$prime1 = /* #__PURE__ */ summary$prime();
var summary = function() {
    return _indexJs1.element(summary$prime1);
};
var summary1 = /* #__PURE__ */ summary();
var summary_ = function(children) {
    return summary1({
        children: children
    });
};
var _sub$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("sub"));
var sub$prime = function() {
    return _sub$prime;
};
var sub$prime1 = /* #__PURE__ */ sub$prime();
var sub = function() {
    return _indexJs1.element(sub$prime1);
};
var sub1 = /* #__PURE__ */ sub();
var sub_ = function(children) {
    return sub1({
        children: children
    });
};
var _style$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("style"));
var style$prime = function() {
    return _style$prime;
};
var style$prime1 = /* #__PURE__ */ style$prime();
var style = function() {
    return _indexJs1.element(style$prime1);
};
var style1 = /* #__PURE__ */ style();
var style_ = function(children) {
    return style1({
        children: children
    });
};
var _strong$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("strong"));
var strong$prime = function() {
    return _strong$prime;
};
var strong$prime1 = /* #__PURE__ */ strong$prime();
var strong = function() {
    return _indexJs1.element(strong$prime1);
};
var strong1 = /* #__PURE__ */ strong();
var strong_ = function(children) {
    return strong1({
        children: children
    });
};
var _span$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("span"));
var span$prime = function() {
    return _span$prime;
};
var span$prime1 = /* #__PURE__ */ span$prime();
var span = function() {
    return _indexJs1.element(span$prime1);
};
var span1 = /* #__PURE__ */ span();
var span_ = function(children) {
    return span1({
        children: children
    });
};
var _source$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("source"));
var source$prime = function() {
    return _source$prime;
};
var source$prime1 = /* #__PURE__ */ source$prime();
var source = function() {
    return _indexJs1.element(source$prime1);
};
var _small$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("small"));
var small$prime = function() {
    return _small$prime;
};
var small$prime1 = /* #__PURE__ */ small$prime();
var small = function() {
    return _indexJs1.element(small$prime1);
};
var small1 = /* #__PURE__ */ small();
var small_ = function(children) {
    return small1({
        children: children
    });
};
var _slot$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("slot"));
var slot$prime = function() {
    return _slot$prime;
};
var slot$prime1 = /* #__PURE__ */ slot$prime();
var slot = function() {
    return _indexJs1.element(slot$prime1);
};
var slot1 = /* #__PURE__ */ slot();
var slot_ = function(children) {
    return slot1({
        children: children
    });
};
var _select$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("select"));
var select$prime = function() {
    return _select$prime;
};
var select$prime1 = /* #__PURE__ */ select$prime();
var select = function() {
    return _indexJs1.element(select$prime1);
};
var select1 = /* #__PURE__ */ select();
var select_ = function(children) {
    return select1({
        children: children
    });
};
var _section$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("section"));
var section$prime = function() {
    return _section$prime;
};
var section$prime1 = /* #__PURE__ */ section$prime();
var section = function() {
    return _indexJs1.element(section$prime1);
};
var section1 = /* #__PURE__ */ section();
var section_ = function(children) {
    return section1({
        children: children
    });
};
var _script$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("script"));
var script$prime = function() {
    return _script$prime;
};
var script$prime1 = /* #__PURE__ */ script$prime();
var script = function() {
    return _indexJs1.element(script$prime1);
};
var script1 = /* #__PURE__ */ script();
var script_ = function(children) {
    return script1({
        children: children
    });
};
var _samp$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("samp"));
var samp$prime = function() {
    return _samp$prime;
};
var samp$prime1 = /* #__PURE__ */ samp$prime();
var samp = function() {
    return _indexJs1.element(samp$prime1);
};
var samp1 = /* #__PURE__ */ samp();
var samp_ = function(children) {
    return samp1({
        children: children
    });
};
var _s$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("s"));
var s$prime = function() {
    return _s$prime;
};
var s$prime1 = /* #__PURE__ */ s$prime();
var s = function() {
    return _indexJs1.element(s$prime1);
};
var s1 = /* #__PURE__ */ s();
var s_ = function(children) {
    return s1({
        children: children
    });
};
var _ruby$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("ruby"));
var ruby$prime = function() {
    return _ruby$prime;
};
var ruby$prime1 = /* #__PURE__ */ ruby$prime();
var ruby = function() {
    return _indexJs1.element(ruby$prime1);
};
var ruby1 = /* #__PURE__ */ ruby();
var ruby_ = function(children) {
    return ruby1({
        children: children
    });
};
var _rtc$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("rtc"));
var rtc$prime = function() {
    return _rtc$prime;
};
var rtc$prime1 = /* #__PURE__ */ rtc$prime();
var rtc = function() {
    return _indexJs1.element(rtc$prime1);
};
var rtc1 = /* #__PURE__ */ rtc();
var rtc_ = function(children) {
    return rtc1({
        children: children
    });
};
var _rt$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("rt"));
var rt$prime = function() {
    return _rt$prime;
};
var rt$prime1 = /* #__PURE__ */ rt$prime();
var rt = function() {
    return _indexJs1.element(rt$prime1);
};
var rt1 = /* #__PURE__ */ rt();
var rt_ = function(children) {
    return rt1({
        children: children
    });
};
var _rp$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("rp"));
var rp$prime = function() {
    return _rp$prime;
};
var rp$prime1 = /* #__PURE__ */ rp$prime();
var rp = function() {
    return _indexJs1.element(rp$prime1);
};
var rp1 = /* #__PURE__ */ rp();
var rp_ = function(children) {
    return rp1({
        children: children
    });
};
var _rb$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("rb"));
var rb$prime = function() {
    return _rb$prime;
};
var rb$prime1 = /* #__PURE__ */ rb$prime();
var rb = function() {
    return _indexJs1.element(rb$prime1);
};
var rb1 = /* #__PURE__ */ rb();
var rb_ = function(children) {
    return rb1({
        children: children
    });
};
var _q$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("q"));
var q$prime = function() {
    return _q$prime;
};
var q$prime1 = /* #__PURE__ */ q$prime();
var q = function() {
    return _indexJs1.element(q$prime1);
};
var q1 = /* #__PURE__ */ q();
var q_ = function(children) {
    return q1({
        children: children
    });
};
var _progress$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("progress"));
var progress$prime = function() {
    return _progress$prime;
};
var progress$prime1 = /* #__PURE__ */ progress$prime();
var progress = function() {
    return _indexJs1.element(progress$prime1);
};
var progress1 = /* #__PURE__ */ progress();
var progress_ = function(children) {
    return progress1({
        children: children
    });
};
var _pre$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("pre"));
var pre$prime = function() {
    return _pre$prime;
};
var pre$prime1 = /* #__PURE__ */ pre$prime();
var pre = function() {
    return _indexJs1.element(pre$prime1);
};
var pre1 = /* #__PURE__ */ pre();
var pre_ = function(children) {
    return pre1({
        children: children
    });
};
var _picture$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("picture"));
var picture$prime = function() {
    return _picture$prime;
};
var picture$prime1 = /* #__PURE__ */ picture$prime();
var picture = function() {
    return _indexJs1.element(picture$prime1);
};
var picture1 = /* #__PURE__ */ picture();
var picture_ = function(children) {
    return picture1({
        children: children
    });
};
var _param$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("param"));
var param$prime = function() {
    return _param$prime;
};
var param$prime1 = /* #__PURE__ */ param$prime();
var param = function() {
    return _indexJs1.element(param$prime1);
};
var _p$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("p"));
var p$prime = function() {
    return _p$prime;
};
var p$prime1 = /* #__PURE__ */ p$prime();
var p = function() {
    return _indexJs1.element(p$prime1);
};
var p1 = /* #__PURE__ */ p();
var p_ = function(children) {
    return p1({
        children: children
    });
};
var _output$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("output"));
var output$prime = function() {
    return _output$prime;
};
var output$prime1 = /* #__PURE__ */ output$prime();
var output = function() {
    return _indexJs1.element(output$prime1);
};
var output1 = /* #__PURE__ */ output();
var output_ = function(children) {
    return output1({
        children: children
    });
};
var _option$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("option"));
var option$prime = function() {
    return _option$prime;
};
var option$prime1 = /* #__PURE__ */ option$prime();
var option = function() {
    return _indexJs1.element(option$prime1);
};
var option1 = /* #__PURE__ */ option();
var option_ = function(children) {
    return option1({
        children: children
    });
};
var _optgroup$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("optgroup"));
var optgroup$prime = function() {
    return _optgroup$prime;
};
var optgroup$prime1 = /* #__PURE__ */ optgroup$prime();
var optgroup = function() {
    return _indexJs1.element(optgroup$prime1);
};
var optgroup1 = /* #__PURE__ */ optgroup();
var optgroup_ = function(children) {
    return optgroup1({
        children: children
    });
};
var _ol$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("ol"));
var ol$prime = function() {
    return _ol$prime;
};
var ol$prime1 = /* #__PURE__ */ ol$prime();
var ol = function() {
    return _indexJs1.element(ol$prime1);
};
var ol1 = /* #__PURE__ */ ol();
var ol_ = function(children) {
    return ol1({
        children: children
    });
};
var _object$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("object"));
var object$prime = function() {
    return _object$prime;
};
var object$prime1 = /* #__PURE__ */ object$prime();
var object = function() {
    return _indexJs1.element(object$prime1);
};
var object1 = /* #__PURE__ */ object();
var object_ = function(children) {
    return object1({
        children: children
    });
};
var _noscript$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("noscript"));
var noscript$prime = function() {
    return _noscript$prime;
};
var noscript$prime1 = /* #__PURE__ */ noscript$prime();
var noscript = function() {
    return _indexJs1.element(noscript$prime1);
};
var noscript1 = /* #__PURE__ */ noscript();
var noscript_ = function(children) {
    return noscript1({
        children: children
    });
};
var _nav$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("nav"));
var nav$prime = function() {
    return _nav$prime;
};
var nav$prime1 = /* #__PURE__ */ nav$prime();
var nav = function() {
    return _indexJs1.element(nav$prime1);
};
var nav1 = /* #__PURE__ */ nav();
var nav_ = function(children) {
    return nav1({
        children: children
    });
};
var _meter$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("meter"));
var meter$prime = function() {
    return _meter$prime;
};
var meter$prime1 = /* #__PURE__ */ meter$prime();
var meter = function() {
    return _indexJs1.element(meter$prime1);
};
var meter1 = /* #__PURE__ */ meter();
var meter_ = function(children) {
    return meter1({
        children: children
    });
};
var _meta$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("meta"));
var meta$prime = function() {
    return _meta$prime;
};
var meta$prime1 = /* #__PURE__ */ meta$prime();
var meta = function() {
    return _indexJs1.element(meta$prime1);
};
var _menuitem$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("menuitem"));
var menuitem$prime = function() {
    return _menuitem$prime;
};
var menuitem$prime1 = /* #__PURE__ */ menuitem$prime();
var menuitem = function() {
    return _indexJs1.element(menuitem$prime1);
};
var menuitem1 = /* #__PURE__ */ menuitem();
var menuitem_ = function(children) {
    return menuitem1({
        children: children
    });
};
var _menu$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("menu"));
var menu$prime = function() {
    return _menu$prime;
};
var menu$prime1 = /* #__PURE__ */ menu$prime();
var menu = function() {
    return _indexJs1.element(menu$prime1);
};
var menu1 = /* #__PURE__ */ menu();
var menu_ = function(children) {
    return menu1({
        children: children
    });
};
var _math$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("math"));
var math$prime = function() {
    return _math$prime;
};
var math$prime1 = /* #__PURE__ */ math$prime();
var math = function() {
    return _indexJs1.element(math$prime1);
};
var math1 = /* #__PURE__ */ math();
var math_ = function(children) {
    return math1({
        children: children
    });
};
var _mark$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("mark"));
var mark$prime = function() {
    return _mark$prime;
};
var mark$prime1 = /* #__PURE__ */ mark$prime();
var mark = function() {
    return _indexJs1.element(mark$prime1);
};
var mark1 = /* #__PURE__ */ mark();
var mark_ = function(children) {
    return mark1({
        children: children
    });
};
var _map$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("map"));
var map$prime = function() {
    return _map$prime;
};
var map$prime1 = /* #__PURE__ */ map$prime();
var map = function() {
    return _indexJs1.element(map$prime1);
};
var map1 = /* #__PURE__ */ map();
var map_ = function(children) {
    return map1({
        children: children
    });
};
var _main$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("main"));
var main$prime = function() {
    return _main$prime;
};
var main$prime1 = /* #__PURE__ */ main$prime();
var main = function() {
    return _indexJs1.element(main$prime1);
};
var main1 = /* #__PURE__ */ main();
var main_ = function(children) {
    return main1({
        children: children
    });
};
var _link$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("link"));
var link$prime = function() {
    return _link$prime;
};
var link$prime1 = /* #__PURE__ */ link$prime();
var link = function() {
    return _indexJs1.element(link$prime1);
};
var _li$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("li"));
var li$prime = function() {
    return _li$prime;
};
var li$prime1 = /* #__PURE__ */ li$prime();
var li = function() {
    return _indexJs1.element(li$prime1);
};
var li1 = /* #__PURE__ */ li();
var li_ = function(children) {
    return li1({
        children: children
    });
};
var _legend$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("legend"));
var legend$prime = function() {
    return _legend$prime;
};
var legend$prime1 = /* #__PURE__ */ legend$prime();
var legend = function() {
    return _indexJs1.element(legend$prime1);
};
var legend1 = /* #__PURE__ */ legend();
var legend_ = function(children) {
    return legend1({
        children: children
    });
};
var _label$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("label"));
var label$prime = function() {
    return _label$prime;
};
var label$prime1 = /* #__PURE__ */ label$prime();
var label = function() {
    return _indexJs1.element(label$prime1);
};
var label1 = /* #__PURE__ */ label();
var label_ = function(children) {
    return label1({
        children: children
    });
};
var _keygen$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("keygen"));
var keygen$prime = function() {
    return _keygen$prime;
};
var keygen$prime1 = /* #__PURE__ */ keygen$prime();
var keygen = function() {
    return _indexJs1.element(keygen$prime1);
};
var keygen1 = /* #__PURE__ */ keygen();
var keygen_ = function(children) {
    return keygen1({
        children: children
    });
};
var _kbd$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("kbd"));
var kbd$prime = function() {
    return _kbd$prime;
};
var kbd$prime1 = /* #__PURE__ */ kbd$prime();
var kbd = function() {
    return _indexJs1.element(kbd$prime1);
};
var kbd1 = /* #__PURE__ */ kbd();
var kbd_ = function(children) {
    return kbd1({
        children: children
    });
};
var _ins$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("ins"));
var ins$prime = function() {
    return _ins$prime;
};
var ins$prime1 = /* #__PURE__ */ ins$prime();
var ins = function() {
    return _indexJs1.element(ins$prime1);
};
var ins1 = /* #__PURE__ */ ins();
var ins_ = function(children) {
    return ins1({
        children: children
    });
};
var _input$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("input"));
var input$prime = function() {
    return _input$prime;
};
var input$prime1 = /* #__PURE__ */ input$prime();
var input = function() {
    return _indexJs1.element(input$prime1);
};
var _img$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("img"));
var img$prime = function() {
    return _img$prime;
};
var img$prime1 = /* #__PURE__ */ img$prime();
var img = function() {
    return _indexJs1.element(img$prime1);
};
var _iframe$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("iframe"));
var iframe$prime = function() {
    return _iframe$prime;
};
var iframe$prime1 = /* #__PURE__ */ iframe$prime();
var iframe = function() {
    return _indexJs1.element(iframe$prime1);
};
var iframe1 = /* #__PURE__ */ iframe();
var iframe_ = function(children) {
    return iframe1({
        children: children
    });
};
var _i$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("i"));
var i$prime = function() {
    return _i$prime;
};
var i$prime1 = /* #__PURE__ */ i$prime();
var i = function() {
    return _indexJs1.element(i$prime1);
};
var i1 = /* #__PURE__ */ i();
var i_ = function(children) {
    return i1({
        children: children
    });
};
var _html$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("html"));
var html$prime = function() {
    return _html$prime;
};
var html$prime1 = /* #__PURE__ */ html$prime();
var html = function() {
    return _indexJs1.element(html$prime1);
};
var html1 = /* #__PURE__ */ html();
var html_ = function(children) {
    return html1({
        children: children
    });
};
var _hr$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("hr"));
var hr$prime = function() {
    return _hr$prime;
};
var hr$prime1 = /* #__PURE__ */ hr$prime();
var hr = function() {
    return _indexJs1.element(hr$prime1);
};
var _hgroup$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("hgroup"));
var hgroup$prime = function() {
    return _hgroup$prime;
};
var hgroup$prime1 = /* #__PURE__ */ hgroup$prime();
var hgroup = function() {
    return _indexJs1.element(hgroup$prime1);
};
var hgroup1 = /* #__PURE__ */ hgroup();
var hgroup_ = function(children) {
    return hgroup1({
        children: children
    });
};
var _header$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("header"));
var header$prime = function() {
    return _header$prime;
};
var header$prime1 = /* #__PURE__ */ header$prime();
var header = function() {
    return _indexJs1.element(header$prime1);
};
var header1 = /* #__PURE__ */ header();
var header_ = function(children) {
    return header1({
        children: children
    });
};
var _head$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("head"));
var head$prime = function() {
    return _head$prime;
};
var head$prime1 = /* #__PURE__ */ head$prime();
var head = function() {
    return _indexJs1.element(head$prime1);
};
var head1 = /* #__PURE__ */ head();
var head_ = function(children) {
    return head1({
        children: children
    });
};
var _h6$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("h6"));
var h6$prime = function() {
    return _h6$prime;
};
var h6$prime1 = /* #__PURE__ */ h6$prime();
var h6 = function() {
    return _indexJs1.element(h6$prime1);
};
var h61 = /* #__PURE__ */ h6();
var h6_ = function(children) {
    return h61({
        children: children
    });
};
var _h5$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("h5"));
var h5$prime = function() {
    return _h5$prime;
};
var h5$prime1 = /* #__PURE__ */ h5$prime();
var h5 = function() {
    return _indexJs1.element(h5$prime1);
};
var h51 = /* #__PURE__ */ h5();
var h5_ = function(children) {
    return h51({
        children: children
    });
};
var _h4$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("h4"));
var h4$prime = function() {
    return _h4$prime;
};
var h4$prime1 = /* #__PURE__ */ h4$prime();
var h4 = function() {
    return _indexJs1.element(h4$prime1);
};
var h41 = /* #__PURE__ */ h4();
var h4_ = function(children) {
    return h41({
        children: children
    });
};
var _h3$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("h3"));
var h3$prime = function() {
    return _h3$prime;
};
var h3$prime1 = /* #__PURE__ */ h3$prime();
var h3 = function() {
    return _indexJs1.element(h3$prime1);
};
var h31 = /* #__PURE__ */ h3();
var h3_ = function(children) {
    return h31({
        children: children
    });
};
var _h2$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("h2"));
var h2$prime = function() {
    return _h2$prime;
};
var h2$prime1 = /* #__PURE__ */ h2$prime();
var h2 = function() {
    return _indexJs1.element(h2$prime1);
};
var h21 = /* #__PURE__ */ h2();
var h2_ = function(children) {
    return h21({
        children: children
    });
};
var _h1$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("h1"));
var h1$prime = function() {
    return _h1$prime;
};
var h1$prime1 = /* #__PURE__ */ h1$prime();
var h1 = function() {
    return _indexJs1.element(h1$prime1);
};
var h11 = /* #__PURE__ */ h1();
var h1_ = function(children) {
    return h11({
        children: children
    });
};
var _form$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("form"));
var form$prime = function() {
    return _form$prime;
};
var form$prime1 = /* #__PURE__ */ form$prime();
var form = function() {
    return _indexJs1.element(form$prime1);
};
var form1 = /* #__PURE__ */ form();
var form_ = function(children) {
    return form1({
        children: children
    });
};
var _footer$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("footer"));
var footer$prime = function() {
    return _footer$prime;
};
var footer$prime1 = /* #__PURE__ */ footer$prime();
var footer = function() {
    return _indexJs1.element(footer$prime1);
};
var footer1 = /* #__PURE__ */ footer();
var footer_ = function(children) {
    return footer1({
        children: children
    });
};
var _figure$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("figure"));
var figure$prime = function() {
    return _figure$prime;
};
var figure$prime1 = /* #__PURE__ */ figure$prime();
var figure = function() {
    return _indexJs1.element(figure$prime1);
};
var figure1 = /* #__PURE__ */ figure();
var figure_ = function(children) {
    return figure1({
        children: children
    });
};
var _figcaption$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("figcaption"));
var figcaption$prime = function() {
    return _figcaption$prime;
};
var figcaption$prime1 = /* #__PURE__ */ figcaption$prime();
var figcaption = function() {
    return _indexJs1.element(figcaption$prime1);
};
var figcaption1 = /* #__PURE__ */ figcaption();
var figcaption_ = function(children) {
    return figcaption1({
        children: children
    });
};
var _fieldset$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("fieldset"));
var fieldset$prime = function() {
    return _fieldset$prime;
};
var fieldset$prime1 = /* #__PURE__ */ fieldset$prime();
var fieldset = function() {
    return _indexJs1.element(fieldset$prime1);
};
var fieldset1 = /* #__PURE__ */ fieldset();
var fieldset_ = function(children) {
    return fieldset1({
        children: children
    });
};
var _embed$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("embed"));
var embed$prime = function() {
    return _embed$prime;
};
var embed$prime1 = /* #__PURE__ */ embed$prime();
var embed = function() {
    return _indexJs1.element(embed$prime1);
};
var _em$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("em"));
var em$prime = function() {
    return _em$prime;
};
var em$prime1 = /* #__PURE__ */ em$prime();
var em = function() {
    return _indexJs1.element(em$prime1);
};
var em1 = /* #__PURE__ */ em();
var em_ = function(children) {
    return em1({
        children: children
    });
};
var _dt$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("dt"));
var dt$prime = function() {
    return _dt$prime;
};
var dt$prime1 = /* #__PURE__ */ dt$prime();
var dt = function() {
    return _indexJs1.element(dt$prime1);
};
var dt1 = /* #__PURE__ */ dt();
var dt_ = function(children) {
    return dt1({
        children: children
    });
};
var _dl$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("dl"));
var dl$prime = function() {
    return _dl$prime;
};
var dl$prime1 = /* #__PURE__ */ dl$prime();
var dl = function() {
    return _indexJs1.element(dl$prime1);
};
var dl1 = /* #__PURE__ */ dl();
var dl_ = function(children) {
    return dl1({
        children: children
    });
};
var _div$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("div"));
var div$prime = function() {
    return _div$prime;
};
var div$prime1 = /* #__PURE__ */ div$prime();
var div = function() {
    return _indexJs1.element(div$prime1);
};
var div1 = /* #__PURE__ */ div();
var div_ = function(children) {
    return div1({
        children: children
    });
};
var _dialog$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("dialog"));
var dialog$prime = function() {
    return _dialog$prime;
};
var dialog$prime1 = /* #__PURE__ */ dialog$prime();
var dialog = function() {
    return _indexJs1.element(dialog$prime1);
};
var dialog1 = /* #__PURE__ */ dialog();
var dialog_ = function(children) {
    return dialog1({
        children: children
    });
};
var _dfn$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("dfn"));
var dfn$prime = function() {
    return _dfn$prime;
};
var dfn$prime1 = /* #__PURE__ */ dfn$prime();
var dfn = function() {
    return _indexJs1.element(dfn$prime1);
};
var dfn1 = /* #__PURE__ */ dfn();
var dfn_ = function(children) {
    return dfn1({
        children: children
    });
};
var _details$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("details"));
var details$prime = function() {
    return _details$prime;
};
var details$prime1 = /* #__PURE__ */ details$prime();
var details = function() {
    return _indexJs1.element(details$prime1);
};
var details1 = /* #__PURE__ */ details();
var details_ = function(children) {
    return details1({
        children: children
    });
};
var _del$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("del"));
var del$prime = function() {
    return _del$prime;
};
var del$prime1 = /* #__PURE__ */ del$prime();
var del = function() {
    return _indexJs1.element(del$prime1);
};
var del1 = /* #__PURE__ */ del();
var del_ = function(children) {
    return del1({
        children: children
    });
};
var _dd$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("dd"));
var dd$prime = function() {
    return _dd$prime;
};
var dd$prime1 = /* #__PURE__ */ dd$prime();
var dd = function() {
    return _indexJs1.element(dd$prime1);
};
var dd1 = /* #__PURE__ */ dd();
var dd_ = function(children) {
    return dd1({
        children: children
    });
};
var _datalist$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("datalist"));
var datalist$prime = function() {
    return _datalist$prime;
};
var datalist$prime1 = /* #__PURE__ */ datalist$prime();
var datalist = function() {
    return _indexJs1.element(datalist$prime1);
};
var datalist1 = /* #__PURE__ */ datalist();
var datalist_ = function(children) {
    return datalist1({
        children: children
    });
};
var _data$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("data"));
var data$prime$prime = function() {
    return _data$prime;
};
var data$prime$prime1 = /* #__PURE__ */ data$prime$prime();
var data$prime = function() {
    return _indexJs1.element(data$prime$prime1);
};
var data$prime1 = /* #__PURE__ */ data$prime();
var data_ = function(children) {
    return data$prime1({
        children: children
    });
};
var _colgroup$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("colgroup"));
var colgroup$prime = function() {
    return _colgroup$prime;
};
var colgroup$prime1 = /* #__PURE__ */ colgroup$prime();
var colgroup = function() {
    return _indexJs1.element(colgroup$prime1);
};
var colgroup1 = /* #__PURE__ */ colgroup();
var colgroup_ = function(children) {
    return colgroup1({
        children: children
    });
};
var _col$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("col"));
var col$prime = function() {
    return _col$prime;
};
var col$prime1 = /* #__PURE__ */ col$prime();
var col = function() {
    return _indexJs1.element(col$prime1);
};
var _code$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("code"));
var code$prime = function() {
    return _code$prime;
};
var code$prime1 = /* #__PURE__ */ code$prime();
var code = function() {
    return _indexJs1.element(code$prime1);
};
var code1 = /* #__PURE__ */ code();
var code_ = function(children) {
    return code1({
        children: children
    });
};
var _cite$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("cite"));
var cite$prime = function() {
    return _cite$prime;
};
var cite$prime1 = /* #__PURE__ */ cite$prime();
var cite = function() {
    return _indexJs1.element(cite$prime1);
};
var cite1 = /* #__PURE__ */ cite();
var cite_ = function(children) {
    return cite1({
        children: children
    });
};
var _caption$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("caption"));
var caption$prime = function() {
    return _caption$prime;
};
var caption$prime1 = /* #__PURE__ */ caption$prime();
var caption = function() {
    return _indexJs1.element(caption$prime1);
};
var caption1 = /* #__PURE__ */ caption();
var caption_ = function(children) {
    return caption1({
        children: children
    });
};
var _canvas$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("canvas"));
var canvas$prime = function() {
    return _canvas$prime;
};
var canvas$prime1 = /* #__PURE__ */ canvas$prime();
var canvas = function() {
    return _indexJs1.element(canvas$prime1);
};
var canvas1 = /* #__PURE__ */ canvas();
var canvas_ = function(children) {
    return canvas1({
        children: children
    });
};
var _button$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("button"));
var button$prime = function() {
    return _button$prime;
};
var button$prime1 = /* #__PURE__ */ button$prime();
var button = function() {
    return _indexJs1.element(button$prime1);
};
var button1 = /* #__PURE__ */ button();
var button_ = function(children) {
    return button1({
        children: children
    });
};
var _br$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("br"));
var br$prime = function() {
    return _br$prime;
};
var br$prime1 = /* #__PURE__ */ br$prime();
var br = function() {
    return _indexJs1.element(br$prime1);
};
var _body$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("body"));
var body$prime = function() {
    return _body$prime;
};
var body$prime1 = /* #__PURE__ */ body$prime();
var body = function() {
    return _indexJs1.element(body$prime1);
};
var body1 = /* #__PURE__ */ body();
var body_ = function(children) {
    return body1({
        children: children
    });
};
var _blockquote$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("blockquote"));
var blockquote$prime = function() {
    return _blockquote$prime;
};
var blockquote$prime1 = /* #__PURE__ */ blockquote$prime();
var blockquote = function() {
    return _indexJs1.element(blockquote$prime1);
};
var blockquote1 = /* #__PURE__ */ blockquote();
var blockquote_ = function(children) {
    return blockquote1({
        children: children
    });
};
var _bdo$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("bdo"));
var bdo$prime = function() {
    return _bdo$prime;
};
var bdo$prime1 = /* #__PURE__ */ bdo$prime();
var bdo = function() {
    return _indexJs1.element(bdo$prime1);
};
var bdo1 = /* #__PURE__ */ bdo();
var bdo_ = function(children) {
    return bdo1({
        children: children
    });
};
var _bdi$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("bdi"));
var bdi$prime = function() {
    return _bdi$prime;
};
var bdi$prime1 = /* #__PURE__ */ bdi$prime();
var bdi = function() {
    return _indexJs1.element(bdi$prime1);
};
var bdi1 = /* #__PURE__ */ bdi();
var bdi_ = function(children) {
    return bdi1({
        children: children
    });
};
var _base$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("base"));
var base$prime = function() {
    return _base$prime;
};
var base$prime1 = /* #__PURE__ */ base$prime();
var base = function() {
    return _indexJs1.element(base$prime1);
};
var _b$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("b"));
var b$prime = function() {
    return _b$prime;
};
var b$prime1 = /* #__PURE__ */ b$prime();
var b = function() {
    return _indexJs1.element(b$prime1);
};
var b1 = /* #__PURE__ */ b();
var b_ = function(children) {
    return b1({
        children: children
    });
};
var _audio$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("audio"));
var audio$prime = function() {
    return _audio$prime;
};
var audio$prime1 = /* #__PURE__ */ audio$prime();
var audio = function() {
    return _indexJs1.element(audio$prime1);
};
var audio1 = /* #__PURE__ */ audio();
var audio_ = function(children) {
    return audio1({
        children: children
    });
};
var _aside$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("aside"));
var aside$prime = function() {
    return _aside$prime;
};
var aside$prime1 = /* #__PURE__ */ aside$prime();
var aside = function() {
    return _indexJs1.element(aside$prime1);
};
var aside1 = /* #__PURE__ */ aside();
var aside_ = function(children) {
    return aside1({
        children: children
    });
};
var _article$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("article"));
var article$prime = function() {
    return _article$prime;
};
var article$prime1 = /* #__PURE__ */ article$prime();
var article = function() {
    return _indexJs1.element(article$prime1);
};
var article1 = /* #__PURE__ */ article();
var article_ = function(children) {
    return article1({
        children: children
    });
};
var _area$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("area"));
var area$prime = function() {
    return _area$prime;
};
var area$prime1 = /* #__PURE__ */ area$prime();
var area = function() {
    return _indexJs1.element(area$prime1);
};
var _address$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("address"));
var address$prime = function() {
    return _address$prime;
};
var address$prime1 = /* #__PURE__ */ address$prime();
var address = function() {
    return _indexJs1.element(address$prime1);
};
var address1 = /* #__PURE__ */ address();
var address_ = function(children) {
    return address1({
        children: children
    });
};
var _abbr$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("abbr"));
var abbr$prime = function() {
    return _abbr$prime;
};
var abbr$prime1 = /* #__PURE__ */ abbr$prime();
var abbr = function() {
    return _indexJs1.element(abbr$prime1);
};
var abbr1 = /* #__PURE__ */ abbr();
var abbr_ = function(children) {
    return abbr1({
        children: children
    });
};
var _a$prime = /* #__PURE__ */ _indexJs.unsafePerformEffect(/* #__PURE__ */ _indexJs2.unsafeCreateDOMComponent("a"));
var a$prime = function() {
    return _a$prime;
};
var a$prime1 = /* #__PURE__ */ a$prime();
var a = function() {
    return _indexJs1.element(a$prime1);
};
var a1 = /* #__PURE__ */ a();
var a_ = function(children) {
    return a1({
        children: children
    });
};

},{"../Effect.Unsafe/index.js":"dmY9M","../React.Basic/index.js":"jz8Ob","../React.Basic.DOM.Internal/index.js":"avkjs","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dmY9M":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafePerformEffect", ()=>(0, _foreignJs.unsafePerformEffect));
var _foreignJs = require("./foreign.js");

},{"./foreign.js":"dtI3m","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dtI3m":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafePerformEffect", ()=>unsafePerformEffect);
const unsafePerformEffect = function(f) {
    return f();
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jz8Ob":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "empty", ()=>(0, _foreignJs.empty));
parcelHelpers.export(exports, "keyed", ()=>(0, _foreignJs.keyed));
parcelHelpers.export(exports, "fragment", ()=>(0, _foreignJs.fragment));
parcelHelpers.export(exports, "element", ()=>(0, _foreignJs.element));
parcelHelpers.export(exports, "elementKeyed", ()=>(0, _foreignJs.elementKeyed));
parcelHelpers.export(exports, "createContext", ()=>(0, _foreignJs.createContext));
parcelHelpers.export(exports, "contextProvider", ()=>(0, _foreignJs.contextProvider));
parcelHelpers.export(exports, "contextConsumer", ()=>(0, _foreignJs.contextConsumer));
parcelHelpers.export(exports, "provider", ()=>provider);
parcelHelpers.export(exports, "consumer", ()=>consumer);
parcelHelpers.export(exports, "semigroupJSX", ()=>semigroupJSX);
parcelHelpers.export(exports, "monoidJSX", ()=>monoidJSX);
var _foreignJs = require("./foreign.js");
var semigroupJSX = {
    append: function(a) {
        return function(b) {
            return _foreignJs.fragment([
                a,
                b
            ]);
        };
    }
};
var provider = function(context) {
    return function(value) {
        return function(children) {
            return _foreignJs.element(_foreignJs.contextProvider(context))({
                value: value,
                children: children
            });
        };
    };
};
var monoidJSX = {
    mempty: _foreignJs.empty,
    Semigroup0: function() {
        return semigroupJSX;
    }
};
var consumer = function(context) {
    return function(children) {
        return _foreignJs.element(_foreignJs.contextConsumer(context))({
            children: children
        });
    };
};

},{"./foreign.js":"3dDzg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3dDzg":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$0c01 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$0c01.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$0c01.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "empty", ()=>empty);
parcelHelpers.export(exports, "keyed", ()=>keyed);
parcelHelpers.export(exports, "element", ()=>element);
parcelHelpers.export(exports, "elementKeyed", ()=>elementKeyed);
parcelHelpers.export(exports, "fragment", ()=>fragment);
parcelHelpers.export(exports, "createContext", ()=>createContext);
parcelHelpers.export(exports, "contextProvider", ()=>contextProvider);
parcelHelpers.export(exports, "contextConsumer", ()=>contextConsumer);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const createElement = (0, _reactDefault.default).createElement;
const Fragment = (0, _reactDefault.default).Fragment;
const empty = null;
function keyed(key) {
    return (child)=>createElement(Fragment, {
            key: key
        }, child);
}
function element(component) {
    return (props)=>Array.isArray(props.children) ? createElement.apply(null, [
            component,
            props
        ].concat(props.children)) : createElement(component, props);
}
function elementKeyed(component) {
    return (props)=>createElement(component, props);
}
function fragment(children) {
    return createElement.apply(null, [
        Fragment,
        null
    ].concat(children));
}
function createContext(defaultValue) {
    return ()=>(0, _reactDefault.default).createContext(defaultValue);
}
function contextProvider(context) {
    return context.Provider;
}
function contextConsumer(context) {
    return context.Consumer;
}

  $parcel$ReactRefreshHelpers$0c01.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"7h6Pi":[function(require,module,exports,__globalThis) {
"use strict";
var Refresh = require("7422ead32dcc1e6b");
function debounce(func, delay) {
    {
        let timeout = undefined;
        let lastTime = 0;
        return function(args) {
            // Call immediately if last call was more than the delay ago.
            // Otherwise, set a timeout. This means the first call is fast
            // (for the common case of a single update), and subsequent updates
            // are batched.
            let now = Date.now();
            if (now - lastTime > delay) {
                lastTime = now;
                func.call(null, args);
            } else {
                clearTimeout(timeout);
                timeout = setTimeout(function() {
                    timeout = undefined;
                    lastTime = Date.now();
                    func.call(null, args);
                }, delay);
            }
        };
    }
}
var enqueueUpdate = debounce(function() {
    Refresh.performReactRefresh();
}, 30);
module.exports.init = function() {
    if (!globalThis.$RefreshReg$) {
        Refresh.injectIntoGlobalHook(globalThis);
        globalThis.$RefreshReg$ = function() {};
        globalThis.$RefreshSig$ = function() {
            return function(type) {
                return type;
            };
        };
        if (typeof window !== 'undefined') {
            let ErrorOverlay = require("e4d875b7642f9496");
            ErrorOverlay.setEditorHandler(function(errorLocation) {
                let file = `${errorLocation.fileName}:${errorLocation.lineNumber || 1}:${errorLocation.colNumber || 1}`;
                fetch(module.bundle.devServer + `/__parcel_launch_editor?file=${encodeURIComponent(file)}`);
            });
            ErrorOverlay.startReportingRuntimeErrors({
                onError: function() {}
            });
            window.addEventListener('parcelhmraccept', ()=>{
                ErrorOverlay.dismissRuntimeErrors();
            });
        }
    }
};
// Everything below is either adapted or copied from
// https://github.com/facebook/metro/blob/61de16bd1edd7e738dd0311c89555a644023ab2d/packages/metro/src/lib/polyfills/require.js
// MIT License - Copyright (c) Facebook, Inc. and its affiliates.
module.exports.prelude = function(module1) {
    globalThis.$RefreshReg$ = function(type, id) {
        Refresh.register(type, module1.id + ' ' + id);
    };
    globalThis.$RefreshSig$ = Refresh.createSignatureFunctionForTransform;
};
module.exports.postlude = function(module1) {
    if (typeof window === 'undefined') return;
    if (isReactRefreshBoundary(module1.exports)) {
        registerExportsForReactRefresh(module1);
        if (module1.hot) {
            module1.hot.dispose(function(data) {
                if (Refresh.hasUnrecoverableErrors()) window.location.reload();
                data.prevExports = module1.exports;
            });
            module1.hot.accept(function(getParents) {
                var prevExports = module1.hot.data.prevExports;
                var nextExports = module1.exports;
                // Since we just executed the code for it, it's possible
                // that the new exports make it ineligible for being a boundary.
                var isNoLongerABoundary = !isReactRefreshBoundary(nextExports);
                // It can also become ineligible if its exports are incompatible
                // with the previous exports.
                // For example, if you add/remove/change exports, we'll want
                // to re-execute the importing modules, and force those components
                // to re-render. Similarly, if you convert a class component
                // to a function, we want to invalidate the boundary.
                var didInvalidate = shouldInvalidateReactRefreshBoundary(prevExports, nextExports);
                if (isNoLongerABoundary || didInvalidate) {
                    // We'll be conservative. The only case in which we won't do a full
                    // reload is if all parent modules are also refresh boundaries.
                    // In that case we'll add them to the current queue.
                    var parents = getParents();
                    if (parents.length === 0) {
                        // Looks like we bubbled to the root. Can't recover from that.
                        window.location.reload();
                        return;
                    }
                    return parents;
                }
                enqueueUpdate();
            });
        }
    }
};
function isReactRefreshBoundary(exports) {
    if (Refresh.isLikelyComponentType(exports)) return true;
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    return false;
    var hasExports = false;
    var areAllExportsComponents = true;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        hasExports = true;
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) // Don't invoke getters for CJS as they may have side effects.
        return false;
        var exportValue = exports[key];
        if (!Refresh.isLikelyComponentType(exportValue)) areAllExportsComponents = false;
    }
    return hasExports && areAllExportsComponents;
}
function shouldInvalidateReactRefreshBoundary(prevExports, nextExports) {
    var prevSignature = getRefreshBoundarySignature(prevExports);
    var nextSignature = getRefreshBoundarySignature(nextExports);
    if (prevSignature.length !== nextSignature.length) return true;
    for(var i = 0; i < nextSignature.length; i++){
        if (prevSignature[i] !== nextSignature[i]) return true;
    }
    return false;
}
// When this signature changes, it's unsafe to stop at this refresh boundary.
function getRefreshBoundarySignature(exports) {
    var signature = [];
    signature.push(Refresh.getFamilyByType(exports));
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return signature;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        signature.push(key);
        signature.push(Refresh.getFamilyByType(exportValue));
    }
    return signature;
}
function registerExportsForReactRefresh(module1) {
    var exports = module1.exports, id = module1.id;
    Refresh.register(exports, id + ' %exports%');
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        var typeID = id + ' %exports% ' + key;
        Refresh.register(exportValue, typeID);
    }
}

},{"7422ead32dcc1e6b":"hpiFP","e4d875b7642f9496":"gnoim"}],"hpiFP":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("96622d495519d4e");

},{"96622d495519d4e":"7AD9f"}],"7AD9f":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-refresh-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function computeFullKey(signature) {
        if (null !== signature.fullKey) return signature.fullKey;
        var fullKey = signature.ownKey;
        try {
            var hooks = signature.getCustomHooks();
        } catch (err) {
            return signature.forceReset = !0, signature.fullKey = fullKey;
        }
        for(var i = 0; i < hooks.length; i++){
            var hook = hooks[i];
            if ("function" !== typeof hook) return signature.forceReset = !0, signature.fullKey = fullKey;
            hook = allSignaturesByType.get(hook);
            if (void 0 !== hook) {
                var nestedHookKey = computeFullKey(hook);
                hook.forceReset && (signature.forceReset = !0);
                fullKey += "\n---\n" + nestedHookKey;
            }
        }
        return signature.fullKey = fullKey;
    }
    function resolveFamily(type) {
        return updatedFamiliesByType.get(type);
    }
    function cloneMap(map) {
        var clone = new Map();
        map.forEach(function(value, key) {
            clone.set(key, value);
        });
        return clone;
    }
    function cloneSet(set) {
        var clone = new Set();
        set.forEach(function(value) {
            clone.add(value);
        });
        return clone;
    }
    function getProperty(object, property) {
        try {
            return object[property];
        } catch (err) {}
    }
    function register(type, id) {
        if (!(null === type || "function" !== typeof type && "object" !== typeof type || allFamiliesByType.has(type))) {
            var family = allFamiliesByID.get(id);
            void 0 === family ? (family = {
                current: type
            }, allFamiliesByID.set(id, family)) : pendingUpdates.push([
                family,
                type
            ]);
            allFamiliesByType.set(type, family);
            if ("object" === typeof type && null !== type) switch(getProperty(type, "$$typeof")){
                case REACT_FORWARD_REF_TYPE:
                    register(type.render, id + "$render");
                    break;
                case REACT_MEMO_TYPE:
                    register(type.type, id + "$type");
            }
        }
    }
    function setSignature(type, key) {
        var forceReset = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : !1, getCustomHooks = 3 < arguments.length ? arguments[3] : void 0;
        allSignaturesByType.has(type) || allSignaturesByType.set(type, {
            forceReset: forceReset,
            ownKey: key,
            fullKey: null,
            getCustomHooks: getCustomHooks || function() {
                return [];
            }
        });
        if ("object" === typeof type && null !== type) switch(getProperty(type, "$$typeof")){
            case REACT_FORWARD_REF_TYPE:
                setSignature(type.render, key, forceReset, getCustomHooks);
                break;
            case REACT_MEMO_TYPE:
                setSignature(type.type, key, forceReset, getCustomHooks);
        }
    }
    function collectCustomHooksForSignature(type) {
        type = allSignaturesByType.get(type);
        void 0 !== type && computeFullKey(type);
    }
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_MEMO_TYPE = Symbol.for("react.memo"), PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map, allFamiliesByID = new Map(), allFamiliesByType = new PossiblyWeakMap(), allSignaturesByType = new PossiblyWeakMap(), updatedFamiliesByType = new PossiblyWeakMap(), pendingUpdates = [], helpersByRendererID = new Map(), helpersByRoot = new Map(), mountedRoots = new Set(), failedRoots = new Set(), rootElements = "function" === typeof WeakMap ? new WeakMap() : null, isPerformingRefresh = !1;
    exports._getMountedRootCount = function() {
        return mountedRoots.size;
    };
    exports.collectCustomHooksForSignature = collectCustomHooksForSignature;
    exports.createSignatureFunctionForTransform = function() {
        var savedType, hasCustomHooks, didCollectHooks = !1;
        return function(type, key, forceReset, getCustomHooks) {
            if ("string" === typeof key) return savedType || (savedType = type, hasCustomHooks = "function" === typeof getCustomHooks), null == type || "function" !== typeof type && "object" !== typeof type || setSignature(type, key, forceReset, getCustomHooks), type;
            !didCollectHooks && hasCustomHooks && (didCollectHooks = !0, collectCustomHooksForSignature(savedType));
        };
    };
    exports.getFamilyByID = function(id) {
        return allFamiliesByID.get(id);
    };
    exports.getFamilyByType = function(type) {
        return allFamiliesByType.get(type);
    };
    exports.hasUnrecoverableErrors = function() {
        return !1;
    };
    exports.injectIntoGlobalHook = function(globalObject) {
        var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (void 0 === hook) {
            var nextID = 0;
            globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {
                renderers: new Map(),
                supportsFiber: !0,
                inject: function() {
                    return nextID++;
                },
                onScheduleFiberRoot: function() {},
                onCommitFiberRoot: function() {},
                onCommitFiberUnmount: function() {}
            };
        }
        if (hook.isDisabled) console.warn("Something has shimmed the React DevTools global hook (__REACT_DEVTOOLS_GLOBAL_HOOK__). Fast Refresh is not compatible with this shim and will be disabled.");
        else {
            var oldInject = hook.inject;
            hook.inject = function(injected) {
                var id = oldInject.apply(this, arguments);
                "function" === typeof injected.scheduleRefresh && "function" === typeof injected.setRefreshHandler && helpersByRendererID.set(id, injected);
                return id;
            };
            hook.renderers.forEach(function(injected, id) {
                "function" === typeof injected.scheduleRefresh && "function" === typeof injected.setRefreshHandler && helpersByRendererID.set(id, injected);
            });
            var oldOnCommitFiberRoot = hook.onCommitFiberRoot, oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function() {};
            hook.onScheduleFiberRoot = function(id, root, children) {
                isPerformingRefresh || (failedRoots.delete(root), null !== rootElements && rootElements.set(root, children));
                return oldOnScheduleFiberRoot.apply(this, arguments);
            };
            hook.onCommitFiberRoot = function(id, root, maybePriorityLevel, didError) {
                var helpers = helpersByRendererID.get(id);
                if (void 0 !== helpers) {
                    helpersByRoot.set(root, helpers);
                    helpers = root.current;
                    var alternate = helpers.alternate;
                    null !== alternate ? (alternate = null != alternate.memoizedState && null != alternate.memoizedState.element && mountedRoots.has(root), helpers = null != helpers.memoizedState && null != helpers.memoizedState.element, !alternate && helpers ? (mountedRoots.add(root), failedRoots.delete(root)) : alternate && helpers || (alternate && !helpers ? (mountedRoots.delete(root), didError ? failedRoots.add(root) : helpersByRoot.delete(root)) : alternate || helpers || didError && failedRoots.add(root))) : mountedRoots.add(root);
                }
                return oldOnCommitFiberRoot.apply(this, arguments);
            };
        }
    };
    exports.isLikelyComponentType = function(type) {
        switch(typeof type){
            case "function":
                if (null != type.prototype) {
                    if (type.prototype.isReactComponent) return !0;
                    var ownNames = Object.getOwnPropertyNames(type.prototype);
                    if (1 < ownNames.length || "constructor" !== ownNames[0] || type.prototype.__proto__ !== Object.prototype) return !1;
                }
                type = type.name || type.displayName;
                return "string" === typeof type && /^[A-Z]/.test(type);
            case "object":
                if (null != type) switch(getProperty(type, "$$typeof")){
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_MEMO_TYPE:
                        return !0;
                }
                return !1;
            default:
                return !1;
        }
    };
    exports.performReactRefresh = function() {
        if (0 === pendingUpdates.length || isPerformingRefresh) return null;
        isPerformingRefresh = !0;
        try {
            var staleFamilies = new Set(), updatedFamilies = new Set(), updates = pendingUpdates;
            pendingUpdates = [];
            updates.forEach(function(_ref) {
                var family = _ref[0];
                _ref = _ref[1];
                var prevType = family.current;
                updatedFamiliesByType.set(prevType, family);
                updatedFamiliesByType.set(_ref, family);
                family.current = _ref;
                prevType.prototype && prevType.prototype.isReactComponent || _ref.prototype && _ref.prototype.isReactComponent ? _ref = !1 : (prevType = allSignaturesByType.get(prevType), _ref = allSignaturesByType.get(_ref), _ref = void 0 === prevType && void 0 === _ref || void 0 !== prevType && void 0 !== _ref && computeFullKey(prevType) === computeFullKey(_ref) && !_ref.forceReset ? !0 : !1);
                _ref ? updatedFamilies.add(family) : staleFamilies.add(family);
            });
            var update = {
                updatedFamilies: updatedFamilies,
                staleFamilies: staleFamilies
            };
            helpersByRendererID.forEach(function(helpers) {
                helpers.setRefreshHandler(resolveFamily);
            });
            var didError = !1, firstError = null, failedRootsSnapshot = cloneSet(failedRoots), mountedRootsSnapshot = cloneSet(mountedRoots), helpersByRootSnapshot = cloneMap(helpersByRoot);
            failedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (void 0 === helpers) throw Error("Could not find helpers for a root. This is a bug in React Refresh.");
                failedRoots.has(root);
                if (null !== rootElements && rootElements.has(root)) {
                    var element = rootElements.get(root);
                    try {
                        helpers.scheduleRoot(root, element);
                    } catch (err) {
                        didError || (didError = !0, firstError = err);
                    }
                }
            });
            mountedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (void 0 === helpers) throw Error("Could not find helpers for a root. This is a bug in React Refresh.");
                mountedRoots.has(root);
                try {
                    helpers.scheduleRefresh(root, update);
                } catch (err) {
                    didError || (didError = !0, firstError = err);
                }
            });
            if (didError) throw firstError;
            return update;
        } finally{
            isPerformingRefresh = !1;
        }
    };
    exports.register = register;
    exports.setSignature = setSignature;
})();

},{}],"gnoim":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setEditorHandler", ()=>$da9882e673ac146b$export$25a22ac46f1bd016);
parcelHelpers.export(exports, "reportRuntimeError", ()=>$da9882e673ac146b$export$74e9101ce4078c0);
parcelHelpers.export(exports, "startReportingRuntimeErrors", ()=>$da9882e673ac146b$export$cda2c88a41631c16);
parcelHelpers.export(exports, "dismissRuntimeErrors", ()=>$da9882e673ac146b$export$1cfa6d161ca81bd9);
parcelHelpers.export(exports, "stopReportingRuntimeErrors", ()=>$da9882e673ac146b$export$25ba7d9a816639e7);
function $parcel$interopDefault(a) {
    return a && a.__esModule ? a.default : a;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ /* eslint-disable react/react-in-jsx-scope, no-console */ var $b6c7f0288a15c619$var$n, $b6c7f0288a15c619$export$41c562ebe57d11e2, $b6c7f0288a15c619$var$u, $b6c7f0288a15c619$export$a8257692ac88316c, $b6c7f0288a15c619$var$i, $b6c7f0288a15c619$var$r, $b6c7f0288a15c619$var$o, $b6c7f0288a15c619$var$e, $b6c7f0288a15c619$var$f, $b6c7f0288a15c619$var$c, $b6c7f0288a15c619$var$s, $b6c7f0288a15c619$var$a, $b6c7f0288a15c619$var$h, $b6c7f0288a15c619$var$p = {}, $b6c7f0288a15c619$var$y = [], $b6c7f0288a15c619$var$v = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, $b6c7f0288a15c619$var$w = Array.isArray;
function $b6c7f0288a15c619$var$d(n, l) {
    for(var u in l)n[u] = l[u];
    return n;
}
function $b6c7f0288a15c619$var$g(n) {
    n && n.parentNode && n.parentNode.removeChild(n);
}
function $b6c7f0288a15c619$export$c8a8987d4410bf2d(l, u, t) {
    var i, r, o, e = {};
    for(o in u)"key" == o ? i = u[o] : "ref" == o ? r = u[o] : e[o] = u[o];
    if (arguments.length > 2 && (e.children = arguments.length > 3 ? $b6c7f0288a15c619$var$n.call(arguments, 2) : t), "function" == typeof l && null != l.defaultProps) for(o in l.defaultProps)null == e[o] && (e[o] = l.defaultProps[o]);
    return $b6c7f0288a15c619$var$m(l, e, i, r, null);
}
function $b6c7f0288a15c619$var$m(n, t, i, r, o) {
    var e = {
        type: n,
        props: t,
        key: i,
        ref: r,
        __k: null,
        __: null,
        __b: 0,
        __e: null,
        __c: null,
        constructor: void 0,
        __v: null == o ? ++$b6c7f0288a15c619$var$u : o,
        __i: -1,
        __u: 0
    };
    return null == o && null != $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(e), e;
}
function $b6c7f0288a15c619$export$7d1e3a5e95ceca43() {
    return {
        current: null
    };
}
function $b6c7f0288a15c619$export$ffb0004e005737fa(n) {
    return n.children;
}
function $b6c7f0288a15c619$export$16fa2f45be04daa8(n, l) {
    this.props = n, this.context = l;
}
function $b6c7f0288a15c619$var$S(n, l) {
    if (null == l) return n.__ ? $b6c7f0288a15c619$var$S(n.__, n.__i + 1) : null;
    for(var u; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) return u.__e;
    return "function" == typeof n.type ? $b6c7f0288a15c619$var$S(n) : null;
}
function $b6c7f0288a15c619$var$C(n) {
    var l, u;
    if (null != (n = n.__) && null != n.__c) {
        for(n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) {
            n.__e = n.__c.base = u.__e;
            break;
        }
        return $b6c7f0288a15c619$var$C(n);
    }
}
function $b6c7f0288a15c619$var$M(n) {
    (!n.__d && (n.__d = !0) && $b6c7f0288a15c619$var$i.push(n) && !$b6c7f0288a15c619$var$$.__r++ || $b6c7f0288a15c619$var$r != $b6c7f0288a15c619$export$41c562ebe57d11e2.debounceRendering) && (($b6c7f0288a15c619$var$r = $b6c7f0288a15c619$export$41c562ebe57d11e2.debounceRendering) || $b6c7f0288a15c619$var$o)($b6c7f0288a15c619$var$$);
}
function $b6c7f0288a15c619$var$$() {
    for(var n, u, t, r, o, f, c, s = 1; $b6c7f0288a15c619$var$i.length;)$b6c7f0288a15c619$var$i.length > s && $b6c7f0288a15c619$var$i.sort($b6c7f0288a15c619$var$e), n = $b6c7f0288a15c619$var$i.shift(), s = $b6c7f0288a15c619$var$i.length, n.__d && (t = void 0, o = (r = (u = n).__v).__e, f = [], c = [], u.__P && ((t = $b6c7f0288a15c619$var$d({}, r)).__v = r.__v + 1, $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(t), $b6c7f0288a15c619$var$O(u.__P, t, r, u.__n, u.__P.namespaceURI, 32 & r.__u ? [
        o
    ] : null, f, null == o ? $b6c7f0288a15c619$var$S(r) : o, !!(32 & r.__u), c), t.__v = r.__v, t.__.__k[t.__i] = t, $b6c7f0288a15c619$var$z(f, t, c), t.__e != o && $b6c7f0288a15c619$var$C(t)));
    $b6c7f0288a15c619$var$$.__r = 0;
}
function $b6c7f0288a15c619$var$I(n, l, u, t, i, r, o, e, f, c, s) {
    var a, h, v, w, d, g, _ = t && t.__k || $b6c7f0288a15c619$var$y, m = l.length;
    for(f = $b6c7f0288a15c619$var$P(u, l, _, f, m), a = 0; a < m; a++)null != (v = u.__k[a]) && (h = -1 == v.__i ? $b6c7f0288a15c619$var$p : _[v.__i] || $b6c7f0288a15c619$var$p, v.__i = a, g = $b6c7f0288a15c619$var$O(n, v, h, i, r, o, e, f, c, s), w = v.__e, v.ref && h.ref != v.ref && (h.ref && $b6c7f0288a15c619$var$q(h.ref, null, v), s.push(v.ref, v.__c || w, v)), null == d && null != w && (d = w), 4 & v.__u || h.__k === v.__k ? f = $b6c7f0288a15c619$var$A(v, f, n) : "function" == typeof v.type && void 0 !== g ? f = g : w && (f = w.nextSibling), v.__u &= -7);
    return u.__e = d, f;
}
function $b6c7f0288a15c619$var$P(n, l, u, t, i) {
    var r, o, e, f, c, s = u.length, a = s, h = 0;
    for(n.__k = new Array(i), r = 0; r < i; r++)null != (o = l[r]) && "boolean" != typeof o && "function" != typeof o ? (f = r + h, (o = n.__k[r] = "string" == typeof o || "number" == typeof o || "bigint" == typeof o || o.constructor == String ? $b6c7f0288a15c619$var$m(null, o, null, null, null) : $b6c7f0288a15c619$var$w(o) ? $b6c7f0288a15c619$var$m($b6c7f0288a15c619$export$ffb0004e005737fa, {
        children: o
    }, null, null, null) : null == o.constructor && o.__b > 0 ? $b6c7f0288a15c619$var$m(o.type, o.props, o.key, o.ref ? o.ref : null, o.__v) : o).__ = n, o.__b = n.__b + 1, e = null, -1 != (c = o.__i = $b6c7f0288a15c619$var$L(o, u, f, a)) && (a--, (e = u[c]) && (e.__u |= 2)), null == e || null == e.__v ? (-1 == c && (i > s ? h-- : i < s && h++), "function" != typeof o.type && (o.__u |= 4)) : c != f && (c == f - 1 ? h-- : c == f + 1 ? h++ : (c > f ? h-- : h++, o.__u |= 4))) : n.__k[r] = null;
    if (a) for(r = 0; r < s; r++)null != (e = u[r]) && 0 == (2 & e.__u) && (e.__e == t && (t = $b6c7f0288a15c619$var$S(e)), $b6c7f0288a15c619$var$B(e, e));
    return t;
}
function $b6c7f0288a15c619$var$A(n, l, u) {
    var t, i;
    if ("function" == typeof n.type) {
        for(t = n.__k, i = 0; t && i < t.length; i++)t[i] && (t[i].__ = n, l = $b6c7f0288a15c619$var$A(t[i], l, u));
        return l;
    }
    n.__e != l && (l && n.type && !u.contains(l) && (l = $b6c7f0288a15c619$var$S(n)), u.insertBefore(n.__e, l || null), l = n.__e);
    do l = l && l.nextSibling;
    while (null != l && 8 == l.nodeType);
    return l;
}
function $b6c7f0288a15c619$export$47e4c5b300681277(n, l) {
    return l = l || [], null == n || "boolean" == typeof n || ($b6c7f0288a15c619$var$w(n) ? n.some(function(n) {
        $b6c7f0288a15c619$export$47e4c5b300681277(n, l);
    }) : l.push(n)), l;
}
function $b6c7f0288a15c619$var$L(n, l, u, t) {
    var i, r, o = n.key, e = n.type, f = l[u];
    if (null === f && null == n.key || f && o == f.key && e == f.type && 0 == (2 & f.__u)) return u;
    if (t > (null != f && 0 == (2 & f.__u) ? 1 : 0)) for(i = u - 1, r = u + 1; i >= 0 || r < l.length;){
        if (i >= 0) {
            if ((f = l[i]) && 0 == (2 & f.__u) && o == f.key && e == f.type) return i;
            i--;
        }
        if (r < l.length) {
            if ((f = l[r]) && 0 == (2 & f.__u) && o == f.key && e == f.type) return r;
            r++;
        }
    }
    return -1;
}
function $b6c7f0288a15c619$var$T(n, l, u) {
    "-" == l[0] ? n.setProperty(l, null == u ? "" : u) : n[l] = null == u ? "" : "number" != typeof u || $b6c7f0288a15c619$var$v.test(l) ? u : u + "px";
}
function $b6c7f0288a15c619$var$j(n, l, u, t, i) {
    var r;
    n: if ("style" == l) {
        if ("string" == typeof u) n.style.cssText = u;
        else {
            if ("string" == typeof t && (n.style.cssText = t = ""), t) for(l in t)u && l in u || $b6c7f0288a15c619$var$T(n.style, l, "");
            if (u) for(l in u)t && u[l] == t[l] || $b6c7f0288a15c619$var$T(n.style, l, u[l]);
        }
    } else if ("o" == l[0] && "n" == l[1]) r = l != (l = l.replace($b6c7f0288a15c619$var$f, "$1")), l = l.toLowerCase() in n || "onFocusOut" == l || "onFocusIn" == l ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + r] = u, u ? t ? u.u = t.u : (u.u = $b6c7f0288a15c619$var$c, n.addEventListener(l, r ? $b6c7f0288a15c619$var$a : $b6c7f0288a15c619$var$s, r)) : n.removeEventListener(l, r ? $b6c7f0288a15c619$var$a : $b6c7f0288a15c619$var$s, r);
    else {
        if ("http://www.w3.org/2000/svg" == i) l = l.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
        else if ("width" != l && "height" != l && "href" != l && "list" != l && "form" != l && "tabIndex" != l && "download" != l && "rowSpan" != l && "colSpan" != l && "role" != l && "popover" != l && l in n) try {
            n[l] = null == u ? "" : u;
            break n;
        } catch (n) {}
        "function" == typeof u || (null == u || !1 === u && "-" != l[4] ? n.removeAttribute(l) : n.setAttribute(l, "popover" == l && 1 == u ? "" : u));
    }
}
function $b6c7f0288a15c619$var$F(n) {
    return function(u) {
        if (this.l) {
            var t = this.l[u.type + n];
            if (null == u.t) u.t = $b6c7f0288a15c619$var$c++;
            else if (u.t < t.u) return;
            return t($b6c7f0288a15c619$export$41c562ebe57d11e2.event ? $b6c7f0288a15c619$export$41c562ebe57d11e2.event(u) : u);
        }
    };
}
function $b6c7f0288a15c619$var$O(n, u, t, i, r, o, e, f, c, s) {
    var a, h, p, y, v, _, m, b, S, C, M, $, P, A, H, L, T, j = u.type;
    if (null != u.constructor) return null;
    128 & t.__u && (c = !!(32 & t.__u), o = [
        f = u.__e = t.__e
    ]), (a = $b6c7f0288a15c619$export$41c562ebe57d11e2.__b) && a(u);
    n: if ("function" == typeof j) try {
        if (b = u.props, S = "prototype" in j && j.prototype.render, C = (a = j.contextType) && i[a.__c], M = a ? C ? C.props.value : a.__ : i, t.__c ? m = (h = u.__c = t.__c).__ = h.__E : (S ? u.__c = h = new j(b, M) : (u.__c = h = new $b6c7f0288a15c619$export$16fa2f45be04daa8(b, M), h.constructor = j, h.render = $b6c7f0288a15c619$var$D), C && C.sub(h), h.props = b, h.state || (h.state = {}), h.context = M, h.__n = i, p = h.__d = !0, h.__h = [], h._sb = []), S && null == h.__s && (h.__s = h.state), S && null != j.getDerivedStateFromProps && (h.__s == h.state && (h.__s = $b6c7f0288a15c619$var$d({}, h.__s)), $b6c7f0288a15c619$var$d(h.__s, j.getDerivedStateFromProps(b, h.__s))), y = h.props, v = h.state, h.__v = u, p) S && null == j.getDerivedStateFromProps && null != h.componentWillMount && h.componentWillMount(), S && null != h.componentDidMount && h.__h.push(h.componentDidMount);
        else {
            if (S && null == j.getDerivedStateFromProps && b !== y && null != h.componentWillReceiveProps && h.componentWillReceiveProps(b, M), !h.__e && null != h.shouldComponentUpdate && !1 === h.shouldComponentUpdate(b, h.__s, M) || u.__v == t.__v) {
                for(u.__v != t.__v && (h.props = b, h.state = h.__s, h.__d = !1), u.__e = t.__e, u.__k = t.__k, u.__k.some(function(n) {
                    n && (n.__ = u);
                }), $ = 0; $ < h._sb.length; $++)h.__h.push(h._sb[$]);
                h._sb = [], h.__h.length && e.push(h);
                break n;
            }
            null != h.componentWillUpdate && h.componentWillUpdate(b, h.__s, M), S && null != h.componentDidUpdate && h.__h.push(function() {
                h.componentDidUpdate(y, v, _);
            });
        }
        if (h.context = M, h.props = b, h.__P = n, h.__e = !1, P = $b6c7f0288a15c619$export$41c562ebe57d11e2.__r, A = 0, S) {
            for(h.state = h.__s, h.__d = !1, P && P(u), a = h.render(h.props, h.state, h.context), H = 0; H < h._sb.length; H++)h.__h.push(h._sb[H]);
            h._sb = [];
        } else do h.__d = !1, P && P(u), a = h.render(h.props, h.state, h.context), h.state = h.__s;
        while (h.__d && ++A < 25);
        h.state = h.__s, null != h.getChildContext && (i = $b6c7f0288a15c619$var$d($b6c7f0288a15c619$var$d({}, i), h.getChildContext())), S && !p && null != h.getSnapshotBeforeUpdate && (_ = h.getSnapshotBeforeUpdate(y, v)), L = a, null != a && a.type === $b6c7f0288a15c619$export$ffb0004e005737fa && null == a.key && (L = $b6c7f0288a15c619$var$N(a.props.children)), f = $b6c7f0288a15c619$var$I(n, $b6c7f0288a15c619$var$w(L) ? L : [
            L
        ], u, t, i, r, o, e, f, c, s), h.base = u.__e, u.__u &= -161, h.__h.length && e.push(h), m && (h.__E = h.__ = null);
    } catch (n) {
        if (u.__v = null, c || null != o) {
            if (n.then) {
                for(u.__u |= c ? 160 : 128; f && 8 == f.nodeType && f.nextSibling;)f = f.nextSibling;
                o[o.indexOf(f)] = null, u.__e = f;
            } else for(T = o.length; T--;)$b6c7f0288a15c619$var$g(o[T]);
        } else u.__e = t.__e, u.__k = t.__k;
        $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, u, t);
    }
    else null == o && u.__v == t.__v ? (u.__k = t.__k, u.__e = t.__e) : f = u.__e = $b6c7f0288a15c619$var$V(t.__e, u, t, i, r, o, e, c, s);
    return (a = $b6c7f0288a15c619$export$41c562ebe57d11e2.diffed) && a(u), 128 & u.__u ? void 0 : f;
}
function $b6c7f0288a15c619$var$z(n, u, t) {
    for(var i = 0; i < t.length; i++)$b6c7f0288a15c619$var$q(t[i], t[++i], t[++i]);
    $b6c7f0288a15c619$export$41c562ebe57d11e2.__c && $b6c7f0288a15c619$export$41c562ebe57d11e2.__c(u, n), n.some(function(u) {
        try {
            n = u.__h, u.__h = [], n.some(function(n) {
                n.call(u);
            });
        } catch (n) {
            $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, u.__v);
        }
    });
}
function $b6c7f0288a15c619$var$N(n) {
    return "object" != typeof n || null == n || n.__b && n.__b > 0 ? n : $b6c7f0288a15c619$var$w(n) ? n.map($b6c7f0288a15c619$var$N) : $b6c7f0288a15c619$var$d({}, n);
}
function $b6c7f0288a15c619$var$V(u, t, i, r, o, e, f, c, s) {
    var a, h, y, v, d, _, m, b = i.props, k = t.props, x = t.type;
    if ("svg" == x ? o = "http://www.w3.org/2000/svg" : "math" == x ? o = "http://www.w3.org/1998/Math/MathML" : o || (o = "http://www.w3.org/1999/xhtml"), null != e) {
        for(a = 0; a < e.length; a++)if ((d = e[a]) && "setAttribute" in d == !!x && (x ? d.localName == x : 3 == d.nodeType)) {
            u = d, e[a] = null;
            break;
        }
    }
    if (null == u) {
        if (null == x) return document.createTextNode(k);
        u = document.createElementNS(o, x, k.is && k), c && ($b6c7f0288a15c619$export$41c562ebe57d11e2.__m && $b6c7f0288a15c619$export$41c562ebe57d11e2.__m(t, e), c = !1), e = null;
    }
    if (null == x) b === k || c && u.data == k || (u.data = k);
    else {
        if (e = e && $b6c7f0288a15c619$var$n.call(u.childNodes), b = i.props || $b6c7f0288a15c619$var$p, !c && null != e) for(b = {}, a = 0; a < u.attributes.length; a++)b[(d = u.attributes[a]).name] = d.value;
        for(a in b)if (d = b[a], "children" == a) ;
        else if ("dangerouslySetInnerHTML" == a) y = d;
        else if (!(a in k)) {
            if ("value" == a && "defaultValue" in k || "checked" == a && "defaultChecked" in k) continue;
            $b6c7f0288a15c619$var$j(u, a, null, d, o);
        }
        for(a in k)d = k[a], "children" == a ? v = d : "dangerouslySetInnerHTML" == a ? h = d : "value" == a ? _ = d : "checked" == a ? m = d : c && "function" != typeof d || b[a] === d || $b6c7f0288a15c619$var$j(u, a, d, b[a], o);
        if (h) c || y && (h.__html == y.__html || h.__html == u.innerHTML) || (u.innerHTML = h.__html), t.__k = [];
        else if (y && (u.innerHTML = ""), $b6c7f0288a15c619$var$I("template" == t.type ? u.content : u, $b6c7f0288a15c619$var$w(v) ? v : [
            v
        ], t, i, r, "foreignObject" == x ? "http://www.w3.org/1999/xhtml" : o, e, f, e ? e[0] : i.__k && $b6c7f0288a15c619$var$S(i, 0), c, s), null != e) for(a = e.length; a--;)$b6c7f0288a15c619$var$g(e[a]);
        c || (a = "value", "progress" == x && null == _ ? u.removeAttribute("value") : null != _ && (_ !== u[a] || "progress" == x && !_ || "option" == x && _ != b[a]) && $b6c7f0288a15c619$var$j(u, a, _, b[a], o), a = "checked", null != m && m != u[a] && $b6c7f0288a15c619$var$j(u, a, m, b[a], o));
    }
    return u;
}
function $b6c7f0288a15c619$var$q(n, u, t) {
    try {
        if ("function" == typeof n) {
            var i = "function" == typeof n.__u;
            i && n.__u(), i && null == u || (n.__u = n(u));
        } else n.current = u;
    } catch (n) {
        $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, t);
    }
}
function $b6c7f0288a15c619$var$B(n, u, t) {
    var i, r;
    if ($b6c7f0288a15c619$export$41c562ebe57d11e2.unmount && $b6c7f0288a15c619$export$41c562ebe57d11e2.unmount(n), (i = n.ref) && (i.current && i.current != n.__e || $b6c7f0288a15c619$var$q(i, null, u)), null != (i = n.__c)) {
        if (i.componentWillUnmount) try {
            i.componentWillUnmount();
        } catch (n) {
            $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, u);
        }
        i.base = i.__P = null;
    }
    if (i = n.__k) for(r = 0; r < i.length; r++)i[r] && $b6c7f0288a15c619$var$B(i[r], u, t || "function" != typeof n.type);
    t || $b6c7f0288a15c619$var$g(n.__e), n.__c = n.__ = n.__e = void 0;
}
function $b6c7f0288a15c619$var$D(n, l, u) {
    return this.constructor(n, u);
}
function $b6c7f0288a15c619$export$b3890eb0ae9dca99(u, t, i) {
    var r, o, e, f;
    t == document && (t = document.documentElement), $b6c7f0288a15c619$export$41c562ebe57d11e2.__ && $b6c7f0288a15c619$export$41c562ebe57d11e2.__(u, t), o = (r = "function" == typeof i) ? null : i && i.__k || t.__k, e = [], f = [], $b6c7f0288a15c619$var$O(t, u = (!r && i || t).__k = $b6c7f0288a15c619$export$c8a8987d4410bf2d($b6c7f0288a15c619$export$ffb0004e005737fa, null, [
        u
    ]), o || $b6c7f0288a15c619$var$p, $b6c7f0288a15c619$var$p, t.namespaceURI, !r && i ? [
        i
    ] : o ? null : t.firstChild ? $b6c7f0288a15c619$var$n.call(t.childNodes) : null, e, !r && i ? i : o ? o.__e : t.firstChild, r, f), $b6c7f0288a15c619$var$z(e, u, f);
}
function $b6c7f0288a15c619$export$fa8d919ba61d84db(n, l) {
    $b6c7f0288a15c619$export$b3890eb0ae9dca99(n, l, $b6c7f0288a15c619$export$fa8d919ba61d84db);
}
function $b6c7f0288a15c619$export$e530037191fcd5d7(l, u, t) {
    var i, r, o, e, f = $b6c7f0288a15c619$var$d({}, l.props);
    for(o in l.type && l.type.defaultProps && (e = l.type.defaultProps), u)"key" == o ? i = u[o] : "ref" == o ? r = u[o] : f[o] = null == u[o] && null != e ? e[o] : u[o];
    return arguments.length > 2 && (f.children = arguments.length > 3 ? $b6c7f0288a15c619$var$n.call(arguments, 2) : t), $b6c7f0288a15c619$var$m(l.type, f, i || l.key, r || l.ref, null);
}
function $b6c7f0288a15c619$export$fd42f52fd3ae1109(n) {
    function l(n) {
        var u, t;
        return this.getChildContext || (u = new Set, (t = {})[l.__c] = this, this.getChildContext = function() {
            return t;
        }, this.componentWillUnmount = function() {
            u = null;
        }, this.shouldComponentUpdate = function(n) {
            this.props.value != n.value && u.forEach(function(n) {
                n.__e = !0, $b6c7f0288a15c619$var$M(n);
            });
        }, this.sub = function(n) {
            u.add(n);
            var l = n.componentWillUnmount;
            n.componentWillUnmount = function() {
                u && u.delete(n), l && l.call(n);
            };
        }), n.children;
    }
    return l.__c = "__cC" + $b6c7f0288a15c619$var$h++, l.__ = n, l.Provider = l.__l = (l.Consumer = function(n, l) {
        return n.children(l);
    }).contextType = l, l;
}
$b6c7f0288a15c619$var$n = $b6c7f0288a15c619$var$y.slice, $b6c7f0288a15c619$export$41c562ebe57d11e2 = {
    __e: function(n, l, u, t) {
        for(var i, r, o; l = l.__;)if ((i = l.__c) && !i.__) try {
            if ((r = i.constructor) && null != r.getDerivedStateFromError && (i.setState(r.getDerivedStateFromError(n)), o = i.__d), null != i.componentDidCatch && (i.componentDidCatch(n, t || {}), o = i.__d), o) return i.__E = i;
        } catch (l) {
            n = l;
        }
        throw n;
    }
}, $b6c7f0288a15c619$var$u = 0, $b6c7f0288a15c619$export$a8257692ac88316c = function(n) {
    return null != n && null == n.constructor;
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.setState = function(n, l) {
    var u;
    u = null != this.__s && this.__s != this.state ? this.__s : this.__s = $b6c7f0288a15c619$var$d({}, this.state), "function" == typeof n && (n = n($b6c7f0288a15c619$var$d({}, u), this.props)), n && $b6c7f0288a15c619$var$d(u, n), null != n && this.__v && (l && this._sb.push(l), $b6c7f0288a15c619$var$M(this));
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.forceUpdate = function(n) {
    this.__v && (this.__e = !0, n && this.__h.push(n), $b6c7f0288a15c619$var$M(this));
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.render = $b6c7f0288a15c619$export$ffb0004e005737fa, $b6c7f0288a15c619$var$i = [], $b6c7f0288a15c619$var$o = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, $b6c7f0288a15c619$var$e = function(n, l) {
    return n.__v.__b - l.__v.__b;
}, $b6c7f0288a15c619$var$$.__r = 0, $b6c7f0288a15c619$var$f = /(PointerCapture)$|Capture$/i, $b6c7f0288a15c619$var$c = 0, $b6c7f0288a15c619$var$s = $b6c7f0288a15c619$var$F(!1), $b6c7f0288a15c619$var$a = $b6c7f0288a15c619$var$F(!0), $b6c7f0288a15c619$var$h = 0;
var $23b7c1cb98b19658$var$t = /["&<]/;
function $23b7c1cb98b19658$var$n(r) {
    if (0 === r.length || !1 === $23b7c1cb98b19658$var$t.test(r)) return r;
    for(var e = 0, n = 0, o = "", f = ""; n < r.length; n++){
        switch(r.charCodeAt(n)){
            case 34:
                f = "&quot;";
                break;
            case 38:
                f = "&amp;";
                break;
            case 60:
                f = "&lt;";
                break;
            default:
                continue;
        }
        n !== e && (o += r.slice(e, n)), o += f, e = n + 1;
    }
    return n !== e && (o += r.slice(e, n)), o;
}
var $23b7c1cb98b19658$var$o = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, $23b7c1cb98b19658$var$f = 0, $23b7c1cb98b19658$var$i = Array.isArray;
function $23b7c1cb98b19658$export$34b9dba7ce09269b(e, t, n, o, i, u) {
    t || (t = {});
    var a, c, p = t;
    if ("ref" in p) for(c in p = {}, t)"ref" == c ? a = t[c] : p[c] = t[c];
    var l = {
        type: e,
        props: p,
        key: n,
        ref: a,
        __k: null,
        __: null,
        __b: 0,
        __e: null,
        __c: null,
        constructor: void 0,
        __v: --$23b7c1cb98b19658$var$f,
        __i: -1,
        __u: 0,
        __source: i,
        __self: u
    };
    if ("function" == typeof e && (a = e.defaultProps)) for(c in a)void 0 === p[c] && (p[c] = a[c]);
    return $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(l), l;
}
function $23b7c1cb98b19658$export$45700d561b2268ac(r) {
    var t = $23b7c1cb98b19658$export$34b9dba7ce09269b($b6c7f0288a15c619$export$ffb0004e005737fa, {
        tpl: r,
        exprs: [].slice.call(arguments, 1)
    });
    return t.key = t.__v, t;
}
var $23b7c1cb98b19658$var$c = {}, $23b7c1cb98b19658$var$p = /[A-Z]/g;
function $23b7c1cb98b19658$export$991f6ffe102e5bac(e, t) {
    if ($b6c7f0288a15c619$export$41c562ebe57d11e2.attr) {
        var f = $b6c7f0288a15c619$export$41c562ebe57d11e2.attr(e, t);
        if ("string" == typeof f) return f;
    }
    if ("ref" === e || "key" === e) return "";
    if ("style" === e && "object" == typeof t) {
        var i = "";
        for(var u in t){
            var a = t[u];
            if (null != a && "" !== a) {
                var l = "-" == u[0] ? u : $23b7c1cb98b19658$var$c[u] || ($23b7c1cb98b19658$var$c[u] = u.replace($23b7c1cb98b19658$var$p, "-$&").toLowerCase()), s = ";";
                "number" != typeof a || l.startsWith("--") || $23b7c1cb98b19658$var$o.test(l) || (s = "px;"), i = i + l + ":" + a + s;
            }
        }
        return e + '="' + i + '"';
    }
    return null == t || !1 === t || "function" == typeof t || "object" == typeof t ? "" : !0 === t ? e : e + '="' + $23b7c1cb98b19658$var$n(t) + '"';
}
function $23b7c1cb98b19658$export$40e96e718441efeb(r) {
    if (null == r || "boolean" == typeof r || "function" == typeof r) return null;
    if ("object" == typeof r) {
        if (void 0 === r.constructor) return r;
        if ($23b7c1cb98b19658$var$i(r)) {
            for(var e = 0; e < r.length; e++)r[e] = $23b7c1cb98b19658$export$40e96e718441efeb(r[e]);
            return r;
        }
    }
    return $23b7c1cb98b19658$var$n("" + r);
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $883a43040cbd0629$var$boundErrorHandler = null;
function $883a43040cbd0629$var$errorHandler(callback, e) {
    // $FlowFixMe
    if (!e.error) return;
    // $FlowFixMe
    const { error: error } = e;
    if (error instanceof Error) callback(error);
    else // Look in your browser's devtools for more information
    callback(new Error(error));
}
function $883a43040cbd0629$export$6503ec6e8aabbaf(target, callback) {
    if ($883a43040cbd0629$var$boundErrorHandler !== null) return;
    $883a43040cbd0629$var$boundErrorHandler = $883a43040cbd0629$var$errorHandler.bind(undefined, callback);
    target.addEventListener('error', $883a43040cbd0629$var$boundErrorHandler);
}
function $883a43040cbd0629$export$d07f55d4c15c0440(target) {
    if ($883a43040cbd0629$var$boundErrorHandler === null) return;
    target.removeEventListener('error', $883a43040cbd0629$var$boundErrorHandler);
    $883a43040cbd0629$var$boundErrorHandler = null;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $900f8c32b7484e20$var$boundRejectionHandler = null;
function $900f8c32b7484e20$var$rejectionHandler(callback, e) {
    if (e == null || e.reason == null) return callback(new Error('Unknown'));
    let { reason: reason } = e;
    if (reason instanceof Error) return callback(reason);
    // A non-error was rejected, we don't have a trace :(
    // Look in your browser's devtools for more information
    return callback(new Error(reason));
}
function $900f8c32b7484e20$export$6503ec6e8aabbaf(target, callback) {
    if ($900f8c32b7484e20$var$boundRejectionHandler !== null) return;
    $900f8c32b7484e20$var$boundRejectionHandler = $900f8c32b7484e20$var$rejectionHandler.bind(undefined, callback);
    // $FlowFixMe
    target.addEventListener('unhandledrejection', $900f8c32b7484e20$var$boundRejectionHandler);
}
function $900f8c32b7484e20$export$d07f55d4c15c0440(target) {
    if ($900f8c32b7484e20$var$boundRejectionHandler === null) return;
    // $FlowFixMe
    target.removeEventListener('unhandledrejection', $900f8c32b7484e20$var$boundRejectionHandler);
    $900f8c32b7484e20$var$boundRejectionHandler = null;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $5f72ade198404e99$var$stackTraceRegistered = false;
// Default: https://docs.microsoft.com/en-us/scripting/javascript/reference/stacktracelimit-property-error-javascript
let $5f72ade198404e99$var$restoreStackTraceValue = 10;
const $5f72ade198404e99$var$MAX_STACK_LENGTH = 50;
function $5f72ade198404e99$export$6503ec6e8aabbaf(limit = $5f72ade198404e99$var$MAX_STACK_LENGTH) {
    if ($5f72ade198404e99$var$stackTraceRegistered) return;
    try {
        $5f72ade198404e99$var$restoreStackTraceValue = Error.stackTraceLimit;
        Error.stackTraceLimit = limit;
        $5f72ade198404e99$var$stackTraceRegistered = true;
    } catch (e) {
    // Not all browsers support this so we don't care if it errors
    }
}
function $5f72ade198404e99$export$d07f55d4c15c0440() {
    if (!$5f72ade198404e99$var$stackTraceRegistered) return;
    try {
        Error.stackTraceLimit = $5f72ade198404e99$var$restoreStackTraceValue;
        $5f72ade198404e99$var$stackTraceRegistered = false;
    } catch (e) {
    // Not all browsers support this so we don't care if it errors
    }
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * A representation of a stack frame.
 */ class $d35756f426c25812$export$8949fddf10447898 {
    constructor(functionName = null, fileName = null, lineNumber = null, columnNumber = null, scriptCode = null, sourceFunctionName = null, sourceFileName = null, sourceLineNumber = null, sourceColumnNumber = null, sourceScriptCode = null){
        if (functionName && functionName.indexOf('Object.') === 0) functionName = functionName.slice(7);
        if (// https://github.com/facebook/create-react-app/issues/2097
        // Let's ignore a meaningless name we get for top-level modules.
        functionName === 'friendlySyntaxErrorLabel' || functionName === 'exports.__esModule' || functionName === '<anonymous>' || !functionName) functionName = null;
        this.functionName = functionName;
        this.fileName = fileName;
        this.lineNumber = lineNumber;
        this.columnNumber = columnNumber;
        this._originalFunctionName = sourceFunctionName;
        this._originalFileName = sourceFileName;
        this._originalLineNumber = sourceLineNumber;
        this._originalColumnNumber = sourceColumnNumber;
        this._scriptCode = scriptCode;
        this._originalScriptCode = sourceScriptCode;
    }
    /**
   * Returns the name of this function.
   */ getFunctionName() {
        return this.functionName || '(anonymous function)';
    }
    /**
   * Returns the source of the frame.
   * This contains the file name, line number, and column number when available.
   */ getSource() {
        let str = '';
        if (this.fileName != null) str += this.fileName + ':';
        if (this.lineNumber != null) str += this.lineNumber + ':';
        if (this.columnNumber != null) str += this.columnNumber + ':';
        return str.slice(0, -1);
    }
    /**
   * Returns a pretty version of this stack frame.
   */ toString() {
        const functionName = this.getFunctionName();
        const source = this.getSource();
        return `${functionName}${source ? ` (${source})` : ``}`;
    }
}
var $d35756f426c25812$export$2e2bcd8739ae039 = $d35756f426c25812$export$8949fddf10447898;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $865b9ffc545cb441$var$regexExtractLocation = /\(?(.+?)(?::(\d+))?(?::(\d+))?\)?$/;
function $865b9ffc545cb441$var$extractLocation(token) {
    return $865b9ffc545cb441$var$regexExtractLocation.exec(token) // $FlowFixMe
    .slice(1).map((v)=>{
        const p = Number(v);
        if (!isNaN(p)) return p;
        return v;
    });
}
const $865b9ffc545cb441$var$regexValidFrame_Chrome = /^\s*(at|in)\s.+(:\d+)/;
const $865b9ffc545cb441$var$regexValidFrame_FireFox = /(^|@)\S+:\d+|.+line\s+\d+\s+>\s+(eval|Function).+/;
function $865b9ffc545cb441$var$parseStack(stack) {
    let frames = stack.filter((e)=>$865b9ffc545cb441$var$regexValidFrame_Chrome.test(e) || $865b9ffc545cb441$var$regexValidFrame_FireFox.test(e)).map((e)=>{
        if ($865b9ffc545cb441$var$regexValidFrame_FireFox.test(e)) {
            // Strip eval, we don't care about it
            let isEval = false;
            if (/ > (eval|Function)/.test(e)) {
                e = e.replace(/ line (\d+)(?: > eval line \d+)* > (eval|Function):\d+:\d+/g, ':$1');
                isEval = true;
            }
            const data = e.split(/[@]/g);
            const last = data.pop();
            return new $d35756f426c25812$export$2e2bcd8739ae039(data.join('@') || (isEval ? 'eval' : null), ...$865b9ffc545cb441$var$extractLocation(last));
        } else {
            // Strip eval, we don't care about it
            if (e.indexOf('(eval ') !== -1) e = e.replace(/(\(eval at [^()]*)|(\),.*$)/g, '');
            if (e.indexOf('(at ') !== -1) e = e.replace(/\(at /, '(');
            const data = e.trim().split(/\s+/g).slice(1);
            const last = data.pop();
            return new $d35756f426c25812$export$2e2bcd8739ae039(data.join(' ') || null, ...$865b9ffc545cb441$var$extractLocation(last));
        }
    });
    let index = frames.findIndex((frame)=>frame.getFunctionName().includes('react-stack-bottom-frame'));
    if (index >= 0) frames = frames.slice(0, index);
    return frames;
}
/**
 * Turns an <code>Error</code>, or similar object, into a set of <code>StackFrame</code>s.
 * @alias parse
 */ function $865b9ffc545cb441$export$98e6a39c04603d36(error) {
    if (error == null) throw new Error('You cannot pass a null object.');
    if (typeof error === 'string') return $865b9ffc545cb441$var$parseStack(error.split('\n'));
    if (Array.isArray(error)) return $865b9ffc545cb441$var$parseStack(error);
    if (typeof error.stack === 'string') return $865b9ffc545cb441$var$parseStack(error.stack.split('\n'));
    throw new Error('The error you provided does not contain a stack trace.');
}
var $865b9ffc545cb441$export$2e2bcd8739ae039 = $865b9ffc545cb441$export$98e6a39c04603d36;
/**
 * Enhances a set of <code>StackFrame</code>s with their original positions and code (when available).
 * @param {StackFrame[]} frames A set of <code>StackFrame</code>s which contain (generated) code positions.
 * @param {number} [contextLines=3] The number of lines to provide before and after the line specified in the <code>StackFrame</code>.
 */ async function $df495b51087c401c$export$35b6448019ed80b8(error, contextLines = 3) {
    const frames = $865b9ffc545cb441$export$98e6a39c04603d36(error);
    // $FlowFixMe
    let res = await fetch(module.bundle.devServer + '/__parcel_code_frame', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            contextLines: contextLines,
            frames: frames.map((f)=>({
                    fileName: f.fileName,
                    lineNumber: f.lineNumber,
                    columnNumber: f.columnNumber
                }))
        })
    });
    let json = await res.json();
    return json.map((f, i)=>new $d35756f426c25812$export$8949fddf10447898(frames[i].functionName, f.fileName, f.lineNumber, f.columnNumber, f.compiledLines, frames[i].functionName, f.sourceFileName, f.sourceLineNumber, f.sourceColumnNumber, f.sourceLines));
}
var $df495b51087c401c$export$2e2bcd8739ae039 = $df495b51087c401c$export$35b6448019ed80b8;
const $6d40ebe8356580e0$var$CONTEXT_SIZE = 3;
function $6d40ebe8356580e0$export$9123e6c9c0ac21ed(crash) {
    return (error, unhandledRejection = false)=>{
        $df495b51087c401c$export$2e2bcd8739ae039(error, $6d40ebe8356580e0$var$CONTEXT_SIZE).then((stackFrames)=>{
            if (stackFrames == null) return;
            crash({
                error: error,
                unhandledRejection: unhandledRejection,
                contextSize: $6d40ebe8356580e0$var$CONTEXT_SIZE,
                stackFrames: stackFrames
            });
        }).catch((e)=>{
            // eslint-disable-next-line no-console
            console.log('Could not get the stack frames of error:', e);
        });
    };
}
function $6d40ebe8356580e0$var$patchConsole(method, onError) {
    /* eslint-disable no-console */ let original = console[method];
    console[method] = (...args)=>{
        let error = null;
        if (typeof args[0] === 'string') {
            let format = args[0].match(/%[oOdisfc]/g);
            if (format) {
                let errorIndex = format.findIndex((match)=>match === '%o' || match === '%O');
                if (errorIndex < 0) errorIndex = format.findIndex((match)=>match === '%s');
                if (errorIndex >= 0) error = args[errorIndex + 1];
                else error = args[1];
                if (!(error instanceof Error)) {
                    let index = 1;
                    let message = args[0].replace(/%[oOdisfc]/g, (match)=>{
                        switch(match){
                            case '%s':
                                return String(args[index++]);
                            case '%f':
                                return parseFloat(args[index++]);
                            case '%d':
                            case '%i':
                                return parseInt(args[index++], 10);
                            case '%o':
                            case '%O':
                                if (args[index] instanceof Error) return String(args[index++]);
                                else return JSON.stringify(args[index++]);
                            case '%c':
                                index++;
                                return '';
                        }
                    });
                    error = new Error(message);
                }
            } else error = new Error(args[0]);
        } else error = args.find((arg)=>arg instanceof Error);
        if (error && !error.message.includes('[parcel]') && typeof window !== 'undefined' && window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
            // Attempt to append the React component stack
            // TODO: use React.captureOwnerStack once stable.
            let hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (hook.renderers instanceof Map) {
                for (let renderer of hook.renderers.values())if (typeof renderer?.currentDispatcherRef?.getCurrentStack === 'function') {
                    let stack = renderer.currentDispatcherRef.getCurrentStack();
                    if (stack) {
                        error.stack += stack;
                        break;
                    }
                }
            }
            onError(error);
        }
        original.apply(console, args);
    };
/* eslint-enable no-console */ }
function $6d40ebe8356580e0$export$38ec23daa6e8dcdf(crash) {
    const crashWithFramesRunTime = $6d40ebe8356580e0$export$9123e6c9c0ac21ed(crash);
    $883a43040cbd0629$export$6503ec6e8aabbaf(window, (error)=>crashWithFramesRunTime(error, false));
    $900f8c32b7484e20$export$6503ec6e8aabbaf(window, (error)=>crashWithFramesRunTime(error, true));
    $5f72ade198404e99$export$6503ec6e8aabbaf();
    $6d40ebe8356580e0$var$patchConsole('error', (error)=>crashWithFramesRunTime(error, false));
    return function() {
        $5f72ade198404e99$export$d07f55d4c15c0440();
        $900f8c32b7484e20$export$d07f55d4c15c0440(window);
        $883a43040cbd0629$export$d07f55d4c15c0440(window);
    };
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ var $10ecac3e4062713a$var$t, $10ecac3e4062713a$var$r, $10ecac3e4062713a$var$u, $10ecac3e4062713a$var$i, $10ecac3e4062713a$var$o = 0, $10ecac3e4062713a$var$f = [], $10ecac3e4062713a$var$c = $b6c7f0288a15c619$export$41c562ebe57d11e2, $10ecac3e4062713a$var$e = $10ecac3e4062713a$var$c.__b, $10ecac3e4062713a$var$a = $10ecac3e4062713a$var$c.__r, $10ecac3e4062713a$var$v = $10ecac3e4062713a$var$c.diffed, $10ecac3e4062713a$var$l = $10ecac3e4062713a$var$c.__c, $10ecac3e4062713a$var$m = $10ecac3e4062713a$var$c.unmount, $10ecac3e4062713a$var$s = $10ecac3e4062713a$var$c.__;
function $10ecac3e4062713a$var$p(n, t) {
    $10ecac3e4062713a$var$c.__h && $10ecac3e4062713a$var$c.__h($10ecac3e4062713a$var$r, n, $10ecac3e4062713a$var$o || t), $10ecac3e4062713a$var$o = 0;
    var u = $10ecac3e4062713a$var$r.__H || ($10ecac3e4062713a$var$r.__H = {
        __: [],
        __h: []
    });
    return n >= u.__.length && u.__.push({}), u.__[n];
}
function $10ecac3e4062713a$export$60241385465d0a34(n) {
    return $10ecac3e4062713a$var$o = 1, $10ecac3e4062713a$export$13e3392192263954($10ecac3e4062713a$var$D, n);
}
function $10ecac3e4062713a$export$13e3392192263954(n, u, i) {
    var o = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 2);
    if (o.t = n, !o.__c && (o.__ = [
        i ? i(u) : $10ecac3e4062713a$var$D(void 0, u),
        function(n) {
            var t = o.__N ? o.__N[0] : o.__[0], r = o.t(t, n);
            t !== r && (o.__N = [
                r,
                o.__[1]
            ], o.__c.setState({}));
        }
    ], o.__c = $10ecac3e4062713a$var$r, !$10ecac3e4062713a$var$r.__f)) {
        var f = function(n, t, r) {
            if (!o.__c.__H) return !0;
            var u = o.__c.__H.__.filter(function(n) {
                return !!n.__c;
            });
            if (u.every(function(n) {
                return !n.__N;
            })) return !c || c.call(this, n, t, r);
            var i = o.__c.props !== n;
            return u.forEach(function(n) {
                if (n.__N) {
                    var t = n.__[0];
                    n.__ = n.__N, n.__N = void 0, t !== n.__[0] && (i = !0);
                }
            }), c && c.call(this, n, t, r) || i;
        };
        $10ecac3e4062713a$var$r.__f = !0;
        var c = $10ecac3e4062713a$var$r.shouldComponentUpdate, e = $10ecac3e4062713a$var$r.componentWillUpdate;
        $10ecac3e4062713a$var$r.componentWillUpdate = function(n, t, r) {
            if (this.__e) {
                var u = c;
                c = void 0, f(n, t, r), c = u;
            }
            e && e.call(this, n, t, r);
        }, $10ecac3e4062713a$var$r.shouldComponentUpdate = f;
    }
    return o.__N || o.__;
}
function $10ecac3e4062713a$export$6d9c69b0de29b591(n, u) {
    var i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 3);
    !$10ecac3e4062713a$var$c.__s && $10ecac3e4062713a$var$C(i.__H, u) && (i.__ = n, i.u = u, $10ecac3e4062713a$var$r.__H.__h.push(i));
}
function $10ecac3e4062713a$export$e5c5a5f917a5871c(n, u) {
    var i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 4);
    !$10ecac3e4062713a$var$c.__s && $10ecac3e4062713a$var$C(i.__H, u) && (i.__ = n, i.u = u, $10ecac3e4062713a$var$r.__h.push(i));
}
function $10ecac3e4062713a$export$b8f5890fc79d6aca(n) {
    return $10ecac3e4062713a$var$o = 5, $10ecac3e4062713a$export$1538c33de8887b59(function() {
        return {
            current: n
        };
    }, []);
}
function $10ecac3e4062713a$export$d5a552a76deda3c2(n, t, r) {
    $10ecac3e4062713a$var$o = 6, $10ecac3e4062713a$export$e5c5a5f917a5871c(function() {
        if ("function" == typeof n) {
            var r = n(t());
            return function() {
                n(null), r && "function" == typeof r && r();
            };
        }
        if (n) return n.current = t(), function() {
            return n.current = null;
        };
    }, null == r ? r : r.concat(n));
}
function $10ecac3e4062713a$export$1538c33de8887b59(n, r) {
    var u = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 7);
    return $10ecac3e4062713a$var$C(u.__H, r) && (u.__ = n(), u.__H = r, u.__h = n), u.__;
}
function $10ecac3e4062713a$export$35808ee640e87ca7(n, t) {
    return $10ecac3e4062713a$var$o = 8, $10ecac3e4062713a$export$1538c33de8887b59(function() {
        return n;
    }, t);
}
function $10ecac3e4062713a$export$fae74005e78b1a27(n) {
    var u = $10ecac3e4062713a$var$r.context[n.__c], i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 9);
    return i.c = n, u ? (null == i.__ && (i.__ = !0, u.sub($10ecac3e4062713a$var$r)), u.props.value) : n.__;
}
function $10ecac3e4062713a$export$dc8fbce3eb94dc1e(n, t) {
    $10ecac3e4062713a$var$c.useDebugValue && $10ecac3e4062713a$var$c.useDebugValue(t ? t(n) : n);
}
function $10ecac3e4062713a$export$c052f6604b7d51fe(n) {
    var u = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 10), i = $10ecac3e4062713a$export$60241385465d0a34();
    return u.__ = n, $10ecac3e4062713a$var$r.componentDidCatch || ($10ecac3e4062713a$var$r.componentDidCatch = function(n, t) {
        u.__ && u.__(n, t), i[1](n);
    }), [
        i[0],
        function() {
            i[1](void 0);
        }
    ];
}
function $10ecac3e4062713a$export$f680877a34711e37() {
    var n = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 11);
    if (!n.__) {
        for(var u = $10ecac3e4062713a$var$r.__v; null !== u && !u.__m && null !== u.__;)u = u.__;
        var i = u.__m || (u.__m = [
            0,
            0
        ]);
        n.__ = "P" + i[0] + "-" + i[1]++;
    }
    return n.__;
}
function $10ecac3e4062713a$var$j() {
    for(var n; n = $10ecac3e4062713a$var$f.shift();)if (n.__P && n.__H) try {
        n.__H.__h.forEach($10ecac3e4062713a$var$z), n.__H.__h.forEach($10ecac3e4062713a$var$B), n.__H.__h = [];
    } catch (t) {
        n.__H.__h = [], $10ecac3e4062713a$var$c.__e(t, n.__v);
    }
}
$10ecac3e4062713a$var$c.__b = function(n) {
    $10ecac3e4062713a$var$r = null, $10ecac3e4062713a$var$e && $10ecac3e4062713a$var$e(n);
}, $10ecac3e4062713a$var$c.__ = function(n, t) {
    n && t.__k && t.__k.__m && (n.__m = t.__k.__m), $10ecac3e4062713a$var$s && $10ecac3e4062713a$var$s(n, t);
}, $10ecac3e4062713a$var$c.__r = function(n) {
    $10ecac3e4062713a$var$a && $10ecac3e4062713a$var$a(n), $10ecac3e4062713a$var$t = 0;
    var i = ($10ecac3e4062713a$var$r = n.__c).__H;
    i && ($10ecac3e4062713a$var$u === $10ecac3e4062713a$var$r ? (i.__h = [], $10ecac3e4062713a$var$r.__h = [], i.__.forEach(function(n) {
        n.__N && (n.__ = n.__N), n.u = n.__N = void 0;
    })) : (i.__h.forEach($10ecac3e4062713a$var$z), i.__h.forEach($10ecac3e4062713a$var$B), i.__h = [], $10ecac3e4062713a$var$t = 0)), $10ecac3e4062713a$var$u = $10ecac3e4062713a$var$r;
}, $10ecac3e4062713a$var$c.diffed = function(n) {
    $10ecac3e4062713a$var$v && $10ecac3e4062713a$var$v(n);
    var t = n.__c;
    t && t.__H && (t.__H.__h.length && (1 !== $10ecac3e4062713a$var$f.push(t) && $10ecac3e4062713a$var$i === $10ecac3e4062713a$var$c.requestAnimationFrame || (($10ecac3e4062713a$var$i = $10ecac3e4062713a$var$c.requestAnimationFrame) || $10ecac3e4062713a$var$w)($10ecac3e4062713a$var$j)), t.__H.__.forEach(function(n) {
        n.u && (n.__H = n.u), n.u = void 0;
    })), $10ecac3e4062713a$var$u = $10ecac3e4062713a$var$r = null;
}, $10ecac3e4062713a$var$c.__c = function(n, t) {
    t.some(function(n) {
        try {
            n.__h.forEach($10ecac3e4062713a$var$z), n.__h = n.__h.filter(function(n) {
                return !n.__ || $10ecac3e4062713a$var$B(n);
            });
        } catch (r) {
            t.some(function(n) {
                n.__h && (n.__h = []);
            }), t = [], $10ecac3e4062713a$var$c.__e(r, n.__v);
        }
    }), $10ecac3e4062713a$var$l && $10ecac3e4062713a$var$l(n, t);
}, $10ecac3e4062713a$var$c.unmount = function(n) {
    $10ecac3e4062713a$var$m && $10ecac3e4062713a$var$m(n);
    var t, r = n.__c;
    r && r.__H && (r.__H.__.forEach(function(n) {
        try {
            $10ecac3e4062713a$var$z(n);
        } catch (n) {
            t = n;
        }
    }), r.__H = void 0, t && $10ecac3e4062713a$var$c.__e(t, r.__v));
};
var $10ecac3e4062713a$var$k = "function" == typeof requestAnimationFrame;
function $10ecac3e4062713a$var$w(n) {
    var t, r = function() {
        clearTimeout(u), $10ecac3e4062713a$var$k && cancelAnimationFrame(t), setTimeout(n);
    }, u = setTimeout(r, 100);
    $10ecac3e4062713a$var$k && (t = requestAnimationFrame(r));
}
function $10ecac3e4062713a$var$z(n) {
    var t = $10ecac3e4062713a$var$r, u = n.__c;
    "function" == typeof u && (n.__c = void 0, u()), $10ecac3e4062713a$var$r = t;
}
function $10ecac3e4062713a$var$B(n) {
    var t = $10ecac3e4062713a$var$r;
    n.__c = n.__(), $10ecac3e4062713a$var$r = t;
}
function $10ecac3e4062713a$var$C(n, t) {
    return !n || n.length !== t.length || t.some(function(t, r) {
        return t !== n[r];
    });
}
function $10ecac3e4062713a$var$D(n, t) {
    return "function" == typeof t ? t(n) : t;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $74bb4be6e9b78681$export$f30cb9bc4f736419 = {
    // Colors for components styles
    background: 'white',
    color: 'black',
    headerColor: '#ce1126',
    primaryPreBackground: 'rgba(206, 17, 38, 0.05)',
    primaryPreColor: 'inherit',
    secondaryPreBackground: 'rgba(251, 245, 180, 0.3)',
    secondaryPreColor: 'inherit',
    footer: '#878e91',
    anchorColor: '#878e91',
    toggleBackground: 'transparent',
    toggleColor: '#878e91',
    closeColor: '#293238',
    navBackground: 'rgba(206, 17, 38, 0.05)',
    navArrow: '#ce1126',
    diffAdded: 'green',
    diffRemoved: '#ce1126',
    // Light color scheme inspired by https://chriskempson.github.io/base16/css/base16-github.css
    // base00: '#ffffff',
    base01: '#f5f5f5',
    // base02: '#c8c8fa',
    base03: '#6e6e6e',
    // base04: '#e8e8e8',
    base05: '#333333',
    // base06: '#ffffff',
    // base07: '#ffffff',
    base08: '#881280',
    // base09: '#0086b3',
    // base0A: '#795da3',
    base0B: '#1155cc',
    base0C: '#994500',
    // base0D: '#795da3',
    base0E: '#c80000'
};
const $74bb4be6e9b78681$export$3e936a8db52a10a0 = {
    // Colors for components styles
    background: '#353535',
    color: 'white',
    headerColor: '#e83b46',
    primaryPreBackground: 'rgba(206, 17, 38, 0.1)',
    primaryPreColor: '#fccfcf',
    secondaryPreBackground: 'rgba(251, 245, 180, 0.1)',
    secondaryPreColor: '#fbf5b4',
    footer: '#878e91',
    anchorColor: '#878e91',
    toggleBackground: 'transparent',
    toggleColor: '#878e91',
    closeColor: '#ffffff',
    navBackground: 'rgba(206, 17, 38, 0.2)',
    navArrow: '#ce1126',
    diffAdded: '#85e285',
    diffRemoved: '#ff5459',
    // Dark color scheme inspired by https://github.com/atom/base16-tomorrow-dark-theme/blob/master/styles/colors.less
    // base00: '#1d1f21',
    base01: '#282a2e',
    // base02: '#373b41',
    base03: '#969896',
    // base04: '#b4b7b4',
    base05: '#c5c8c6',
    // base06: '#e0e0e0',
    // base07: '#ffffff',
    base08: '#cc6666',
    // base09: '#de935f',
    // base0A: '#f0c674',
    base0B: '#b5bd68',
    base0C: '#8abeb7',
    // base0D: '#81a2be',
    base0E: '#b294bb'
};
const $74bb4be6e9b78681$export$bca14c5b3b88a9c9 = Object.fromEntries(Object.keys($74bb4be6e9b78681$export$f30cb9bc4f736419).map((key)=>[
        key,
        `light-dark(${$74bb4be6e9b78681$export$f30cb9bc4f736419[key]}, ${$74bb4be6e9b78681$export$3e936a8db52a10a0[key]})`
    ]));
const $74bb4be6e9b78681$export$7ef984671d1853d7 = {
    width: '100vw',
    height: '100vh',
    maxWidth: 'none',
    maxHeight: 'none',
    border: 0,
    margin: 0,
    padding: 0,
    boxSizing: 'border-box',
    textAlign: 'center',
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    outline: 'none',
    colorScheme: 'light dark'
};
const $20d888b381d18c6c$var$overlayStyle = {
    position: 'relative',
    display: 'inline-flex',
    flexDirection: 'column',
    height: '100%',
    width: '1024px',
    maxWidth: '100%',
    overflowX: 'hidden',
    overflowY: 'auto',
    padding: '0.5rem',
    boxSizing: 'border-box',
    textAlign: 'left',
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '11px',
    whiteSpace: 'pre-wrap',
    wordBreak: 'break-word',
    lineHeight: 1.5,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color
};
function $20d888b381d18c6c$var$ErrorOverlay(props) {
    const { shortcutHandler: shortcutHandler } = props;
    $10ecac3e4062713a$export$6d9c69b0de29b591(()=>{
        const onKeyDown = (e)=>{
            if (shortcutHandler) shortcutHandler(e.key);
        };
        window.addEventListener('keydown', onKeyDown);
        return ()=>{
            window.removeEventListener('keydown', onKeyDown);
        };
    }, [
        shortcutHandler
    ]);
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $20d888b381d18c6c$var$overlayStyle,
        children: props.children
    });
}
var $20d888b381d18c6c$export$2e2bcd8739ae039 = $20d888b381d18c6c$var$ErrorOverlay;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $7aae0c9ea64fc08c$var$closeButtonStyle = {
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.closeColor,
    lineHeight: '1rem',
    fontSize: '1.5rem',
    padding: '1rem',
    cursor: 'pointer',
    position: 'absolute',
    right: 0,
    top: 0
};
function $7aae0c9ea64fc08c$var$CloseButton({ close: close }) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        title: "Click or press Escape to dismiss.",
        onClick: close,
        style: $7aae0c9ea64fc08c$var$closeButtonStyle,
        children: "\xd7"
    });
}
var $7aae0c9ea64fc08c$export$2e2bcd8739ae039 = $7aae0c9ea64fc08c$var$CloseButton;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $1adc179a826c5dd2$var$navigationBarStyle = {
    marginBottom: '0.5rem'
};
const $1adc179a826c5dd2$var$buttonContainerStyle = {
    marginRight: '1em'
};
const $1adc179a826c5dd2$var$_navButtonStyle = {
    border: 'none',
    borderRadius: '4px',
    padding: '3px 6px',
    cursor: 'pointer'
};
const $1adc179a826c5dd2$var$leftButtonStyle = {
    ...$1adc179a826c5dd2$var$_navButtonStyle,
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navArrow,
    borderTopRightRadius: '0px',
    borderBottomRightRadius: '0px',
    marginRight: '1px'
};
const $1adc179a826c5dd2$var$rightButtonStyle = {
    ...$1adc179a826c5dd2$var$_navButtonStyle,
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navArrow,
    borderTopLeftRadius: '0px',
    borderBottomLeftRadius: '0px'
};
function $1adc179a826c5dd2$var$NavigationBar(props) {
    const { currentError: currentError, totalErrors: totalErrors, previous: previous, next: next } = props;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $1adc179a826c5dd2$var$navigationBarStyle,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                style: $1adc179a826c5dd2$var$buttonContainerStyle,
                children: [
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: previous,
                        style: $1adc179a826c5dd2$var$leftButtonStyle,
                        children: "\u2190"
                    }),
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: next,
                        style: $1adc179a826c5dd2$var$rightButtonStyle,
                        children: "\u2192"
                    })
                ]
            }),
            `${currentError} of ${totalErrors} errors on the page`
        ]
    });
}
var $1adc179a826c5dd2$export$2e2bcd8739ae039 = $1adc179a826c5dd2$var$NavigationBar;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $c306e3a42547c8c2$var$headerStyle = {
    fontSize: '2em',
    fontFamily: 'sans-serif',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.headerColor,
    whiteSpace: 'pre-wrap',
    // Top bottom margin spaces header
    // Right margin revents overlap with close button
    margin: '0 2rem 0.75rem 0',
    flex: '0 0 auto'
};
function $c306e3a42547c8c2$var$Header(props) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $c306e3a42547c8c2$var$headerStyle,
        children: props.headerText
    });
}
var $c306e3a42547c8c2$export$2e2bcd8739ae039 = $c306e3a42547c8c2$var$Header;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $97c30df7f5c364f7$var$_preStyle = {
    position: 'relative',
    display: 'block',
    padding: '0.5em',
    marginTop: '0.5em',
    marginBottom: '0.5em',
    overflowX: 'auto',
    whiteSpace: 'pre-wrap',
    borderRadius: '0.25rem'
};
const $97c30df7f5c364f7$var$codeStyle = {
    fontFamily: 'Consolas, Menlo, monospace'
};
function $97c30df7f5c364f7$var$CodeBlock({ main: main, codeHTML: codeHTML }) {
    const primaryPreStyle = {
        ...$97c30df7f5c364f7$var$_preStyle,
        backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreBackground,
        color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreColor
    };
    const secondaryPreStyle = {
        ...$97c30df7f5c364f7$var$_preStyle,
        backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.secondaryPreBackground,
        color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.secondaryPreColor
    };
    const preStyle = main ? primaryPreStyle : secondaryPreStyle;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
        style: preStyle,
        children: $23b7c1cb98b19658$export$34b9dba7ce09269b("code", {
            style: $97c30df7f5c364f7$var$codeStyle,
            dangerouslySetInnerHTML: {
                __html: codeHTML
            }
        })
    });
}
var $97c30df7f5c364f7$export$2e2bcd8739ae039 = $97c30df7f5c364f7$var$CodeBlock;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $f78f50d61026cdc5$export$44b1e5ee7f53eae1(sourceFileName, sourceLineNumber, sourceColumnNumber, fileName, lineNumber, columnNumber, compiled) {
    let prettyURL;
    if (!compiled && sourceFileName && typeof sourceLineNumber === 'number') {
        // Remove everything up to the first /src/ or /node_modules/
        const trimMatch = /^[/|\\].*?[/|\\]((src|node_modules)[/|\\].*)/.exec(sourceFileName);
        if (trimMatch && trimMatch[1]) prettyURL = trimMatch[1];
        else prettyURL = sourceFileName;
        prettyURL += ':' + sourceLineNumber;
        // Note: we intentionally skip 0's because they're produced by cheap webpack maps
        if (sourceColumnNumber) prettyURL += ':' + sourceColumnNumber;
    } else if (fileName && typeof lineNumber === 'number') {
        prettyURL = fileName + ':' + lineNumber;
        // Note: we intentionally skip 0's because they're produced by cheap webpack maps
        if (columnNumber) prettyURL += ':' + columnNumber;
    } else prettyURL = 'unknown';
    return prettyURL.replace('webpack://', '.');
}
var $f78f50d61026cdc5$export$2e2bcd8739ae039 = $f78f50d61026cdc5$export$44b1e5ee7f53eae1;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $cdea3ae92bef6910$exports = {};
'use strict';
$cdea3ae92bef6910$exports = $cdea3ae92bef6910$var$ansiHTML;
// Reference to https://github.com/sindresorhus/ansi-regex
var $cdea3ae92bef6910$var$_regANSI = /(?:(?:\u001b\[)|\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\u001b[A-M]/;
var $cdea3ae92bef6910$var$_defColors = {
    reset: [
        'fff',
        '000'
    ],
    black: '000',
    red: 'ff0000',
    green: '209805',
    yellow: 'e8bf03',
    blue: '0000ff',
    magenta: 'ff00ff',
    cyan: '00ffee',
    lightgrey: 'f0f0f0',
    darkgrey: '888'
};
var $cdea3ae92bef6910$var$_styles = {
    30: 'black',
    31: 'red',
    32: 'green',
    33: 'yellow',
    34: 'blue',
    35: 'magenta',
    36: 'cyan',
    37: 'lightgrey'
};
var $cdea3ae92bef6910$var$_openTags = {
    '1': 'font-weight:bold',
    '2': 'opacity:0.5',
    '3': '<i>',
    '4': '<u>',
    '8': 'display:none',
    '9': '<del>' // delete
};
var $cdea3ae92bef6910$var$_closeTags = {
    '23': '</i>',
    '24': '</u>',
    '29': '</del>' // reset delete
};
[
    0,
    21,
    22,
    27,
    28,
    39,
    49
].forEach(function(n) {
    $cdea3ae92bef6910$var$_closeTags[n] = '</span>';
});
/**
 * Converts text with ANSI color codes to HTML markup.
 * @param {String} text
 * @returns {*}
 */ function $cdea3ae92bef6910$var$ansiHTML(text) {
    // Returns the text if the string has no ANSI escape code.
    if (!$cdea3ae92bef6910$var$_regANSI.test(text)) return text;
    // Cache opened sequence.
    var ansiCodes = [];
    // Replace with markup.
    var ret = text.replace(/\033\[(\d+)m/g, function(match, seq) {
        var ot = $cdea3ae92bef6910$var$_openTags[seq];
        if (ot) {
            // If current sequence has been opened, close it.
            if (!!~ansiCodes.indexOf(seq)) {
                ansiCodes.pop();
                return '</span>';
            }
            // Open tag.
            ansiCodes.push(seq);
            return ot[0] === '<' ? ot : '<span style="' + ot + ';">';
        }
        var ct = $cdea3ae92bef6910$var$_closeTags[seq];
        if (ct) {
            // Pop sequence
            ansiCodes.pop();
            return ct;
        }
        return '';
    });
    // Make sure tags are closed.
    var l = ansiCodes.length;
    l > 0 && (ret += Array(l + 1).join('</span>'));
    return ret;
}
/**
 * Customize colors.
 * @param {Object} colors reference to _defColors
 */ $cdea3ae92bef6910$var$ansiHTML.setColors = function(colors) {
    if (typeof colors !== 'object') throw new Error('`colors` parameter must be an Object.');
    var _finalColors = {};
    for(var key in $cdea3ae92bef6910$var$_defColors){
        var hex = colors.hasOwnProperty(key) ? colors[key] : null;
        if (!hex) {
            _finalColors[key] = $cdea3ae92bef6910$var$_defColors[key];
            continue;
        }
        if ('reset' === key) {
            if (typeof hex === 'string') hex = [
                hex
            ];
            if (!Array.isArray(hex) || hex.length === 0 || hex.some(function(h) {
                return typeof h !== 'string';
            })) throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000');
            var defHexColor = $cdea3ae92bef6910$var$_defColors[key];
            if (!hex[0]) hex[0] = defHexColor[0];
            if (hex.length === 1 || !hex[1]) {
                hex = [
                    hex[0]
                ];
                hex.push(defHexColor[1]);
            }
            hex = hex.slice(0, 2);
        } else if (typeof hex !== 'string') throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000');
        _finalColors[key] = hex;
    }
    $cdea3ae92bef6910$var$_setTags(_finalColors);
};
/**
 * Reset colors.
 */ $cdea3ae92bef6910$var$ansiHTML.reset = function() {
    $cdea3ae92bef6910$var$_setTags($cdea3ae92bef6910$var$_defColors);
};
/**
 * Expose tags, including open and close.
 * @type {Object}
 */ $cdea3ae92bef6910$var$ansiHTML.tags = {};
if (Object.defineProperty) {
    Object.defineProperty($cdea3ae92bef6910$var$ansiHTML.tags, 'open', {
        get: function() {
            return $cdea3ae92bef6910$var$_openTags;
        }
    });
    Object.defineProperty($cdea3ae92bef6910$var$ansiHTML.tags, 'close', {
        get: function() {
            return $cdea3ae92bef6910$var$_closeTags;
        }
    });
} else {
    $cdea3ae92bef6910$var$ansiHTML.tags.open = $cdea3ae92bef6910$var$_openTags;
    $cdea3ae92bef6910$var$ansiHTML.tags.close = $cdea3ae92bef6910$var$_closeTags;
}
function $cdea3ae92bef6910$var$_setTags(colors) {
    // reset all
    $cdea3ae92bef6910$var$_openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1];
    // inverse
    $cdea3ae92bef6910$var$_openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0];
    // dark grey
    $cdea3ae92bef6910$var$_openTags['90'] = 'color:#' + colors.darkgrey;
    for(var code in $cdea3ae92bef6910$var$_styles){
        var color = $cdea3ae92bef6910$var$_styles[code];
        var oriColor = colors[color] || '000';
        $cdea3ae92bef6910$var$_openTags[code] = 'color:#' + oriColor;
        code = parseInt(code);
        $cdea3ae92bef6910$var$_openTags[(code + 10).toString()] = 'background:#' + oriColor;
    }
}
$cdea3ae92bef6910$var$ansiHTML.reset();
// Map ANSI colors from what babel-code-frame uses to base16-github
// See: https://github.com/babel/babel/blob/e86f62b304d280d0bab52c38d61842b853848ba6/packages/babel-code-frame/src/index.js#L9-L22
const $b67e2a05a9c13039$var$colors = {
    reset: [
        $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base05,
        'transparent'
    ],
    black: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base05,
    red: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base08 /* marker, bg-invalid */ ,
    green: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0B /* string */ ,
    yellow: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base08 /* capitalized, jsx_tag, punctuator */ ,
    blue: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0C,
    magenta: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0C /* regex */ ,
    cyan: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0E /* keyword */ ,
    gray: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base03 /* comment, gutter */ ,
    lightgrey: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base01,
    darkgrey: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base03
};
/*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).setColors($b67e2a05a9c13039$var$colors);
// $FlowFixMe
for(let tag in /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open)/*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open[tag] = /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open[tag].replace(/#light-dark/g, 'light-dark');
function $b67e2a05a9c13039$var$generateAnsiHTML(txt) {
    return /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports)(txt.replace(/[&<>"']/g, (c)=>{
        switch(c){
            case '&':
                return '&amp';
            case '<':
                return '&lt;';
            case '>':
                return '&gt';
            case '"':
                return '&quot;';
            case "'":
                return '&#39;';
            default:
                return c;
        }
    }));
}
var $b67e2a05a9c13039$export$2e2bcd8739ae039 = $b67e2a05a9c13039$var$generateAnsiHTML;
const $e0e0fa52b83f95a9$var$linkStyle = {
    fontSize: '0.9em',
    marginBottom: '0.9em'
};
const $e0e0fa52b83f95a9$var$anchorStyle = {
    textDecoration: 'none',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.anchorColor,
    cursor: 'pointer'
};
const $e0e0fa52b83f95a9$var$codeAnchorStyle = {
    cursor: 'pointer'
};
const $e0e0fa52b83f95a9$var$toggleStyle = {
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.toggleColor,
    cursor: 'pointer',
    border: 'none',
    display: 'block',
    width: '100%',
    textAlign: 'left',
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.toggleBackground,
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '1em',
    padding: '0px',
    lineHeight: '1.5'
};
function $e0e0fa52b83f95a9$var$StackFrame(props) {
    const { frame: frame, critical: critical, showCode: showCode } = props;
    const { fileName: fileName, lineNumber: lineNumber, columnNumber: columnNumber, _scriptCode: scriptLines, _originalFileName: sourceFileName, _originalLineNumber: sourceLineNumber, _originalColumnNumber: sourceColumnNumber, _originalScriptCode: sourceLines } = frame;
    const functionName = frame.getFunctionName();
    const [compiled, setCompiled] = $10ecac3e4062713a$export$60241385465d0a34(!sourceLines);
    const getErrorLocation = ()=>{
        const { _originalFileName: fileName, _originalLineNumber: lineNumber } = props.frame;
        // Unknown file
        if (!fileName) return null;
        // e.g. "/path-to-my-app/webpack/bootstrap eaddeb46b67d75e4dfc1"
        const isInternalWebpackBootstrapCode = fileName.trim().indexOf(' ') !== -1;
        if (isInternalWebpackBootstrapCode) return null;
        // Code is in a real file
        return {
            fileName: fileName,
            lineNumber: lineNumber || 1
        };
    };
    const editorHandler = ()=>{
        const errorLoc = getErrorLocation();
        if (!errorLoc) return;
        props.editorHandler?.(errorLoc);
    };
    const url = $f78f50d61026cdc5$export$44b1e5ee7f53eae1(sourceFileName, sourceLineNumber, sourceColumnNumber, fileName, lineNumber, columnNumber, compiled);
    let codeBlockProps = null;
    if (showCode) {
        if (compiled && scriptLines && scriptLines.length !== 0 && lineNumber != null) codeBlockProps = {
            codeHTML: $b67e2a05a9c13039$export$2e2bcd8739ae039(scriptLines),
            main: critical
        };
        else if (!compiled && sourceLines && sourceLines.length !== 0 && sourceLineNumber != null) codeBlockProps = {
            codeHTML: $b67e2a05a9c13039$export$2e2bcd8739ae039(sourceLines),
            main: critical
        };
    }
    const canOpenInEditor = getErrorLocation() !== null && props.editorHandler !== null;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: functionName
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                style: $e0e0fa52b83f95a9$var$linkStyle,
                children: $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                    role: "link",
                    style: canOpenInEditor ? $e0e0fa52b83f95a9$var$anchorStyle : null,
                    onClick: canOpenInEditor ? editorHandler : null,
                    onKeyDown: canOpenInEditor ? (e)=>{
                        if (e.key === 'Enter') editorHandler();
                    } : null,
                    tabIndex: canOpenInEditor ? '0' : null,
                    children: url
                })
            }),
            codeBlockProps && $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                style: {
                    marginBottom: '1.5em'
                },
                children: [
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                        onClick: canOpenInEditor ? editorHandler : null,
                        style: canOpenInEditor ? $e0e0fa52b83f95a9$var$codeAnchorStyle : null,
                        children: $23b7c1cb98b19658$export$34b9dba7ce09269b($97c30df7f5c364f7$export$2e2bcd8739ae039, {
                            ...codeBlockProps
                        })
                    }),
                    scriptLines && sourceLines && $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        style: $e0e0fa52b83f95a9$var$toggleStyle,
                        onClick: ()=>{
                            setCompiled(!compiled);
                        },
                        children: 'View ' + (compiled ? 'source' : 'compiled')
                    })
                ]
            })
        ]
    });
}
var $e0e0fa52b83f95a9$export$2e2bcd8739ae039 = $e0e0fa52b83f95a9$var$StackFrame;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $9a1abb59f5d10ec8$var$_collapsibleStyle = {
    cursor: 'pointer',
    border: 'none',
    display: 'block',
    width: '100%',
    textAlign: 'left',
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '1em',
    padding: '0px',
    lineHeight: '1.5'
};
const $9a1abb59f5d10ec8$var$collapsibleCollapsedStyle = {
    ...$9a1abb59f5d10ec8$var$_collapsibleStyle,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color,
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    marginBottom: '1.5em'
};
const $9a1abb59f5d10ec8$var$collapsibleExpandedStyle = {
    ...$9a1abb59f5d10ec8$var$_collapsibleStyle,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color,
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    marginBottom: '0.6em'
};
function $9a1abb59f5d10ec8$var$Collapsible(props) {
    const [collapsed, setCollapsed] = $10ecac3e4062713a$export$60241385465d0a34(true);
    const toggleCollapsed = ()=>{
        setCollapsed(!collapsed);
    };
    const count = props.children.length;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("details", {
        open: !collapsed,
        onToggle: toggleCollapsed,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("summary", {
                style: collapsed ? $9a1abb59f5d10ec8$var$collapsibleCollapsedStyle : $9a1abb59f5d10ec8$var$collapsibleExpandedStyle,
                children: (collapsed ? "\u25B6" : "\u25BC") + ` ${count} stack frames were ` + (collapsed ? 'collapsed.' : 'expanded.')
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: [
                    props.children,
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: toggleCollapsed,
                        style: $9a1abb59f5d10ec8$var$collapsibleExpandedStyle,
                        children: `\u{25B2} ${count} stack frames were expanded.`
                    })
                ]
            })
        ]
    });
}
var $9a1abb59f5d10ec8$export$2e2bcd8739ae039 = $9a1abb59f5d10ec8$var$Collapsible;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $e95d7084caaf4e6d$export$723fa77eef12dd9f(sourceFileName, fileName) {
    return sourceFileName == null || sourceFileName === '' || sourceFileName.indexOf('~/') !== -1 || sourceFileName.indexOf('node_modules/') !== -1 || sourceFileName.indexOf('error-overlay') !== -1 || sourceFileName.trim().indexOf(' ') !== -1 || fileName == null || fileName === '';
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $a5027556d7003a42$export$64794fcb05cf0bcf(errorName) {
    switch(errorName){
        case 'EvalError':
        case 'InternalError':
        case 'RangeError':
        case 'ReferenceError':
        case 'SyntaxError':
        case 'TypeError':
        case 'URIError':
            return true;
        default:
            return false;
    }
}
var $a5027556d7003a42$export$2e2bcd8739ae039 = $a5027556d7003a42$export$64794fcb05cf0bcf;
const $5ee7d2edb790dd06$var$traceStyle = {
    fontSize: '1em',
    flex: '0 1 auto',
    minHeight: '0px',
    overflow: 'auto'
};
function $5ee7d2edb790dd06$var$StackTrace(props) {
    const { stackFrames: stackFrames, errorName: errorName, contextSize: contextSize, editorHandler: editorHandler } = props;
    const renderedFrames = [];
    let hasReachedAppCode = false, currentBundle = [], bundleCount = 0;
    stackFrames.forEach((frame, index)=>{
        const { fileName: fileName, _originalFileName: sourceFileName } = frame;
        const isInternalUrl = $e95d7084caaf4e6d$export$723fa77eef12dd9f(sourceFileName, fileName);
        const isThrownIntentionally = !$a5027556d7003a42$export$64794fcb05cf0bcf(errorName);
        const shouldCollapse = isInternalUrl && (isThrownIntentionally || hasReachedAppCode);
        if (!isInternalUrl) hasReachedAppCode = true;
        const frameEle = $23b7c1cb98b19658$export$34b9dba7ce09269b($e0e0fa52b83f95a9$export$2e2bcd8739ae039, {
            frame: frame,
            contextSize: contextSize,
            critical: index === 0,
            showCode: !shouldCollapse,
            editorHandler: editorHandler
        }, 'frame-' + index);
        const lastElement = index === stackFrames.length - 1;
        if (shouldCollapse) currentBundle.push(frameEle);
        if (!shouldCollapse || lastElement) {
            if (currentBundle.length === 1) renderedFrames.push(currentBundle[0]);
            else if (currentBundle.length > 1) {
                bundleCount++;
                renderedFrames.push($23b7c1cb98b19658$export$34b9dba7ce09269b($9a1abb59f5d10ec8$export$2e2bcd8739ae039, {
                    children: currentBundle
                }, 'bundle-' + bundleCount));
            }
            currentBundle = [];
        }
        if (!shouldCollapse) renderedFrames.push(frameEle);
    });
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $5ee7d2edb790dd06$var$traceStyle,
        children: renderedFrames
    });
}
var $5ee7d2edb790dd06$export$2e2bcd8739ae039 = $5ee7d2edb790dd06$var$StackTrace;
const $2eeadf2892cff4e4$var$diffStyle = {
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreColor,
    padding: '0.5em',
    overflowX: 'auto',
    whiteSpace: 'pre-wrap',
    borderRadius: '0.25rem'
};
function $2eeadf2892cff4e4$export$2e2bcd8739ae039({ diff: diff }) {
    let lines = diff.split('\n').flatMap((line, i)=>[
            $2eeadf2892cff4e4$var$formatLine(line, i),
            '\n'
        ]).slice(0, -1);
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
        style: $2eeadf2892cff4e4$var$diffStyle,
        children: lines
    });
}
function $2eeadf2892cff4e4$var$formatLine(line, index) {
    if (line.startsWith('+')) return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        style: {
            color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.diffAdded,
            fontWeight: 'bold'
        },
        children: line
    }, index);
    else if (line.startsWith('-') || line.startsWith('>')) return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        style: {
            color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.diffRemoved,
            fontWeight: 'bold'
        },
        children: line
    }, index);
    else return line;
}
const $4baa71cb4cecc0ea$var$wrapperStyle = {
    display: 'flex',
    flexDirection: 'column'
};
function $4baa71cb4cecc0ea$var$RuntimeError({ errorRecord: errorRecord, editorHandler: editorHandler }) {
    const { error: error, unhandledRejection: unhandledRejection, contextSize: contextSize, stackFrames: stackFrames } = errorRecord;
    const errorName = unhandledRejection ? 'Unhandled Rejection (' + error.name + ')' : error.name;
    // Make header prettier
    const message = error.message;
    let headerText = message.match(/^\w*:/) || !errorName ? message : errorName + ': ' + message;
    headerText = headerText // TODO: maybe remove this prefix from fbjs?
    // It's just scaring people
    .replace(/^Invariant Violation:\s*/, '') // This is not helpful either:
    .replace(/^Warning:\s*/, '') // Break the actionable part to the next line.
    // AFAIK React 16+ should already do this.
    .replace(' Check the render method', '\n\nCheck the render method').replace(' Check your code at', '\n\nCheck your code at');
    let link, diff;
    if (headerText.includes('https://react.dev/link/hydration-mismatch')) {
        [headerText, diff] = headerText.split('https://react.dev/link/hydration-mismatch');
        link = 'https://react.dev/link/hydration-mismatch';
    } else if (headerText.includes('This will cause a hydration error.')) {
        [headerText, diff] = headerText.split('This will cause a hydration error.');
        headerText += 'This will cause a hydration error.';
    }
    let lines = headerText.split('\n');
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $4baa71cb4cecc0ea$var$wrapperStyle,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b($c306e3a42547c8c2$export$2e2bcd8739ae039, {
                headerText: lines[0]
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
                children: lines.slice(1).join('\n').trim()
            }),
            link && $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: $23b7c1cb98b19658$export$34b9dba7ce09269b("a", {
                    href: link,
                    target: "_blank",
                    rel: "noreferrer",
                    children: link
                })
            }),
            diff && $23b7c1cb98b19658$export$34b9dba7ce09269b($2eeadf2892cff4e4$export$2e2bcd8739ae039, {
                diff: diff.trim()
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($5ee7d2edb790dd06$export$2e2bcd8739ae039, {
                stackFrames: stackFrames,
                errorName: errorName,
                contextSize: contextSize,
                editorHandler: editorHandler
            })
        ]
    });
}
var $4baa71cb4cecc0ea$export$2e2bcd8739ae039 = $4baa71cb4cecc0ea$var$RuntimeError;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $7606db210182b733$var$footerStyle = {
    fontFamily: 'sans-serif',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.footer,
    marginTop: '0.5rem',
    flex: '0 0 auto'
};
function $7606db210182b733$var$Footer(props) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $7606db210182b733$var$footerStyle,
        children: [
            props.line1,
            $23b7c1cb98b19658$export$34b9dba7ce09269b("br", {}),
            props.line2
        ]
    });
}
var $7606db210182b733$export$2e2bcd8739ae039 = $7606db210182b733$var$Footer;
function $d0eac8b125ed15e2$var$RuntimeErrorContainer(props) {
    const { errorRecords: errorRecords, close: close } = props;
    const totalErrors = errorRecords.length;
    let [currentIndex, setCurrentIndex] = $10ecac3e4062713a$export$60241385465d0a34(0);
    let previous = ()=>{
        setCurrentIndex(currentIndex > 0 ? currentIndex - 1 : totalErrors - 1);
    };
    let next = ()=>{
        setCurrentIndex(currentIndex < totalErrors - 1 ? currentIndex + 1 : 0);
    };
    return $23b7c1cb98b19658$export$34b9dba7ce09269b($20d888b381d18c6c$export$2e2bcd8739ae039, {
        shortcutHandler: (key)=>{
            if (key === 'Escape') props.close();
            else if (key === 'ArrowLeft') previous();
            else if (key === 'ArrowRight') next();
        },
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b($7aae0c9ea64fc08c$export$2e2bcd8739ae039, {
                close: close
            }),
            totalErrors > 1 && $23b7c1cb98b19658$export$34b9dba7ce09269b($1adc179a826c5dd2$export$2e2bcd8739ae039, {
                currentError: currentIndex + 1,
                totalErrors: totalErrors,
                previous: previous,
                next: next
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($4baa71cb4cecc0ea$export$2e2bcd8739ae039, {
                errorRecord: errorRecords[currentIndex],
                editorHandler: props.editorHandler
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($7606db210182b733$export$2e2bcd8739ae039, {
                line1: "This screen is visible only in development. It will not appear if the app crashes in production.",
                line2: "Open your browser\u2019s developer console to further inspect this error.  Click the 'X' or hit ESC to dismiss this message."
            })
        ]
    });
}
var $d0eac8b125ed15e2$export$2e2bcd8739ae039 = $d0eac8b125ed15e2$var$RuntimeErrorContainer;
let $da9882e673ac146b$var$iframe = null;
let $da9882e673ac146b$var$editorHandler = null;
let $da9882e673ac146b$var$currentRuntimeErrorRecords = [];
let $da9882e673ac146b$var$stopListeningToRuntimeErrors = null;
function $da9882e673ac146b$export$25a22ac46f1bd016(handler) {
    $da9882e673ac146b$var$editorHandler = handler;
    if ($da9882e673ac146b$var$iframe) $da9882e673ac146b$var$update();
}
function $da9882e673ac146b$export$74e9101ce4078c0(error, options) {
    $6d40ebe8356580e0$export$9123e6c9c0ac21ed($da9882e673ac146b$var$handleRuntimeError(options))(error, false);
}
function $da9882e673ac146b$export$cda2c88a41631c16(options) {
    if ($da9882e673ac146b$var$stopListeningToRuntimeErrors !== null) throw new Error('Already listening');
    $da9882e673ac146b$var$stopListeningToRuntimeErrors = $6d40ebe8356580e0$export$38ec23daa6e8dcdf($da9882e673ac146b$var$handleRuntimeError(options));
}
const $da9882e673ac146b$var$handleRuntimeError = (options)=>(errorRecord)=>{
        try {
            if (typeof options.onError === 'function') options.onError.call(null);
        } finally{
            if ($da9882e673ac146b$var$currentRuntimeErrorRecords.some(({ error: error })=>error === errorRecord.error)) // This fixes https://github.com/facebook/create-react-app/issues/3011.
            // eslint-disable-next-line no-unsafe-finally
            return;
            $da9882e673ac146b$var$currentRuntimeErrorRecords = $da9882e673ac146b$var$currentRuntimeErrorRecords.concat([
                errorRecord
            ]);
            $da9882e673ac146b$var$update();
        }
    };
function $da9882e673ac146b$export$1cfa6d161ca81bd9() {
    $da9882e673ac146b$var$currentRuntimeErrorRecords = [];
    $da9882e673ac146b$var$update();
}
function $da9882e673ac146b$export$25ba7d9a816639e7() {
    if ($da9882e673ac146b$var$stopListeningToRuntimeErrors === null) throw new Error('Not currently listening');
    try {
        $da9882e673ac146b$var$stopListeningToRuntimeErrors();
    } finally{
        $da9882e673ac146b$var$stopListeningToRuntimeErrors = null;
    }
}
let $da9882e673ac146b$var$rootNode, $da9882e673ac146b$var$shadow;
function $da9882e673ac146b$var$update() {
    if (!$da9882e673ac146b$var$rootNode) {
        $da9882e673ac146b$var$rootNode = document.createElement('parcel-error-overlay');
        $da9882e673ac146b$var$shadow = $da9882e673ac146b$var$rootNode.attachShadow({
            mode: 'open'
        });
        if ($da9882e673ac146b$var$rootNode) document.body?.appendChild($da9882e673ac146b$var$rootNode);
    }
    if ($da9882e673ac146b$var$currentRuntimeErrorRecords.length > 0 && $da9882e673ac146b$var$shadow) $b6c7f0288a15c619$export$b3890eb0ae9dca99($23b7c1cb98b19658$export$34b9dba7ce09269b("dialog", {
        ref: (d)=>d?.showModal(),
        style: $74bb4be6e9b78681$export$7ef984671d1853d7,
        onClose: $da9882e673ac146b$export$1cfa6d161ca81bd9,
        children: $23b7c1cb98b19658$export$34b9dba7ce09269b($da9882e673ac146b$var$ErrorOverlay, {})
    }), $da9882e673ac146b$var$shadow);
    else {
        $da9882e673ac146b$var$rootNode?.remove();
        $da9882e673ac146b$var$rootNode = null;
    }
}
function $da9882e673ac146b$var$ErrorOverlay() {
    if ($da9882e673ac146b$var$currentRuntimeErrorRecords.length > 0) return $23b7c1cb98b19658$export$34b9dba7ce09269b($d0eac8b125ed15e2$export$2e2bcd8739ae039, {
        errorRecords: $da9882e673ac146b$var$currentRuntimeErrorRecords,
        close: $da9882e673ac146b$export$1cfa6d161ca81bd9,
        editorHandler: $da9882e673ac146b$var$editorHandler
    });
    return null;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"avkjs":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mergeStyles", ()=>(0, _foreignJs.mergeStyles));
parcelHelpers.export(exports, "unsafeCreateDOMComponent_", ()=>(0, _foreignJs.unsafeCreateDOMComponent_));
parcelHelpers.export(exports, "css", ()=>css);
parcelHelpers.export(exports, "unsafeCreateDOMComponent", ()=>unsafeCreateDOMComponent);
parcelHelpers.export(exports, "semigroupCSS", ()=>semigroupCSS);
parcelHelpers.export(exports, "monoidCSS", ()=>monoidCSS);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../React.Basic/index.js");
var _indexJs1 = require("../Unsafe.Coerce/index.js");
var unsafeCreateDOMComponent = /* #__PURE__ */ _foreignJs.unsafeCreateDOMComponent_(_indexJs.element);
var semigroupCSS = {
    append: function(a) {
        return function(b) {
            return _foreignJs.mergeStyles([
                b,
                a
            ]);
        };
    }
};
var css = _indexJs1.unsafeCoerce;
var monoidCSS = {
    mempty: /* #__PURE__ */ css({}),
    Semigroup0: function() {
        return semigroupCSS;
    }
};

},{"./foreign.js":"7VrZS","../React.Basic/index.js":"jz8Ob","../Unsafe.Coerce/index.js":"kRX7u","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7VrZS":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$ea03 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$ea03.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$ea03.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mergeStyles", ()=>mergeStyles);
parcelHelpers.export(exports, "unsafeCreateDOMComponent_", ()=>unsafeCreateDOMComponent_);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
function mergeStyles(styles) {
    return Object.assign.apply(null, [
        {}
    ].concat(styles));
}
function unsafeCreateDOMComponent_(createElement) {
    return (el)=>{
        const flattenDataProp = (props, ref)=>{
            var data = null;
            if (props._data != null) {
                data = {
                    _data: undefined
                };
                Object.entries(props._data).forEach(function(entry) {
                    data["data-" + entry[0]] = entry[1];
                });
            }
            var aria = null;
            if (props._aria != null) {
                aria = {
                    _aria: undefined
                };
                Object.entries(props._aria).forEach(function(entry) {
                    aria["aria-" + entry[0]] = entry[1];
                });
            }
            return Object.assign({
                ref
            }, props, data, aria);
        };
        return ()=>{
            const c = (0, _reactDefault.default).forwardRef((props, ref)=>createElement(el)(flattenDataProp(props, ref)));
            c.displayName = el;
            return c;
        };
    };
}

  $parcel$ReactRefreshHelpers$ea03.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"kRX7u":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafeCoerce", ()=>(0, _foreignJs.unsafeCoerce));
var _foreignJs = require("./foreign.js");

},{"./foreign.js":"acDaF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"acDaF":[function(require,module,exports,__globalThis) {
// module Unsafe.Coerce
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafeCoerce", ()=>unsafeCoerce);
const unsafeCoerce = function(x) {
    return x;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kv6JX":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "reactChildrenToArray", ()=>(0, _foreignJs.reactChildrenToArray));
parcelHelpers.export(exports, "displayName", ()=>(0, _foreignJs.displayName));
parcelHelpers.export(exports, "consumer", ()=>(0, _indexJs13.consumer));
parcelHelpers.export(exports, "contextConsumer", ()=>(0, _indexJs13.contextConsumer));
parcelHelpers.export(exports, "contextProvider", ()=>(0, _indexJs13.contextProvider));
parcelHelpers.export(exports, "createContext", ()=>(0, _indexJs13.createContext));
parcelHelpers.export(exports, "element", ()=>(0, _indexJs13.element));
parcelHelpers.export(exports, "elementKeyed", ()=>(0, _indexJs13.elementKeyed));
parcelHelpers.export(exports, "empty", ()=>(0, _indexJs13.empty));
parcelHelpers.export(exports, "fragment", ()=>(0, _indexJs13.fragment));
parcelHelpers.export(exports, "keyed", ()=>(0, _indexJs13.keyed));
parcelHelpers.export(exports, "provider", ()=>(0, _indexJs13.provider));
parcelHelpers.export(exports, "bind", ()=>(0, _indexJs14.bind));
parcelHelpers.export(exports, "coerceHook", ()=>(0, _indexJs14.coerceHook));
parcelHelpers.export(exports, "discard", ()=>(0, _indexJs14.discard));
parcelHelpers.export(exports, "unsafeHook", ()=>(0, _indexJs14.unsafeHook));
parcelHelpers.export(exports, "unsafeRenderEffect", ()=>(0, _indexJs14.unsafeRenderEffect));
parcelHelpers.export(exports, "component", ()=>component);
parcelHelpers.export(exports, "reactComponent", ()=>reactComponent);
parcelHelpers.export(exports, "reactComponentWithChildren", ()=>reactComponentWithChildren);
parcelHelpers.export(exports, "reactComponentFromHook", ()=>reactComponentFromHook);
parcelHelpers.export(exports, "reactChildrenFromArray", ()=>reactChildrenFromArray);
parcelHelpers.export(exports, "memo", ()=>memo);
parcelHelpers.export(exports, "memo$prime", ()=>memo$prime);
parcelHelpers.export(exports, "useState", ()=>useState);
parcelHelpers.export(exports, "useState$prime", ()=>useState$prime);
parcelHelpers.export(exports, "useEffect", ()=>useEffect);
parcelHelpers.export(exports, "useEffectOnce", ()=>useEffectOnce);
parcelHelpers.export(exports, "useEffectAlways", ()=>useEffectAlways);
parcelHelpers.export(exports, "useLayoutEffect", ()=>useLayoutEffect);
parcelHelpers.export(exports, "useLayoutEffectOnce", ()=>useLayoutEffectOnce);
parcelHelpers.export(exports, "useLayoutEffectAlways", ()=>useLayoutEffectAlways);
parcelHelpers.export(exports, "useInsertionEffect", ()=>useInsertionEffect);
parcelHelpers.export(exports, "useInsertionEffectOnce", ()=>useInsertionEffectOnce);
parcelHelpers.export(exports, "useInsertionEffectAlways", ()=>useInsertionEffectAlways);
parcelHelpers.export(exports, "mkReducer", ()=>mkReducer);
parcelHelpers.export(exports, "runReducer", ()=>runReducer);
parcelHelpers.export(exports, "useReducer", ()=>useReducer);
parcelHelpers.export(exports, "readRef", ()=>readRef);
parcelHelpers.export(exports, "readRefMaybe", ()=>readRefMaybe);
parcelHelpers.export(exports, "writeRef", ()=>writeRef);
parcelHelpers.export(exports, "useRef", ()=>useRef);
parcelHelpers.export(exports, "useContext", ()=>useContext);
parcelHelpers.export(exports, "useEqCache", ()=>useEqCache);
parcelHelpers.export(exports, "useMemo", ()=>useMemo);
parcelHelpers.export(exports, "useDebugValue", ()=>useDebugValue);
parcelHelpers.export(exports, "useId", ()=>useId);
parcelHelpers.export(exports, "useTransition", ()=>useTransition);
parcelHelpers.export(exports, "useDeferredValue", ()=>useDeferredValue);
parcelHelpers.export(exports, "useSyncExternalStore", ()=>useSyncExternalStore);
parcelHelpers.export(exports, "useSyncExternalStore$prime", ()=>useSyncExternalStore$prime);
parcelHelpers.export(exports, "UnsafeReference", ()=>UnsafeReference);
parcelHelpers.export(exports, "newtypeUnsafeReference", ()=>newtypeUnsafeReference);
parcelHelpers.export(exports, "eqUnsafeReference", ()=>eqUnsafeReference);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Bind/index.js");
var _indexJs2 = require("../Data.Bifunctor/index.js");
var _indexJs3 = require("../Data.Eq/index.js");
var _indexJs4 = require("../Data.Function/index.js");
var _indexJs5 = require("../Data.Function.Uncurried/index.js");
var _indexJs6 = require("../Data.Functor/index.js");
var _indexJs7 = require("../Data.Nullable/index.js");
var _indexJs8 = require("../Data.Tuple/index.js");
var _indexJs9 = require("../Data.Tuple.Nested/index.js");
var _indexJs10 = require("../Data.Unit/index.js");
var _indexJs11 = require("../Effect/index.js");
var _indexJs12 = require("../Effect.Uncurried/index.js");
var _indexJs13 = require("../React.Basic/index.js");
var _indexJs14 = require("../React.Basic.Hooks.Internal/index.js");
var _indexJs15 = require("../Unsafe.Coerce/index.js");
var _indexJs16 = require("../Unsafe.Reference/index.js");
var mapFlipped = /* #__PURE__ */ _indexJs6.mapFlipped(_indexJs14.functorRender);
var rmap = /* #__PURE__ */ _indexJs2.rmap(_indexJs2.bifunctorTuple);
var map = /* #__PURE__ */ _indexJs6.map(_indexJs11.functorEffect);
var map1 = /* #__PURE__ */ _indexJs6.map(_indexJs14.functorRender);
var pure = /* #__PURE__ */ _indexJs.pure(_indexJs11.applicativeEffect);
var bind = /* #__PURE__ */ _indexJs1.bind(_indexJs11.bindEffect);
var UnsafeReference = function(x) {
    return x;
};
var Reducer = function(x) {
    return x;
};
var writeRef = /* #__PURE__ */ _indexJs12.runEffectFn2(_foreignJs.writeRef_);
var useTransition = /* #__PURE__ */ _indexJs14.unsafeHook(function() {
    return _foreignJs.useTransition_(_indexJs5.mkFn2(_indexJs8.Tuple.create));
});
var useSyncExternalStore$prime = function(subscribe) {
    return function(getSnapshot) {
        return _indexJs14.unsafeHook(function() {
            return _foreignJs.useSyncExternalStore2_(_indexJs12.mkEffectFn1(subscribe), getSnapshot);
        });
    };
};
var useSyncExternalStore = function(subscribe) {
    return function(getSnapshot) {
        return function(getServerSnapshot) {
            return _indexJs14.unsafeHook(function() {
                return _foreignJs.useSyncExternalStore3_(_indexJs12.mkEffectFn1(subscribe), getSnapshot, getServerSnapshot);
            });
        };
    };
};
var useState = function(initialState) {
    return _indexJs14.unsafeHook(function() {
        return _foreignJs.useState_(_indexJs5.mkFn2(_indexJs8.Tuple.create), initialState);
    });
};
var useState$prime = function(initialState) {
    return mapFlipped(useState(initialState))(rmap(function(v) {
        return function($36) {
            return v(_indexJs4["const"]($36));
        };
    }));
};
var useRef = function(initialValue) {
    return _indexJs14.unsafeHook(function() {
        return _foreignJs.useRef_(initialValue);
    });
};
var useReducer = function(initialState) {
    return function(v) {
        return _indexJs14.unsafeHook(function() {
            return _foreignJs.useReducer_(_indexJs5.mkFn2(_indexJs8.Tuple.create), v, initialState);
        });
    };
};
var useMemo = function(dictEq) {
    var eq = _indexJs3.eq(dictEq);
    return function(deps) {
        return function(computeA) {
            return _indexJs14.unsafeHook(function() {
                return _foreignJs.useMemo_(_indexJs5.mkFn2(eq), deps, computeA);
            });
        };
    };
};
var useLayoutEffectOnce = function(effect) {
    return _indexJs14.unsafeHook(function() {
        return _foreignJs.useLayoutEffect_(function(v, v1) {
            return true;
        }, _indexJs10.unit, effect);
    });
};
var useLayoutEffectAlways = function(effect) {
    return _indexJs14.unsafeHook(function() {
        return _foreignJs.useLayoutEffectAlways_(effect);
    });
};
var useLayoutEffect = function(dictEq) {
    var eq = _indexJs3.eq(dictEq);
    return function(deps) {
        return function(effect) {
            return _indexJs14.unsafeHook(function() {
                return _foreignJs.useLayoutEffect_(_indexJs5.mkFn2(eq), deps, effect);
            });
        };
    };
};
var useInsertionEffectOnce = function(effect) {
    return _indexJs14.unsafeHook(function() {
        return _foreignJs.useInsertionEffect_(function(v, v1) {
            return true;
        }, _indexJs10.unit, effect);
    });
};
var useInsertionEffectAlways = function(effect) {
    return _indexJs14.unsafeHook(function() {
        return _foreignJs.useInsertionEffectAlways_(effect);
    });
};
var useInsertionEffect = function(dictEq) {
    var eq = _indexJs3.eq(dictEq);
    return function(deps) {
        return function(effect) {
            return _indexJs14.unsafeHook(function() {
                return _foreignJs.useInsertionEffect_(_indexJs5.mkFn2(eq), deps, effect);
            });
        };
    };
};
var useId = /* #__PURE__ */ _indexJs14.unsafeHook(_foreignJs.useId_);
var useEqCache = function(dictEq) {
    var eq = _indexJs3.eq(dictEq);
    return function(a) {
        return _indexJs14.unsafeHook(function() {
            return _foreignJs.useEqCache_(_indexJs5.mkFn2(eq), a);
        });
    };
};
var useEffectOnce = function(effect) {
    return _indexJs14.unsafeHook(function() {
        return _foreignJs.useEffect_(function(v, v1) {
            return true;
        }, _indexJs10.unit, effect);
    });
};
var useEffectAlways = function(effect) {
    return _indexJs14.unsafeHook(function() {
        return _foreignJs.useEffectAlways_(effect);
    });
};
var useEffect = function(dictEq) {
    var eq = _indexJs3.eq(dictEq);
    return function(deps) {
        return function(effect) {
            return _indexJs14.unsafeHook(function() {
                return _foreignJs.useEffect_(_indexJs5.mkFn2(eq), deps, effect);
            });
        };
    };
};
var useDeferredValue = function(a) {
    return _indexJs14.unsafeHook(function() {
        return _foreignJs.useDeferredValue_(a);
    });
};
var useDebugValue = function(debugValue) {
    return function(display) {
        return _indexJs14.unsafeHook(function() {
            return _foreignJs.useDebugValue_(debugValue, display);
        });
    };
};
var useContext = function(context) {
    return _indexJs14.unsafeHook(function() {
        return _foreignJs.useContext_(context);
    });
};
var unsafeReactFunctionComponent = _indexJs15.unsafeCoerce;
var unsafeDiscardRenderEffects = _indexJs15.unsafeCoerce;
var unsafeReactComponent = function() {
    return function() {
        return function(name) {
            return function(renderFn) {
                var c = unsafeReactFunctionComponent(function(props) {
                    return unsafeDiscardRenderEffects(renderFn(props))();
                });
                return function() {
                    return _foreignJs.unsafeSetDisplayName(name, c);
                };
            };
        };
    };
};
var unsafeReactComponent1 = /* #__PURE__ */ unsafeReactComponent()();
var runReducer = function(v) {
    return _indexJs5.runFn2(v);
};
var readRef = /* #__PURE__ */ _indexJs12.runEffectFn1(_foreignJs.readRef_);
var readRefMaybe = function(a) {
    return map(_indexJs7.toMaybe)(readRef(a));
};
var reactComponentWithChildren = function() {
    return function() {
        return unsafeReactComponent1;
    };
};
var reactComponent = function() {
    return function() {
        return function() {
            return unsafeReactComponent1;
        };
    };
};
var reactComponent1 = /* #__PURE__ */ reactComponent()()();
var reactComponentFromHook = function() {
    return function() {
        return function() {
            return function(name) {
                return function(propsToHook) {
                    return reactComponent1(name)(function(props) {
                        return map1(props.render)(propsToHook(props));
                    });
                };
            };
        };
    };
};
var reactChildrenFromArray = _indexJs15.unsafeCoerce;
var newtypeUnsafeReference = {
    Coercible0: function() {
        return undefined;
    }
};
var mkReducer = function($37) {
    return pure(Reducer(_indexJs5.mkFn2($37)));
};
var memo$prime = function(arePropsEqual) {
    return function(comp) {
        return function __do() {
            var c = comp();
            return _foreignJs.memoEq_(c, _indexJs5.mkFn2(arePropsEqual));
        };
    };
};
var memo = /* #__PURE__ */ _indexJs4.flip(bind)(/* #__PURE__ */ _indexJs12.runEffectFn1(_foreignJs.memo_));
var eqUnsafeReference = {
    eq: _indexJs16.unsafeRefEq
};
var component = function(name) {
    return function(renderFn) {
        return function __do() {
            var c = reactComponent1(name)(function($38) {
                return renderFn(function(v) {
                    return v.nested;
                }($38));
            })();
            var $39 = _indexJs13.element(c);
            return function($40) {
                return $39(function(v) {
                    return {
                        nested: v
                    };
                }($40));
            };
        };
    };
};

},{"./foreign.js":"bWVv7","../Control.Applicative/index.js":"5JL6d","../Control.Bind/index.js":"3yoUR","../Data.Bifunctor/index.js":"aFQNr","../Data.Eq/index.js":"j3zMn","../Data.Function/index.js":"64uwb","../Data.Function.Uncurried/index.js":"dxJ9j","../Data.Functor/index.js":"j9NCu","../Data.Nullable/index.js":"aaBaJ","../Data.Tuple/index.js":"beFyY","../Data.Tuple.Nested/index.js":"38fgN","../Data.Unit/index.js":"fuCRN","../Effect/index.js":"jyor1","../Effect.Uncurried/index.js":"4HWc2","../React.Basic/index.js":"jz8Ob","../React.Basic.Hooks.Internal/index.js":"3ym3c","../Unsafe.Coerce/index.js":"kRX7u","../Unsafe.Reference/index.js":"cM9gW","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bWVv7":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$7c30 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$7c30.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$7c30.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "reactChildrenToArray", ()=>reactChildrenToArray);
parcelHelpers.export(exports, "memo_", ()=>memo_);
parcelHelpers.export(exports, "memoEq_", ()=>memoEq_);
parcelHelpers.export(exports, "useState_", ()=>useState_);
parcelHelpers.export(exports, "useEffect_", ()=>useEffect_);
parcelHelpers.export(exports, "useEffectAlways_", ()=>useEffectAlways_);
parcelHelpers.export(exports, "useLayoutEffect_", ()=>useLayoutEffect_);
parcelHelpers.export(exports, "useLayoutEffectAlways_", ()=>useLayoutEffectAlways_);
parcelHelpers.export(exports, "useInsertionEffect_", ()=>useInsertionEffect_);
parcelHelpers.export(exports, "useInsertionEffectAlways_", ()=>useInsertionEffectAlways_);
parcelHelpers.export(exports, "useReducer_", ()=>useReducer_);
parcelHelpers.export(exports, "useRef_", ()=>useRef_);
parcelHelpers.export(exports, "readRef_", ()=>readRef_);
parcelHelpers.export(exports, "writeRef_", ()=>writeRef_);
parcelHelpers.export(exports, "useContext_", ()=>useContext_);
parcelHelpers.export(exports, "useEqCache_", ()=>useEqCache);
parcelHelpers.export(exports, "useMemo_", ()=>useMemo_);
parcelHelpers.export(exports, "useDebugValue_", ()=>useDebugValue_);
parcelHelpers.export(exports, "useId_", ()=>useId_);
parcelHelpers.export(exports, "useTransition_", ()=>useTransition_);
parcelHelpers.export(exports, "useDeferredValue_", ()=>useDeferredValue_);
parcelHelpers.export(exports, "useSyncExternalStore2_", ()=>useSyncExternalStore2_);
parcelHelpers.export(exports, "useSyncExternalStore3_", ()=>useSyncExternalStore3_);
parcelHelpers.export(exports, "unsafeSetDisplayName", ()=>unsafeSetDisplayName);
parcelHelpers.export(exports, "displayName", ()=>displayName);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const useEqCache = (eq, a)=>{
    const memoRef = (0, _reactDefault.default).useRef(a);
    if (memoRef.current !== a && !eq(memoRef.current, a)) memoRef.current = a;
    return memoRef.current;
};
function reactChildrenToArray(children) {
    return (0, _reactDefault.default).Children.toArray(children);
}
const memo_ = (0, _reactDefault.default).memo;
const memoEq_ = (0, _reactDefault.default).memo;
function useState_(tuple, initialState) {
    const [state, setState] = (0, _reactDefault.default).useState(typeof initialState === "function" ? ()=>initialState : initialState);
    if (!setState.hasOwnProperty("$$reactBasicHooks$$cachedSetState")) setState.$$reactBasicHooks$$cachedSetState = (update)=>()=>setState(update);
    return tuple(state, setState.$$reactBasicHooks$$cachedSetState);
}
function useEffect_(eq, deps, effect) {
    const memoizedKey = useEqCache(eq, deps);
    (0, _reactDefault.default).useEffect(effect, [
        memoizedKey
    ]);
}
function useEffectAlways_(effect) {
    return (0, _reactDefault.default).useEffect(effect);
}
function useLayoutEffect_(eq, deps, effect) {
    const memoizedKey = useEqCache(eq, deps);
    (0, _reactDefault.default).useLayoutEffect(effect, [
        memoizedKey
    ]);
}
function useLayoutEffectAlways_(effect) {
    return (0, _reactDefault.default).useLayoutEffect(effect);
}
function useInsertionEffect_(eq, deps, effect) {
    const memoizedKey = useEqCache(eq, deps);
    (0, _reactDefault.default).useInsertionEffect(effect, [
        memoizedKey
    ]);
}
function useInsertionEffectAlways_(effect) {
    (0, _reactDefault.default).useInsertionEffect(effect);
}
function useReducer_(tuple, reducer, initialState) {
    const [state, dispatch] = (0, _reactDefault.default).useReducer(reducer, initialState);
    if (!dispatch.hasOwnProperty("$$reactBasicHooks$$cachedDispatch")) dispatch.$$reactBasicHooks$$cachedDispatch = (action)=>()=>dispatch(action);
    return tuple(state, dispatch.$$reactBasicHooks$$cachedDispatch);
}
const useRef_ = (0, _reactDefault.default).useRef;
function readRef_(ref) {
    return ref.current;
}
function writeRef_(ref, a) {
    ref.current = a;
}
const useContext_ = (0, _reactDefault.default).useContext;
function useMemo_(eq, deps, computeA) {
    const memoizedKey = useEqCache(eq, deps);
    return (0, _reactDefault.default).useMemo(computeA, [
        memoizedKey
    ]);
}
const useDebugValue_ = (0, _reactDefault.default).useDebugValue;
const useId_ = (0, _reactDefault.default).useId;
function useTransition_(tuple) {
    const [isPending, startTransitionImpl] = (0, _reactDefault.default).useTransition();
    const startTransition = (update)=>()=>startTransitionImpl(update);
    return tuple(isPending, startTransition);
}
const useDeferredValue_ = (0, _reactDefault.default).useDeferredValue;
const useSyncExternalStore2_ = (0, _reactDefault.default).useSyncExternalStore;
const useSyncExternalStore3_ = (0, _reactDefault.default).useSyncExternalStore;
function unsafeSetDisplayName(displayName, component) {
    component.displayName = displayName;
    component.toString = ()=>displayName;
    return component;
}
function displayName(component) {
    return typeof component === "string" ? component : component.displayName || "[unknown]";
}

  $parcel$ReactRefreshHelpers$7c30.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"aFQNr":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "bimap", ()=>bimap);
parcelHelpers.export(exports, "lmap", ()=>lmap);
parcelHelpers.export(exports, "rmap", ()=>rmap);
parcelHelpers.export(exports, "bivoid", ()=>bivoid);
parcelHelpers.export(exports, "bifunctorEither", ()=>bifunctorEither);
parcelHelpers.export(exports, "bifunctorTuple", ()=>bifunctorTuple);
parcelHelpers.export(exports, "bifunctorConst", ()=>bifunctorConst);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Either/index.js");
var _indexJs2 = require("../Data.Function/index.js");
var _indexJs3 = require("../Data.Tuple/index.js");
var _indexJs4 = require("../Data.Unit/index.js");
var identity = /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn);
var bimap = function(dict) {
    return dict.bimap;
};
var bivoid = function(dictBifunctor) {
    return bimap(dictBifunctor)(_indexJs2["const"](_indexJs4.unit))(_indexJs2["const"](_indexJs4.unit));
};
var lmap = function(dictBifunctor) {
    var bimap1 = bimap(dictBifunctor);
    return function(f) {
        return bimap1(f)(identity);
    };
};
var rmap = function(dictBifunctor) {
    return bimap(dictBifunctor)(identity);
};
var bifunctorTuple = {
    bimap: function(f) {
        return function(g) {
            return function(v) {
                return new _indexJs3.Tuple(f(v.value0), g(v.value1));
            };
        };
    }
};
var bifunctorEither = {
    bimap: function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof _indexJs1.Left) return new _indexJs1.Left(v(v2.value0));
                if (v2 instanceof _indexJs1.Right) return new _indexJs1.Right(v1(v2.value0));
                throw new Error("Failed pattern match at Data.Bifunctor (line 38, column 1 - line 40, column 36): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    }
};
var bifunctorConst = {
    bimap: function(f) {
        return function(v) {
            return function(v1) {
                return f(v1);
            };
        };
    }
};

},{"../Control.Category/index.js":"iWlWa","../Data.Either/index.js":"9fzbY","../Data.Function/index.js":"64uwb","../Data.Tuple/index.js":"beFyY","../Data.Unit/index.js":"fuCRN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9fzbY":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Left", ()=>Left);
parcelHelpers.export(exports, "Right", ()=>Right);
parcelHelpers.export(exports, "either", ()=>either);
parcelHelpers.export(exports, "choose", ()=>choose);
parcelHelpers.export(exports, "isLeft", ()=>isLeft);
parcelHelpers.export(exports, "isRight", ()=>isRight);
parcelHelpers.export(exports, "fromLeft", ()=>fromLeft);
parcelHelpers.export(exports, "fromLeft$prime", ()=>fromLeft$prime);
parcelHelpers.export(exports, "fromRight", ()=>fromRight);
parcelHelpers.export(exports, "fromRight$prime", ()=>fromRight$prime);
parcelHelpers.export(exports, "note", ()=>note);
parcelHelpers.export(exports, "note$prime", ()=>note$prime);
parcelHelpers.export(exports, "hush", ()=>hush);
parcelHelpers.export(exports, "blush", ()=>blush);
parcelHelpers.export(exports, "functorEither", ()=>functorEither);
parcelHelpers.export(exports, "genericEither", ()=>genericEither);
parcelHelpers.export(exports, "invariantEither", ()=>invariantEither);
parcelHelpers.export(exports, "applyEither", ()=>applyEither);
parcelHelpers.export(exports, "applicativeEither", ()=>applicativeEither);
parcelHelpers.export(exports, "altEither", ()=>altEither);
parcelHelpers.export(exports, "bindEither", ()=>bindEither);
parcelHelpers.export(exports, "monadEither", ()=>monadEither);
parcelHelpers.export(exports, "extendEither", ()=>extendEither);
parcelHelpers.export(exports, "showEither", ()=>showEither);
parcelHelpers.export(exports, "eqEither", ()=>eqEither);
parcelHelpers.export(exports, "eq1Either", ()=>eq1Either);
parcelHelpers.export(exports, "ordEither", ()=>ordEither);
parcelHelpers.export(exports, "ord1Either", ()=>ord1Either);
parcelHelpers.export(exports, "boundedEither", ()=>boundedEither);
parcelHelpers.export(exports, "semigroupEither", ()=>semigroupEither);
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Data.Bounded/index.js");
var _indexJs3 = require("../Data.Eq/index.js");
var _indexJs4 = require("../Data.Function/index.js");
var _indexJs5 = require("../Data.Functor/index.js");
var _indexJs6 = require("../Data.Functor.Invariant/index.js");
var _indexJs7 = require("../Data.Generic.Rep/index.js");
var _indexJs8 = require("../Data.Maybe/index.js");
var _indexJs9 = require("../Data.Ord/index.js");
var _indexJs10 = require("../Data.Ordering/index.js");
var _indexJs11 = require("../Data.Semigroup/index.js");
var _indexJs12 = require("../Data.Show/index.js");
var _indexJs13 = require("../Data.Unit/index.js");
var Left = /* #__PURE__ */ function() {
    function Left(value0) {
        this.value0 = value0;
    }
    Left.create = function(value0) {
        return new Left(value0);
    };
    return Left;
}();
var Right = /* #__PURE__ */ function() {
    function Right(value0) {
        this.value0 = value0;
    }
    Right.create = function(value0) {
        return new Right(value0);
    };
    return Right;
}();
var showEither = function(dictShow) {
    var show = _indexJs12.show(dictShow);
    return function(dictShow1) {
        var show1 = _indexJs12.show(dictShow1);
        return {
            show: function(v) {
                if (v instanceof Left) return "(Left " + (show(v.value0) + ")");
                if (v instanceof Right) return "(Right " + (show1(v.value0) + ")");
                throw new Error("Failed pattern match at Data.Either (line 173, column 1 - line 175, column 46): " + [
                    v.constructor.name
                ]);
            }
        };
    };
};
var note$prime = function(f) {
    return _indexJs8["maybe$prime"](function($138) {
        return Left.create(f($138));
    })(Right.create);
};
var note = function(a) {
    return _indexJs8.maybe(new Left(a))(Right.create);
};
var genericEither = {
    to: function(x) {
        if (x instanceof _indexJs7.Inl) return new Left(x.value0);
        if (x instanceof _indexJs7.Inr) return new Right(x.value0);
        throw new Error("Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): " + [
            x.constructor.name
        ]);
    },
    from: function(x) {
        if (x instanceof Left) return new _indexJs7.Inl(x.value0);
        if (x instanceof Right) return new _indexJs7.Inr(x.value0);
        throw new Error("Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): " + [
            x.constructor.name
        ]);
    }
};
var functorEither = {
    map: function(f) {
        return function(m) {
            if (m instanceof Left) return new Left(m.value0);
            if (m instanceof Right) return new Right(f(m.value0));
            throw new Error("Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): " + [
                m.constructor.name
            ]);
        };
    }
};
var map = /* #__PURE__ */ _indexJs5.map(functorEither);
var invariantEither = {
    imap: /* #__PURE__ */ _indexJs6.imapF(functorEither)
};
var fromRight$prime = function(v) {
    return function(v1) {
        if (v1 instanceof Right) return v1.value0;
        return v(_indexJs13.unit);
    };
};
var fromRight = function(v) {
    return function(v1) {
        if (v1 instanceof Right) return v1.value0;
        return v;
    };
};
var fromLeft$prime = function(v) {
    return function(v1) {
        if (v1 instanceof Left) return v1.value0;
        return v(_indexJs13.unit);
    };
};
var fromLeft = function(v) {
    return function(v1) {
        if (v1 instanceof Left) return v1.value0;
        return v;
    };
};
var extendEither = {
    extend: function(v) {
        return function(v1) {
            if (v1 instanceof Left) return new Left(v1.value0);
            return new Right(v(v1));
        };
    },
    Functor0: function() {
        return functorEither;
    }
};
var eqEither = function(dictEq) {
    var eq = _indexJs3.eq(dictEq);
    return function(dictEq1) {
        var eq1 = _indexJs3.eq(dictEq1);
        return {
            eq: function(x) {
                return function(y) {
                    if (x instanceof Left && y instanceof Left) return eq(x.value0)(y.value0);
                    if (x instanceof Right && y instanceof Right) return eq1(x.value0)(y.value0);
                    return false;
                };
            }
        };
    };
};
var ordEither = function(dictOrd) {
    var compare = _indexJs9.compare(dictOrd);
    var eqEither1 = eqEither(dictOrd.Eq0());
    return function(dictOrd1) {
        var compare1 = _indexJs9.compare(dictOrd1);
        var eqEither2 = eqEither1(dictOrd1.Eq0());
        return {
            compare: function(x) {
                return function(y) {
                    if (x instanceof Left && y instanceof Left) return compare(x.value0)(y.value0);
                    if (x instanceof Left) return _indexJs10.LT.value;
                    if (y instanceof Left) return _indexJs10.GT.value;
                    if (x instanceof Right && y instanceof Right) return compare1(x.value0)(y.value0);
                    throw new Error("Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): " + [
                        x.constructor.name,
                        y.constructor.name
                    ]);
                };
            },
            Eq0: function() {
                return eqEither2;
            }
        };
    };
};
var eq1Either = function(dictEq) {
    var eqEither1 = eqEither(dictEq);
    return {
        eq1: function(dictEq1) {
            return _indexJs3.eq(eqEither1(dictEq1));
        }
    };
};
var ord1Either = function(dictOrd) {
    var ordEither1 = ordEither(dictOrd);
    var eq1Either1 = eq1Either(dictOrd.Eq0());
    return {
        compare1: function(dictOrd1) {
            return _indexJs9.compare(ordEither1(dictOrd1));
        },
        Eq10: function() {
            return eq1Either1;
        }
    };
};
var either = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof Left) return v(v2.value0);
            if (v2 instanceof Right) return v1(v2.value0);
            throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
};
var hush = /* #__PURE__ */ function() {
    return either(_indexJs4["const"](_indexJs8.Nothing.value))(_indexJs8.Just.create);
}();
var isLeft = /* #__PURE__ */ either(/* #__PURE__ */ _indexJs4["const"](true))(/* #__PURE__ */ _indexJs4["const"](false));
var isRight = /* #__PURE__ */ either(/* #__PURE__ */ _indexJs4["const"](false))(/* #__PURE__ */ _indexJs4["const"](true));
var choose = function(dictAlt) {
    var alt = _indexJs.alt(dictAlt);
    var map1 = _indexJs5.map(dictAlt.Functor0());
    return function(a) {
        return function(b) {
            return alt(map1(Left.create)(a))(map1(Right.create)(b));
        };
    };
};
var boundedEither = function(dictBounded) {
    var bottom = _indexJs2.bottom(dictBounded);
    var ordEither1 = ordEither(dictBounded.Ord0());
    return function(dictBounded1) {
        var ordEither2 = ordEither1(dictBounded1.Ord0());
        return {
            top: new Right(_indexJs2.top(dictBounded1)),
            bottom: new Left(bottom),
            Ord0: function() {
                return ordEither2;
            }
        };
    };
};
var blush = /* #__PURE__ */ function() {
    return either(_indexJs8.Just.create)(_indexJs4["const"](_indexJs8.Nothing.value));
}();
var applyEither = {
    apply: function(v) {
        return function(v1) {
            if (v instanceof Left) return new Left(v.value0);
            if (v instanceof Right) return map(v.value0)(v1);
            throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    },
    Functor0: function() {
        return functorEither;
    }
};
var apply = /* #__PURE__ */ _indexJs1.apply(applyEither);
var bindEither = {
    bind: /* #__PURE__ */ either(function(e) {
        return function(v) {
            return new Left(e);
        };
    })(function(a) {
        return function(f) {
            return f(a);
        };
    }),
    Apply0: function() {
        return applyEither;
    }
};
var semigroupEither = function(dictSemigroup) {
    var append1 = _indexJs11.append(dictSemigroup);
    return {
        append: function(x) {
            return function(y) {
                return apply(map(append1)(x))(y);
            };
        }
    };
};
var applicativeEither = /* #__PURE__ */ function() {
    return {
        pure: Right.create,
        Apply0: function() {
            return applyEither;
        }
    };
}();
var monadEither = {
    Applicative0: function() {
        return applicativeEither;
    },
    Bind1: function() {
        return bindEither;
    }
};
var altEither = {
    alt: function(v) {
        return function(v1) {
            if (v instanceof Left) return v1;
            return v;
        };
    },
    Functor0: function() {
        return functorEither;
    }
};

},{"../Control.Alt/index.js":"dcz8C","../Control.Apply/index.js":"ggN4S","../Data.Bounded/index.js":"j0YdY","../Data.Eq/index.js":"j3zMn","../Data.Function/index.js":"64uwb","../Data.Functor/index.js":"j9NCu","../Data.Functor.Invariant/index.js":"h8WwJ","../Data.Generic.Rep/index.js":"lPkX2","../Data.Maybe/index.js":"ff6lw","../Data.Ord/index.js":"luB7W","../Data.Ordering/index.js":"2NvYx","../Data.Semigroup/index.js":"evJTv","../Data.Show/index.js":"lQCRi","../Data.Unit/index.js":"fuCRN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dcz8C":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "map", ()=>(0, _indexJs.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs.void));
parcelHelpers.export(exports, "alt", ()=>alt);
parcelHelpers.export(exports, "altArray", ()=>altArray);
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Semigroup/index.js");
var altArray = {
    alt: /* #__PURE__ */ _indexJs1.append(_indexJs1.semigroupArray),
    Functor0: function() {
        return _indexJs.functorArray;
    }
};
var alt = function(dict) {
    return dict.alt;
};

},{"../Data.Functor/index.js":"j9NCu","../Data.Semigroup/index.js":"evJTv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j0YdY":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "EQ", ()=>(0, _indexJs.EQ));
parcelHelpers.export(exports, "GT", ()=>(0, _indexJs.GT));
parcelHelpers.export(exports, "LT", ()=>(0, _indexJs.LT));
parcelHelpers.export(exports, "compare", ()=>(0, _indexJs.compare));
parcelHelpers.export(exports, "bottom", ()=>bottom);
parcelHelpers.export(exports, "top", ()=>top);
parcelHelpers.export(exports, "bottomRecord", ()=>bottomRecord);
parcelHelpers.export(exports, "topRecord", ()=>topRecord);
parcelHelpers.export(exports, "boundedBoolean", ()=>boundedBoolean);
parcelHelpers.export(exports, "boundedInt", ()=>boundedInt);
parcelHelpers.export(exports, "boundedChar", ()=>boundedChar);
parcelHelpers.export(exports, "boundedOrdering", ()=>boundedOrdering);
parcelHelpers.export(exports, "boundedUnit", ()=>boundedUnit);
parcelHelpers.export(exports, "boundedNumber", ()=>boundedNumber);
parcelHelpers.export(exports, "boundedProxy", ()=>boundedProxy);
parcelHelpers.export(exports, "boundedRecordNil", ()=>boundedRecordNil);
parcelHelpers.export(exports, "boundedRecordCons", ()=>boundedRecordCons);
parcelHelpers.export(exports, "boundedRecord", ()=>boundedRecord);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Ord/index.js");
var _indexJs1 = require("../Data.Ordering/index.js");
var _indexJs2 = require("../Data.Symbol/index.js");
var _indexJs3 = require("../Data.Unit/index.js");
var _indexJs4 = require("../Record.Unsafe/index.js");
var _indexJs5 = require("../Type.Proxy/index.js");
var ordRecord = /* #__PURE__ */ _indexJs.ordRecord();
var topRecord = function(dict) {
    return dict.topRecord;
};
var top = function(dict) {
    return dict.top;
};
var boundedUnit = {
    top: _indexJs3.unit,
    bottom: _indexJs3.unit,
    Ord0: function() {
        return _indexJs.ordUnit;
    }
};
var boundedRecordNil = {
    topRecord: function(v) {
        return function(v1) {
            return {};
        };
    },
    bottomRecord: function(v) {
        return function(v1) {
            return {};
        };
    },
    OrdRecord0: function() {
        return _indexJs.ordRecordNil;
    }
};
var boundedProxy = /* #__PURE__ */ function() {
    return {
        bottom: _indexJs5["Proxy"].value,
        top: _indexJs5["Proxy"].value,
        Ord0: function() {
            return _indexJs.ordProxy;
        }
    };
}();
var boundedOrdering = /* #__PURE__ */ function() {
    return {
        top: _indexJs1.GT.value,
        bottom: _indexJs1.LT.value,
        Ord0: function() {
            return _indexJs.ordOrdering;
        }
    };
}();
var boundedNumber = {
    top: _foreignJs.topNumber,
    bottom: _foreignJs.bottomNumber,
    Ord0: function() {
        return _indexJs.ordNumber;
    }
};
var boundedInt = {
    top: _foreignJs.topInt,
    bottom: _foreignJs.bottomInt,
    Ord0: function() {
        return _indexJs.ordInt;
    }
};
var boundedChar = {
    top: _foreignJs.topChar,
    bottom: _foreignJs.bottomChar,
    Ord0: function() {
        return _indexJs.ordChar;
    }
};
var boundedBoolean = {
    top: true,
    bottom: false,
    Ord0: function() {
        return _indexJs.ordBoolean;
    }
};
var bottomRecord = function(dict) {
    return dict.bottomRecord;
};
var boundedRecord = function() {
    return function(dictBoundedRecord) {
        var ordRecord1 = ordRecord(dictBoundedRecord.OrdRecord0());
        return {
            top: topRecord(dictBoundedRecord)(_indexJs5["Proxy"].value)(_indexJs5["Proxy"].value),
            bottom: bottomRecord(dictBoundedRecord)(_indexJs5["Proxy"].value)(_indexJs5["Proxy"].value),
            Ord0: function() {
                return ordRecord1;
            }
        };
    };
};
var bottom = function(dict) {
    return dict.bottom;
};
var boundedRecordCons = function(dictIsSymbol) {
    var reflectSymbol = _indexJs2.reflectSymbol(dictIsSymbol);
    return function(dictBounded) {
        var top1 = top(dictBounded);
        var bottom1 = bottom(dictBounded);
        var Ord0 = dictBounded.Ord0();
        return function() {
            return function() {
                return function(dictBoundedRecord) {
                    var topRecord1 = topRecord(dictBoundedRecord);
                    var bottomRecord1 = bottomRecord(dictBoundedRecord);
                    var ordRecordCons = _indexJs.ordRecordCons(dictBoundedRecord.OrdRecord0())()(dictIsSymbol)(Ord0);
                    return {
                        topRecord: function(v) {
                            return function(rowProxy) {
                                var tail = topRecord1(_indexJs5["Proxy"].value)(rowProxy);
                                var key = reflectSymbol(_indexJs5["Proxy"].value);
                                var insert = _indexJs4.unsafeSet(key);
                                return insert(top1)(tail);
                            };
                        },
                        bottomRecord: function(v) {
                            return function(rowProxy) {
                                var tail = bottomRecord1(_indexJs5["Proxy"].value)(rowProxy);
                                var key = reflectSymbol(_indexJs5["Proxy"].value);
                                var insert = _indexJs4.unsafeSet(key);
                                return insert(bottom1)(tail);
                            };
                        },
                        OrdRecord0: function() {
                            return ordRecordCons;
                        }
                    };
                };
            };
        };
    };
};

},{"./foreign.js":"dHjom","../Data.Ord/index.js":"luB7W","../Data.Ordering/index.js":"2NvYx","../Data.Symbol/index.js":"dzOca","../Data.Unit/index.js":"fuCRN","../Record.Unsafe/index.js":"8BjRm","../Type.Proxy/index.js":"293bb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dHjom":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "topInt", ()=>topInt);
parcelHelpers.export(exports, "bottomInt", ()=>bottomInt);
parcelHelpers.export(exports, "topChar", ()=>topChar);
parcelHelpers.export(exports, "bottomChar", ()=>bottomChar);
parcelHelpers.export(exports, "topNumber", ()=>topNumber);
parcelHelpers.export(exports, "bottomNumber", ()=>bottomNumber);
const topInt = 2147483647;
const bottomInt = -2147483648;
const topChar = String.fromCharCode(65535);
const bottomChar = String.fromCharCode(0);
const topNumber = Number.POSITIVE_INFINITY;
const bottomNumber = Number.NEGATIVE_INFINITY;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"luB7W":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "EQ", ()=>(0, _indexJs1.EQ));
parcelHelpers.export(exports, "GT", ()=>(0, _indexJs1.GT));
parcelHelpers.export(exports, "LT", ()=>(0, _indexJs1.LT));
parcelHelpers.export(exports, "compare", ()=>compare);
parcelHelpers.export(exports, "compare1", ()=>compare1);
parcelHelpers.export(exports, "lessThan", ()=>lessThan);
parcelHelpers.export(exports, "lessThanOrEq", ()=>lessThanOrEq);
parcelHelpers.export(exports, "greaterThan", ()=>greaterThan);
parcelHelpers.export(exports, "greaterThanOrEq", ()=>greaterThanOrEq);
parcelHelpers.export(exports, "comparing", ()=>comparing);
parcelHelpers.export(exports, "min", ()=>min);
parcelHelpers.export(exports, "max", ()=>max);
parcelHelpers.export(exports, "clamp", ()=>clamp);
parcelHelpers.export(exports, "between", ()=>between);
parcelHelpers.export(exports, "abs", ()=>abs);
parcelHelpers.export(exports, "signum", ()=>signum);
parcelHelpers.export(exports, "compareRecord", ()=>compareRecord);
parcelHelpers.export(exports, "ordBoolean", ()=>ordBoolean);
parcelHelpers.export(exports, "ordInt", ()=>ordInt);
parcelHelpers.export(exports, "ordNumber", ()=>ordNumber);
parcelHelpers.export(exports, "ordString", ()=>ordString);
parcelHelpers.export(exports, "ordChar", ()=>ordChar);
parcelHelpers.export(exports, "ordUnit", ()=>ordUnit);
parcelHelpers.export(exports, "ordVoid", ()=>ordVoid);
parcelHelpers.export(exports, "ordProxy", ()=>ordProxy);
parcelHelpers.export(exports, "ordArray", ()=>ordArray);
parcelHelpers.export(exports, "ordOrdering", ()=>ordOrdering);
parcelHelpers.export(exports, "ord1Array", ()=>ord1Array);
parcelHelpers.export(exports, "ordRecordNil", ()=>ordRecordNil);
parcelHelpers.export(exports, "ordRecordCons", ()=>ordRecordCons);
parcelHelpers.export(exports, "ordRecord", ()=>ordRecord);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Ordering/index.js");
var _indexJs2 = require("../Data.Ring/index.js");
var _indexJs3 = require("../Data.Semiring/index.js");
var _indexJs4 = require("../Data.Symbol/index.js");
var _indexJs5 = require("../Record.Unsafe/index.js");
var _indexJs6 = require("../Type.Proxy/index.js");
var eqRec = /* #__PURE__ */ _indexJs.eqRec();
var notEq = /* #__PURE__ */ _indexJs.notEq(_indexJs1.eqOrdering);
var ordVoid = {
    compare: function(v) {
        return function(v1) {
            return _indexJs1.EQ.value;
        };
    },
    Eq0: function() {
        return _indexJs.eqVoid;
    }
};
var ordUnit = {
    compare: function(v) {
        return function(v1) {
            return _indexJs1.EQ.value;
        };
    },
    Eq0: function() {
        return _indexJs.eqUnit;
    }
};
var ordString = /* #__PURE__ */ function() {
    return {
        compare: _foreignJs.ordStringImpl(_indexJs1.LT.value)(_indexJs1.EQ.value)(_indexJs1.GT.value),
        Eq0: function() {
            return _indexJs.eqString;
        }
    };
}();
var ordRecordNil = {
    compareRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return _indexJs1.EQ.value;
            };
        };
    },
    EqRecord0: function() {
        return _indexJs.eqRowNil;
    }
};
var ordProxy = {
    compare: function(v) {
        return function(v1) {
            return _indexJs1.EQ.value;
        };
    },
    Eq0: function() {
        return _indexJs.eqProxy;
    }
};
var ordOrdering = {
    compare: function(v) {
        return function(v1) {
            if (v instanceof _indexJs1.LT && v1 instanceof _indexJs1.LT) return _indexJs1.EQ.value;
            if (v instanceof _indexJs1.EQ && v1 instanceof _indexJs1.EQ) return _indexJs1.EQ.value;
            if (v instanceof _indexJs1.GT && v1 instanceof _indexJs1.GT) return _indexJs1.EQ.value;
            if (v instanceof _indexJs1.LT) return _indexJs1.LT.value;
            if (v instanceof _indexJs1.EQ && v1 instanceof _indexJs1.LT) return _indexJs1.GT.value;
            if (v instanceof _indexJs1.EQ && v1 instanceof _indexJs1.GT) return _indexJs1.LT.value;
            if (v instanceof _indexJs1.GT) return _indexJs1.GT.value;
            throw new Error("Failed pattern match at Data.Ord (line 126, column 1 - line 133, column 20): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    },
    Eq0: function() {
        return _indexJs1.eqOrdering;
    }
};
var ordNumber = /* #__PURE__ */ function() {
    return {
        compare: _foreignJs.ordNumberImpl(_indexJs1.LT.value)(_indexJs1.EQ.value)(_indexJs1.GT.value),
        Eq0: function() {
            return _indexJs.eqNumber;
        }
    };
}();
var ordInt = /* #__PURE__ */ function() {
    return {
        compare: _foreignJs.ordIntImpl(_indexJs1.LT.value)(_indexJs1.EQ.value)(_indexJs1.GT.value),
        Eq0: function() {
            return _indexJs.eqInt;
        }
    };
}();
var ordChar = /* #__PURE__ */ function() {
    return {
        compare: _foreignJs.ordCharImpl(_indexJs1.LT.value)(_indexJs1.EQ.value)(_indexJs1.GT.value),
        Eq0: function() {
            return _indexJs.eqChar;
        }
    };
}();
var ordBoolean = /* #__PURE__ */ function() {
    return {
        compare: _foreignJs.ordBooleanImpl(_indexJs1.LT.value)(_indexJs1.EQ.value)(_indexJs1.GT.value),
        Eq0: function() {
            return _indexJs.eqBoolean;
        }
    };
}();
var compareRecord = function(dict) {
    return dict.compareRecord;
};
var ordRecord = function() {
    return function(dictOrdRecord) {
        var eqRec1 = eqRec(dictOrdRecord.EqRecord0());
        return {
            compare: compareRecord(dictOrdRecord)(_indexJs6["Proxy"].value),
            Eq0: function() {
                return eqRec1;
            }
        };
    };
};
var compare1 = function(dict) {
    return dict.compare1;
};
var compare = function(dict) {
    return dict.compare;
};
var compare2 = /* #__PURE__ */ compare(ordInt);
var comparing = function(dictOrd) {
    var compare3 = compare(dictOrd);
    return function(f) {
        return function(x) {
            return function(y) {
                return compare3(f(x))(f(y));
            };
        };
    };
};
var greaterThan = function(dictOrd) {
    var compare3 = compare(dictOrd);
    return function(a1) {
        return function(a2) {
            var v = compare3(a1)(a2);
            if (v instanceof _indexJs1.GT) return true;
            return false;
        };
    };
};
var greaterThanOrEq = function(dictOrd) {
    var compare3 = compare(dictOrd);
    return function(a1) {
        return function(a2) {
            var v = compare3(a1)(a2);
            if (v instanceof _indexJs1.LT) return false;
            return true;
        };
    };
};
var lessThan = function(dictOrd) {
    var compare3 = compare(dictOrd);
    return function(a1) {
        return function(a2) {
            var v = compare3(a1)(a2);
            if (v instanceof _indexJs1.LT) return true;
            return false;
        };
    };
};
var signum = function(dictOrd) {
    var lessThan1 = lessThan(dictOrd);
    var greaterThan1 = greaterThan(dictOrd);
    return function(dictRing) {
        var Semiring0 = dictRing.Semiring0();
        var zero = _indexJs3.zero(Semiring0);
        var negate1 = _indexJs2.negate(dictRing);
        var one = _indexJs3.one(Semiring0);
        return function(x) {
            var $89 = lessThan1(x)(zero);
            if ($89) return negate1(one);
            var $90 = greaterThan1(x)(zero);
            if ($90) return one;
            return x;
        };
    };
};
var lessThanOrEq = function(dictOrd) {
    var compare3 = compare(dictOrd);
    return function(a1) {
        return function(a2) {
            var v = compare3(a1)(a2);
            if (v instanceof _indexJs1.GT) return false;
            return true;
        };
    };
};
var max = function(dictOrd) {
    var compare3 = compare(dictOrd);
    return function(x) {
        return function(y) {
            var v = compare3(x)(y);
            if (v instanceof _indexJs1.LT) return y;
            if (v instanceof _indexJs1.EQ) return x;
            if (v instanceof _indexJs1.GT) return x;
            throw new Error("Failed pattern match at Data.Ord (line 181, column 3 - line 184, column 12): " + [
                v.constructor.name
            ]);
        };
    };
};
var min = function(dictOrd) {
    var compare3 = compare(dictOrd);
    return function(x) {
        return function(y) {
            var v = compare3(x)(y);
            if (v instanceof _indexJs1.LT) return x;
            if (v instanceof _indexJs1.EQ) return x;
            if (v instanceof _indexJs1.GT) return y;
            throw new Error("Failed pattern match at Data.Ord (line 172, column 3 - line 175, column 12): " + [
                v.constructor.name
            ]);
        };
    };
};
var ordArray = function(dictOrd) {
    var compare3 = compare(dictOrd);
    var eqArray = _indexJs.eqArray(dictOrd.Eq0());
    return {
        compare: function() {
            var toDelta = function(x) {
                return function(y) {
                    var v = compare3(x)(y);
                    if (v instanceof _indexJs1.EQ) return 0;
                    if (v instanceof _indexJs1.LT) return 1;
                    if (v instanceof _indexJs1.GT) return -1;
                    throw new Error("Failed pattern match at Data.Ord (line 79, column 7 - line 82, column 17): " + [
                        v.constructor.name
                    ]);
                };
            };
            return function(xs) {
                return function(ys) {
                    return compare2(0)(_foreignJs.ordArrayImpl(toDelta)(xs)(ys));
                };
            };
        }(),
        Eq0: function() {
            return eqArray;
        }
    };
};
var ord1Array = {
    compare1: function(dictOrd) {
        return compare(ordArray(dictOrd));
    },
    Eq10: function() {
        return _indexJs.eq1Array;
    }
};
var ordRecordCons = function(dictOrdRecord) {
    var compareRecord1 = compareRecord(dictOrdRecord);
    var eqRowCons = _indexJs.eqRowCons(dictOrdRecord.EqRecord0())();
    return function() {
        return function(dictIsSymbol) {
            var reflectSymbol = _indexJs4.reflectSymbol(dictIsSymbol);
            var eqRowCons1 = eqRowCons(dictIsSymbol);
            return function(dictOrd) {
                var compare3 = compare(dictOrd);
                var eqRowCons2 = eqRowCons1(dictOrd.Eq0());
                return {
                    compareRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var key = reflectSymbol(_indexJs6["Proxy"].value);
                                var left = compare3(_indexJs5.unsafeGet(key)(ra))(_indexJs5.unsafeGet(key)(rb));
                                var $95 = notEq(left)(_indexJs1.EQ.value);
                                if ($95) return left;
                                return compareRecord1(_indexJs6["Proxy"].value)(ra)(rb);
                            };
                        };
                    },
                    EqRecord0: function() {
                        return eqRowCons2;
                    }
                };
            };
        };
    };
};
var clamp = function(dictOrd) {
    var min1 = min(dictOrd);
    var max1 = max(dictOrd);
    return function(low) {
        return function(hi) {
            return function(x) {
                return min1(hi)(max1(low)(x));
            };
        };
    };
};
var between = function(dictOrd) {
    var lessThan1 = lessThan(dictOrd);
    var greaterThan1 = greaterThan(dictOrd);
    return function(low) {
        return function(hi) {
            return function(x) {
                if (lessThan1(x)(low)) return false;
                if (greaterThan1(x)(hi)) return false;
                return true;
            };
        };
    };
};
var abs = function(dictOrd) {
    var greaterThanOrEq1 = greaterThanOrEq(dictOrd);
    return function(dictRing) {
        var zero = _indexJs3.zero(dictRing.Semiring0());
        var negate1 = _indexJs2.negate(dictRing);
        return function(x) {
            var $99 = greaterThanOrEq1(x)(zero);
            if ($99) return x;
            return negate1(x);
        };
    };
};

},{"./foreign.js":"dY8Q7","../Data.Eq/index.js":"j3zMn","../Data.Ordering/index.js":"2NvYx","../Data.Ring/index.js":"hWPc6","../Data.Semiring/index.js":"1k57z","../Data.Symbol/index.js":"dzOca","../Record.Unsafe/index.js":"8BjRm","../Type.Proxy/index.js":"293bb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dY8Q7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ordBooleanImpl", ()=>ordBooleanImpl);
parcelHelpers.export(exports, "ordIntImpl", ()=>ordIntImpl);
parcelHelpers.export(exports, "ordNumberImpl", ()=>ordNumberImpl);
parcelHelpers.export(exports, "ordStringImpl", ()=>ordStringImpl);
parcelHelpers.export(exports, "ordCharImpl", ()=>ordCharImpl);
parcelHelpers.export(exports, "ordArrayImpl", ()=>ordArrayImpl);
var unsafeCompareImpl = function(lt) {
    return function(eq) {
        return function(gt) {
            return function(x) {
                return function(y) {
                    return x < y ? lt : x === y ? eq : gt;
                };
            };
        };
    };
};
const ordBooleanImpl = unsafeCompareImpl;
const ordIntImpl = unsafeCompareImpl;
const ordNumberImpl = unsafeCompareImpl;
const ordStringImpl = unsafeCompareImpl;
const ordCharImpl = unsafeCompareImpl;
const ordArrayImpl = function(f) {
    return function(xs) {
        return function(ys) {
            var i = 0;
            var xlen = xs.length;
            var ylen = ys.length;
            while(i < xlen && i < ylen){
                var x = xs[i];
                var y = ys[i];
                var o = f(x)(y);
                if (o !== 0) return o;
                i++;
            }
            if (xlen === ylen) return 0;
            else if (xlen > ylen) return -1;
            else return 1;
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"h8WwJ":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "imap", ()=>imap);
parcelHelpers.export(exports, "imapF", ()=>imapF);
parcelHelpers.export(exports, "invariantFn", ()=>invariantFn);
parcelHelpers.export(exports, "invariantArray", ()=>invariantArray);
parcelHelpers.export(exports, "invariantAdditive", ()=>invariantAdditive);
parcelHelpers.export(exports, "invariantConj", ()=>invariantConj);
parcelHelpers.export(exports, "invariantDisj", ()=>invariantDisj);
parcelHelpers.export(exports, "invariantDual", ()=>invariantDual);
parcelHelpers.export(exports, "invariantEndo", ()=>invariantEndo);
parcelHelpers.export(exports, "invariantMultiplicative", ()=>invariantMultiplicative);
parcelHelpers.export(exports, "invariantAlternate", ()=>invariantAlternate);
var _indexJs = require("../Data.Functor/index.js");
var invariantMultiplicative = {
    imap: function(f) {
        return function(v) {
            return function(v1) {
                return f(v1);
            };
        };
    }
};
var invariantEndo = {
    imap: function(ab) {
        return function(ba) {
            return function(v) {
                return function($42) {
                    return ab(v(ba($42)));
                };
            };
        };
    }
};
var invariantDual = {
    imap: function(f) {
        return function(v) {
            return function(v1) {
                return f(v1);
            };
        };
    }
};
var invariantDisj = {
    imap: function(f) {
        return function(v) {
            return function(v1) {
                return f(v1);
            };
        };
    }
};
var invariantConj = {
    imap: function(f) {
        return function(v) {
            return function(v1) {
                return f(v1);
            };
        };
    }
};
var invariantAdditive = {
    imap: function(f) {
        return function(v) {
            return function(v1) {
                return f(v1);
            };
        };
    }
};
var imapF = function(dictFunctor) {
    var map = _indexJs.map(dictFunctor);
    return function(f) {
        return function(v) {
            return map(f);
        };
    };
};
var invariantArray = {
    imap: /* #__PURE__ */ imapF(_indexJs.functorArray)
};
var invariantFn = {
    imap: /* #__PURE__ */ imapF(_indexJs.functorFn)
};
var imap = function(dict) {
    return dict.imap;
};
var invariantAlternate = function(dictInvariant) {
    var imap1 = imap(dictInvariant);
    return {
        imap: function(f) {
            return function(g) {
                return function(v) {
                    return imap1(f)(g)(v);
                };
            };
        }
    };
};

},{"../Data.Functor/index.js":"j9NCu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lPkX2":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "to", ()=>to);
parcelHelpers.export(exports, "from", ()=>from);
parcelHelpers.export(exports, "repOf", ()=>repOf);
parcelHelpers.export(exports, "NoArguments", ()=>NoArguments);
parcelHelpers.export(exports, "Inl", ()=>Inl);
parcelHelpers.export(exports, "Inr", ()=>Inr);
parcelHelpers.export(exports, "Product", ()=>Product);
parcelHelpers.export(exports, "Constructor", ()=>Constructor);
parcelHelpers.export(exports, "Argument", ()=>Argument);
parcelHelpers.export(exports, "showNoArguments", ()=>showNoArguments);
parcelHelpers.export(exports, "showSum", ()=>showSum);
parcelHelpers.export(exports, "showProduct", ()=>showProduct);
parcelHelpers.export(exports, "showConstructor", ()=>showConstructor);
parcelHelpers.export(exports, "showArgument", ()=>showArgument);
var _indexJs = require("../Data.Show/index.js");
var _indexJs1 = require("../Data.Symbol/index.js");
var _indexJs2 = require("../Type.Proxy/index.js");
var show = /* #__PURE__ */ _indexJs.show(_indexJs.showString);
var Inl = /* #__PURE__ */ function() {
    function Inl(value0) {
        this.value0 = value0;
    }
    Inl.create = function(value0) {
        return new Inl(value0);
    };
    return Inl;
}();
var Inr = /* #__PURE__ */ function() {
    function Inr(value0) {
        this.value0 = value0;
    }
    Inr.create = function(value0) {
        return new Inr(value0);
    };
    return Inr;
}();
var Product = /* #__PURE__ */ function() {
    function Product(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Product.create = function(value0) {
        return function(value1) {
            return new Product(value0, value1);
        };
    };
    return Product;
}();
var NoConstructors = function(x) {
    return x;
};
var NoArguments = /* #__PURE__ */ function() {
    function NoArguments() {}
    NoArguments.value = new NoArguments();
    return NoArguments;
}();
var Constructor = function(x) {
    return x;
};
var Argument = function(x) {
    return x;
};
var to = function(dict) {
    return dict.to;
};
var showSum = function(dictShow) {
    var show1 = _indexJs.show(dictShow);
    return function(dictShow1) {
        var show2 = _indexJs.show(dictShow1);
        return {
            show: function(v) {
                if (v instanceof Inl) return "(Inl " + (show1(v.value0) + ")");
                if (v instanceof Inr) return "(Inr " + (show2(v.value0) + ")");
                throw new Error("Failed pattern match at Data.Generic.Rep (line 32, column 1 - line 34, column 42): " + [
                    v.constructor.name
                ]);
            }
        };
    };
};
var showProduct = function(dictShow) {
    var show1 = _indexJs.show(dictShow);
    return function(dictShow1) {
        var show2 = _indexJs.show(dictShow1);
        return {
            show: function(v) {
                return "(Product " + (show1(v.value0) + (" " + (show2(v.value1) + ")")));
            }
        };
    };
};
var showNoArguments = {
    show: function(v) {
        return "NoArguments";
    }
};
var showConstructor = function(dictIsSymbol) {
    var reflectSymbol = _indexJs1.reflectSymbol(dictIsSymbol);
    return function(dictShow) {
        var show1 = _indexJs.show(dictShow);
        return {
            show: function(v) {
                return "(Constructor @" + (show(reflectSymbol(_indexJs2["Proxy"].value)) + (" " + (show1(v) + ")")));
            }
        };
    };
};
var showArgument = function(dictShow) {
    var show1 = _indexJs.show(dictShow);
    return {
        show: function(v) {
            return "(Argument " + (show1(v) + ")");
        }
    };
};
var repOf = function(dictGeneric) {
    return function(v) {
        return _indexJs2["Proxy"].value;
    };
};
var from = function(dict) {
    return dict.from;
};

},{"../Data.Show/index.js":"lQCRi","../Data.Symbol/index.js":"dzOca","../Type.Proxy/index.js":"293bb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lQCRi":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "show", ()=>show);
parcelHelpers.export(exports, "showRecordFields", ()=>showRecordFields);
parcelHelpers.export(exports, "showUnit", ()=>showUnit);
parcelHelpers.export(exports, "showBoolean", ()=>showBoolean);
parcelHelpers.export(exports, "showInt", ()=>showInt);
parcelHelpers.export(exports, "showNumber", ()=>showNumber);
parcelHelpers.export(exports, "showChar", ()=>showChar);
parcelHelpers.export(exports, "showString", ()=>showString);
parcelHelpers.export(exports, "showArray", ()=>showArray);
parcelHelpers.export(exports, "showProxy", ()=>showProxy);
parcelHelpers.export(exports, "showVoid", ()=>showVoid);
parcelHelpers.export(exports, "showRecord", ()=>showRecord);
parcelHelpers.export(exports, "showRecordFieldsNil", ()=>showRecordFieldsNil);
parcelHelpers.export(exports, "showRecordFieldsConsNil", ()=>showRecordFieldsConsNil);
parcelHelpers.export(exports, "showRecordFieldsCons", ()=>showRecordFieldsCons);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Symbol/index.js");
var _indexJs1 = require("../Data.Void/index.js");
var _indexJs2 = require("../Record.Unsafe/index.js");
var _indexJs3 = require("../Type.Proxy/index.js");
var showVoid = {
    show: _indexJs1.absurd
};
var showUnit = {
    show: function(v) {
        return "unit";
    }
};
var showString = {
    show: _foreignJs.showStringImpl
};
var showRecordFieldsNil = {
    showRecordFields: function(v) {
        return function(v1) {
            return "";
        };
    }
};
var showRecordFields = function(dict) {
    return dict.showRecordFields;
};
var showRecord = function() {
    return function() {
        return function(dictShowRecordFields) {
            var showRecordFields1 = showRecordFields(dictShowRecordFields);
            return {
                show: function(record) {
                    return "{" + (showRecordFields1(_indexJs3["Proxy"].value)(record) + "}");
                }
            };
        };
    };
};
var showProxy = {
    show: function(v) {
        return "Proxy";
    }
};
var showNumber = {
    show: _foreignJs.showNumberImpl
};
var showInt = {
    show: _foreignJs.showIntImpl
};
var showChar = {
    show: _foreignJs.showCharImpl
};
var showBoolean = {
    show: function(v) {
        if (v) return "true";
        if (!v) return "false";
        throw new Error("Failed pattern match at Data.Show (line 29, column 1 - line 31, column 23): " + [
            v.constructor.name
        ]);
    }
};
var show = function(dict) {
    return dict.show;
};
var showArray = function(dictShow) {
    return {
        show: _foreignJs.showArrayImpl(show(dictShow))
    };
};
var showRecordFieldsCons = function(dictIsSymbol) {
    var reflectSymbol = _indexJs.reflectSymbol(dictIsSymbol);
    return function(dictShowRecordFields) {
        var showRecordFields1 = showRecordFields(dictShowRecordFields);
        return function(dictShow) {
            var show1 = show(dictShow);
            return {
                showRecordFields: function(v) {
                    return function(record) {
                        var tail = showRecordFields1(_indexJs3["Proxy"].value)(record);
                        var key = reflectSymbol(_indexJs3["Proxy"].value);
                        var focus = _indexJs2.unsafeGet(key)(record);
                        return " " + (key + (": " + (show1(focus) + ("," + tail))));
                    };
                }
            };
        };
    };
};
var showRecordFieldsConsNil = function(dictIsSymbol) {
    var reflectSymbol = _indexJs.reflectSymbol(dictIsSymbol);
    return function(dictShow) {
        var show1 = show(dictShow);
        return {
            showRecordFields: function(v) {
                return function(record) {
                    var key = reflectSymbol(_indexJs3["Proxy"].value);
                    var focus = _indexJs2.unsafeGet(key)(record);
                    return " " + (key + (": " + (show1(focus) + " ")));
                };
            }
        };
    };
};

},{"./foreign.js":"6wErK","../Data.Symbol/index.js":"dzOca","../Data.Void/index.js":"2M7Ux","../Record.Unsafe/index.js":"8BjRm","../Type.Proxy/index.js":"293bb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6wErK":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "showIntImpl", ()=>showIntImpl);
parcelHelpers.export(exports, "showNumberImpl", ()=>showNumberImpl);
parcelHelpers.export(exports, "showCharImpl", ()=>showCharImpl);
parcelHelpers.export(exports, "showStringImpl", ()=>showStringImpl);
parcelHelpers.export(exports, "showArrayImpl", ()=>showArrayImpl);
const showIntImpl = function(n) {
    return n.toString();
};
const showNumberImpl = function(n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
};
const showCharImpl = function(c) {
    var code = c.charCodeAt(0);
    if (code < 0x20 || code === 0x7F) {
        switch(c){
            case "\x07":
                return "'\\a'";
            case "\b":
                return "'\\b'";
            case "\f":
                return "'\\f'";
            case "\n":
                return "'\\n'";
            case "\r":
                return "'\\r'";
            case "\t":
                return "'\\t'";
            case "\v":
                return "'\\v'";
        }
        return "'\\" + code.toString(10) + "'";
    }
    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};
const showStringImpl = function(s) {
    var l = s.length;
    return "\"" + s.replace(/[\0-\x1F\x7F"\\]/g, function(c, i) {
        switch(c){
            case "\"":
            case "\\":
                return "\\" + c;
            case "\x07":
                return "\\a";
            case "\b":
                return "\\b";
            case "\f":
                return "\\f";
            case "\n":
                return "\\n";
            case "\r":
                return "\\r";
            case "\t":
                return "\\t";
            case "\v":
                return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
    }) + "\"";
};
const showArrayImpl = function(f) {
    return function(xs) {
        var ss = [];
        for(var i = 0, l = xs.length; i < l; i++)ss[i] = f(xs[i]);
        return "[" + ss.join(",") + "]";
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ff6lw":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Nothing", ()=>Nothing);
parcelHelpers.export(exports, "Just", ()=>Just);
parcelHelpers.export(exports, "maybe", ()=>maybe);
parcelHelpers.export(exports, "maybe$prime", ()=>maybe$prime);
parcelHelpers.export(exports, "fromMaybe", ()=>fromMaybe);
parcelHelpers.export(exports, "fromMaybe$prime", ()=>fromMaybe$prime);
parcelHelpers.export(exports, "isJust", ()=>isJust);
parcelHelpers.export(exports, "isNothing", ()=>isNothing);
parcelHelpers.export(exports, "fromJust", ()=>fromJust);
parcelHelpers.export(exports, "optional", ()=>optional);
parcelHelpers.export(exports, "functorMaybe", ()=>functorMaybe);
parcelHelpers.export(exports, "applyMaybe", ()=>applyMaybe);
parcelHelpers.export(exports, "applicativeMaybe", ()=>applicativeMaybe);
parcelHelpers.export(exports, "altMaybe", ()=>altMaybe);
parcelHelpers.export(exports, "plusMaybe", ()=>plusMaybe);
parcelHelpers.export(exports, "alternativeMaybe", ()=>alternativeMaybe);
parcelHelpers.export(exports, "bindMaybe", ()=>bindMaybe);
parcelHelpers.export(exports, "monadMaybe", ()=>monadMaybe);
parcelHelpers.export(exports, "extendMaybe", ()=>extendMaybe);
parcelHelpers.export(exports, "invariantMaybe", ()=>invariantMaybe);
parcelHelpers.export(exports, "semigroupMaybe", ()=>semigroupMaybe);
parcelHelpers.export(exports, "monoidMaybe", ()=>monoidMaybe);
parcelHelpers.export(exports, "semiringMaybe", ()=>semiringMaybe);
parcelHelpers.export(exports, "eqMaybe", ()=>eqMaybe);
parcelHelpers.export(exports, "eq1Maybe", ()=>eq1Maybe);
parcelHelpers.export(exports, "ordMaybe", ()=>ordMaybe);
parcelHelpers.export(exports, "ord1Maybe", ()=>ord1Maybe);
parcelHelpers.export(exports, "boundedMaybe", ()=>boundedMaybe);
parcelHelpers.export(exports, "showMaybe", ()=>showMaybe);
parcelHelpers.export(exports, "genericMaybe", ()=>genericMaybe);
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Applicative/index.js");
var _indexJs2 = require("../Control.Apply/index.js");
var _indexJs3 = require("../Control.Category/index.js");
var _indexJs4 = require("../Data.Bounded/index.js");
var _indexJs5 = require("../Data.Eq/index.js");
var _indexJs6 = require("../Data.Function/index.js");
var _indexJs7 = require("../Data.Functor/index.js");
var _indexJs8 = require("../Data.Functor.Invariant/index.js");
var _indexJs9 = require("../Data.Generic.Rep/index.js");
var _indexJs10 = require("../Data.Ord/index.js");
var _indexJs11 = require("../Data.Ordering/index.js");
var _indexJs12 = require("../Data.Semigroup/index.js");
var _indexJs13 = require("../Data.Semiring/index.js");
var _indexJs14 = require("../Data.Show/index.js");
var _indexJs15 = require("../Data.Unit/index.js");
var identity = /* #__PURE__ */ _indexJs3.identity(_indexJs3.categoryFn);
var Nothing = /* #__PURE__ */ function() {
    function Nothing() {}
    Nothing.value = new Nothing();
    return Nothing;
}();
var Just = /* #__PURE__ */ function() {
    function Just(value0) {
        this.value0 = value0;
    }
    Just.create = function(value0) {
        return new Just(value0);
    };
    return Just;
}();
var showMaybe = function(dictShow) {
    var show = _indexJs14.show(dictShow);
    return {
        show: function(v) {
            if (v instanceof Just) return "(Just " + (show(v.value0) + ")");
            if (v instanceof Nothing) return "Nothing";
            throw new Error("Failed pattern match at Data.Maybe (line 223, column 1 - line 225, column 28): " + [
                v.constructor.name
            ]);
        }
    };
};
var semigroupMaybe = function(dictSemigroup) {
    var append1 = _indexJs12.append(dictSemigroup);
    return {
        append: function(v) {
            return function(v1) {
                if (v instanceof Nothing) return v1;
                if (v1 instanceof Nothing) return v;
                if (v instanceof Just && v1 instanceof Just) return new Just(append1(v.value0)(v1.value0));
                throw new Error("Failed pattern match at Data.Maybe (line 182, column 1 - line 185, column 43): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        }
    };
};
var optional = function(dictAlt) {
    var alt = _indexJs.alt(dictAlt);
    var map1 = _indexJs7.map(dictAlt.Functor0());
    return function(dictApplicative) {
        var pure = _indexJs1.pure(dictApplicative);
        return function(a) {
            return alt(map1(Just.create)(a))(pure(Nothing.value));
        };
    };
};
var monoidMaybe = function(dictSemigroup) {
    var semigroupMaybe1 = semigroupMaybe(dictSemigroup);
    return {
        mempty: Nothing.value,
        Semigroup0: function() {
            return semigroupMaybe1;
        }
    };
};
var maybe$prime = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof Nothing) return v(_indexJs15.unit);
            if (v2 instanceof Just) return v1(v2.value0);
            throw new Error("Failed pattern match at Data.Maybe (line 250, column 1 - line 250, column 62): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
};
var maybe = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof Nothing) return v;
            if (v2 instanceof Just) return v1(v2.value0);
            throw new Error("Failed pattern match at Data.Maybe (line 237, column 1 - line 237, column 51): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
};
var isNothing = /* #__PURE__ */ maybe(true)(/* #__PURE__ */ _indexJs6["const"](false));
var isJust = /* #__PURE__ */ maybe(false)(/* #__PURE__ */ _indexJs6["const"](true));
var genericMaybe = {
    to: function(x) {
        if (x instanceof _indexJs9.Inl) return Nothing.value;
        if (x instanceof _indexJs9.Inr) return new Just(x.value0);
        throw new Error("Failed pattern match at Data.Maybe (line 227, column 1 - line 227, column 52): " + [
            x.constructor.name
        ]);
    },
    from: function(x) {
        if (x instanceof Nothing) return new _indexJs9.Inl(_indexJs9.NoArguments.value);
        if (x instanceof Just) return new _indexJs9.Inr(x.value0);
        throw new Error("Failed pattern match at Data.Maybe (line 227, column 1 - line 227, column 52): " + [
            x.constructor.name
        ]);
    }
};
var functorMaybe = {
    map: function(v) {
        return function(v1) {
            if (v1 instanceof Just) return new Just(v(v1.value0));
            return Nothing.value;
        };
    }
};
var map = /* #__PURE__ */ _indexJs7.map(functorMaybe);
var invariantMaybe = {
    imap: /* #__PURE__ */ _indexJs8.imapF(functorMaybe)
};
var fromMaybe$prime = function(a) {
    return maybe$prime(a)(identity);
};
var fromMaybe = function(a) {
    return maybe(a)(identity);
};
var fromJust = function() {
    return function(v) {
        if (v instanceof Just) return v.value0;
        throw new Error("Failed pattern match at Data.Maybe (line 288, column 1 - line 288, column 46): " + [
            v.constructor.name
        ]);
    };
};
var extendMaybe = {
    extend: function(v) {
        return function(v1) {
            if (v1 instanceof Nothing) return Nothing.value;
            return new Just(v(v1));
        };
    },
    Functor0: function() {
        return functorMaybe;
    }
};
var eqMaybe = function(dictEq) {
    var eq = _indexJs5.eq(dictEq);
    return {
        eq: function(x) {
            return function(y) {
                if (x instanceof Nothing && y instanceof Nothing) return true;
                if (x instanceof Just && y instanceof Just) return eq(x.value0)(y.value0);
                return false;
            };
        }
    };
};
var ordMaybe = function(dictOrd) {
    var compare = _indexJs10.compare(dictOrd);
    var eqMaybe1 = eqMaybe(dictOrd.Eq0());
    return {
        compare: function(x) {
            return function(y) {
                if (x instanceof Nothing && y instanceof Nothing) return _indexJs11.EQ.value;
                if (x instanceof Nothing) return _indexJs11.LT.value;
                if (y instanceof Nothing) return _indexJs11.GT.value;
                if (x instanceof Just && y instanceof Just) return compare(x.value0)(y.value0);
                throw new Error("Failed pattern match at Data.Maybe (line 0, column 0 - line 0, column 0): " + [
                    x.constructor.name,
                    y.constructor.name
                ]);
            };
        },
        Eq0: function() {
            return eqMaybe1;
        }
    };
};
var eq1Maybe = {
    eq1: function(dictEq) {
        return _indexJs5.eq(eqMaybe(dictEq));
    }
};
var ord1Maybe = {
    compare1: function(dictOrd) {
        return _indexJs10.compare(ordMaybe(dictOrd));
    },
    Eq10: function() {
        return eq1Maybe;
    }
};
var boundedMaybe = function(dictBounded) {
    var ordMaybe1 = ordMaybe(dictBounded.Ord0());
    return {
        top: new Just(_indexJs4.top(dictBounded)),
        bottom: Nothing.value,
        Ord0: function() {
            return ordMaybe1;
        }
    };
};
var applyMaybe = {
    apply: function(v) {
        return function(v1) {
            if (v instanceof Just) return map(v.value0)(v1);
            if (v instanceof Nothing) return Nothing.value;
            throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    },
    Functor0: function() {
        return functorMaybe;
    }
};
var apply = /* #__PURE__ */ _indexJs2.apply(applyMaybe);
var bindMaybe = {
    bind: function(v) {
        return function(v1) {
            if (v instanceof Just) return v1(v.value0);
            if (v instanceof Nothing) return Nothing.value;
            throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    },
    Apply0: function() {
        return applyMaybe;
    }
};
var semiringMaybe = function(dictSemiring) {
    var add = _indexJs13.add(dictSemiring);
    var mul = _indexJs13.mul(dictSemiring);
    return {
        zero: Nothing.value,
        one: new Just(_indexJs13.one(dictSemiring)),
        add: function(v) {
            return function(v1) {
                if (v instanceof Nothing) return v1;
                if (v1 instanceof Nothing) return v;
                if (v instanceof Just && v1 instanceof Just) return new Just(add(v.value0)(v1.value0));
                throw new Error("Failed pattern match at Data.Maybe (line 190, column 1 - line 198, column 28): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        },
        mul: function(x) {
            return function(y) {
                return apply(map(mul)(x))(y);
            };
        }
    };
};
var applicativeMaybe = /* #__PURE__ */ function() {
    return {
        pure: Just.create,
        Apply0: function() {
            return applyMaybe;
        }
    };
}();
var monadMaybe = {
    Applicative0: function() {
        return applicativeMaybe;
    },
    Bind1: function() {
        return bindMaybe;
    }
};
var altMaybe = {
    alt: function(v) {
        return function(v1) {
            if (v instanceof Nothing) return v1;
            return v;
        };
    },
    Functor0: function() {
        return functorMaybe;
    }
};
var plusMaybe = /* #__PURE__ */ function() {
    return {
        empty: Nothing.value,
        Alt0: function() {
            return altMaybe;
        }
    };
}();
var alternativeMaybe = {
    Applicative0: function() {
        return applicativeMaybe;
    },
    Plus1: function() {
        return plusMaybe;
    }
};

},{"../Control.Alt/index.js":"dcz8C","../Control.Applicative/index.js":"5JL6d","../Control.Apply/index.js":"ggN4S","../Control.Category/index.js":"iWlWa","../Data.Bounded/index.js":"j0YdY","../Data.Eq/index.js":"j3zMn","../Data.Function/index.js":"64uwb","../Data.Functor/index.js":"j9NCu","../Data.Functor.Invariant/index.js":"h8WwJ","../Data.Generic.Rep/index.js":"lPkX2","../Data.Ord/index.js":"luB7W","../Data.Ordering/index.js":"2NvYx","../Data.Semigroup/index.js":"evJTv","../Data.Semiring/index.js":"1k57z","../Data.Show/index.js":"lQCRi","../Data.Unit/index.js":"fuCRN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"beFyY":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Tuple", ()=>Tuple);
parcelHelpers.export(exports, "fst", ()=>fst);
parcelHelpers.export(exports, "snd", ()=>snd);
parcelHelpers.export(exports, "curry", ()=>curry);
parcelHelpers.export(exports, "uncurry", ()=>uncurry);
parcelHelpers.export(exports, "swap", ()=>swap);
parcelHelpers.export(exports, "showTuple", ()=>showTuple);
parcelHelpers.export(exports, "eqTuple", ()=>eqTuple);
parcelHelpers.export(exports, "eq1Tuple", ()=>eq1Tuple);
parcelHelpers.export(exports, "ordTuple", ()=>ordTuple);
parcelHelpers.export(exports, "ord1Tuple", ()=>ord1Tuple);
parcelHelpers.export(exports, "boundedTuple", ()=>boundedTuple);
parcelHelpers.export(exports, "semigroupoidTuple", ()=>semigroupoidTuple);
parcelHelpers.export(exports, "semigroupTuple", ()=>semigroupTuple);
parcelHelpers.export(exports, "monoidTuple", ()=>monoidTuple);
parcelHelpers.export(exports, "semiringTuple", ()=>semiringTuple);
parcelHelpers.export(exports, "ringTuple", ()=>ringTuple);
parcelHelpers.export(exports, "commutativeRingTuple", ()=>commutativeRingTuple);
parcelHelpers.export(exports, "heytingAlgebraTuple", ()=>heytingAlgebraTuple);
parcelHelpers.export(exports, "booleanAlgebraTuple", ()=>booleanAlgebraTuple);
parcelHelpers.export(exports, "functorTuple", ()=>functorTuple);
parcelHelpers.export(exports, "genericTuple", ()=>genericTuple);
parcelHelpers.export(exports, "invariantTuple", ()=>invariantTuple);
parcelHelpers.export(exports, "applyTuple", ()=>applyTuple);
parcelHelpers.export(exports, "applicativeTuple", ()=>applicativeTuple);
parcelHelpers.export(exports, "bindTuple", ()=>bindTuple);
parcelHelpers.export(exports, "monadTuple", ()=>monadTuple);
parcelHelpers.export(exports, "extendTuple", ()=>extendTuple);
parcelHelpers.export(exports, "comonadTuple", ()=>comonadTuple);
parcelHelpers.export(exports, "lazyTuple", ()=>lazyTuple);
var _indexJs = require("../Control.Lazy/index.js");
var _indexJs1 = require("../Data.Bounded/index.js");
var _indexJs2 = require("../Data.Eq/index.js");
var _indexJs3 = require("../Data.Functor.Invariant/index.js");
var _indexJs4 = require("../Data.Generic.Rep/index.js");
var _indexJs5 = require("../Data.HeytingAlgebra/index.js");
var _indexJs6 = require("../Data.Monoid/index.js");
var _indexJs7 = require("../Data.Ord/index.js");
var _indexJs8 = require("../Data.Ordering/index.js");
var _indexJs9 = require("../Data.Ring/index.js");
var _indexJs10 = require("../Data.Semigroup/index.js");
var _indexJs11 = require("../Data.Semiring/index.js");
var _indexJs12 = require("../Data.Show/index.js");
var _indexJs13 = require("../Data.Unit/index.js");
var Tuple = /* #__PURE__ */ function() {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Tuple.create = function(value0) {
        return function(value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
}();
var uncurry = function(f) {
    return function(v) {
        return f(v.value0)(v.value1);
    };
};
var swap = function(v) {
    return new Tuple(v.value1, v.value0);
};
var snd = function(v) {
    return v.value1;
};
var showTuple = function(dictShow) {
    var show = _indexJs12.show(dictShow);
    return function(dictShow1) {
        var show1 = _indexJs12.show(dictShow1);
        return {
            show: function(v) {
                return "(Tuple " + (show(v.value0) + (" " + (show1(v.value1) + ")")));
            }
        };
    };
};
var semiringTuple = function(dictSemiring) {
    var add = _indexJs11.add(dictSemiring);
    var one = _indexJs11.one(dictSemiring);
    var mul = _indexJs11.mul(dictSemiring);
    var zero = _indexJs11.zero(dictSemiring);
    return function(dictSemiring1) {
        var add1 = _indexJs11.add(dictSemiring1);
        var mul1 = _indexJs11.mul(dictSemiring1);
        return {
            add: function(v) {
                return function(v1) {
                    return new Tuple(add(v.value0)(v1.value0), add1(v.value1)(v1.value1));
                };
            },
            one: new Tuple(one, _indexJs11.one(dictSemiring1)),
            mul: function(v) {
                return function(v1) {
                    return new Tuple(mul(v.value0)(v1.value0), mul1(v.value1)(v1.value1));
                };
            },
            zero: new Tuple(zero, _indexJs11.zero(dictSemiring1))
        };
    };
};
var semigroupoidTuple = {
    compose: function(v) {
        return function(v1) {
            return new Tuple(v1.value0, v.value1);
        };
    }
};
var semigroupTuple = function(dictSemigroup) {
    var append1 = _indexJs10.append(dictSemigroup);
    return function(dictSemigroup1) {
        var append2 = _indexJs10.append(dictSemigroup1);
        return {
            append: function(v) {
                return function(v1) {
                    return new Tuple(append1(v.value0)(v1.value0), append2(v.value1)(v1.value1));
                };
            }
        };
    };
};
var ringTuple = function(dictRing) {
    var sub = _indexJs9.sub(dictRing);
    var semiringTuple1 = semiringTuple(dictRing.Semiring0());
    return function(dictRing1) {
        var sub1 = _indexJs9.sub(dictRing1);
        var semiringTuple2 = semiringTuple1(dictRing1.Semiring0());
        return {
            sub: function(v) {
                return function(v1) {
                    return new Tuple(sub(v.value0)(v1.value0), sub1(v.value1)(v1.value1));
                };
            },
            Semiring0: function() {
                return semiringTuple2;
            }
        };
    };
};
var monoidTuple = function(dictMonoid) {
    var mempty = _indexJs6.mempty(dictMonoid);
    var semigroupTuple1 = semigroupTuple(dictMonoid.Semigroup0());
    return function(dictMonoid1) {
        var semigroupTuple2 = semigroupTuple1(dictMonoid1.Semigroup0());
        return {
            mempty: new Tuple(mempty, _indexJs6.mempty(dictMonoid1)),
            Semigroup0: function() {
                return semigroupTuple2;
            }
        };
    };
};
var heytingAlgebraTuple = function(dictHeytingAlgebra) {
    var tt = _indexJs5.tt(dictHeytingAlgebra);
    var ff = _indexJs5.ff(dictHeytingAlgebra);
    var implies = _indexJs5.implies(dictHeytingAlgebra);
    var conj1 = _indexJs5.conj(dictHeytingAlgebra);
    var disj = _indexJs5.disj(dictHeytingAlgebra);
    var not = _indexJs5.not(dictHeytingAlgebra);
    return function(dictHeytingAlgebra1) {
        var implies1 = _indexJs5.implies(dictHeytingAlgebra1);
        var conj2 = _indexJs5.conj(dictHeytingAlgebra1);
        var disj1 = _indexJs5.disj(dictHeytingAlgebra1);
        var not1 = _indexJs5.not(dictHeytingAlgebra1);
        return {
            tt: new Tuple(tt, _indexJs5.tt(dictHeytingAlgebra1)),
            ff: new Tuple(ff, _indexJs5.ff(dictHeytingAlgebra1)),
            implies: function(v) {
                return function(v1) {
                    return new Tuple(implies(v.value0)(v1.value0), implies1(v.value1)(v1.value1));
                };
            },
            conj: function(v) {
                return function(v1) {
                    return new Tuple(conj1(v.value0)(v1.value0), conj2(v.value1)(v1.value1));
                };
            },
            disj: function(v) {
                return function(v1) {
                    return new Tuple(disj(v.value0)(v1.value0), disj1(v.value1)(v1.value1));
                };
            },
            not: function(v) {
                return new Tuple(not(v.value0), not1(v.value1));
            }
        };
    };
};
var genericTuple = {
    to: function(x) {
        return new Tuple(x.value0, x.value1);
    },
    from: function(x) {
        return new _indexJs4.Product(x.value0, x.value1);
    }
};
var functorTuple = {
    map: function(f) {
        return function(m) {
            return new Tuple(m.value0, f(m.value1));
        };
    }
};
var invariantTuple = {
    imap: /* #__PURE__ */ _indexJs3.imapF(functorTuple)
};
var fst = function(v) {
    return v.value0;
};
var lazyTuple = function(dictLazy) {
    var defer = _indexJs.defer(dictLazy);
    return function(dictLazy1) {
        var defer1 = _indexJs.defer(dictLazy1);
        return {
            defer: function(f) {
                return new Tuple(defer(function(v) {
                    return fst(f(_indexJs13.unit));
                }), defer1(function(v) {
                    return snd(f(_indexJs13.unit));
                }));
            }
        };
    };
};
var extendTuple = {
    extend: function(f) {
        return function(v) {
            return new Tuple(v.value0, f(v));
        };
    },
    Functor0: function() {
        return functorTuple;
    }
};
var eqTuple = function(dictEq) {
    var eq = _indexJs2.eq(dictEq);
    return function(dictEq1) {
        var eq1 = _indexJs2.eq(dictEq1);
        return {
            eq: function(x) {
                return function(y) {
                    return eq(x.value0)(y.value0) && eq1(x.value1)(y.value1);
                };
            }
        };
    };
};
var ordTuple = function(dictOrd) {
    var compare = _indexJs7.compare(dictOrd);
    var eqTuple1 = eqTuple(dictOrd.Eq0());
    return function(dictOrd1) {
        var compare1 = _indexJs7.compare(dictOrd1);
        var eqTuple2 = eqTuple1(dictOrd1.Eq0());
        return {
            compare: function(x) {
                return function(y) {
                    var v = compare(x.value0)(y.value0);
                    if (v instanceof _indexJs8.LT) return _indexJs8.LT.value;
                    if (v instanceof _indexJs8.GT) return _indexJs8.GT.value;
                    return compare1(x.value1)(y.value1);
                };
            },
            Eq0: function() {
                return eqTuple2;
            }
        };
    };
};
var eq1Tuple = function(dictEq) {
    var eqTuple1 = eqTuple(dictEq);
    return {
        eq1: function(dictEq1) {
            return _indexJs2.eq(eqTuple1(dictEq1));
        }
    };
};
var ord1Tuple = function(dictOrd) {
    var ordTuple1 = ordTuple(dictOrd);
    var eq1Tuple1 = eq1Tuple(dictOrd.Eq0());
    return {
        compare1: function(dictOrd1) {
            return _indexJs7.compare(ordTuple1(dictOrd1));
        },
        Eq10: function() {
            return eq1Tuple1;
        }
    };
};
var curry = function(f) {
    return function(a) {
        return function(b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = {
    extract: snd,
    Extend0: function() {
        return extendTuple;
    }
};
var commutativeRingTuple = function(dictCommutativeRing) {
    var ringTuple1 = ringTuple(dictCommutativeRing.Ring0());
    return function(dictCommutativeRing1) {
        var ringTuple2 = ringTuple1(dictCommutativeRing1.Ring0());
        return {
            Ring0: function() {
                return ringTuple2;
            }
        };
    };
};
var boundedTuple = function(dictBounded) {
    var top = _indexJs1.top(dictBounded);
    var bottom = _indexJs1.bottom(dictBounded);
    var ordTuple1 = ordTuple(dictBounded.Ord0());
    return function(dictBounded1) {
        var ordTuple2 = ordTuple1(dictBounded1.Ord0());
        return {
            top: new Tuple(top, _indexJs1.top(dictBounded1)),
            bottom: new Tuple(bottom, _indexJs1.bottom(dictBounded1)),
            Ord0: function() {
                return ordTuple2;
            }
        };
    };
};
var booleanAlgebraTuple = function(dictBooleanAlgebra) {
    var heytingAlgebraTuple1 = heytingAlgebraTuple(dictBooleanAlgebra.HeytingAlgebra0());
    return function(dictBooleanAlgebra1) {
        var heytingAlgebraTuple2 = heytingAlgebraTuple1(dictBooleanAlgebra1.HeytingAlgebra0());
        return {
            HeytingAlgebra0: function() {
                return heytingAlgebraTuple2;
            }
        };
    };
};
var applyTuple = function(dictSemigroup) {
    var append1 = _indexJs10.append(dictSemigroup);
    return {
        apply: function(v) {
            return function(v1) {
                return new Tuple(append1(v.value0)(v1.value0), v.value1(v1.value1));
            };
        },
        Functor0: function() {
            return functorTuple;
        }
    };
};
var bindTuple = function(dictSemigroup) {
    var append1 = _indexJs10.append(dictSemigroup);
    var applyTuple1 = applyTuple(dictSemigroup);
    return {
        bind: function(v) {
            return function(f) {
                var v1 = f(v.value1);
                return new Tuple(append1(v.value0)(v1.value0), v1.value1);
            };
        },
        Apply0: function() {
            return applyTuple1;
        }
    };
};
var applicativeTuple = function(dictMonoid) {
    var applyTuple1 = applyTuple(dictMonoid.Semigroup0());
    return {
        pure: Tuple.create(_indexJs6.mempty(dictMonoid)),
        Apply0: function() {
            return applyTuple1;
        }
    };
};
var monadTuple = function(dictMonoid) {
    var applicativeTuple1 = applicativeTuple(dictMonoid);
    var bindTuple1 = bindTuple(dictMonoid.Semigroup0());
    return {
        Applicative0: function() {
            return applicativeTuple1;
        },
        Bind1: function() {
            return bindTuple1;
        }
    };
};

},{"../Control.Lazy/index.js":"3eTld","../Data.Bounded/index.js":"j0YdY","../Data.Eq/index.js":"j3zMn","../Data.Functor.Invariant/index.js":"h8WwJ","../Data.Generic.Rep/index.js":"lPkX2","../Data.HeytingAlgebra/index.js":"d84ko","../Data.Monoid/index.js":"6chRZ","../Data.Ord/index.js":"luB7W","../Data.Ordering/index.js":"2NvYx","../Data.Ring/index.js":"hWPc6","../Data.Semigroup/index.js":"evJTv","../Data.Semiring/index.js":"1k57z","../Data.Show/index.js":"lQCRi","../Data.Unit/index.js":"fuCRN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3eTld":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "defer", ()=>defer);
parcelHelpers.export(exports, "fix", ()=>fix);
parcelHelpers.export(exports, "lazyFn", ()=>lazyFn);
parcelHelpers.export(exports, "lazyUnit", ()=>lazyUnit);
var _indexJs = require("../Data.Unit/index.js");
var $runtime_lazy = function(name, moduleName, init) {
    var state = 0;
    var val;
    return function(lineNumber) {
        if (state === 2) return val;
        if (state === 1) throw new ReferenceError(name + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state = 1;
        val = init();
        state = 2;
        return val;
    };
};
var lazyUnit = {
    defer: function(v) {
        return _indexJs.unit;
    }
};
var lazyFn = {
    defer: function(f) {
        return function(x) {
            return f(_indexJs.unit)(x);
        };
    }
};
var defer = function(dict) {
    return dict.defer;
};
var fix = function(dictLazy) {
    var defer1 = defer(dictLazy);
    return function(f) {
        var $lazy_go = $runtime_lazy("go", "Control.Lazy", function() {
            return defer1(function(v) {
                return f($lazy_go(25));
            });
        });
        var go = $lazy_go(25);
        return go;
    };
};

},{"../Data.Unit/index.js":"fuCRN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d84ko":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "tt", ()=>tt);
parcelHelpers.export(exports, "ff", ()=>ff);
parcelHelpers.export(exports, "implies", ()=>implies);
parcelHelpers.export(exports, "conj", ()=>conj);
parcelHelpers.export(exports, "disj", ()=>disj);
parcelHelpers.export(exports, "not", ()=>not);
parcelHelpers.export(exports, "ffRecord", ()=>ffRecord);
parcelHelpers.export(exports, "ttRecord", ()=>ttRecord);
parcelHelpers.export(exports, "impliesRecord", ()=>impliesRecord);
parcelHelpers.export(exports, "conjRecord", ()=>conjRecord);
parcelHelpers.export(exports, "disjRecord", ()=>disjRecord);
parcelHelpers.export(exports, "notRecord", ()=>notRecord);
parcelHelpers.export(exports, "heytingAlgebraBoolean", ()=>heytingAlgebraBoolean);
parcelHelpers.export(exports, "heytingAlgebraUnit", ()=>heytingAlgebraUnit);
parcelHelpers.export(exports, "heytingAlgebraFunction", ()=>heytingAlgebraFunction);
parcelHelpers.export(exports, "heytingAlgebraProxy", ()=>heytingAlgebraProxy);
parcelHelpers.export(exports, "heytingAlgebraRecord", ()=>heytingAlgebraRecord);
parcelHelpers.export(exports, "heytingAlgebraRecordNil", ()=>heytingAlgebraRecordNil);
parcelHelpers.export(exports, "heytingAlgebraRecordCons", ()=>heytingAlgebraRecordCons);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Symbol/index.js");
var _indexJs1 = require("../Data.Unit/index.js");
var _indexJs2 = require("../Record.Unsafe/index.js");
var _indexJs3 = require("../Type.Proxy/index.js");
var ttRecord = function(dict) {
    return dict.ttRecord;
};
var tt = function(dict) {
    return dict.tt;
};
var notRecord = function(dict) {
    return dict.notRecord;
};
var not = function(dict) {
    return dict.not;
};
var impliesRecord = function(dict) {
    return dict.impliesRecord;
};
var implies = function(dict) {
    return dict.implies;
};
var heytingAlgebraUnit = {
    ff: _indexJs1.unit,
    tt: _indexJs1.unit,
    implies: function(v) {
        return function(v1) {
            return _indexJs1.unit;
        };
    },
    conj: function(v) {
        return function(v1) {
            return _indexJs1.unit;
        };
    },
    disj: function(v) {
        return function(v1) {
            return _indexJs1.unit;
        };
    },
    not: function(v) {
        return _indexJs1.unit;
    }
};
var heytingAlgebraRecordNil = {
    conjRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return {};
            };
        };
    },
    disjRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return {};
            };
        };
    },
    ffRecord: function(v) {
        return function(v1) {
            return {};
        };
    },
    impliesRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return {};
            };
        };
    },
    notRecord: function(v) {
        return function(v1) {
            return {};
        };
    },
    ttRecord: function(v) {
        return function(v1) {
            return {};
        };
    }
};
var heytingAlgebraProxy = /* #__PURE__ */ function() {
    return {
        conj: function(v) {
            return function(v1) {
                return _indexJs3["Proxy"].value;
            };
        },
        disj: function(v) {
            return function(v1) {
                return _indexJs3["Proxy"].value;
            };
        },
        implies: function(v) {
            return function(v1) {
                return _indexJs3["Proxy"].value;
            };
        },
        ff: _indexJs3["Proxy"].value,
        not: function(v) {
            return _indexJs3["Proxy"].value;
        },
        tt: _indexJs3["Proxy"].value
    };
}();
var ffRecord = function(dict) {
    return dict.ffRecord;
};
var ff = function(dict) {
    return dict.ff;
};
var disjRecord = function(dict) {
    return dict.disjRecord;
};
var disj = function(dict) {
    return dict.disj;
};
var heytingAlgebraBoolean = {
    ff: false,
    tt: true,
    implies: function(a) {
        return function(b) {
            return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
        };
    },
    conj: _foreignJs.boolConj,
    disj: _foreignJs.boolDisj,
    not: _foreignJs.boolNot
};
var conjRecord = function(dict) {
    return dict.conjRecord;
};
var heytingAlgebraRecord = function() {
    return function(dictHeytingAlgebraRecord) {
        return {
            ff: ffRecord(dictHeytingAlgebraRecord)(_indexJs3["Proxy"].value)(_indexJs3["Proxy"].value),
            tt: ttRecord(dictHeytingAlgebraRecord)(_indexJs3["Proxy"].value)(_indexJs3["Proxy"].value),
            conj: conjRecord(dictHeytingAlgebraRecord)(_indexJs3["Proxy"].value),
            disj: disjRecord(dictHeytingAlgebraRecord)(_indexJs3["Proxy"].value),
            implies: impliesRecord(dictHeytingAlgebraRecord)(_indexJs3["Proxy"].value),
            not: notRecord(dictHeytingAlgebraRecord)(_indexJs3["Proxy"].value)
        };
    };
};
var conj = function(dict) {
    return dict.conj;
};
var heytingAlgebraFunction = function(dictHeytingAlgebra) {
    var ff1 = ff(dictHeytingAlgebra);
    var tt1 = tt(dictHeytingAlgebra);
    var implies1 = implies(dictHeytingAlgebra);
    var conj1 = conj(dictHeytingAlgebra);
    var disj1 = disj(dictHeytingAlgebra);
    var not1 = not(dictHeytingAlgebra);
    return {
        ff: function(v) {
            return ff1;
        },
        tt: function(v) {
            return tt1;
        },
        implies: function(f) {
            return function(g) {
                return function(a) {
                    return implies1(f(a))(g(a));
                };
            };
        },
        conj: function(f) {
            return function(g) {
                return function(a) {
                    return conj1(f(a))(g(a));
                };
            };
        },
        disj: function(f) {
            return function(g) {
                return function(a) {
                    return disj1(f(a))(g(a));
                };
            };
        },
        not: function(f) {
            return function(a) {
                return not1(f(a));
            };
        }
    };
};
var heytingAlgebraRecordCons = function(dictIsSymbol) {
    var reflectSymbol = _indexJs.reflectSymbol(dictIsSymbol);
    return function() {
        return function(dictHeytingAlgebraRecord) {
            var conjRecord1 = conjRecord(dictHeytingAlgebraRecord);
            var disjRecord1 = disjRecord(dictHeytingAlgebraRecord);
            var impliesRecord1 = impliesRecord(dictHeytingAlgebraRecord);
            var ffRecord1 = ffRecord(dictHeytingAlgebraRecord);
            var notRecord1 = notRecord(dictHeytingAlgebraRecord);
            var ttRecord1 = ttRecord(dictHeytingAlgebraRecord);
            return function(dictHeytingAlgebra) {
                var conj1 = conj(dictHeytingAlgebra);
                var disj1 = disj(dictHeytingAlgebra);
                var implies1 = implies(dictHeytingAlgebra);
                var ff1 = ff(dictHeytingAlgebra);
                var not1 = not(dictHeytingAlgebra);
                var tt1 = tt(dictHeytingAlgebra);
                return {
                    conjRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var tail = conjRecord1(_indexJs3["Proxy"].value)(ra)(rb);
                                var key = reflectSymbol(_indexJs3["Proxy"].value);
                                var insert = _indexJs2.unsafeSet(key);
                                var get = _indexJs2.unsafeGet(key);
                                return insert(conj1(get(ra))(get(rb)))(tail);
                            };
                        };
                    },
                    disjRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var tail = disjRecord1(_indexJs3["Proxy"].value)(ra)(rb);
                                var key = reflectSymbol(_indexJs3["Proxy"].value);
                                var insert = _indexJs2.unsafeSet(key);
                                var get = _indexJs2.unsafeGet(key);
                                return insert(disj1(get(ra))(get(rb)))(tail);
                            };
                        };
                    },
                    impliesRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var tail = impliesRecord1(_indexJs3["Proxy"].value)(ra)(rb);
                                var key = reflectSymbol(_indexJs3["Proxy"].value);
                                var insert = _indexJs2.unsafeSet(key);
                                var get = _indexJs2.unsafeGet(key);
                                return insert(implies1(get(ra))(get(rb)))(tail);
                            };
                        };
                    },
                    ffRecord: function(v) {
                        return function(row) {
                            var tail = ffRecord1(_indexJs3["Proxy"].value)(row);
                            var key = reflectSymbol(_indexJs3["Proxy"].value);
                            var insert = _indexJs2.unsafeSet(key);
                            return insert(ff1)(tail);
                        };
                    },
                    notRecord: function(v) {
                        return function(row) {
                            var tail = notRecord1(_indexJs3["Proxy"].value)(row);
                            var key = reflectSymbol(_indexJs3["Proxy"].value);
                            var insert = _indexJs2.unsafeSet(key);
                            var get = _indexJs2.unsafeGet(key);
                            return insert(not1(get(row)))(tail);
                        };
                    },
                    ttRecord: function(v) {
                        return function(row) {
                            var tail = ttRecord1(_indexJs3["Proxy"].value)(row);
                            var key = reflectSymbol(_indexJs3["Proxy"].value);
                            var insert = _indexJs2.unsafeSet(key);
                            return insert(tt1)(tail);
                        };
                    }
                };
            };
        };
    };
};

},{"./foreign.js":"jitja","../Data.Symbol/index.js":"dzOca","../Data.Unit/index.js":"fuCRN","../Record.Unsafe/index.js":"8BjRm","../Type.Proxy/index.js":"293bb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jitja":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "boolConj", ()=>boolConj);
parcelHelpers.export(exports, "boolDisj", ()=>boolDisj);
parcelHelpers.export(exports, "boolNot", ()=>boolNot);
const boolConj = function(b1) {
    return function(b2) {
        return b1 && b2;
    };
};
const boolDisj = function(b1) {
    return function(b2) {
        return b1 || b2;
    };
};
const boolNot = function(b) {
    return !b;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dxJ9j":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mkFn0", ()=>(0, _foreignJs.mkFn0));
parcelHelpers.export(exports, "mkFn2", ()=>(0, _foreignJs.mkFn2));
parcelHelpers.export(exports, "mkFn3", ()=>(0, _foreignJs.mkFn3));
parcelHelpers.export(exports, "mkFn4", ()=>(0, _foreignJs.mkFn4));
parcelHelpers.export(exports, "mkFn5", ()=>(0, _foreignJs.mkFn5));
parcelHelpers.export(exports, "mkFn6", ()=>(0, _foreignJs.mkFn6));
parcelHelpers.export(exports, "mkFn7", ()=>(0, _foreignJs.mkFn7));
parcelHelpers.export(exports, "mkFn8", ()=>(0, _foreignJs.mkFn8));
parcelHelpers.export(exports, "mkFn9", ()=>(0, _foreignJs.mkFn9));
parcelHelpers.export(exports, "mkFn10", ()=>(0, _foreignJs.mkFn10));
parcelHelpers.export(exports, "runFn0", ()=>(0, _foreignJs.runFn0));
parcelHelpers.export(exports, "runFn2", ()=>(0, _foreignJs.runFn2));
parcelHelpers.export(exports, "runFn3", ()=>(0, _foreignJs.runFn3));
parcelHelpers.export(exports, "runFn4", ()=>(0, _foreignJs.runFn4));
parcelHelpers.export(exports, "runFn5", ()=>(0, _foreignJs.runFn5));
parcelHelpers.export(exports, "runFn6", ()=>(0, _foreignJs.runFn6));
parcelHelpers.export(exports, "runFn7", ()=>(0, _foreignJs.runFn7));
parcelHelpers.export(exports, "runFn8", ()=>(0, _foreignJs.runFn8));
parcelHelpers.export(exports, "runFn9", ()=>(0, _foreignJs.runFn9));
parcelHelpers.export(exports, "runFn10", ()=>(0, _foreignJs.runFn10));
parcelHelpers.export(exports, "mkFn1", ()=>mkFn1);
parcelHelpers.export(exports, "runFn1", ()=>runFn1);
var _foreignJs = require("./foreign.js");
var runFn1 = function(f) {
    return f;
};
var mkFn1 = function(f) {
    return f;
};

},{"./foreign.js":"6IpJM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6IpJM":[function(require,module,exports,__globalThis) {
// module Data.Function.Uncurried
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mkFn0", ()=>mkFn0);
parcelHelpers.export(exports, "mkFn2", ()=>mkFn2);
parcelHelpers.export(exports, "mkFn3", ()=>mkFn3);
parcelHelpers.export(exports, "mkFn4", ()=>mkFn4);
parcelHelpers.export(exports, "mkFn5", ()=>mkFn5);
parcelHelpers.export(exports, "mkFn6", ()=>mkFn6);
parcelHelpers.export(exports, "mkFn7", ()=>mkFn7);
parcelHelpers.export(exports, "mkFn8", ()=>mkFn8);
parcelHelpers.export(exports, "mkFn9", ()=>mkFn9);
parcelHelpers.export(exports, "mkFn10", ()=>mkFn10);
parcelHelpers.export(exports, "runFn0", ()=>runFn0);
parcelHelpers.export(exports, "runFn2", ()=>runFn2);
parcelHelpers.export(exports, "runFn3", ()=>runFn3);
parcelHelpers.export(exports, "runFn4", ()=>runFn4);
parcelHelpers.export(exports, "runFn5", ()=>runFn5);
parcelHelpers.export(exports, "runFn6", ()=>runFn6);
parcelHelpers.export(exports, "runFn7", ()=>runFn7);
parcelHelpers.export(exports, "runFn8", ()=>runFn8);
parcelHelpers.export(exports, "runFn9", ()=>runFn9);
parcelHelpers.export(exports, "runFn10", ()=>runFn10);
const mkFn0 = function(fn) {
    return function() {
        return fn();
    };
};
const mkFn2 = function(fn) {
    /* jshint maxparams: 2 */ return function(a, b) {
        return fn(a)(b);
    };
};
const mkFn3 = function(fn) {
    /* jshint maxparams: 3 */ return function(a, b, c) {
        return fn(a)(b)(c);
    };
};
const mkFn4 = function(fn) {
    /* jshint maxparams: 4 */ return function(a, b, c, d) {
        return fn(a)(b)(c)(d);
    };
};
const mkFn5 = function(fn) {
    /* jshint maxparams: 5 */ return function(a, b, c, d, e) {
        return fn(a)(b)(c)(d)(e);
    };
};
const mkFn6 = function(fn) {
    /* jshint maxparams: 6 */ return function(a, b, c, d, e, f) {
        return fn(a)(b)(c)(d)(e)(f);
    };
};
const mkFn7 = function(fn) {
    /* jshint maxparams: 7 */ return function(a, b, c, d, e, f, g) {
        return fn(a)(b)(c)(d)(e)(f)(g);
    };
};
const mkFn8 = function(fn) {
    /* jshint maxparams: 8 */ return function(a, b, c, d, e, f, g, h) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h);
    };
};
const mkFn9 = function(fn) {
    /* jshint maxparams: 9 */ return function(a, b, c, d, e, f, g, h, i) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
    };
};
const mkFn10 = function(fn) {
    /* jshint maxparams: 10 */ return function(a, b, c, d, e, f, g, h, i, j) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
    };
};
const runFn0 = function(fn) {
    return fn();
};
const runFn2 = function(fn) {
    return function(a) {
        return function(b) {
            return fn(a, b);
        };
    };
};
const runFn3 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return fn(a, b, c);
            };
        };
    };
};
const runFn4 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return fn(a, b, c, d);
                };
            };
        };
    };
};
const runFn5 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return fn(a, b, c, d, e);
                    };
                };
            };
        };
    };
};
const runFn6 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return fn(a, b, c, d, e, f);
                        };
                    };
                };
            };
        };
    };
};
const runFn7 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return fn(a, b, c, d, e, f, g);
                            };
                        };
                    };
                };
            };
        };
    };
};
const runFn8 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return fn(a, b, c, d, e, f, g, h);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
const runFn9 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function(i) {
                                        return fn(a, b, c, d, e, f, g, h, i);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
const runFn10 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function(i) {
                                        return function(j) {
                                            return fn(a, b, c, d, e, f, g, h, i, j);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aaBaJ":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "null", ()=>(0, _foreignJs.null));
parcelHelpers.export(exports, "notNull", ()=>(0, _foreignJs.notNull));
parcelHelpers.export(exports, "toMaybe", ()=>toMaybe);
parcelHelpers.export(exports, "toNullable", ()=>toNullable);
parcelHelpers.export(exports, "showNullable", ()=>showNullable);
parcelHelpers.export(exports, "eqNullable", ()=>eqNullable);
parcelHelpers.export(exports, "eq1Nullable", ()=>eq1Nullable);
parcelHelpers.export(exports, "ordNullable", ()=>ordNullable);
parcelHelpers.export(exports, "ord1Nullable", ()=>ord1Nullable);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Function/index.js");
var _indexJs2 = require("../Data.Maybe/index.js");
var _indexJs3 = require("../Data.Ord/index.js");
var _indexJs4 = require("../Data.Show/index.js");
var toNullable = /* #__PURE__ */ _indexJs2.maybe(_foreignJs["null"])(_foreignJs.notNull);
var toMaybe = function(n) {
    return _foreignJs.nullable(n, _indexJs2.Nothing.value, _indexJs2.Just.create);
};
var showNullable = function(dictShow) {
    return {
        show: function() {
            var $17 = _indexJs2.maybe("null")(_indexJs4.show(dictShow));
            return function($18) {
                return $17(toMaybe($18));
            };
        }()
    };
};
var eqNullable = function(dictEq) {
    return {
        eq: _indexJs1.on(_indexJs.eq(_indexJs2.eqMaybe(dictEq)))(toMaybe)
    };
};
var ordNullable = function(dictOrd) {
    var eqNullable1 = eqNullable(dictOrd.Eq0());
    return {
        compare: _indexJs1.on(_indexJs3.compare(_indexJs2.ordMaybe(dictOrd)))(toMaybe),
        Eq0: function() {
            return eqNullable1;
        }
    };
};
var eq1Nullable = {
    eq1: function(dictEq) {
        return _indexJs.eq(eqNullable(dictEq));
    }
};
var ord1Nullable = {
    compare1: function(dictOrd) {
        return _indexJs3.compare(ordNullable(dictOrd));
    },
    Eq10: function() {
        return eq1Nullable;
    }
};

},{"./foreign.js":"euAn5","../Data.Eq/index.js":"j3zMn","../Data.Function/index.js":"64uwb","../Data.Maybe/index.js":"ff6lw","../Data.Ord/index.js":"luB7W","../Data.Show/index.js":"lQCRi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"euAn5":[function(require,module,exports,__globalThis) {
/* eslint-disable no-eq-null, eqeqeq */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "null", ()=>nullImpl);
parcelHelpers.export(exports, "nullable", ()=>nullable);
parcelHelpers.export(exports, "notNull", ()=>notNull);
const nullImpl = null;
function nullable(a, r, f) {
    return a == null ? r : f(a);
}
function notNull(x) {
    return x;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"38fgN":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "tuple1", ()=>tuple1);
parcelHelpers.export(exports, "tuple2", ()=>tuple2);
parcelHelpers.export(exports, "tuple3", ()=>tuple3);
parcelHelpers.export(exports, "tuple4", ()=>tuple4);
parcelHelpers.export(exports, "tuple5", ()=>tuple5);
parcelHelpers.export(exports, "tuple6", ()=>tuple6);
parcelHelpers.export(exports, "tuple7", ()=>tuple7);
parcelHelpers.export(exports, "tuple8", ()=>tuple8);
parcelHelpers.export(exports, "tuple9", ()=>tuple9);
parcelHelpers.export(exports, "tuple10", ()=>tuple10);
parcelHelpers.export(exports, "get1", ()=>get1);
parcelHelpers.export(exports, "get2", ()=>get2);
parcelHelpers.export(exports, "get3", ()=>get3);
parcelHelpers.export(exports, "get4", ()=>get4);
parcelHelpers.export(exports, "get5", ()=>get5);
parcelHelpers.export(exports, "get6", ()=>get6);
parcelHelpers.export(exports, "get7", ()=>get7);
parcelHelpers.export(exports, "get8", ()=>get8);
parcelHelpers.export(exports, "get9", ()=>get9);
parcelHelpers.export(exports, "get10", ()=>get10);
parcelHelpers.export(exports, "over1", ()=>over1);
parcelHelpers.export(exports, "over2", ()=>over2);
parcelHelpers.export(exports, "over3", ()=>over3);
parcelHelpers.export(exports, "over4", ()=>over4);
parcelHelpers.export(exports, "over5", ()=>over5);
parcelHelpers.export(exports, "over6", ()=>over6);
parcelHelpers.export(exports, "over7", ()=>over7);
parcelHelpers.export(exports, "over8", ()=>over8);
parcelHelpers.export(exports, "over9", ()=>over9);
parcelHelpers.export(exports, "over10", ()=>over10);
parcelHelpers.export(exports, "uncurry1", ()=>uncurry1);
parcelHelpers.export(exports, "uncurry2", ()=>uncurry2);
parcelHelpers.export(exports, "uncurry3", ()=>uncurry3);
parcelHelpers.export(exports, "uncurry4", ()=>uncurry4);
parcelHelpers.export(exports, "uncurry5", ()=>uncurry5);
parcelHelpers.export(exports, "uncurry6", ()=>uncurry6);
parcelHelpers.export(exports, "uncurry7", ()=>uncurry7);
parcelHelpers.export(exports, "uncurry8", ()=>uncurry8);
parcelHelpers.export(exports, "uncurry9", ()=>uncurry9);
parcelHelpers.export(exports, "uncurry10", ()=>uncurry10);
parcelHelpers.export(exports, "curry1", ()=>curry1);
parcelHelpers.export(exports, "curry2", ()=>curry2);
parcelHelpers.export(exports, "curry3", ()=>curry3);
parcelHelpers.export(exports, "curry4", ()=>curry4);
parcelHelpers.export(exports, "curry5", ()=>curry5);
parcelHelpers.export(exports, "curry6", ()=>curry6);
parcelHelpers.export(exports, "curry7", ()=>curry7);
parcelHelpers.export(exports, "curry8", ()=>curry8);
parcelHelpers.export(exports, "curry9", ()=>curry9);
parcelHelpers.export(exports, "curry10", ()=>curry10);
var _indexJs = require("../Data.Tuple/index.js");
var _indexJs1 = require("../Data.Unit/index.js");
var uncurry9 = function(f$prime) {
    return function(v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry8 = function(f$prime) {
    return function(v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry7 = function(f$prime) {
    return function(v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry6 = function(f$prime) {
    return function(v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry5 = function(f) {
    return function(v) {
        return f(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0);
    };
};
var uncurry4 = function(f) {
    return function(v) {
        return f(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0);
    };
};
var uncurry3 = function(f) {
    return function(v) {
        return f(v.value0)(v.value1.value0)(v.value1.value1.value0);
    };
};
var uncurry2 = function(f) {
    return function(v) {
        return f(v.value0)(v.value1.value0);
    };
};
var uncurry10 = function(f$prime) {
    return function(v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry1 = function(f) {
    return function(v) {
        return f(v.value0);
    };
};
var tuple9 = function(a) {
    return function(b) {
        return function(c) {
            return function(d) {
                return function(e) {
                    return function(f) {
                        return function(g) {
                            return function(h) {
                                return function(i) {
                                    return new _indexJs.Tuple(a, new _indexJs.Tuple(b, new _indexJs.Tuple(c, new _indexJs.Tuple(d, new _indexJs.Tuple(e, new _indexJs.Tuple(f, new _indexJs.Tuple(g, new _indexJs.Tuple(h, new _indexJs.Tuple(i, _indexJs1.unit)))))))));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple8 = function(a) {
    return function(b) {
        return function(c) {
            return function(d) {
                return function(e) {
                    return function(f) {
                        return function(g) {
                            return function(h) {
                                return new _indexJs.Tuple(a, new _indexJs.Tuple(b, new _indexJs.Tuple(c, new _indexJs.Tuple(d, new _indexJs.Tuple(e, new _indexJs.Tuple(f, new _indexJs.Tuple(g, new _indexJs.Tuple(h, _indexJs1.unit))))))));
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple7 = function(a) {
    return function(b) {
        return function(c) {
            return function(d) {
                return function(e) {
                    return function(f) {
                        return function(g) {
                            return new _indexJs.Tuple(a, new _indexJs.Tuple(b, new _indexJs.Tuple(c, new _indexJs.Tuple(d, new _indexJs.Tuple(e, new _indexJs.Tuple(f, new _indexJs.Tuple(g, _indexJs1.unit)))))));
                        };
                    };
                };
            };
        };
    };
};
var tuple6 = function(a) {
    return function(b) {
        return function(c) {
            return function(d) {
                return function(e) {
                    return function(f) {
                        return new _indexJs.Tuple(a, new _indexJs.Tuple(b, new _indexJs.Tuple(c, new _indexJs.Tuple(d, new _indexJs.Tuple(e, new _indexJs.Tuple(f, _indexJs1.unit))))));
                    };
                };
            };
        };
    };
};
var tuple5 = function(a) {
    return function(b) {
        return function(c) {
            return function(d) {
                return function(e) {
                    return new _indexJs.Tuple(a, new _indexJs.Tuple(b, new _indexJs.Tuple(c, new _indexJs.Tuple(d, new _indexJs.Tuple(e, _indexJs1.unit)))));
                };
            };
        };
    };
};
var tuple4 = function(a) {
    return function(b) {
        return function(c) {
            return function(d) {
                return new _indexJs.Tuple(a, new _indexJs.Tuple(b, new _indexJs.Tuple(c, new _indexJs.Tuple(d, _indexJs1.unit))));
            };
        };
    };
};
var tuple3 = function(a) {
    return function(b) {
        return function(c) {
            return new _indexJs.Tuple(a, new _indexJs.Tuple(b, new _indexJs.Tuple(c, _indexJs1.unit)));
        };
    };
};
var tuple2 = function(a) {
    return function(b) {
        return new _indexJs.Tuple(a, new _indexJs.Tuple(b, _indexJs1.unit));
    };
};
var tuple10 = function(a) {
    return function(b) {
        return function(c) {
            return function(d) {
                return function(e) {
                    return function(f) {
                        return function(g) {
                            return function(h) {
                                return function(i) {
                                    return function(j) {
                                        return new _indexJs.Tuple(a, new _indexJs.Tuple(b, new _indexJs.Tuple(c, new _indexJs.Tuple(d, new _indexJs.Tuple(e, new _indexJs.Tuple(f, new _indexJs.Tuple(g, new _indexJs.Tuple(h, new _indexJs.Tuple(i, new _indexJs.Tuple(j, _indexJs1.unit))))))))));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple1 = function(a) {
    return new _indexJs.Tuple(a, _indexJs1.unit);
};
var over9 = function(o) {
    return function(v) {
        return new _indexJs.Tuple(v.value0, new _indexJs.Tuple(v.value1.value0, new _indexJs.Tuple(v.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value1.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value1.value1.value1.value1.value0, new _indexJs.Tuple(o(v.value1.value1.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1.value1.value1)))))))));
    };
};
var over8 = function(o) {
    return function(v) {
        return new _indexJs.Tuple(v.value0, new _indexJs.Tuple(v.value1.value0, new _indexJs.Tuple(v.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value1.value1.value1.value0, new _indexJs.Tuple(o(v.value1.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1.value1))))))));
    };
};
var over7 = function(o) {
    return function(v) {
        return new _indexJs.Tuple(v.value0, new _indexJs.Tuple(v.value1.value0, new _indexJs.Tuple(v.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value1.value1.value0, new _indexJs.Tuple(o(v.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1)))))));
    };
};
var over6 = function(o) {
    return function(v) {
        return new _indexJs.Tuple(v.value0, new _indexJs.Tuple(v.value1.value0, new _indexJs.Tuple(v.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value1.value0, new _indexJs.Tuple(o(v.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1))))));
    };
};
var over5 = function(o) {
    return function(v) {
        return new _indexJs.Tuple(v.value0, new _indexJs.Tuple(v.value1.value0, new _indexJs.Tuple(v.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value0, new _indexJs.Tuple(o(v.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1)))));
    };
};
var over4 = function(o) {
    return function(v) {
        return new _indexJs.Tuple(v.value0, new _indexJs.Tuple(v.value1.value0, new _indexJs.Tuple(v.value1.value1.value0, new _indexJs.Tuple(o(v.value1.value1.value1.value0), v.value1.value1.value1.value1))));
    };
};
var over3 = function(o) {
    return function(v) {
        return new _indexJs.Tuple(v.value0, new _indexJs.Tuple(v.value1.value0, new _indexJs.Tuple(o(v.value1.value1.value0), v.value1.value1.value1)));
    };
};
var over2 = function(o) {
    return function(v) {
        return new _indexJs.Tuple(v.value0, new _indexJs.Tuple(o(v.value1.value0), v.value1.value1));
    };
};
var over10 = function(o) {
    return function(v) {
        return new _indexJs.Tuple(v.value0, new _indexJs.Tuple(v.value1.value0, new _indexJs.Tuple(v.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value1.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value1.value1.value1.value1.value0, new _indexJs.Tuple(v.value1.value1.value1.value1.value1.value1.value1.value1.value0, new _indexJs.Tuple(o(v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value1))))))))));
    };
};
var over1 = function(o) {
    return function(v) {
        return new _indexJs.Tuple(o(v.value0), v.value1);
    };
};
var get9 = function(v) {
    return v.value1.value1.value1.value1.value1.value1.value1.value1.value0;
};
var get8 = function(v) {
    return v.value1.value1.value1.value1.value1.value1.value1.value0;
};
var get7 = function(v) {
    return v.value1.value1.value1.value1.value1.value1.value0;
};
var get6 = function(v) {
    return v.value1.value1.value1.value1.value1.value0;
};
var get5 = function(v) {
    return v.value1.value1.value1.value1.value0;
};
var get4 = function(v) {
    return v.value1.value1.value1.value0;
};
var get3 = function(v) {
    return v.value1.value1.value0;
};
var get2 = function(v) {
    return v.value1.value0;
};
var get10 = function(v) {
    return v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value0;
};
var get1 = function(v) {
    return v.value0;
};
var curry9 = function(z) {
    return function(f$prime) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return function(e) {
                            return function(f) {
                                return function(g) {
                                    return function(h) {
                                        return function(i) {
                                            return f$prime(new _indexJs.Tuple(a, new _indexJs.Tuple(b, new _indexJs.Tuple(c, new _indexJs.Tuple(d, new _indexJs.Tuple(e, new _indexJs.Tuple(f, new _indexJs.Tuple(g, new _indexJs.Tuple(h, new _indexJs.Tuple(i, z))))))))));
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry8 = function(z) {
    return function(f$prime) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return function(e) {
                            return function(f) {
                                return function(g) {
                                    return function(h) {
                                        return f$prime(new _indexJs.Tuple(a, new _indexJs.Tuple(b, new _indexJs.Tuple(c, new _indexJs.Tuple(d, new _indexJs.Tuple(e, new _indexJs.Tuple(f, new _indexJs.Tuple(g, new _indexJs.Tuple(h, z)))))))));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry7 = function(z) {
    return function(f$prime) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return function(e) {
                            return function(f) {
                                return function(g) {
                                    return f$prime(new _indexJs.Tuple(a, new _indexJs.Tuple(b, new _indexJs.Tuple(c, new _indexJs.Tuple(d, new _indexJs.Tuple(e, new _indexJs.Tuple(f, new _indexJs.Tuple(g, z))))))));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry6 = function(z) {
    return function(f$prime) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return function(e) {
                            return function(f) {
                                return f$prime(new _indexJs.Tuple(a, new _indexJs.Tuple(b, new _indexJs.Tuple(c, new _indexJs.Tuple(d, new _indexJs.Tuple(e, new _indexJs.Tuple(f, z)))))));
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry5 = function(z) {
    return function(f) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return function(e) {
                            return f(new _indexJs.Tuple(a, new _indexJs.Tuple(b, new _indexJs.Tuple(c, new _indexJs.Tuple(d, new _indexJs.Tuple(e, z))))));
                        };
                    };
                };
            };
        };
    };
};
var curry4 = function(z) {
    return function(f) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return f(new _indexJs.Tuple(a, new _indexJs.Tuple(b, new _indexJs.Tuple(c, new _indexJs.Tuple(d, z)))));
                    };
                };
            };
        };
    };
};
var curry3 = function(z) {
    return function(f) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return f(new _indexJs.Tuple(a, new _indexJs.Tuple(b, new _indexJs.Tuple(c, z))));
                };
            };
        };
    };
};
var curry2 = function(z) {
    return function(f) {
        return function(a) {
            return function(b) {
                return f(new _indexJs.Tuple(a, new _indexJs.Tuple(b, z)));
            };
        };
    };
};
var curry10 = function(z) {
    return function(f$prime) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return function(e) {
                            return function(f) {
                                return function(g) {
                                    return function(h) {
                                        return function(i) {
                                            return function(j) {
                                                return f$prime(new _indexJs.Tuple(a, new _indexJs.Tuple(b, new _indexJs.Tuple(c, new _indexJs.Tuple(d, new _indexJs.Tuple(e, new _indexJs.Tuple(f, new _indexJs.Tuple(g, new _indexJs.Tuple(h, new _indexJs.Tuple(i, new _indexJs.Tuple(j, z)))))))))));
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry1 = function(z) {
    return function(f) {
        return function(a) {
            return f(new _indexJs.Tuple(a, z));
        };
    };
};

},{"../Data.Tuple/index.js":"beFyY","../Data.Unit/index.js":"fuCRN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4HWc2":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mkEffectFn1", ()=>(0, _foreignJs.mkEffectFn1));
parcelHelpers.export(exports, "mkEffectFn2", ()=>(0, _foreignJs.mkEffectFn2));
parcelHelpers.export(exports, "mkEffectFn3", ()=>(0, _foreignJs.mkEffectFn3));
parcelHelpers.export(exports, "mkEffectFn4", ()=>(0, _foreignJs.mkEffectFn4));
parcelHelpers.export(exports, "mkEffectFn5", ()=>(0, _foreignJs.mkEffectFn5));
parcelHelpers.export(exports, "mkEffectFn6", ()=>(0, _foreignJs.mkEffectFn6));
parcelHelpers.export(exports, "mkEffectFn7", ()=>(0, _foreignJs.mkEffectFn7));
parcelHelpers.export(exports, "mkEffectFn8", ()=>(0, _foreignJs.mkEffectFn8));
parcelHelpers.export(exports, "mkEffectFn9", ()=>(0, _foreignJs.mkEffectFn9));
parcelHelpers.export(exports, "mkEffectFn10", ()=>(0, _foreignJs.mkEffectFn10));
parcelHelpers.export(exports, "runEffectFn1", ()=>(0, _foreignJs.runEffectFn1));
parcelHelpers.export(exports, "runEffectFn2", ()=>(0, _foreignJs.runEffectFn2));
parcelHelpers.export(exports, "runEffectFn3", ()=>(0, _foreignJs.runEffectFn3));
parcelHelpers.export(exports, "runEffectFn4", ()=>(0, _foreignJs.runEffectFn4));
parcelHelpers.export(exports, "runEffectFn5", ()=>(0, _foreignJs.runEffectFn5));
parcelHelpers.export(exports, "runEffectFn6", ()=>(0, _foreignJs.runEffectFn6));
parcelHelpers.export(exports, "runEffectFn7", ()=>(0, _foreignJs.runEffectFn7));
parcelHelpers.export(exports, "runEffectFn8", ()=>(0, _foreignJs.runEffectFn8));
parcelHelpers.export(exports, "runEffectFn9", ()=>(0, _foreignJs.runEffectFn9));
parcelHelpers.export(exports, "runEffectFn10", ()=>(0, _foreignJs.runEffectFn10));
parcelHelpers.export(exports, "semigroupEffectFn1", ()=>semigroupEffectFn1);
parcelHelpers.export(exports, "semigroupEffectFn2", ()=>semigroupEffectFn2);
parcelHelpers.export(exports, "semigroupEffectFn3", ()=>semigroupEffectFn3);
parcelHelpers.export(exports, "semigroupEffectFn4", ()=>semigroupEffectFn4);
parcelHelpers.export(exports, "semigroupEffectFn5", ()=>semigroupEffectFn5);
parcelHelpers.export(exports, "semigroupEffectFn6", ()=>semigroupEffectFn6);
parcelHelpers.export(exports, "semigroupEffectFn7", ()=>semigroupEffectFn7);
parcelHelpers.export(exports, "semigroupEffectFn8", ()=>semigroupEffectFn8);
parcelHelpers.export(exports, "semigroupEffectFn9", ()=>semigroupEffectFn9);
parcelHelpers.export(exports, "semigroupEffectFn10", ()=>semigroupEffectFn10);
parcelHelpers.export(exports, "monoidEffectFn1", ()=>monoidEffectFn1);
parcelHelpers.export(exports, "monoidEffectFn2", ()=>monoidEffectFn2);
parcelHelpers.export(exports, "monoidEffectFn3", ()=>monoidEffectFn3);
parcelHelpers.export(exports, "monoidEffectFn4", ()=>monoidEffectFn4);
parcelHelpers.export(exports, "monoidEffectFn5", ()=>monoidEffectFn5);
parcelHelpers.export(exports, "monoidEffectFn6", ()=>monoidEffectFn6);
parcelHelpers.export(exports, "monoidEffectFn7", ()=>monoidEffectFn7);
parcelHelpers.export(exports, "monoidEffectFn8", ()=>monoidEffectFn8);
parcelHelpers.export(exports, "monoidEffectFn9", ()=>monoidEffectFn9);
parcelHelpers.export(exports, "monoidEffectFn10", ()=>monoidEffectFn10);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Monoid/index.js");
var _indexJs1 = require("../Data.Semigroup/index.js");
var _indexJs2 = require("../Effect/index.js");
var semigroupEffectFn9 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn9(function(a) {
                    return function(b) {
                        return function(c) {
                            return function(d) {
                                return function(e) {
                                    return function(f) {
                                        return function(g) {
                                            return function(h) {
                                                return function(i) {
                                                    return append(_foreignJs.runEffectFn9(f1)(a)(b)(c)(d)(e)(f)(g)(h)(i))(_foreignJs.runEffectFn9(f2)(a)(b)(c)(d)(e)(f)(g)(h)(i));
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                });
            };
        }
    };
};
var semigroupEffectFn8 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn8(function(a) {
                    return function(b) {
                        return function(c) {
                            return function(d) {
                                return function(e) {
                                    return function(f) {
                                        return function(g) {
                                            return function(h) {
                                                return append(_foreignJs.runEffectFn8(f1)(a)(b)(c)(d)(e)(f)(g)(h))(_foreignJs.runEffectFn8(f2)(a)(b)(c)(d)(e)(f)(g)(h));
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                });
            };
        }
    };
};
var semigroupEffectFn7 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn7(function(a) {
                    return function(b) {
                        return function(c) {
                            return function(d) {
                                return function(e) {
                                    return function(f) {
                                        return function(g) {
                                            return append(_foreignJs.runEffectFn7(f1)(a)(b)(c)(d)(e)(f)(g))(_foreignJs.runEffectFn7(f2)(a)(b)(c)(d)(e)(f)(g));
                                        };
                                    };
                                };
                            };
                        };
                    };
                });
            };
        }
    };
};
var semigroupEffectFn6 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn6(function(a) {
                    return function(b) {
                        return function(c) {
                            return function(d) {
                                return function(e) {
                                    return function(f) {
                                        return append(_foreignJs.runEffectFn6(f1)(a)(b)(c)(d)(e)(f))(_foreignJs.runEffectFn6(f2)(a)(b)(c)(d)(e)(f));
                                    };
                                };
                            };
                        };
                    };
                });
            };
        }
    };
};
var semigroupEffectFn5 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn5(function(a) {
                    return function(b) {
                        return function(c) {
                            return function(d) {
                                return function(e) {
                                    return append(_foreignJs.runEffectFn5(f1)(a)(b)(c)(d)(e))(_foreignJs.runEffectFn5(f2)(a)(b)(c)(d)(e));
                                };
                            };
                        };
                    };
                });
            };
        }
    };
};
var semigroupEffectFn4 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn4(function(a) {
                    return function(b) {
                        return function(c) {
                            return function(d) {
                                return append(_foreignJs.runEffectFn4(f1)(a)(b)(c)(d))(_foreignJs.runEffectFn4(f2)(a)(b)(c)(d));
                            };
                        };
                    };
                });
            };
        }
    };
};
var semigroupEffectFn3 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn3(function(a) {
                    return function(b) {
                        return function(c) {
                            return append(_foreignJs.runEffectFn3(f1)(a)(b)(c))(_foreignJs.runEffectFn3(f2)(a)(b)(c));
                        };
                    };
                });
            };
        }
    };
};
var semigroupEffectFn2 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn2(function(a) {
                    return function(b) {
                        return append(_foreignJs.runEffectFn2(f1)(a)(b))(_foreignJs.runEffectFn2(f2)(a)(b));
                    };
                });
            };
        }
    };
};
var semigroupEffectFn10 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn10(function(a) {
                    return function(b) {
                        return function(c) {
                            return function(d) {
                                return function(e) {
                                    return function(f) {
                                        return function(g) {
                                            return function(h) {
                                                return function(i) {
                                                    return function(j) {
                                                        return append(_foreignJs.runEffectFn10(f1)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j))(_foreignJs.runEffectFn10(f2)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j));
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                });
            };
        }
    };
};
var semigroupEffectFn1 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn1(function(a) {
                    return append(_foreignJs.runEffectFn1(f1)(a))(_foreignJs.runEffectFn1(f2)(a));
                });
            };
        }
    };
};
var monoidEffectFn9 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn91 = semigroupEffectFn9(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn9(function(v) {
            return function(v1) {
                return function(v2) {
                    return function(v3) {
                        return function(v4) {
                            return function(v5) {
                                return function(v6) {
                                    return function(v7) {
                                        return function(v8) {
                                            return mempty;
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn91;
        }
    };
};
var monoidEffectFn8 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn81 = semigroupEffectFn8(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn8(function(v) {
            return function(v1) {
                return function(v2) {
                    return function(v3) {
                        return function(v4) {
                            return function(v5) {
                                return function(v6) {
                                    return function(v7) {
                                        return mempty;
                                    };
                                };
                            };
                        };
                    };
                };
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn81;
        }
    };
};
var monoidEffectFn7 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn71 = semigroupEffectFn7(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn7(function(v) {
            return function(v1) {
                return function(v2) {
                    return function(v3) {
                        return function(v4) {
                            return function(v5) {
                                return function(v6) {
                                    return mempty;
                                };
                            };
                        };
                    };
                };
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn71;
        }
    };
};
var monoidEffectFn6 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn61 = semigroupEffectFn6(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn6(function(v) {
            return function(v1) {
                return function(v2) {
                    return function(v3) {
                        return function(v4) {
                            return function(v5) {
                                return mempty;
                            };
                        };
                    };
                };
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn61;
        }
    };
};
var monoidEffectFn5 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn51 = semigroupEffectFn5(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn5(function(v) {
            return function(v1) {
                return function(v2) {
                    return function(v3) {
                        return function(v4) {
                            return mempty;
                        };
                    };
                };
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn51;
        }
    };
};
var monoidEffectFn4 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn41 = semigroupEffectFn4(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn4(function(v) {
            return function(v1) {
                return function(v2) {
                    return function(v3) {
                        return mempty;
                    };
                };
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn41;
        }
    };
};
var monoidEffectFn3 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn31 = semigroupEffectFn3(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn3(function(v) {
            return function(v1) {
                return function(v2) {
                    return mempty;
                };
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn31;
        }
    };
};
var monoidEffectFn2 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn21 = semigroupEffectFn2(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn2(function(v) {
            return function(v1) {
                return mempty;
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn21;
        }
    };
};
var monoidEffectFn10 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn101 = semigroupEffectFn10(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn10(function(v) {
            return function(v1) {
                return function(v2) {
                    return function(v3) {
                        return function(v4) {
                            return function(v5) {
                                return function(v6) {
                                    return function(v7) {
                                        return function(v8) {
                                            return function(v9) {
                                                return mempty;
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn101;
        }
    };
};
var monoidEffectFn1 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn11 = semigroupEffectFn1(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn1(function(v) {
            return mempty;
        }),
        Semigroup0: function() {
            return semigroupEffectFn11;
        }
    };
};

},{"./foreign.js":"dmmFP","../Data.Monoid/index.js":"6chRZ","../Data.Semigroup/index.js":"evJTv","../Effect/index.js":"jyor1","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dmmFP":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mkEffectFn1", ()=>mkEffectFn1);
parcelHelpers.export(exports, "mkEffectFn2", ()=>mkEffectFn2);
parcelHelpers.export(exports, "mkEffectFn3", ()=>mkEffectFn3);
parcelHelpers.export(exports, "mkEffectFn4", ()=>mkEffectFn4);
parcelHelpers.export(exports, "mkEffectFn5", ()=>mkEffectFn5);
parcelHelpers.export(exports, "mkEffectFn6", ()=>mkEffectFn6);
parcelHelpers.export(exports, "mkEffectFn7", ()=>mkEffectFn7);
parcelHelpers.export(exports, "mkEffectFn8", ()=>mkEffectFn8);
parcelHelpers.export(exports, "mkEffectFn9", ()=>mkEffectFn9);
parcelHelpers.export(exports, "mkEffectFn10", ()=>mkEffectFn10);
parcelHelpers.export(exports, "runEffectFn1", ()=>runEffectFn1);
parcelHelpers.export(exports, "runEffectFn2", ()=>runEffectFn2);
parcelHelpers.export(exports, "runEffectFn3", ()=>runEffectFn3);
parcelHelpers.export(exports, "runEffectFn4", ()=>runEffectFn4);
parcelHelpers.export(exports, "runEffectFn5", ()=>runEffectFn5);
parcelHelpers.export(exports, "runEffectFn6", ()=>runEffectFn6);
parcelHelpers.export(exports, "runEffectFn7", ()=>runEffectFn7);
parcelHelpers.export(exports, "runEffectFn8", ()=>runEffectFn8);
parcelHelpers.export(exports, "runEffectFn9", ()=>runEffectFn9);
parcelHelpers.export(exports, "runEffectFn10", ()=>runEffectFn10);
const mkEffectFn1 = function mkEffectFn1(fn) {
    return function(x) {
        return fn(x)();
    };
};
const mkEffectFn2 = function mkEffectFn2(fn) {
    return function(a, b) {
        return fn(a)(b)();
    };
};
const mkEffectFn3 = function mkEffectFn3(fn) {
    return function(a, b, c) {
        return fn(a)(b)(c)();
    };
};
const mkEffectFn4 = function mkEffectFn4(fn) {
    return function(a, b, c, d) {
        return fn(a)(b)(c)(d)();
    };
};
const mkEffectFn5 = function mkEffectFn5(fn) {
    return function(a, b, c, d, e) {
        return fn(a)(b)(c)(d)(e)();
    };
};
const mkEffectFn6 = function mkEffectFn6(fn) {
    return function(a, b, c, d, e, f) {
        return fn(a)(b)(c)(d)(e)(f)();
    };
};
const mkEffectFn7 = function mkEffectFn7(fn) {
    return function(a, b, c, d, e, f, g) {
        return fn(a)(b)(c)(d)(e)(f)(g)();
    };
};
const mkEffectFn8 = function mkEffectFn8(fn) {
    return function(a, b, c, d, e, f, g, h) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)();
    };
};
const mkEffectFn9 = function mkEffectFn9(fn) {
    return function(a, b, c, d, e, f, g, h, i) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)();
    };
};
const mkEffectFn10 = function mkEffectFn10(fn) {
    return function(a, b, c, d, e, f, g, h, i, j) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)();
    };
};
const runEffectFn1 = function runEffectFn1(fn) {
    return function(a) {
        return function() {
            return fn(a);
        };
    };
};
const runEffectFn2 = function runEffectFn2(fn) {
    return function(a) {
        return function(b) {
            return function() {
                return fn(a, b);
            };
        };
    };
};
const runEffectFn3 = function runEffectFn3(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function() {
                    return fn(a, b, c);
                };
            };
        };
    };
};
const runEffectFn4 = function runEffectFn4(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function() {
                        return fn(a, b, c, d);
                    };
                };
            };
        };
    };
};
const runEffectFn5 = function runEffectFn5(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function() {
                            return fn(a, b, c, d, e);
                        };
                    };
                };
            };
        };
    };
};
const runEffectFn6 = function runEffectFn6(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function() {
                                return fn(a, b, c, d, e, f);
                            };
                        };
                    };
                };
            };
        };
    };
};
const runEffectFn7 = function runEffectFn7(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function() {
                                    return fn(a, b, c, d, e, f, g);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
const runEffectFn8 = function runEffectFn8(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function() {
                                        return fn(a, b, c, d, e, f, g, h);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
const runEffectFn9 = function runEffectFn9(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function(i) {
                                        return function() {
                                            return fn(a, b, c, d, e, f, g, h, i);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
const runEffectFn10 = function runEffectFn10(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function(i) {
                                        return function(j) {
                                            return function() {
                                                return fn(a, b, c, d, e, f, g, h, i, j);
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3ym3c":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "coerceHook", ()=>coerceHook);
parcelHelpers.export(exports, "unsafeHook", ()=>unsafeHook);
parcelHelpers.export(exports, "unsafeRenderEffect", ()=>unsafeRenderEffect);
parcelHelpers.export(exports, "bind", ()=>bind);
parcelHelpers.export(exports, "discard", ()=>discard);
parcelHelpers.export(exports, "ixFunctorRender", ()=>ixFunctorRender);
parcelHelpers.export(exports, "ixApplyRender", ()=>ixApplyRender);
parcelHelpers.export(exports, "ixApplicativeRender", ()=>ixApplicativeRender);
parcelHelpers.export(exports, "ixBindRender", ()=>ixBindRender);
parcelHelpers.export(exports, "ixMonadRender", ()=>ixMonadRender);
parcelHelpers.export(exports, "functorRender", ()=>functorRender);
parcelHelpers.export(exports, "applyRender", ()=>applyRender);
parcelHelpers.export(exports, "applicativeRender", ()=>applicativeRender);
parcelHelpers.export(exports, "bindRender", ()=>bindRender);
parcelHelpers.export(exports, "monadRender", ()=>monadRender);
parcelHelpers.export(exports, "semigroupRender", ()=>semigroupRender);
parcelHelpers.export(exports, "monoidRender", ()=>monoidRender);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Bind.Indexed/index.js");
var _indexJs3 = require("../Data.Functor/index.js");
var _indexJs4 = require("../Data.Monoid/index.js");
var _indexJs5 = require("../Data.Semigroup/index.js");
var _indexJs6 = require("../Effect/index.js");
var map = /* #__PURE__ */ _indexJs3.map(_indexJs6.functorEffect);
var apply = /* #__PURE__ */ _indexJs1.apply(_indexJs6.applyEffect);
var pure = /* #__PURE__ */ _indexJs.pure(_indexJs6.applicativeEffect);
var Render = function(x) {
    return x;
};
var unsafeRenderEffect = Render;
var unsafeHook = Render;
var semigroupRender = function(dictTypeEquals) {
    return function(dictSemigroup) {
        var append = _indexJs5.append(_indexJs6.semigroupEffect(dictSemigroup));
        return {
            append: function(v) {
                return function(v1) {
                    return append(v)(v1);
                };
            }
        };
    };
};
var monoidRender = function(dictTypeEquals) {
    var semigroupRender1 = semigroupRender(dictTypeEquals);
    return function(dictMonoid) {
        var semigroupRender2 = semigroupRender1(dictMonoid.Semigroup0());
        return {
            mempty: _indexJs4.mempty(_indexJs6.monoidEffect(dictMonoid)),
            Semigroup0: function() {
                return semigroupRender2;
            }
        };
    };
};
var ixFunctorRender = {
    imap: function(f) {
        return function(v) {
            return map(f)(v);
        };
    }
};
var ixApplyRender = {
    iapply: function(v) {
        return function(v1) {
            return apply(v)(v1);
        };
    },
    IxFunctor0: function() {
        return ixFunctorRender;
    }
};
var ixBindRender = {
    ibind: function(v) {
        return function(f) {
            return function __do() {
                var a = v();
                var v1 = f(a);
                return v1();
            };
        };
    },
    IxApply0: function() {
        return ixApplyRender;
    }
};
var ixApplicativeRender = {
    ipure: function(a) {
        return pure(a);
    },
    IxApply0: function() {
        return ixApplyRender;
    }
};
var ixMonadRender = {
    IxApplicative0: function() {
        return ixApplicativeRender;
    },
    IxBind1: function() {
        return ixBindRender;
    }
};
var functorRender = {
    map: function(f) {
        return function(v) {
            return map(f)(v);
        };
    }
};
var discard = function(dictIxBind) {
    return _indexJs2.ibind(dictIxBind);
};
var coerceHook = function() {
    return function(v) {
        return v;
    };
};
var bind = function(dictIxBind) {
    return _indexJs2.ibind(dictIxBind);
};
var applyRender = function(dictTypeEquals) {
    return {
        apply: function(v) {
            return function(v1) {
                return apply(v)(v1);
            };
        },
        Functor0: function() {
            return functorRender;
        }
    };
};
var bindRender = function(dictTypeEquals) {
    var applyRender1 = applyRender(dictTypeEquals);
    return {
        bind: function(v) {
            return function(f) {
                return function __do() {
                    var a = v();
                    var v1 = f(a);
                    return v1();
                };
            };
        },
        Apply0: function() {
            return applyRender1;
        }
    };
};
var applicativeRender = function(dictTypeEquals) {
    var applyRender1 = applyRender(dictTypeEquals);
    return {
        pure: function(a) {
            return pure(a);
        },
        Apply0: function() {
            return applyRender1;
        }
    };
};
var monadRender = function(dictTypeEquals) {
    var applicativeRender1 = applicativeRender(dictTypeEquals);
    var bindRender1 = bindRender(dictTypeEquals);
    return {
        Applicative0: function() {
            return applicativeRender1;
        },
        Bind1: function() {
            return bindRender1;
        }
    };
};

},{"../Control.Applicative/index.js":"5JL6d","../Control.Apply/index.js":"ggN4S","../Control.Bind.Indexed/index.js":"2JF1b","../Data.Functor/index.js":"j9NCu","../Data.Monoid/index.js":"6chRZ","../Data.Semigroup/index.js":"evJTv","../Effect/index.js":"jyor1","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2JF1b":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "iapply", ()=>(0, _indexJs.iapply));
parcelHelpers.export(exports, "iapplyFirst", ()=>(0, _indexJs.iapplyFirst));
parcelHelpers.export(exports, "iapplySecond", ()=>(0, _indexJs.iapplySecond));
parcelHelpers.export(exports, "imap", ()=>(0, _indexJs.imap));
parcelHelpers.export(exports, "ivoid", ()=>(0, _indexJs.ivoid));
parcelHelpers.export(exports, "ivoidLeft", ()=>(0, _indexJs.ivoidLeft));
parcelHelpers.export(exports, "ivoidRight", ()=>(0, _indexJs.ivoidRight));
parcelHelpers.export(exports, "ibind", ()=>ibind);
parcelHelpers.export(exports, "ibindFlipped", ()=>ibindFlipped);
parcelHelpers.export(exports, "composeiKleisli", ()=>composeiKleisli);
parcelHelpers.export(exports, "composeiKleisliFlipped", ()=>composeiKleisliFlipped);
parcelHelpers.export(exports, "idiscard", ()=>idiscard);
parcelHelpers.export(exports, "ijoin", ()=>ijoin);
parcelHelpers.export(exports, "ixDiscardUnit", ()=>ixDiscardUnit);
var _indexJs = require("../Control.Apply.Indexed/index.js");
var _indexJs1 = require("../Control.Category/index.js");
var _indexJs2 = require("../Data.Function/index.js");
var identity = /* #__PURE__ */ _indexJs1.identity(_indexJs1.categoryFn);
var idiscard = function(dict) {
    return dict.idiscard;
};
var ibind = function(dict) {
    return dict.ibind;
};
var ibindFlipped = function(dictIxBind) {
    return _indexJs2.flip(ibind(dictIxBind));
};
var ijoin = function(dictIxBind) {
    var ibind1 = ibind(dictIxBind);
    return function(m) {
        return ibind1(m)(identity);
    };
};
var ixDiscardUnit = {
    idiscard: function(dictIxBind) {
        return ibind(dictIxBind);
    }
};
var composeiKleisliFlipped = function(dictIxBind) {
    var ibindFlipped1 = ibindFlipped(dictIxBind);
    return function(f) {
        return function(g) {
            return function(a) {
                return ibindFlipped1(f)(g(a));
            };
        };
    };
};
var composeiKleisli = function(dictIxBind) {
    var ibind1 = ibind(dictIxBind);
    return function(f) {
        return function(g) {
            return function(a) {
                return ibind1(f(a))(g);
            };
        };
    };
};

},{"../Control.Apply.Indexed/index.js":"dx4UH","../Control.Category/index.js":"iWlWa","../Data.Function/index.js":"64uwb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dx4UH":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "imap", ()=>(0, _indexJs2.imap));
parcelHelpers.export(exports, "ivoid", ()=>(0, _indexJs2.ivoid));
parcelHelpers.export(exports, "ivoidLeft", ()=>(0, _indexJs2.ivoidLeft));
parcelHelpers.export(exports, "ivoidRight", ()=>(0, _indexJs2.ivoidRight));
parcelHelpers.export(exports, "iapply", ()=>iapply);
parcelHelpers.export(exports, "iapplyFirst", ()=>iapplyFirst);
parcelHelpers.export(exports, "iapplySecond", ()=>iapplySecond);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Function/index.js");
var _indexJs2 = require("../Data.Functor.Indexed/index.js");
var identity = /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn);
var iapply = function(dict) {
    return dict.iapply;
};
var iapplyFirst = function(dictIxApply) {
    var iapply1 = iapply(dictIxApply);
    var imap = _indexJs2.imap(dictIxApply.IxFunctor0());
    return function(a) {
        return function(b) {
            return iapply1(imap(_indexJs1["const"])(a))(b);
        };
    };
};
var iapplySecond = function(dictIxApply) {
    var iapply1 = iapply(dictIxApply);
    var imap = _indexJs2.imap(dictIxApply.IxFunctor0());
    return function(a) {
        return function(b) {
            return iapply1(imap(_indexJs1["const"](identity))(a))(b);
        };
    };
};

},{"../Control.Category/index.js":"iWlWa","../Data.Function/index.js":"64uwb","../Data.Functor.Indexed/index.js":"3YX5I","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3YX5I":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "imap", ()=>imap);
parcelHelpers.export(exports, "ivoid", ()=>ivoid);
parcelHelpers.export(exports, "ivoidRight", ()=>ivoidRight);
parcelHelpers.export(exports, "ivoidLeft", ()=>ivoidLeft);
var _indexJs = require("../Data.Function/index.js");
var _indexJs1 = require("../Data.Unit/index.js");
var imap = function(dict) {
    return dict.imap;
};
var ivoid = function(dictIxFunctor) {
    return imap(dictIxFunctor)(_indexJs["const"](_indexJs1.unit));
};
var ivoidLeft = function(dictIxFunctor) {
    var imap1 = imap(dictIxFunctor);
    return function(f) {
        return function(x) {
            return imap1(_indexJs["const"](x))(f);
        };
    };
};
var ivoidRight = function(dictIxFunctor) {
    var imap1 = imap(dictIxFunctor);
    return function(x) {
        return imap1(_indexJs["const"](x));
    };
};

},{"../Data.Function/index.js":"64uwb","../Data.Unit/index.js":"fuCRN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cM9gW":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "reallyUnsafeRefEq", ()=>(0, _foreignJs.reallyUnsafeRefEq));
parcelHelpers.export(exports, "unsafeRefEq", ()=>unsafeRefEq);
parcelHelpers.export(exports, "UnsafeRefEq", ()=>UnsafeRefEq);
parcelHelpers.export(exports, "UnsafeRefEqFallback", ()=>UnsafeRefEqFallback);
parcelHelpers.export(exports, "eqUnsafeRefEq", ()=>eqUnsafeRefEq);
parcelHelpers.export(exports, "eqUnsafeRefEqFallback", ()=>eqUnsafeRefEqFallback);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Eq/index.js");
var UnsafeRefEqFallback = function(x) {
    return x;
};
var UnsafeRefEq = function(x) {
    return x;
};
var unsafeRefEq = _foreignJs.reallyUnsafeRefEq;
var eqUnsafeRefEqFallback = function(dictEq) {
    var eq = _indexJs.eq(dictEq);
    return {
        eq: function(v) {
            return function(v1) {
                return unsafeRefEq(v)(v1) || eq(v)(v1);
            };
        }
    };
};
var eqUnsafeRefEq = {
    eq: function(v) {
        return function(v1) {
            return unsafeRefEq(v)(v1);
        };
    }
};

},{"./foreign.js":"lSNob","../Data.Eq/index.js":"j3zMn","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lSNob":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "reallyUnsafeRefEq", ()=>reallyUnsafeRefEq);
function reallyUnsafeRefEq(a) {
    return function(b) {
        return a === b;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"frUGR":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "proof", ()=>proof);
parcelHelpers.export(exports, "to", ()=>to);
parcelHelpers.export(exports, "from", ()=>from);
parcelHelpers.export(exports, "refl", ()=>refl);
var To = function(x) {
    return x;
};
var From = function(x) {
    return x;
};
var refl = {
    proof: function(a) {
        return a;
    },
    Coercible0: function() {
        return undefined;
    }
};
var proof = function(dict) {
    return dict.proof;
};
var to = function(dictTypeEquals) {
    var v = proof(dictTypeEquals)(function(a) {
        return a;
    });
    return v;
};
var from = function(dictTypeEquals) {
    var v = proof(dictTypeEquals)(function(a) {
        return a;
    });
    return v;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5l5kj":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "log", ()=>(0, _foreignJs.log));
parcelHelpers.export(exports, "warn", ()=>(0, _foreignJs.warn));
parcelHelpers.export(exports, "error", ()=>(0, _foreignJs.error));
parcelHelpers.export(exports, "info", ()=>(0, _foreignJs.info));
parcelHelpers.export(exports, "debug", ()=>(0, _foreignJs.debug));
parcelHelpers.export(exports, "time", ()=>(0, _foreignJs.time));
parcelHelpers.export(exports, "timeLog", ()=>(0, _foreignJs.timeLog));
parcelHelpers.export(exports, "timeEnd", ()=>(0, _foreignJs.timeEnd));
parcelHelpers.export(exports, "clear", ()=>(0, _foreignJs.clear));
parcelHelpers.export(exports, "group", ()=>(0, _foreignJs.group));
parcelHelpers.export(exports, "groupCollapsed", ()=>(0, _foreignJs.groupCollapsed));
parcelHelpers.export(exports, "groupEnd", ()=>(0, _foreignJs.groupEnd));
parcelHelpers.export(exports, "logShow", ()=>logShow);
parcelHelpers.export(exports, "warnShow", ()=>warnShow);
parcelHelpers.export(exports, "errorShow", ()=>errorShow);
parcelHelpers.export(exports, "infoShow", ()=>infoShow);
parcelHelpers.export(exports, "debugShow", ()=>debugShow);
parcelHelpers.export(exports, "grouped", ()=>grouped);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Show/index.js");
var warnShow = function(dictShow) {
    var show = _indexJs.show(dictShow);
    return function(a) {
        return _foreignJs.warn(show(a));
    };
};
var logShow = function(dictShow) {
    var show = _indexJs.show(dictShow);
    return function(a) {
        return _foreignJs.log(show(a));
    };
};
var infoShow = function(dictShow) {
    var show = _indexJs.show(dictShow);
    return function(a) {
        return _foreignJs.info(show(a));
    };
};
var grouped = function(name) {
    return function(inner) {
        return function __do() {
            _foreignJs.group(name)();
            var result = inner();
            _foreignJs.groupEnd();
            return result;
        };
    };
};
var errorShow = function(dictShow) {
    var show = _indexJs.show(dictShow);
    return function(a) {
        return _foreignJs.error(show(a));
    };
};
var debugShow = function(dictShow) {
    var show = _indexJs.show(dictShow);
    return function(a) {
        return _foreignJs.debug(show(a));
    };
};

},{"./foreign.js":"bZuzf","../Data.Show/index.js":"lQCRi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bZuzf":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "log", ()=>log);
parcelHelpers.export(exports, "warn", ()=>warn);
parcelHelpers.export(exports, "error", ()=>error);
parcelHelpers.export(exports, "info", ()=>info);
parcelHelpers.export(exports, "debug", ()=>debug);
parcelHelpers.export(exports, "time", ()=>time);
parcelHelpers.export(exports, "timeLog", ()=>timeLog);
parcelHelpers.export(exports, "timeEnd", ()=>timeEnd);
parcelHelpers.export(exports, "clear", ()=>clear);
parcelHelpers.export(exports, "group", ()=>group);
parcelHelpers.export(exports, "groupCollapsed", ()=>groupCollapsed);
parcelHelpers.export(exports, "groupEnd", ()=>groupEnd);
const log = function(s) {
    return function() {
        console.log(s);
    };
};
const warn = function(s) {
    return function() {
        console.warn(s);
    };
};
const error = function(s) {
    return function() {
        console.error(s);
    };
};
const info = function(s) {
    return function() {
        console.info(s);
    };
};
const debug = function(s) {
    return function() {
        console.debug(s);
    };
};
const time = function(s) {
    return function() {
        console.time(s);
    };
};
const timeLog = function(s) {
    return function() {
        console.timeLog(s);
    };
};
const timeEnd = function(s) {
    return function() {
        console.timeEnd(s);
    };
};
const clear = function() {
    console.clear();
};
const group = function(s) {
    return function() {
        console.group(s);
    };
};
const groupCollapsed = function(s) {
    return function() {
        console.groupCollapsed(s);
    };
};
const groupEnd = function() {
    console.groupEnd();
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2OjTO":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createRoot", ()=>(0, _foreignJs.createRoot));
parcelHelpers.export(exports, "hydrateRoot", ()=>(0, _foreignJs.hydrateRoot));
parcelHelpers.export(exports, "renderRoot", ()=>(0, _foreignJs.renderRoot));
parcelHelpers.export(exports, "unmountRoot", ()=>(0, _foreignJs.unmountRoot));
var _foreignJs = require("./foreign.js");

},{"./foreign.js":"c6YH1","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"c6YH1":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createRoot", ()=>createRoot);
parcelHelpers.export(exports, "hydrateRoot", ()=>hydrateRoot);
parcelHelpers.export(exports, "renderRoot", ()=>renderRoot);
parcelHelpers.export(exports, "unmountRoot", ()=>unmountRoot);
var _client = require("react-dom/client");
var _clientDefault = parcelHelpers.interopDefault(_client);
const createRoot = (container)=>()=>(0, _clientDefault.default).createRoot(container);
const hydrateRoot = (container)=>(initialChildren)=>()=>(0, _clientDefault.default).hydrateRoot(container, initialChildren);
const renderRoot = (root)=>(children)=>()=>root.render(children);
const unmountRoot = (root)=>()=>root.unmount(root);

},{"react-dom/client":"hrvwu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hrvwu":[function(require,module,exports,__globalThis) {
'use strict';
function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') return;
    var err;
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
}
module.exports = require("2b53550ce04dc092");

},{"2b53550ce04dc092":"lu7uO"}],"lu7uO":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-dom-client.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/ "use strict";
(function() {
    function findHook(fiber, id) {
        for(fiber = fiber.memoizedState; null !== fiber && 0 < id;)fiber = fiber.next, id--;
        return fiber;
    }
    function copyWithSetImpl(obj, path, index, value) {
        if (index >= path.length) return value;
        var key = path[index], updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);
        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
        return updated;
    }
    function copyWithRename(obj, oldPath, newPath) {
        if (oldPath.length !== newPath.length) console.warn("copyWithRename() expects paths of the same length");
        else {
            for(var i = 0; i < newPath.length - 1; i++)if (oldPath[i] !== newPath[i]) {
                console.warn("copyWithRename() expects paths to be the same except for the deepest key");
                return;
            }
            return copyWithRenameImpl(obj, oldPath, newPath, 0);
        }
    }
    function copyWithRenameImpl(obj, oldPath, newPath, index) {
        var oldKey = oldPath[index], updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);
        index + 1 === oldPath.length ? (updated[newPath[index]] = updated[oldKey], isArrayImpl(updated) ? updated.splice(oldKey, 1) : delete updated[oldKey]) : updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index + 1);
        return updated;
    }
    function copyWithDeleteImpl(obj, path, index) {
        var key = path[index], updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);
        if (index + 1 === path.length) return isArrayImpl(updated) ? updated.splice(key, 1) : delete updated[key], updated;
        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
        return updated;
    }
    function shouldSuspendImpl() {
        return !1;
    }
    function shouldErrorImpl() {
        return null;
    }
    function warnForMissingKey() {}
    function warnInvalidHookAccess() {
        console.error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://react.dev/link/rules-of-hooks");
    }
    function warnInvalidContextAccess() {
        console.error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
    }
    function noop$2() {}
    function setToSortedString(set) {
        var array = [];
        set.forEach(function(value) {
            array.push(value);
        });
        return array.sort().join(", ");
    }
    function createFiber(tag, pendingProps, key, mode) {
        return new FiberNode(tag, pendingProps, key, mode);
    }
    function scheduleRoot(root, element) {
        root.context === emptyContextObject && (updateContainerImpl(root.current, 2, element, root, null, null), flushSyncWork$1());
    }
    function scheduleRefresh(root, update) {
        if (null !== resolveFamily) {
            var staleFamilies = update.staleFamilies;
            update = update.updatedFamilies;
            flushPendingEffects();
            scheduleFibersWithFamiliesRecursively(root.current, update, staleFamilies);
            flushSyncWork$1();
        }
    }
    function setRefreshHandler(handler) {
        resolveFamily = handler;
    }
    function isValidContainer(node) {
        return !(!node || 1 !== node.nodeType && 9 !== node.nodeType && 11 !== node.nodeType);
    }
    function getNearestMountedFiber(fiber) {
        var node = fiber, nearestMounted = fiber;
        if (fiber.alternate) for(; node.return;)node = node.return;
        else {
            fiber = node;
            do node = fiber, 0 !== (node.flags & 4098) && (nearestMounted = node.return), fiber = node.return;
            while (fiber);
        }
        return 3 === node.tag ? nearestMounted : null;
    }
    function getSuspenseInstanceFromFiber(fiber) {
        if (13 === fiber.tag) {
            var suspenseState = fiber.memoizedState;
            null === suspenseState && (fiber = fiber.alternate, null !== fiber && (suspenseState = fiber.memoizedState));
            if (null !== suspenseState) return suspenseState.dehydrated;
        }
        return null;
    }
    function assertIsMounted(fiber) {
        if (getNearestMountedFiber(fiber) !== fiber) throw Error("Unable to find node on an unmounted component.");
    }
    function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;
        if (!alternate) {
            alternate = getNearestMountedFiber(fiber);
            if (null === alternate) throw Error("Unable to find node on an unmounted component.");
            return alternate !== fiber ? null : fiber;
        }
        for(var a = fiber, b = alternate;;){
            var parentA = a.return;
            if (null === parentA) break;
            var parentB = parentA.alternate;
            if (null === parentB) {
                b = parentA.return;
                if (null !== b) {
                    a = b;
                    continue;
                }
                break;
            }
            if (parentA.child === parentB.child) {
                for(parentB = parentA.child; parentB;){
                    if (parentB === a) return assertIsMounted(parentA), fiber;
                    if (parentB === b) return assertIsMounted(parentA), alternate;
                    parentB = parentB.sibling;
                }
                throw Error("Unable to find node on an unmounted component.");
            }
            if (a.return !== b.return) a = parentA, b = parentB;
            else {
                for(var didFindChild = !1, _child = parentA.child; _child;){
                    if (_child === a) {
                        didFindChild = !0;
                        a = parentA;
                        b = parentB;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = !0;
                        b = parentA;
                        a = parentB;
                        break;
                    }
                    _child = _child.sibling;
                }
                if (!didFindChild) {
                    for(_child = parentB.child; _child;){
                        if (_child === a) {
                            didFindChild = !0;
                            a = parentB;
                            b = parentA;
                            break;
                        }
                        if (_child === b) {
                            didFindChild = !0;
                            b = parentB;
                            a = parentA;
                            break;
                        }
                        _child = _child.sibling;
                    }
                    if (!didFindChild) throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                }
            }
            if (a.alternate !== b) throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
        }
        if (3 !== a.tag) throw Error("Unable to find node on an unmounted component.");
        return a.stateNode.current === a ? fiber : alternate;
    }
    function findCurrentHostFiberImpl(node) {
        var tag = node.tag;
        if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;
        for(node = node.child; null !== node;){
            tag = findCurrentHostFiberImpl(node);
            if (null !== tag) return tag;
            node = node.sibling;
        }
        return null;
    }
    function getIteratorFn(maybeIterable) {
        if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
        maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
        return "function" === typeof maybeIterable ? maybeIterable : null;
    }
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            case REACT_ACTIVITY_TYPE:
                return "Activity";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_CONTEXT_TYPE:
                return (type.displayName || "Context") + ".Provider";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function getComponentNameFromOwner(owner) {
        return "number" === typeof owner.tag ? getComponentNameFromFiber(owner) : "string" === typeof owner.name ? owner.name : null;
    }
    function getComponentNameFromFiber(fiber) {
        var type = fiber.type;
        switch(fiber.tag){
            case 31:
                return "Activity";
            case 24:
                return "Cache";
            case 9:
                return (type._context.displayName || "Context") + ".Consumer";
            case 10:
                return (type.displayName || "Context") + ".Provider";
            case 18:
                return "DehydratedFragment";
            case 11:
                return fiber = type.render, fiber = fiber.displayName || fiber.name || "", type.displayName || ("" !== fiber ? "ForwardRef(" + fiber + ")" : "ForwardRef");
            case 7:
                return "Fragment";
            case 26:
            case 27:
            case 5:
                return type;
            case 4:
                return "Portal";
            case 3:
                return "Root";
            case 6:
                return "Text";
            case 16:
                return getComponentNameFromType(type);
            case 8:
                return type === REACT_STRICT_MODE_TYPE ? "StrictMode" : "Mode";
            case 22:
                return "Offscreen";
            case 12:
                return "Profiler";
            case 21:
                return "Scope";
            case 13:
                return "Suspense";
            case 19:
                return "SuspenseList";
            case 25:
                return "TracingMarker";
            case 1:
            case 0:
            case 14:
            case 15:
                if ("function" === typeof type) return type.displayName || type.name || null;
                if ("string" === typeof type) return type;
                break;
            case 29:
                type = fiber._debugInfo;
                if (null != type) {
                    for(var i = type.length - 1; 0 <= i; i--)if ("string" === typeof type[i].name) return type[i].name;
                }
                if (null !== fiber.return) return getComponentNameFromFiber(fiber.return);
        }
        return null;
    }
    function createCursor(defaultValue) {
        return {
            current: defaultValue
        };
    }
    function pop(cursor, fiber) {
        0 > index$jscomp$0 ? console.error("Unexpected pop.") : (fiber !== fiberStack[index$jscomp$0] && console.error("Unexpected Fiber popped."), cursor.current = valueStack[index$jscomp$0], valueStack[index$jscomp$0] = null, fiberStack[index$jscomp$0] = null, index$jscomp$0--);
    }
    function push(cursor, value, fiber) {
        index$jscomp$0++;
        valueStack[index$jscomp$0] = cursor.current;
        fiberStack[index$jscomp$0] = fiber;
        cursor.current = value;
    }
    function requiredContext(c) {
        null === c && console.error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
        return c;
    }
    function pushHostContainer(fiber, nextRootInstance) {
        push(rootInstanceStackCursor, nextRootInstance, fiber);
        push(contextFiberStackCursor, fiber, fiber);
        push(contextStackCursor, null, fiber);
        var nextRootContext = nextRootInstance.nodeType;
        switch(nextRootContext){
            case 9:
            case 11:
                nextRootContext = 9 === nextRootContext ? "#document" : "#fragment";
                nextRootInstance = (nextRootInstance = nextRootInstance.documentElement) ? (nextRootInstance = nextRootInstance.namespaceURI) ? getOwnHostContext(nextRootInstance) : HostContextNamespaceNone : HostContextNamespaceNone;
                break;
            default:
                if (nextRootContext = nextRootInstance.tagName, nextRootInstance = nextRootInstance.namespaceURI) nextRootInstance = getOwnHostContext(nextRootInstance), nextRootInstance = getChildHostContextProd(nextRootInstance, nextRootContext);
                else switch(nextRootContext){
                    case "svg":
                        nextRootInstance = HostContextNamespaceSvg;
                        break;
                    case "math":
                        nextRootInstance = HostContextNamespaceMath;
                        break;
                    default:
                        nextRootInstance = HostContextNamespaceNone;
                }
        }
        nextRootContext = nextRootContext.toLowerCase();
        nextRootContext = updatedAncestorInfoDev(null, nextRootContext);
        nextRootContext = {
            context: nextRootInstance,
            ancestorInfo: nextRootContext
        };
        pop(contextStackCursor, fiber);
        push(contextStackCursor, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
        pop(contextStackCursor, fiber);
        pop(contextFiberStackCursor, fiber);
        pop(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
        return requiredContext(contextStackCursor.current);
    }
    function pushHostContext(fiber) {
        null !== fiber.memoizedState && push(hostTransitionProviderCursor, fiber, fiber);
        var context = requiredContext(contextStackCursor.current);
        var type = fiber.type;
        var nextContext = getChildHostContextProd(context.context, type);
        type = updatedAncestorInfoDev(context.ancestorInfo, type);
        nextContext = {
            context: nextContext,
            ancestorInfo: type
        };
        context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor, nextContext, fiber));
    }
    function popHostContext(fiber) {
        contextFiberStackCursor.current === fiber && (pop(contextStackCursor, fiber), pop(contextFiberStackCursor, fiber));
        hostTransitionProviderCursor.current === fiber && (pop(hostTransitionProviderCursor, fiber), HostTransitionContext._currentValue = NotPendingTransition);
    }
    function typeName(value) {
        return "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
    }
    function willCoercionThrow(value) {
        try {
            return testStringCoercion(value), !1;
        } catch (e) {
            return !0;
        }
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkAttributeStringCoercion(value, attributeName) {
        if (willCoercionThrow(value)) return console.error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before using it here.", attributeName, typeName(value)), testStringCoercion(value);
    }
    function checkCSSPropertyStringCoercion(value, propName) {
        if (willCoercionThrow(value)) return console.error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before using it here.", propName, typeName(value)), testStringCoercion(value);
    }
    function checkFormFieldValueStringCoercion(value) {
        if (willCoercionThrow(value)) return console.error("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before using it here.", typeName(value)), testStringCoercion(value);
    }
    function injectInternals(internals) {
        if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook.isDisabled) return !0;
        if (!hook.supportsFiber) return console.error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://react.dev/link/react-devtools"), !0;
        try {
            rendererID = hook.inject(internals), injectedHook = hook;
        } catch (err) {
            console.error("React instrumentation encountered an error: %s.", err);
        }
        return hook.checkDCE ? !0 : !1;
    }
    function setIsStrictModeForDevtools(newIsStrictMode) {
        "function" === typeof log$1 && unstable_setDisableYieldValue(newIsStrictMode);
        if (injectedHook && "function" === typeof injectedHook.setStrictMode) try {
            injectedHook.setStrictMode(rendererID, newIsStrictMode);
        } catch (err) {
            hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
        }
    }
    function injectProfilingHooks(profilingHooks) {
        injectedProfilingHooks = profilingHooks;
    }
    function markCommitStopped() {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markCommitStopped && injectedProfilingHooks.markCommitStopped();
    }
    function markComponentRenderStarted(fiber) {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentRenderStarted && injectedProfilingHooks.markComponentRenderStarted(fiber);
    }
    function markComponentRenderStopped() {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentRenderStopped && injectedProfilingHooks.markComponentRenderStopped();
    }
    function markRenderStarted(lanes) {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markRenderStarted && injectedProfilingHooks.markRenderStarted(lanes);
    }
    function markRenderStopped() {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markRenderStopped && injectedProfilingHooks.markRenderStopped();
    }
    function markStateUpdateScheduled(fiber, lane) {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markStateUpdateScheduled && injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
    }
    function clz32Fallback(x) {
        x >>>= 0;
        return 0 === x ? 32 : 31 - (log(x) / LN2 | 0) | 0;
    }
    function getLabelForLane(lane) {
        if (lane & 1) return "SyncHydrationLane";
        if (lane & 2) return "Sync";
        if (lane & 4) return "InputContinuousHydration";
        if (lane & 8) return "InputContinuous";
        if (lane & 16) return "DefaultHydration";
        if (lane & 32) return "Default";
        if (lane & 128) return "TransitionHydration";
        if (lane & 4194048) return "Transition";
        if (lane & 62914560) return "Retry";
        if (lane & 67108864) return "SelectiveHydration";
        if (lane & 134217728) return "IdleHydration";
        if (lane & 268435456) return "Idle";
        if (lane & 536870912) return "Offscreen";
        if (lane & 1073741824) return "Deferred";
    }
    function getHighestPriorityLanes(lanes) {
        var pendingSyncLanes = lanes & 42;
        if (0 !== pendingSyncLanes) return pendingSyncLanes;
        switch(lanes & -lanes){
            case 1:
                return 1;
            case 2:
                return 2;
            case 4:
                return 4;
            case 8:
                return 8;
            case 16:
                return 16;
            case 32:
                return 32;
            case 64:
                return 64;
            case 128:
                return 128;
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
                return lanes & 4194048;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
                return lanes & 62914560;
            case 67108864:
                return 67108864;
            case 134217728:
                return 134217728;
            case 268435456:
                return 268435456;
            case 536870912:
                return 536870912;
            case 1073741824:
                return 0;
            default:
                return console.error("Should have found matching lanes. This is a bug in React."), lanes;
        }
    }
    function getNextLanes(root, wipLanes, rootHasPendingCommit) {
        var pendingLanes = root.pendingLanes;
        if (0 === pendingLanes) return 0;
        var nextLanes = 0, suspendedLanes = root.suspendedLanes, pingedLanes = root.pingedLanes;
        root = root.warmLanes;
        var nonIdlePendingLanes = pendingLanes & 134217727;
        0 !== nonIdlePendingLanes ? (pendingLanes = nonIdlePendingLanes & ~suspendedLanes, 0 !== pendingLanes ? nextLanes = getHighestPriorityLanes(pendingLanes) : (pingedLanes &= nonIdlePendingLanes, 0 !== pingedLanes ? nextLanes = getHighestPriorityLanes(pingedLanes) : rootHasPendingCommit || (rootHasPendingCommit = nonIdlePendingLanes & ~root, 0 !== rootHasPendingCommit && (nextLanes = getHighestPriorityLanes(rootHasPendingCommit))))) : (nonIdlePendingLanes = pendingLanes & ~suspendedLanes, 0 !== nonIdlePendingLanes ? nextLanes = getHighestPriorityLanes(nonIdlePendingLanes) : 0 !== pingedLanes ? nextLanes = getHighestPriorityLanes(pingedLanes) : rootHasPendingCommit || (rootHasPendingCommit = pendingLanes & ~root, 0 !== rootHasPendingCommit && (nextLanes = getHighestPriorityLanes(rootHasPendingCommit))));
        return 0 === nextLanes ? 0 : 0 !== wipLanes && wipLanes !== nextLanes && 0 === (wipLanes & suspendedLanes) && (suspendedLanes = nextLanes & -nextLanes, rootHasPendingCommit = wipLanes & -wipLanes, suspendedLanes >= rootHasPendingCommit || 32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)) ? wipLanes : nextLanes;
    }
    function checkIfRootIsPrerendering(root, renderLanes) {
        return 0 === (root.pendingLanes & ~(root.suspendedLanes & ~root.pingedLanes) & renderLanes);
    }
    function computeExpirationTime(lane, currentTime) {
        switch(lane){
            case 1:
            case 2:
            case 4:
            case 8:
            case 64:
                return currentTime + 250;
            case 16:
            case 32:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
                return currentTime + 5e3;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
                return -1;
            case 67108864:
            case 134217728:
            case 268435456:
            case 536870912:
            case 1073741824:
                return -1;
            default:
                return console.error("Should have found matching lanes. This is a bug in React."), -1;
        }
    }
    function claimNextTransitionLane() {
        var lane = nextTransitionLane;
        nextTransitionLane <<= 1;
        0 === (nextTransitionLane & 4194048) && (nextTransitionLane = 256);
        return lane;
    }
    function claimNextRetryLane() {
        var lane = nextRetryLane;
        nextRetryLane <<= 1;
        0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);
        return lane;
    }
    function createLaneMap(initial) {
        for(var laneMap = [], i = 0; 31 > i; i++)laneMap.push(initial);
        return laneMap;
    }
    function markRootUpdated$1(root, updateLane) {
        root.pendingLanes |= updateLane;
        268435456 !== updateLane && (root.suspendedLanes = 0, root.pingedLanes = 0, root.warmLanes = 0);
    }
    function markRootFinished(root, finishedLanes, remainingLanes, spawnedLane, updatedLanes, suspendedRetryLanes) {
        var previouslyPendingLanes = root.pendingLanes;
        root.pendingLanes = remainingLanes;
        root.suspendedLanes = 0;
        root.pingedLanes = 0;
        root.warmLanes = 0;
        root.expiredLanes &= remainingLanes;
        root.entangledLanes &= remainingLanes;
        root.errorRecoveryDisabledLanes &= remainingLanes;
        root.shellSuspendCounter = 0;
        var entanglements = root.entanglements, expirationTimes = root.expirationTimes, hiddenUpdates = root.hiddenUpdates;
        for(remainingLanes = previouslyPendingLanes & ~remainingLanes; 0 < remainingLanes;){
            var index = 31 - clz32(remainingLanes), lane = 1 << index;
            entanglements[index] = 0;
            expirationTimes[index] = -1;
            var hiddenUpdatesForLane = hiddenUpdates[index];
            if (null !== hiddenUpdatesForLane) for(hiddenUpdates[index] = null, index = 0; index < hiddenUpdatesForLane.length; index++){
                var update = hiddenUpdatesForLane[index];
                null !== update && (update.lane &= -536870913);
            }
            remainingLanes &= ~lane;
        }
        0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);
        0 !== suspendedRetryLanes && 0 === updatedLanes && 0 !== root.tag && (root.suspendedLanes |= suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));
    }
    function markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {
        root.pendingLanes |= spawnedLane;
        root.suspendedLanes &= ~spawnedLane;
        var spawnedLaneIndex = 31 - clz32(spawnedLane);
        root.entangledLanes |= spawnedLane;
        root.entanglements[spawnedLaneIndex] = root.entanglements[spawnedLaneIndex] | 1073741824 | entangledLanes & 4194090;
    }
    function markRootEntangled(root, entangledLanes) {
        var rootEntangledLanes = root.entangledLanes |= entangledLanes;
        for(root = root.entanglements; rootEntangledLanes;){
            var index = 31 - clz32(rootEntangledLanes), lane = 1 << index;
            lane & entangledLanes | root[index] & entangledLanes && (root[index] |= entangledLanes);
            rootEntangledLanes &= ~lane;
        }
    }
    function getBumpedLaneForHydrationByLane(lane) {
        switch(lane){
            case 2:
                lane = 1;
                break;
            case 8:
                lane = 4;
                break;
            case 32:
                lane = 16;
                break;
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
                lane = 128;
                break;
            case 268435456:
                lane = 134217728;
                break;
            default:
                lane = 0;
        }
        return lane;
    }
    function addFiberToLanesMap(root, fiber, lanes) {
        if (isDevToolsPresent) for(root = root.pendingUpdatersLaneMap; 0 < lanes;){
            var index = 31 - clz32(lanes), lane = 1 << index;
            root[index].add(fiber);
            lanes &= ~lane;
        }
    }
    function movePendingFibersToMemoized(root, lanes) {
        if (isDevToolsPresent) for(var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap, memoizedUpdaters = root.memoizedUpdaters; 0 < lanes;){
            var index = 31 - clz32(lanes);
            root = 1 << index;
            index = pendingUpdatersLaneMap[index];
            0 < index.size && (index.forEach(function(fiber) {
                var alternate = fiber.alternate;
                null !== alternate && memoizedUpdaters.has(alternate) || memoizedUpdaters.add(fiber);
            }), index.clear());
            lanes &= ~root;
        }
    }
    function lanesToEventPriority(lanes) {
        lanes &= -lanes;
        return 0 !== DiscreteEventPriority && DiscreteEventPriority < lanes ? 0 !== ContinuousEventPriority && ContinuousEventPriority < lanes ? 0 !== (lanes & 134217727) ? DefaultEventPriority : IdleEventPriority : ContinuousEventPriority : DiscreteEventPriority;
    }
    function resolveUpdatePriority() {
        var updatePriority = ReactDOMSharedInternals.p;
        if (0 !== updatePriority) return updatePriority;
        updatePriority = window.event;
        return void 0 === updatePriority ? DefaultEventPriority : getEventPriority(updatePriority.type);
    }
    function runWithPriority(priority, fn) {
        var previousPriority = ReactDOMSharedInternals.p;
        try {
            return ReactDOMSharedInternals.p = priority, fn();
        } finally{
            ReactDOMSharedInternals.p = previousPriority;
        }
    }
    function detachDeletedInstance(node) {
        delete node[internalInstanceKey];
        delete node[internalPropsKey];
        delete node[internalEventHandlersKey];
        delete node[internalEventHandlerListenersKey];
        delete node[internalEventHandlesSetKey];
    }
    function getClosestInstanceFromNode(targetNode) {
        var targetInst = targetNode[internalInstanceKey];
        if (targetInst) return targetInst;
        for(var parentNode = targetNode.parentNode; parentNode;){
            if (targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey]) {
                parentNode = targetInst.alternate;
                if (null !== targetInst.child || null !== parentNode && null !== parentNode.child) for(targetNode = getParentSuspenseInstance(targetNode); null !== targetNode;){
                    if (parentNode = targetNode[internalInstanceKey]) return parentNode;
                    targetNode = getParentSuspenseInstance(targetNode);
                }
                return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
        }
        return null;
    }
    function getInstanceFromNode(node) {
        if (node = node[internalInstanceKey] || node[internalContainerInstanceKey]) {
            var tag = node.tag;
            if (5 === tag || 6 === tag || 13 === tag || 26 === tag || 27 === tag || 3 === tag) return node;
        }
        return null;
    }
    function getNodeFromInstance(inst) {
        var tag = inst.tag;
        if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return inst.stateNode;
        throw Error("getNodeFromInstance: Invalid argument.");
    }
    function getResourcesFromRoot(root) {
        var resources = root[internalRootNodeResourcesKey];
        resources || (resources = root[internalRootNodeResourcesKey] = {
            hoistableStyles: new Map(),
            hoistableScripts: new Map()
        });
        return resources;
    }
    function markNodeAsHoistable(node) {
        node[internalHoistableMarker] = !0;
    }
    function registerTwoPhaseEvent(registrationName, dependencies) {
        registerDirectEvent(registrationName, dependencies);
        registerDirectEvent(registrationName + "Capture", dependencies);
    }
    function registerDirectEvent(registrationName, dependencies) {
        registrationNameDependencies[registrationName] && console.error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
        registrationNameDependencies[registrationName] = dependencies;
        var lowerCasedName = registrationName.toLowerCase();
        possibleRegistrationNames[lowerCasedName] = registrationName;
        "onDoubleClick" === registrationName && (possibleRegistrationNames.ondblclick = registrationName);
        for(registrationName = 0; registrationName < dependencies.length; registrationName++)allNativeEvents.add(dependencies[registrationName]);
    }
    function checkControlledValueProps(tagName, props) {
        hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || null == props.value || ("select" === tagName ? console.error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set `onChange`.") : console.error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."));
        props.onChange || props.readOnly || props.disabled || null == props.checked || console.error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function isAttributeNameSafe(attributeName) {
        if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) return !0;
        if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return !1;
        if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) return validatedAttributeNameCache[attributeName] = !0;
        illegalAttributeNameCache[attributeName] = !0;
        console.error("Invalid attribute name: `%s`", attributeName);
        return !1;
    }
    function getValueForAttributeOnCustomComponent(node, name, expected) {
        if (isAttributeNameSafe(name)) {
            if (!node.hasAttribute(name)) {
                switch(typeof expected){
                    case "symbol":
                    case "object":
                        return expected;
                    case "function":
                        return expected;
                    case "boolean":
                        if (!1 === expected) return expected;
                }
                return void 0 === expected ? void 0 : null;
            }
            node = node.getAttribute(name);
            if ("" === node && !0 === expected) return !0;
            checkAttributeStringCoercion(expected, name);
            return node === "" + expected ? expected : node;
        }
    }
    function setValueForAttribute(node, name, value) {
        if (isAttributeNameSafe(name)) {
            if (null === value) node.removeAttribute(name);
            else {
                switch(typeof value){
                    case "undefined":
                    case "function":
                    case "symbol":
                        node.removeAttribute(name);
                        return;
                    case "boolean":
                        var prefix = name.toLowerCase().slice(0, 5);
                        if ("data-" !== prefix && "aria-" !== prefix) {
                            node.removeAttribute(name);
                            return;
                        }
                }
                checkAttributeStringCoercion(value, name);
                node.setAttribute(name, "" + value);
            }
        }
    }
    function setValueForKnownAttribute(node, name, value) {
        if (null === value) node.removeAttribute(name);
        else {
            switch(typeof value){
                case "undefined":
                case "function":
                case "symbol":
                case "boolean":
                    node.removeAttribute(name);
                    return;
            }
            checkAttributeStringCoercion(value, name);
            node.setAttribute(name, "" + value);
        }
    }
    function setValueForNamespacedAttribute(node, namespace, name, value) {
        if (null === value) node.removeAttribute(name);
        else {
            switch(typeof value){
                case "undefined":
                case "function":
                case "symbol":
                case "boolean":
                    node.removeAttribute(name);
                    return;
            }
            checkAttributeStringCoercion(value, name);
            node.setAttributeNS(namespace, name, "" + value);
        }
    }
    function disabledLog() {}
    function disableLogs() {
        if (0 === disabledDepth) {
            prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd;
            var props = {
                configurable: !0,
                enumerable: !0,
                value: disabledLog,
                writable: !0
            };
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (0 === disabledDepth) {
            var props = {
                configurable: !0,
                enumerable: !0,
                writable: !0
            };
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        }
        0 > disabledDepth && console.error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    function describeBuiltInComponentFrame(name) {
        if (void 0 === prefix) try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
            suffix = -1 < x.stack.indexOf("\n    at") ? " (<anonymous>)" : -1 < x.stack.indexOf("@") ? "@unknown:0:0" : "";
        }
        return "\n" + prefix + name + suffix;
    }
    function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (void 0 !== frame) return frame;
        reentry = !0;
        frame = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher = null;
        previousDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = null;
        disableLogs();
        try {
            var RunInRootFrame = {
                DetermineComponentFrameRoot: function() {
                    try {
                        if (construct) {
                            var Fake = function() {
                                throw Error();
                            };
                            Object.defineProperty(Fake.prototype, "props", {
                                set: function() {
                                    throw Error();
                                }
                            });
                            if ("object" === typeof Reflect && Reflect.construct) {
                                try {
                                    Reflect.construct(Fake, []);
                                } catch (x) {
                                    var control = x;
                                }
                                Reflect.construct(fn, [], Fake);
                            } else {
                                try {
                                    Fake.call();
                                } catch (x$0) {
                                    control = x$0;
                                }
                                fn.call(Fake.prototype);
                            }
                        } else {
                            try {
                                throw Error();
                            } catch (x$1) {
                                control = x$1;
                            }
                            (Fake = fn()) && "function" === typeof Fake.catch && Fake.catch(function() {});
                        }
                    } catch (sample) {
                        if (sample && control && "string" === typeof sample.stack) return [
                            sample.stack,
                            control.stack
                        ];
                    }
                    return [
                        null,
                        null
                    ];
                }
            };
            RunInRootFrame.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, "name");
            namePropDescriptor && namePropDescriptor.configurable && Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, "name", {
                value: "DetermineComponentFrameRoot"
            });
            var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];
            if (sampleStack && controlStack) {
                var sampleLines = sampleStack.split("\n"), controlLines = controlStack.split("\n");
                for(_RunInRootFrame$Deter = namePropDescriptor = 0; namePropDescriptor < sampleLines.length && !sampleLines[namePropDescriptor].includes("DetermineComponentFrameRoot");)namePropDescriptor++;
                for(; _RunInRootFrame$Deter < controlLines.length && !controlLines[_RunInRootFrame$Deter].includes("DetermineComponentFrameRoot");)_RunInRootFrame$Deter++;
                if (namePropDescriptor === sampleLines.length || _RunInRootFrame$Deter === controlLines.length) for(namePropDescriptor = sampleLines.length - 1, _RunInRootFrame$Deter = controlLines.length - 1; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter && sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter];)_RunInRootFrame$Deter--;
                for(; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter; namePropDescriptor--, _RunInRootFrame$Deter--)if (sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                    if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {
                        do if (namePropDescriptor--, _RunInRootFrame$Deter--, 0 > _RunInRootFrame$Deter || sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                            var _frame = "\n" + sampleLines[namePropDescriptor].replace(" at new ", " at ");
                            fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName));
                            "function" === typeof fn && componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                        while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter);
                    }
                    break;
                }
            }
        } finally{
            reentry = !1, ReactSharedInternals.H = previousDispatcher, reenableLogs(), Error.prepareStackTrace = frame;
        }
        sampleLines = (sampleLines = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(sampleLines) : "";
        "function" === typeof fn && componentFrameCache.set(fn, sampleLines);
        return sampleLines;
    }
    function formatOwnerStack(error) {
        var prevPrepareStackTrace = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        error = error.stack;
        Error.prepareStackTrace = prevPrepareStackTrace;
        error.startsWith("Error: react-stack-top-frame\n") && (error = error.slice(29));
        prevPrepareStackTrace = error.indexOf("\n");
        -1 !== prevPrepareStackTrace && (error = error.slice(prevPrepareStackTrace + 1));
        prevPrepareStackTrace = error.indexOf("react-stack-bottom-frame");
        -1 !== prevPrepareStackTrace && (prevPrepareStackTrace = error.lastIndexOf("\n", prevPrepareStackTrace));
        if (-1 !== prevPrepareStackTrace) error = error.slice(0, prevPrepareStackTrace);
        else return "";
        return error;
    }
    function describeFiber(fiber) {
        switch(fiber.tag){
            case 26:
            case 27:
            case 5:
                return describeBuiltInComponentFrame(fiber.type);
            case 16:
                return describeBuiltInComponentFrame("Lazy");
            case 13:
                return describeBuiltInComponentFrame("Suspense");
            case 19:
                return describeBuiltInComponentFrame("SuspenseList");
            case 0:
            case 15:
                return describeNativeComponentFrame(fiber.type, !1);
            case 11:
                return describeNativeComponentFrame(fiber.type.render, !1);
            case 1:
                return describeNativeComponentFrame(fiber.type, !0);
            case 31:
                return describeBuiltInComponentFrame("Activity");
            default:
                return "";
        }
    }
    function getStackByFiberInDevAndProd(workInProgress) {
        try {
            var info = "";
            do {
                info += describeFiber(workInProgress);
                var debugInfo = workInProgress._debugInfo;
                if (debugInfo) for(var i = debugInfo.length - 1; 0 <= i; i--){
                    var entry = debugInfo[i];
                    if ("string" === typeof entry.name) {
                        var JSCompiler_temp_const = info, env = entry.env;
                        var JSCompiler_inline_result = describeBuiltInComponentFrame(entry.name + (env ? " [" + env + "]" : ""));
                        info = JSCompiler_temp_const + JSCompiler_inline_result;
                    }
                }
                workInProgress = workInProgress.return;
            }while (workInProgress);
            return info;
        } catch (x) {
            return "\nError generating stack: " + x.message + "\n" + x.stack;
        }
    }
    function describeFunctionComponentFrameWithoutLineNumber(fn) {
        return (fn = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(fn) : "";
    }
    function getCurrentFiberOwnerNameInDevOrNull() {
        if (null === current) return null;
        var owner = current._debugOwner;
        return null != owner ? getComponentNameFromOwner(owner) : null;
    }
    function getCurrentFiberStackInDev() {
        if (null === current) return "";
        var workInProgress = current;
        try {
            var info = "";
            6 === workInProgress.tag && (workInProgress = workInProgress.return);
            switch(workInProgress.tag){
                case 26:
                case 27:
                case 5:
                    info += describeBuiltInComponentFrame(workInProgress.type);
                    break;
                case 13:
                    info += describeBuiltInComponentFrame("Suspense");
                    break;
                case 19:
                    info += describeBuiltInComponentFrame("SuspenseList");
                    break;
                case 31:
                    info += describeBuiltInComponentFrame("Activity");
                    break;
                case 30:
                case 0:
                case 15:
                case 1:
                    workInProgress._debugOwner || "" !== info || (info += describeFunctionComponentFrameWithoutLineNumber(workInProgress.type));
                    break;
                case 11:
                    workInProgress._debugOwner || "" !== info || (info += describeFunctionComponentFrameWithoutLineNumber(workInProgress.type.render));
            }
            for(; workInProgress;)if ("number" === typeof workInProgress.tag) {
                var fiber = workInProgress;
                workInProgress = fiber._debugOwner;
                var debugStack = fiber._debugStack;
                workInProgress && debugStack && ("string" !== typeof debugStack && (fiber._debugStack = debugStack = formatOwnerStack(debugStack)), "" !== debugStack && (info += "\n" + debugStack));
            } else if (null != workInProgress.debugStack) {
                var ownerStack = workInProgress.debugStack;
                (workInProgress = workInProgress.owner) && ownerStack && (info += "\n" + formatOwnerStack(ownerStack));
            } else break;
            var JSCompiler_inline_result = info;
        } catch (x) {
            JSCompiler_inline_result = "\nError generating stack: " + x.message + "\n" + x.stack;
        }
        return JSCompiler_inline_result;
    }
    function runWithFiberInDEV(fiber, callback, arg0, arg1, arg2, arg3, arg4) {
        var previousFiber = current;
        setCurrentFiber(fiber);
        try {
            return null !== fiber && fiber._debugTask ? fiber._debugTask.run(callback.bind(null, arg0, arg1, arg2, arg3, arg4)) : callback(arg0, arg1, arg2, arg3, arg4);
        } finally{
            setCurrentFiber(previousFiber);
        }
        throw Error("runWithFiberInDEV should never be called in production. This is a bug in React.");
    }
    function setCurrentFiber(fiber) {
        ReactSharedInternals.getCurrentStack = null === fiber ? null : getCurrentFiberStackInDev;
        isRendering = !1;
        current = fiber;
    }
    function getToStringValue(value) {
        switch(typeof value){
            case "bigint":
            case "boolean":
            case "number":
            case "string":
            case "undefined":
                return value;
            case "object":
                return checkFormFieldValueStringCoercion(value), value;
            default:
                return "";
        }
    }
    function isCheckable(elem) {
        var type = elem.type;
        return (elem = elem.nodeName) && "input" === elem.toLowerCase() && ("checkbox" === type || "radio" === type);
    }
    function trackValueOnNode(node) {
        var valueField = isCheckable(node) ? "checked" : "value", descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
        checkFormFieldValueStringCoercion(node[valueField]);
        var currentValue = "" + node[valueField];
        if (!node.hasOwnProperty(valueField) && "undefined" !== typeof descriptor && "function" === typeof descriptor.get && "function" === typeof descriptor.set) {
            var get = descriptor.get, set = descriptor.set;
            Object.defineProperty(node, valueField, {
                configurable: !0,
                get: function() {
                    return get.call(this);
                },
                set: function(value) {
                    checkFormFieldValueStringCoercion(value);
                    currentValue = "" + value;
                    set.call(this, value);
                }
            });
            Object.defineProperty(node, valueField, {
                enumerable: descriptor.enumerable
            });
            return {
                getValue: function() {
                    return currentValue;
                },
                setValue: function(value) {
                    checkFormFieldValueStringCoercion(value);
                    currentValue = "" + value;
                },
                stopTracking: function() {
                    node._valueTracker = null;
                    delete node[valueField];
                }
            };
        }
    }
    function track(node) {
        node._valueTracker || (node._valueTracker = trackValueOnNode(node));
    }
    function updateValueIfChanged(node) {
        if (!node) return !1;
        var tracker = node._valueTracker;
        if (!tracker) return !0;
        var lastValue = tracker.getValue();
        var value = "";
        node && (value = isCheckable(node) ? node.checked ? "true" : "false" : node.value);
        node = value;
        return node !== lastValue ? (tracker.setValue(node), !0) : !1;
    }
    function getActiveElement(doc) {
        doc = doc || ("undefined" !== typeof document ? document : void 0);
        if ("undefined" === typeof doc) return null;
        try {
            return doc.activeElement || doc.body;
        } catch (e) {
            return doc.body;
        }
    }
    function escapeSelectorAttributeValueInsideDoubleQuotes(value) {
        return value.replace(escapeSelectorAttributeValueInsideDoubleQuotesRegex, function(ch) {
            return "\\" + ch.charCodeAt(0).toString(16) + " ";
        });
    }
    function validateInputProps(element, props) {
        void 0 === props.checked || void 0 === props.defaultChecked || didWarnCheckedDefaultChecked || (console.error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://react.dev/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type), didWarnCheckedDefaultChecked = !0);
        void 0 === props.value || void 0 === props.defaultValue || didWarnValueDefaultValue$1 || (console.error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://react.dev/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type), didWarnValueDefaultValue$1 = !0);
    }
    function updateInput(element, value, defaultValue, lastDefaultValue, checked, defaultChecked, type, name) {
        element.name = "";
        null != type && "function" !== typeof type && "symbol" !== typeof type && "boolean" !== typeof type ? (checkAttributeStringCoercion(type, "type"), element.type = type) : element.removeAttribute("type");
        if (null != value) {
            if ("number" === type) {
                if (0 === value && "" === element.value || element.value != value) element.value = "" + getToStringValue(value);
            } else element.value !== "" + getToStringValue(value) && (element.value = "" + getToStringValue(value));
        } else "submit" !== type && "reset" !== type || element.removeAttribute("value");
        null != value ? setDefaultValue(element, type, getToStringValue(value)) : null != defaultValue ? setDefaultValue(element, type, getToStringValue(defaultValue)) : null != lastDefaultValue && element.removeAttribute("value");
        null == checked && null != defaultChecked && (element.defaultChecked = !!defaultChecked);
        null != checked && (element.checked = checked && "function" !== typeof checked && "symbol" !== typeof checked);
        null != name && "function" !== typeof name && "symbol" !== typeof name && "boolean" !== typeof name ? (checkAttributeStringCoercion(name, "name"), element.name = "" + getToStringValue(name)) : element.removeAttribute("name");
    }
    function initInput(element, value, defaultValue, checked, defaultChecked, type, name, isHydrating) {
        null != type && "function" !== typeof type && "symbol" !== typeof type && "boolean" !== typeof type && (checkAttributeStringCoercion(type, "type"), element.type = type);
        if (null != value || null != defaultValue) {
            if (!("submit" !== type && "reset" !== type || void 0 !== value && null !== value)) return;
            defaultValue = null != defaultValue ? "" + getToStringValue(defaultValue) : "";
            value = null != value ? "" + getToStringValue(value) : defaultValue;
            isHydrating || value === element.value || (element.value = value);
            element.defaultValue = value;
        }
        checked = null != checked ? checked : defaultChecked;
        checked = "function" !== typeof checked && "symbol" !== typeof checked && !!checked;
        element.checked = isHydrating ? element.checked : !!checked;
        element.defaultChecked = !!checked;
        null != name && "function" !== typeof name && "symbol" !== typeof name && "boolean" !== typeof name && (checkAttributeStringCoercion(name, "name"), element.name = name);
    }
    function setDefaultValue(node, type, value) {
        "number" === type && getActiveElement(node.ownerDocument) === node || node.defaultValue === "" + value || (node.defaultValue = "" + value);
    }
    function validateOptionProps(element, props) {
        null == props.value && ("object" === typeof props.children && null !== props.children ? React.Children.forEach(props.children, function(child) {
            null == child || "string" === typeof child || "number" === typeof child || "bigint" === typeof child || didWarnInvalidChild || (didWarnInvalidChild = !0, console.error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>."));
        }) : null == props.dangerouslySetInnerHTML || didWarnInvalidInnerHTML || (didWarnInvalidInnerHTML = !0, console.error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.")));
        null == props.selected || didWarnSelectedSetOnOption || (console.error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), didWarnSelectedSetOnOption = !0);
    }
    function getDeclarationErrorAddendum() {
        var ownerName = getCurrentFiberOwnerNameInDevOrNull();
        return ownerName ? "\n\nCheck the render method of `" + ownerName + "`." : "";
    }
    function updateOptions(node, multiple, propValue, setDefaultSelected) {
        node = node.options;
        if (multiple) {
            multiple = {};
            for(var i = 0; i < propValue.length; i++)multiple["$" + propValue[i]] = !0;
            for(propValue = 0; propValue < node.length; propValue++)i = multiple.hasOwnProperty("$" + node[propValue].value), node[propValue].selected !== i && (node[propValue].selected = i), i && setDefaultSelected && (node[propValue].defaultSelected = !0);
        } else {
            propValue = "" + getToStringValue(propValue);
            multiple = null;
            for(i = 0; i < node.length; i++){
                if (node[i].value === propValue) {
                    node[i].selected = !0;
                    setDefaultSelected && (node[i].defaultSelected = !0);
                    return;
                }
                null !== multiple || node[i].disabled || (multiple = node[i]);
            }
            null !== multiple && (multiple.selected = !0);
        }
    }
    function validateSelectProps(element, props) {
        for(element = 0; element < valuePropNames.length; element++){
            var propName = valuePropNames[element];
            if (null != props[propName]) {
                var propNameIsArray = isArrayImpl(props[propName]);
                props.multiple && !propNameIsArray ? console.error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum()) : !props.multiple && propNameIsArray && console.error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
            }
        }
        void 0 === props.value || void 0 === props.defaultValue || didWarnValueDefaultValue || (console.error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://react.dev/link/controlled-components"), didWarnValueDefaultValue = !0);
    }
    function validateTextareaProps(element, props) {
        void 0 === props.value || void 0 === props.defaultValue || didWarnValDefaultVal || (console.error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://react.dev/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component"), didWarnValDefaultVal = !0);
        null != props.children && null == props.value && console.error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
    }
    function updateTextarea(element, value, defaultValue) {
        if (null != value && (value = "" + getToStringValue(value), value !== element.value && (element.value = value), null == defaultValue)) {
            element.defaultValue !== value && (element.defaultValue = value);
            return;
        }
        element.defaultValue = null != defaultValue ? "" + getToStringValue(defaultValue) : "";
    }
    function initTextarea(element, value, defaultValue, children) {
        if (null == value) {
            if (null != children) {
                if (null != defaultValue) throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                if (isArrayImpl(children)) {
                    if (1 < children.length) throw Error("<textarea> can only have at most one child.");
                    children = children[0];
                }
                defaultValue = children;
            }
            null == defaultValue && (defaultValue = "");
            value = defaultValue;
        }
        defaultValue = getToStringValue(value);
        element.defaultValue = defaultValue;
        children = element.textContent;
        children === defaultValue && "" !== children && null !== children && (element.value = children);
    }
    function findNotableNode(node, indent) {
        return void 0 === node.serverProps && 0 === node.serverTail.length && 1 === node.children.length && 3 < node.distanceFromLeaf && node.distanceFromLeaf > 15 - indent ? findNotableNode(node.children[0], indent) : node;
    }
    function indentation(indent) {
        return "  " + "  ".repeat(indent);
    }
    function added(indent) {
        return "+ " + "  ".repeat(indent);
    }
    function removed(indent) {
        return "- " + "  ".repeat(indent);
    }
    function describeFiberType(fiber) {
        switch(fiber.tag){
            case 26:
            case 27:
            case 5:
                return fiber.type;
            case 16:
                return "Lazy";
            case 13:
                return "Suspense";
            case 19:
                return "SuspenseList";
            case 0:
            case 15:
                return fiber = fiber.type, fiber.displayName || fiber.name || null;
            case 11:
                return fiber = fiber.type.render, fiber.displayName || fiber.name || null;
            case 1:
                return fiber = fiber.type, fiber.displayName || fiber.name || null;
            default:
                return null;
        }
    }
    function describeTextNode(content, maxLength) {
        return needsEscaping.test(content) ? (content = JSON.stringify(content), content.length > maxLength - 2 ? 8 > maxLength ? '{"..."}' : "{" + content.slice(0, maxLength - 7) + '..."}' : "{" + content + "}") : content.length > maxLength ? 5 > maxLength ? '{"..."}' : content.slice(0, maxLength - 3) + "..." : content;
    }
    function describeTextDiff(clientText, serverProps, indent) {
        var maxLength = 120 - 2 * indent;
        if (null === serverProps) return added(indent) + describeTextNode(clientText, maxLength) + "\n";
        if ("string" === typeof serverProps) {
            for(var firstDiff = 0; firstDiff < serverProps.length && firstDiff < clientText.length && serverProps.charCodeAt(firstDiff) === clientText.charCodeAt(firstDiff); firstDiff++);
            firstDiff > maxLength - 8 && 10 < firstDiff && (clientText = "..." + clientText.slice(firstDiff - 8), serverProps = "..." + serverProps.slice(firstDiff - 8));
            return added(indent) + describeTextNode(clientText, maxLength) + "\n" + removed(indent) + describeTextNode(serverProps, maxLength) + "\n";
        }
        return indentation(indent) + describeTextNode(clientText, maxLength) + "\n";
    }
    function objectName(object) {
        return Object.prototype.toString.call(object).replace(/^\[object (.*)\]$/, function(m, p0) {
            return p0;
        });
    }
    function describeValue(value, maxLength) {
        switch(typeof value){
            case "string":
                return value = JSON.stringify(value), value.length > maxLength ? 5 > maxLength ? '"..."' : value.slice(0, maxLength - 4) + '..."' : value;
            case "object":
                if (null === value) return "null";
                if (isArrayImpl(value)) return "[...]";
                if (value.$$typeof === REACT_ELEMENT_TYPE) return (maxLength = getComponentNameFromType(value.type)) ? "<" + maxLength + ">" : "<...>";
                var name = objectName(value);
                if ("Object" === name) {
                    name = "";
                    maxLength -= 2;
                    for(var propName in value)if (value.hasOwnProperty(propName)) {
                        var jsonPropName = JSON.stringify(propName);
                        jsonPropName !== '"' + propName + '"' && (propName = jsonPropName);
                        maxLength -= propName.length - 2;
                        jsonPropName = describeValue(value[propName], 15 > maxLength ? maxLength : 15);
                        maxLength -= jsonPropName.length;
                        if (0 > maxLength) {
                            name += "" === name ? "..." : ", ...";
                            break;
                        }
                        name += ("" === name ? "" : ",") + propName + ":" + jsonPropName;
                    }
                    return "{" + name + "}";
                }
                return name;
            case "function":
                return (maxLength = value.displayName || value.name) ? "function " + maxLength : "function";
            default:
                return String(value);
        }
    }
    function describePropValue(value, maxLength) {
        return "string" !== typeof value || needsEscaping.test(value) ? "{" + describeValue(value, maxLength - 2) + "}" : value.length > maxLength - 2 ? 5 > maxLength ? '"..."' : '"' + value.slice(0, maxLength - 5) + '..."' : '"' + value + '"';
    }
    function describeExpandedElement(type, props, rowPrefix) {
        var remainingRowLength = 120 - rowPrefix.length - type.length, properties = [], propName;
        for(propName in props)if (props.hasOwnProperty(propName) && "children" !== propName) {
            var propValue = describePropValue(props[propName], 120 - rowPrefix.length - propName.length - 1);
            remainingRowLength -= propName.length + propValue.length + 2;
            properties.push(propName + "=" + propValue);
        }
        return 0 === properties.length ? rowPrefix + "<" + type + ">\n" : 0 < remainingRowLength ? rowPrefix + "<" + type + " " + properties.join(" ") + ">\n" : rowPrefix + "<" + type + "\n" + rowPrefix + "  " + properties.join("\n" + rowPrefix + "  ") + "\n" + rowPrefix + ">\n";
    }
    function describePropertiesDiff(clientObject, serverObject, indent) {
        var properties = "", remainingServerProperties = assign({}, serverObject), propName;
        for(propName in clientObject)if (clientObject.hasOwnProperty(propName)) {
            delete remainingServerProperties[propName];
            var maxLength = 120 - 2 * indent - propName.length - 2, clientPropValue = describeValue(clientObject[propName], maxLength);
            serverObject.hasOwnProperty(propName) ? (maxLength = describeValue(serverObject[propName], maxLength), properties += added(indent) + propName + ": " + clientPropValue + "\n", properties += removed(indent) + propName + ": " + maxLength + "\n") : properties += added(indent) + propName + ": " + clientPropValue + "\n";
        }
        for(var _propName in remainingServerProperties)remainingServerProperties.hasOwnProperty(_propName) && (clientObject = describeValue(remainingServerProperties[_propName], 120 - 2 * indent - _propName.length - 2), properties += removed(indent) + _propName + ": " + clientObject + "\n");
        return properties;
    }
    function describeElementDiff(type, clientProps, serverProps, indent) {
        var content = "", serverPropNames = new Map();
        for(propName$jscomp$0 in serverProps)serverProps.hasOwnProperty(propName$jscomp$0) && serverPropNames.set(propName$jscomp$0.toLowerCase(), propName$jscomp$0);
        if (1 === serverPropNames.size && serverPropNames.has("children")) content += describeExpandedElement(type, clientProps, indentation(indent));
        else {
            for(var _propName2 in clientProps)if (clientProps.hasOwnProperty(_propName2) && "children" !== _propName2) {
                var maxLength$jscomp$0 = 120 - 2 * (indent + 1) - _propName2.length - 1, serverPropName = serverPropNames.get(_propName2.toLowerCase());
                if (void 0 !== serverPropName) {
                    serverPropNames.delete(_propName2.toLowerCase());
                    var propName$jscomp$0 = clientProps[_propName2];
                    serverPropName = serverProps[serverPropName];
                    var clientPropValue = describePropValue(propName$jscomp$0, maxLength$jscomp$0);
                    maxLength$jscomp$0 = describePropValue(serverPropName, maxLength$jscomp$0);
                    "object" === typeof propName$jscomp$0 && null !== propName$jscomp$0 && "object" === typeof serverPropName && null !== serverPropName && "Object" === objectName(propName$jscomp$0) && "Object" === objectName(serverPropName) && (2 < Object.keys(propName$jscomp$0).length || 2 < Object.keys(serverPropName).length || -1 < clientPropValue.indexOf("...") || -1 < maxLength$jscomp$0.indexOf("...")) ? content += indentation(indent + 1) + _propName2 + "={{\n" + describePropertiesDiff(propName$jscomp$0, serverPropName, indent + 2) + indentation(indent + 1) + "}}\n" : (content += added(indent + 1) + _propName2 + "=" + clientPropValue + "\n", content += removed(indent + 1) + _propName2 + "=" + maxLength$jscomp$0 + "\n");
                } else content += indentation(indent + 1) + _propName2 + "=" + describePropValue(clientProps[_propName2], maxLength$jscomp$0) + "\n";
            }
            serverPropNames.forEach(function(propName) {
                if ("children" !== propName) {
                    var maxLength = 120 - 2 * (indent + 1) - propName.length - 1;
                    content += removed(indent + 1) + propName + "=" + describePropValue(serverProps[propName], maxLength) + "\n";
                }
            });
            content = "" === content ? indentation(indent) + "<" + type + ">\n" : indentation(indent) + "<" + type + "\n" + content + indentation(indent) + ">\n";
        }
        type = serverProps.children;
        clientProps = clientProps.children;
        if ("string" === typeof type || "number" === typeof type || "bigint" === typeof type) {
            serverPropNames = "";
            if ("string" === typeof clientProps || "number" === typeof clientProps || "bigint" === typeof clientProps) serverPropNames = "" + clientProps;
            content += describeTextDiff(serverPropNames, "" + type, indent + 1);
        } else if ("string" === typeof clientProps || "number" === typeof clientProps || "bigint" === typeof clientProps) content = null == type ? content + describeTextDiff("" + clientProps, null, indent + 1) : content + describeTextDiff("" + clientProps, void 0, indent + 1);
        return content;
    }
    function describeSiblingFiber(fiber, indent) {
        var type = describeFiberType(fiber);
        if (null === type) {
            type = "";
            for(fiber = fiber.child; fiber;)type += describeSiblingFiber(fiber, indent), fiber = fiber.sibling;
            return type;
        }
        return indentation(indent) + "<" + type + ">\n";
    }
    function describeNode(node, indent) {
        var skipToNode = findNotableNode(node, indent);
        if (skipToNode !== node && (1 !== node.children.length || node.children[0] !== skipToNode)) return indentation(indent) + "...\n" + describeNode(skipToNode, indent + 1);
        skipToNode = "";
        var debugInfo = node.fiber._debugInfo;
        if (debugInfo) for(var i = 0; i < debugInfo.length; i++){
            var serverComponentName = debugInfo[i].name;
            "string" === typeof serverComponentName && (skipToNode += indentation(indent) + "<" + serverComponentName + ">\n", indent++);
        }
        debugInfo = "";
        i = node.fiber.pendingProps;
        if (6 === node.fiber.tag) debugInfo = describeTextDiff(i, node.serverProps, indent), indent++;
        else if (serverComponentName = describeFiberType(node.fiber), null !== serverComponentName) {
            if (void 0 === node.serverProps) {
                debugInfo = indent;
                var maxLength = 120 - 2 * debugInfo - serverComponentName.length - 2, content = "";
                for(propName in i)if (i.hasOwnProperty(propName) && "children" !== propName) {
                    var propValue = describePropValue(i[propName], 15);
                    maxLength -= propName.length + propValue.length + 2;
                    if (0 > maxLength) {
                        content += " ...";
                        break;
                    }
                    content += " " + propName + "=" + propValue;
                }
                debugInfo = indentation(debugInfo) + "<" + serverComponentName + content + ">\n";
                indent++;
            } else null === node.serverProps ? (debugInfo = describeExpandedElement(serverComponentName, i, added(indent)), indent++) : "string" === typeof node.serverProps ? console.error("Should not have matched a non HostText fiber to a Text node. This is a bug in React.") : (debugInfo = describeElementDiff(serverComponentName, i, node.serverProps, indent), indent++);
        }
        var propName = "";
        i = node.fiber.child;
        for(serverComponentName = 0; i && serverComponentName < node.children.length;)maxLength = node.children[serverComponentName], maxLength.fiber === i ? (propName += describeNode(maxLength, indent), serverComponentName++) : propName += describeSiblingFiber(i, indent), i = i.sibling;
        i && 0 < node.children.length && (propName += indentation(indent) + "...\n");
        i = node.serverTail;
        null === node.serverProps && indent--;
        for(node = 0; node < i.length; node++)serverComponentName = i[node], propName = "string" === typeof serverComponentName ? propName + (removed(indent) + describeTextNode(serverComponentName, 120 - 2 * indent) + "\n") : propName + describeExpandedElement(serverComponentName.type, serverComponentName.props, removed(indent));
        return skipToNode + debugInfo + propName;
    }
    function describeDiff(rootNode) {
        try {
            return "\n\n" + describeNode(rootNode, 0);
        } catch (x) {
            return "";
        }
    }
    function describeAncestors(ancestor, child, props) {
        for(var fiber = child, node = null, distanceFromLeaf = 0; fiber;)fiber === ancestor && (distanceFromLeaf = 0), node = {
            fiber: fiber,
            children: null !== node ? [
                node
            ] : [],
            serverProps: fiber === child ? props : fiber === ancestor ? null : void 0,
            serverTail: [],
            distanceFromLeaf: distanceFromLeaf
        }, distanceFromLeaf++, fiber = fiber.return;
        return null !== node ? describeDiff(node).replaceAll(/^[+-]/gm, ">") : "";
    }
    function updatedAncestorInfoDev(oldInfo, tag) {
        var ancestorInfo = assign({}, oldInfo || emptyAncestorInfoDev), info = {
            tag: tag
        };
        -1 !== inScopeTags.indexOf(tag) && (ancestorInfo.aTagInScope = null, ancestorInfo.buttonTagInScope = null, ancestorInfo.nobrTagInScope = null);
        -1 !== buttonScopeTags.indexOf(tag) && (ancestorInfo.pTagInButtonScope = null);
        -1 !== specialTags.indexOf(tag) && "address" !== tag && "div" !== tag && "p" !== tag && (ancestorInfo.listItemTagAutoclosing = null, ancestorInfo.dlItemTagAutoclosing = null);
        ancestorInfo.current = info;
        "form" === tag && (ancestorInfo.formTag = info);
        "a" === tag && (ancestorInfo.aTagInScope = info);
        "button" === tag && (ancestorInfo.buttonTagInScope = info);
        "nobr" === tag && (ancestorInfo.nobrTagInScope = info);
        "p" === tag && (ancestorInfo.pTagInButtonScope = info);
        "li" === tag && (ancestorInfo.listItemTagAutoclosing = info);
        if ("dd" === tag || "dt" === tag) ancestorInfo.dlItemTagAutoclosing = info;
        "#document" === tag || "html" === tag ? ancestorInfo.containerTagInScope = null : ancestorInfo.containerTagInScope || (ancestorInfo.containerTagInScope = info);
        null !== oldInfo || "#document" !== tag && "html" !== tag && "body" !== tag ? !0 === ancestorInfo.implicitRootScope && (ancestorInfo.implicitRootScope = !1) : ancestorInfo.implicitRootScope = !0;
        return ancestorInfo;
    }
    function isTagValidWithParent(tag, parentTag, implicitRootScope) {
        switch(parentTag){
            case "select":
                return "hr" === tag || "option" === tag || "optgroup" === tag || "script" === tag || "template" === tag || "#text" === tag;
            case "optgroup":
                return "option" === tag || "#text" === tag;
            case "option":
                return "#text" === tag;
            case "tr":
                return "th" === tag || "td" === tag || "style" === tag || "script" === tag || "template" === tag;
            case "tbody":
            case "thead":
            case "tfoot":
                return "tr" === tag || "style" === tag || "script" === tag || "template" === tag;
            case "colgroup":
                return "col" === tag || "template" === tag;
            case "table":
                return "caption" === tag || "colgroup" === tag || "tbody" === tag || "tfoot" === tag || "thead" === tag || "style" === tag || "script" === tag || "template" === tag;
            case "head":
                return "base" === tag || "basefont" === tag || "bgsound" === tag || "link" === tag || "meta" === tag || "title" === tag || "noscript" === tag || "noframes" === tag || "style" === tag || "script" === tag || "template" === tag;
            case "html":
                if (implicitRootScope) break;
                return "head" === tag || "body" === tag || "frameset" === tag;
            case "frameset":
                return "frame" === tag;
            case "#document":
                if (!implicitRootScope) return "html" === tag;
        }
        switch(tag){
            case "h1":
            case "h2":
            case "h3":
            case "h4":
            case "h5":
            case "h6":
                return "h1" !== parentTag && "h2" !== parentTag && "h3" !== parentTag && "h4" !== parentTag && "h5" !== parentTag && "h6" !== parentTag;
            case "rp":
            case "rt":
                return -1 === impliedEndTags.indexOf(parentTag);
            case "caption":
            case "col":
            case "colgroup":
            case "frameset":
            case "frame":
            case "tbody":
            case "td":
            case "tfoot":
            case "th":
            case "thead":
            case "tr":
                return null == parentTag;
            case "head":
                return implicitRootScope || null === parentTag;
            case "html":
                return implicitRootScope && "#document" === parentTag || null === parentTag;
            case "body":
                return implicitRootScope && ("#document" === parentTag || "html" === parentTag) || null === parentTag;
        }
        return !0;
    }
    function findInvalidAncestorForTag(tag, ancestorInfo) {
        switch(tag){
            case "address":
            case "article":
            case "aside":
            case "blockquote":
            case "center":
            case "details":
            case "dialog":
            case "dir":
            case "div":
            case "dl":
            case "fieldset":
            case "figcaption":
            case "figure":
            case "footer":
            case "header":
            case "hgroup":
            case "main":
            case "menu":
            case "nav":
            case "ol":
            case "p":
            case "section":
            case "summary":
            case "ul":
            case "pre":
            case "listing":
            case "table":
            case "hr":
            case "xmp":
            case "h1":
            case "h2":
            case "h3":
            case "h4":
            case "h5":
            case "h6":
                return ancestorInfo.pTagInButtonScope;
            case "form":
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
            case "li":
                return ancestorInfo.listItemTagAutoclosing;
            case "dd":
            case "dt":
                return ancestorInfo.dlItemTagAutoclosing;
            case "button":
                return ancestorInfo.buttonTagInScope;
            case "a":
                return ancestorInfo.aTagInScope;
            case "nobr":
                return ancestorInfo.nobrTagInScope;
        }
        return null;
    }
    function findAncestor(parent, tagName) {
        for(; parent;){
            switch(parent.tag){
                case 5:
                case 26:
                case 27:
                    if (parent.type === tagName) return parent;
            }
            parent = parent.return;
        }
        return null;
    }
    function validateDOMNesting(childTag, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfoDev;
        var parentInfo = ancestorInfo.current;
        ancestorInfo = (parentInfo = isTagValidWithParent(childTag, parentInfo && parentInfo.tag, ancestorInfo.implicitRootScope) ? null : parentInfo) ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        ancestorInfo = parentInfo || ancestorInfo;
        if (!ancestorInfo) return !0;
        var ancestorTag = ancestorInfo.tag;
        ancestorInfo = String(!!parentInfo) + "|" + childTag + "|" + ancestorTag;
        if (didWarn[ancestorInfo]) return !1;
        didWarn[ancestorInfo] = !0;
        var ancestor = (ancestorInfo = current) ? findAncestor(ancestorInfo.return, ancestorTag) : null, ancestorDescription = null !== ancestorInfo && null !== ancestor ? describeAncestors(ancestor, ancestorInfo, null) : "", tagDisplayName = "<" + childTag + ">";
        parentInfo ? (parentInfo = "", "table" === ancestorTag && "tr" === childTag && (parentInfo += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser."), console.error("In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s", tagDisplayName, ancestorTag, parentInfo, ancestorDescription)) : console.error("In HTML, %s cannot be a descendant of <%s>.\nThis will cause a hydration error.%s", tagDisplayName, ancestorTag, ancestorDescription);
        ancestorInfo && (childTag = ancestorInfo.return, null === ancestor || null === childTag || ancestor === childTag && childTag._debugOwner === ancestorInfo._debugOwner || runWithFiberInDEV(ancestor, function() {
            console.error("<%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace.", ancestorTag, tagDisplayName);
        }));
        return !1;
    }
    function validateTextNesting(childText, parentTag, implicitRootScope) {
        if (implicitRootScope || isTagValidWithParent("#text", parentTag, !1)) return !0;
        implicitRootScope = "#text|" + parentTag;
        if (didWarn[implicitRootScope]) return !1;
        didWarn[implicitRootScope] = !0;
        var ancestor = (implicitRootScope = current) ? findAncestor(implicitRootScope, parentTag) : null;
        implicitRootScope = null !== implicitRootScope && null !== ancestor ? describeAncestors(ancestor, implicitRootScope, 6 !== implicitRootScope.tag ? {
            children: null
        } : null) : "";
        /\S/.test(childText) ? console.error("In HTML, text nodes cannot be a child of <%s>.\nThis will cause a hydration error.%s", parentTag, implicitRootScope) : console.error("In HTML, whitespace text nodes cannot be a child of <%s>. Make sure you don't have any extra whitespace between tags on each line of your source code.\nThis will cause a hydration error.%s", parentTag, implicitRootScope);
        return !1;
    }
    function setTextContent(node, text) {
        if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && 3 === firstChild.nodeType) {
                firstChild.nodeValue = text;
                return;
            }
        }
        node.textContent = text;
    }
    function camelize(string) {
        return string.replace(hyphenPattern, function(_, character) {
            return character.toUpperCase();
        });
    }
    function setValueForStyle(style, styleName, value) {
        var isCustomProperty = 0 === styleName.indexOf("--");
        isCustomProperty || (-1 < styleName.indexOf("-") ? warnedStyleNames.hasOwnProperty(styleName) && warnedStyleNames[styleName] || (warnedStyleNames[styleName] = !0, console.error("Unsupported style property %s. Did you mean %s?", styleName, camelize(styleName.replace(msPattern, "ms-")))) : badVendoredStyleNamePattern.test(styleName) ? warnedStyleNames.hasOwnProperty(styleName) && warnedStyleNames[styleName] || (warnedStyleNames[styleName] = !0, console.error("Unsupported vendor-prefixed style property %s. Did you mean %s?", styleName, styleName.charAt(0).toUpperCase() + styleName.slice(1))) : !badStyleValueWithSemicolonPattern.test(value) || warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value] || (warnedStyleValues[value] = !0, console.error('Style property values shouldn\'t contain a semicolon. Try "%s: %s" instead.', styleName, value.replace(badStyleValueWithSemicolonPattern, ""))), "number" === typeof value && (isNaN(value) ? warnedForNaNValue || (warnedForNaNValue = !0, console.error("`NaN` is an invalid value for the `%s` css style property.", styleName)) : isFinite(value) || warnedForInfinityValue || (warnedForInfinityValue = !0, console.error("`Infinity` is an invalid value for the `%s` css style property.", styleName))));
        null == value || "boolean" === typeof value || "" === value ? isCustomProperty ? style.setProperty(styleName, "") : "float" === styleName ? style.cssFloat = "" : style[styleName] = "" : isCustomProperty ? style.setProperty(styleName, value) : "number" !== typeof value || 0 === value || unitlessNumbers.has(styleName) ? "float" === styleName ? style.cssFloat = value : (checkCSSPropertyStringCoercion(value, styleName), style[styleName] = ("" + value).trim()) : style[styleName] = value + "px";
    }
    function setValueForStyles(node, styles, prevStyles) {
        if (null != styles && "object" !== typeof styles) throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
        styles && Object.freeze(styles);
        node = node.style;
        if (null != prevStyles) {
            if (styles) {
                var expandedUpdates = {};
                if (prevStyles) {
                    for(var key in prevStyles)if (prevStyles.hasOwnProperty(key) && !styles.hasOwnProperty(key)) for(var longhands = shorthandToLonghand[key] || [
                        key
                    ], i = 0; i < longhands.length; i++)expandedUpdates[longhands[i]] = key;
                }
                for(var _key in styles)if (styles.hasOwnProperty(_key) && (!prevStyles || prevStyles[_key] !== styles[_key])) for(key = shorthandToLonghand[_key] || [
                    _key
                ], longhands = 0; longhands < key.length; longhands++)expandedUpdates[key[longhands]] = _key;
                _key = {};
                for(var key$jscomp$0 in styles)for(key = shorthandToLonghand[key$jscomp$0] || [
                    key$jscomp$0
                ], longhands = 0; longhands < key.length; longhands++)_key[key[longhands]] = key$jscomp$0;
                key$jscomp$0 = {};
                for(var _key2 in expandedUpdates)if (key = expandedUpdates[_key2], (longhands = _key[_key2]) && key !== longhands && (i = key + "," + longhands, !key$jscomp$0[i])) {
                    key$jscomp$0[i] = !0;
                    i = console;
                    var value = styles[key];
                    i.error.call(i, "%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", null == value || "boolean" === typeof value || "" === value ? "Removing" : "Updating", key, longhands);
                }
            }
            for(var styleName in prevStyles)!prevStyles.hasOwnProperty(styleName) || null != styles && styles.hasOwnProperty(styleName) || (0 === styleName.indexOf("--") ? node.setProperty(styleName, "") : "float" === styleName ? node.cssFloat = "" : node[styleName] = "");
            for(var _styleName in styles)_key2 = styles[_styleName], styles.hasOwnProperty(_styleName) && prevStyles[_styleName] !== _key2 && setValueForStyle(node, _styleName, _key2);
        } else for(expandedUpdates in styles)styles.hasOwnProperty(expandedUpdates) && setValueForStyle(node, expandedUpdates, styles[expandedUpdates]);
    }
    function isCustomElement(tagName) {
        if (-1 === tagName.indexOf("-")) return !1;
        switch(tagName){
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
                return !1;
            default:
                return !0;
        }
    }
    function getAttributeAlias(name) {
        return aliases.get(name) || name;
    }
    function validateProperty$1(tagName, name) {
        if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) return !0;
        if (rARIACamel$1.test(name)) {
            tagName = "aria-" + name.slice(4).toLowerCase();
            tagName = ariaProperties.hasOwnProperty(tagName) ? tagName : null;
            if (null == tagName) return console.error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name), warnedProperties$1[name] = !0;
            if (name !== tagName) return console.error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, tagName), warnedProperties$1[name] = !0;
        }
        if (rARIA$1.test(name)) {
            tagName = name.toLowerCase();
            tagName = ariaProperties.hasOwnProperty(tagName) ? tagName : null;
            if (null == tagName) return warnedProperties$1[name] = !0, !1;
            name !== tagName && (console.error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, tagName), warnedProperties$1[name] = !0);
        }
        return !0;
    }
    function validateProperties$2(type, props) {
        var invalidProps = [], key;
        for(key in props)validateProperty$1(type, key) || invalidProps.push(key);
        props = invalidProps.map(function(prop) {
            return "`" + prop + "`";
        }).join(", ");
        1 === invalidProps.length ? console.error("Invalid aria prop %s on <%s> tag. For details, see https://react.dev/link/invalid-aria-props", props, type) : 1 < invalidProps.length && console.error("Invalid aria props %s on <%s> tag. For details, see https://react.dev/link/invalid-aria-props", props, type);
    }
    function validateProperty(tagName, name, value, eventRegistry) {
        if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) return !0;
        var lowerCasedName = name.toLowerCase();
        if ("onfocusin" === lowerCasedName || "onfocusout" === lowerCasedName) return console.error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), warnedProperties[name] = !0;
        if ("function" === typeof value && ("form" === tagName && "action" === name || "input" === tagName && "formAction" === name || "button" === tagName && "formAction" === name)) return !0;
        if (null != eventRegistry) {
            tagName = eventRegistry.possibleRegistrationNames;
            if (eventRegistry.registrationNameDependencies.hasOwnProperty(name)) return !0;
            eventRegistry = tagName.hasOwnProperty(lowerCasedName) ? tagName[lowerCasedName] : null;
            if (null != eventRegistry) return console.error("Invalid event handler property `%s`. Did you mean `%s`?", name, eventRegistry), warnedProperties[name] = !0;
            if (EVENT_NAME_REGEX.test(name)) return console.error("Unknown event handler property `%s`. It will be ignored.", name), warnedProperties[name] = !0;
        } else if (EVENT_NAME_REGEX.test(name)) return INVALID_EVENT_NAME_REGEX.test(name) && console.error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name), warnedProperties[name] = !0;
        if (rARIA.test(name) || rARIACamel.test(name)) return !0;
        if ("innerhtml" === lowerCasedName) return console.error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), warnedProperties[name] = !0;
        if ("aria" === lowerCasedName) return console.error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), warnedProperties[name] = !0;
        if ("is" === lowerCasedName && null !== value && void 0 !== value && "string" !== typeof value) return console.error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value), warnedProperties[name] = !0;
        if ("number" === typeof value && isNaN(value)) return console.error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name), warnedProperties[name] = !0;
        if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            if (lowerCasedName = possibleStandardNames[lowerCasedName], lowerCasedName !== name) return console.error("Invalid DOM property `%s`. Did you mean `%s`?", name, lowerCasedName), warnedProperties[name] = !0;
        } else if (name !== lowerCasedName) return console.error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName), warnedProperties[name] = !0;
        switch(name){
            case "dangerouslySetInnerHTML":
            case "children":
            case "style":
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "ref":
                return !0;
            case "innerText":
            case "textContent":
                return !0;
        }
        switch(typeof value){
            case "boolean":
                switch(name){
                    case "autoFocus":
                    case "checked":
                    case "multiple":
                    case "muted":
                    case "selected":
                    case "contentEditable":
                    case "spellCheck":
                    case "draggable":
                    case "value":
                    case "autoReverse":
                    case "externalResourcesRequired":
                    case "focusable":
                    case "preserveAlpha":
                    case "allowFullScreen":
                    case "async":
                    case "autoPlay":
                    case "controls":
                    case "default":
                    case "defer":
                    case "disabled":
                    case "disablePictureInPicture":
                    case "disableRemotePlayback":
                    case "formNoValidate":
                    case "hidden":
                    case "loop":
                    case "noModule":
                    case "noValidate":
                    case "open":
                    case "playsInline":
                    case "readOnly":
                    case "required":
                    case "reversed":
                    case "scoped":
                    case "seamless":
                    case "itemScope":
                    case "capture":
                    case "download":
                    case "inert":
                        return !0;
                    default:
                        lowerCasedName = name.toLowerCase().slice(0, 5);
                        if ("data-" === lowerCasedName || "aria-" === lowerCasedName) return !0;
                        value ? console.error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name) : console.error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
                        return warnedProperties[name] = !0;
                }
            case "function":
            case "symbol":
                return warnedProperties[name] = !0, !1;
            case "string":
                if ("false" === value || "true" === value) {
                    switch(name){
                        case "checked":
                        case "selected":
                        case "multiple":
                        case "muted":
                        case "allowFullScreen":
                        case "async":
                        case "autoPlay":
                        case "controls":
                        case "default":
                        case "defer":
                        case "disabled":
                        case "disablePictureInPicture":
                        case "disableRemotePlayback":
                        case "formNoValidate":
                        case "hidden":
                        case "loop":
                        case "noModule":
                        case "noValidate":
                        case "open":
                        case "playsInline":
                        case "readOnly":
                        case "required":
                        case "reversed":
                        case "scoped":
                        case "seamless":
                        case "itemScope":
                        case "inert":
                            break;
                        default:
                            return !0;
                    }
                    console.error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, "false" === value ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
                    warnedProperties[name] = !0;
                }
        }
        return !0;
    }
    function warnUnknownProperties(type, props, eventRegistry) {
        var unknownProps = [], key;
        for(key in props)validateProperty(type, key, props[key], eventRegistry) || unknownProps.push(key);
        props = unknownProps.map(function(prop) {
            return "`" + prop + "`";
        }).join(", ");
        1 === unknownProps.length ? console.error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://react.dev/link/attribute-behavior ", props, type) : 1 < unknownProps.length && console.error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://react.dev/link/attribute-behavior ", props, type);
    }
    function sanitizeURL(url) {
        return isJavaScriptProtocol.test("" + url) ? "javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')" : url;
    }
    function getEventTarget(nativeEvent) {
        nativeEvent = nativeEvent.target || nativeEvent.srcElement || window;
        nativeEvent.correspondingUseElement && (nativeEvent = nativeEvent.correspondingUseElement);
        return 3 === nativeEvent.nodeType ? nativeEvent.parentNode : nativeEvent;
    }
    function restoreStateOfTarget(target) {
        var internalInstance = getInstanceFromNode(target);
        if (internalInstance && (target = internalInstance.stateNode)) {
            var props = target[internalPropsKey] || null;
            a: switch(target = internalInstance.stateNode, internalInstance.type){
                case "input":
                    updateInput(target, props.value, props.defaultValue, props.defaultValue, props.checked, props.defaultChecked, props.type, props.name);
                    internalInstance = props.name;
                    if ("radio" === props.type && null != internalInstance) {
                        for(props = target; props.parentNode;)props = props.parentNode;
                        checkAttributeStringCoercion(internalInstance, "name");
                        props = props.querySelectorAll('input[name="' + escapeSelectorAttributeValueInsideDoubleQuotes("" + internalInstance) + '"][type="radio"]');
                        for(internalInstance = 0; internalInstance < props.length; internalInstance++){
                            var otherNode = props[internalInstance];
                            if (otherNode !== target && otherNode.form === target.form) {
                                var otherProps = otherNode[internalPropsKey] || null;
                                if (!otherProps) throw Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                                updateInput(otherNode, otherProps.value, otherProps.defaultValue, otherProps.defaultValue, otherProps.checked, otherProps.defaultChecked, otherProps.type, otherProps.name);
                            }
                        }
                        for(internalInstance = 0; internalInstance < props.length; internalInstance++)otherNode = props[internalInstance], otherNode.form === target.form && updateValueIfChanged(otherNode);
                    }
                    break a;
                case "textarea":
                    updateTextarea(target, props.value, props.defaultValue);
                    break a;
                case "select":
                    internalInstance = props.value, null != internalInstance && updateOptions(target, !!props.multiple, internalInstance, !1);
            }
        }
    }
    function batchedUpdates$1(fn, a, b) {
        if (isInsideEventHandler) return fn(a, b);
        isInsideEventHandler = !0;
        try {
            var JSCompiler_inline_result = fn(a);
            return JSCompiler_inline_result;
        } finally{
            if (isInsideEventHandler = !1, null !== restoreTarget || null !== restoreQueue) {
                if (flushSyncWork$1(), restoreTarget && (a = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(a), fn)) for(a = 0; a < fn.length; a++)restoreStateOfTarget(fn[a]);
            }
        }
    }
    function getListener(inst, registrationName) {
        var stateNode = inst.stateNode;
        if (null === stateNode) return null;
        var props = stateNode[internalPropsKey] || null;
        if (null === props) return null;
        stateNode = props[registrationName];
        a: switch(registrationName){
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
                (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
                inst = !props;
                break a;
            default:
                inst = !1;
        }
        if (inst) return null;
        if (stateNode && "function" !== typeof stateNode) throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof stateNode + "` type.");
        return stateNode;
    }
    function getData() {
        if (fallbackText) return fallbackText;
        var start, startValue = startText, startLength = startValue.length, end, endValue = "value" in root ? root.value : root.textContent, endLength = endValue.length;
        for(start = 0; start < startLength && startValue[start] === endValue[start]; start++);
        var minEnd = startLength - start;
        for(end = 1; end <= minEnd && startValue[startLength - end] === endValue[endLength - end]; end++);
        return fallbackText = endValue.slice(start, 1 < end ? 1 - end : void 0);
    }
    function getEventCharCode(nativeEvent) {
        var keyCode = nativeEvent.keyCode;
        "charCode" in nativeEvent ? (nativeEvent = nativeEvent.charCode, 0 === nativeEvent && 13 === keyCode && (nativeEvent = 13)) : nativeEvent = keyCode;
        10 === nativeEvent && (nativeEvent = 13);
        return 32 <= nativeEvent || 13 === nativeEvent ? nativeEvent : 0;
    }
    function functionThatReturnsTrue() {
        return !0;
    }
    function functionThatReturnsFalse() {
        return !1;
    }
    function createSyntheticEvent(Interface) {
        function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this._reactName = reactName;
            this._targetInst = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for(var propName in Interface)Interface.hasOwnProperty(propName) && (reactName = Interface[propName], this[propName] = reactName ? reactName(nativeEvent) : nativeEvent[propName]);
            this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : !1 === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
        }
        assign(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
                this.defaultPrevented = !0;
                var event = this.nativeEvent;
                event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = !1), this.isDefaultPrevented = functionThatReturnsTrue);
            },
            stopPropagation: function() {
                var event = this.nativeEvent;
                event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = !0), this.isPropagationStopped = functionThatReturnsTrue);
            },
            persist: function() {},
            isPersistent: functionThatReturnsTrue
        });
        return SyntheticBaseEvent;
    }
    function modifierStateGetter(keyArg) {
        var nativeEvent = this.nativeEvent;
        return nativeEvent.getModifierState ? nativeEvent.getModifierState(keyArg) : (keyArg = modifierKeyToProp[keyArg]) ? !!nativeEvent[keyArg] : !1;
    }
    function getEventModifierState() {
        return modifierStateGetter;
    }
    function isFallbackCompositionEnd(domEventName, nativeEvent) {
        switch(domEventName){
            case "keyup":
                return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);
            case "keydown":
                return nativeEvent.keyCode !== START_KEYCODE;
            case "keypress":
            case "mousedown":
            case "focusout":
                return !0;
            default:
                return !1;
        }
    }
    function getDataFromCustomEvent(nativeEvent) {
        nativeEvent = nativeEvent.detail;
        return "object" === typeof nativeEvent && "data" in nativeEvent ? nativeEvent.data : null;
    }
    function getNativeBeforeInputChars(domEventName, nativeEvent) {
        switch(domEventName){
            case "compositionend":
                return getDataFromCustomEvent(nativeEvent);
            case "keypress":
                if (nativeEvent.which !== SPACEBAR_CODE) return null;
                hasSpaceKeypress = !0;
                return SPACEBAR_CHAR;
            case "textInput":
                return domEventName = nativeEvent.data, domEventName === SPACEBAR_CHAR && hasSpaceKeypress ? null : domEventName;
            default:
                return null;
        }
    }
    function getFallbackBeforeInputChars(domEventName, nativeEvent) {
        if (isComposing) return "compositionend" === domEventName || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent) ? (domEventName = getData(), fallbackText = startText = root = null, isComposing = !1, domEventName) : null;
        switch(domEventName){
            case "paste":
                return null;
            case "keypress":
                if (!(nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) || nativeEvent.ctrlKey && nativeEvent.altKey) {
                    if (nativeEvent.char && 1 < nativeEvent.char.length) return nativeEvent.char;
                    if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);
                }
                return null;
            case "compositionend":
                return useFallbackCompositionData && "ko" !== nativeEvent.locale ? null : nativeEvent.data;
            default:
                return null;
        }
    }
    function isTextInputElement(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return "input" === nodeName ? !!supportedInputTypes[elem.type] : "textarea" === nodeName ? !0 : !1;
    }
    function isEventSupported(eventNameSuffix) {
        if (!canUseDOM) return !1;
        eventNameSuffix = "on" + eventNameSuffix;
        var isSupported = eventNameSuffix in document;
        isSupported || (isSupported = document.createElement("div"), isSupported.setAttribute(eventNameSuffix, "return;"), isSupported = "function" === typeof isSupported[eventNameSuffix]);
        return isSupported;
    }
    function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
        restoreTarget ? restoreQueue ? restoreQueue.push(target) : restoreQueue = [
            target
        ] : restoreTarget = target;
        inst = accumulateTwoPhaseListeners(inst, "onChange");
        0 < inst.length && (nativeEvent = new SyntheticEvent("onChange", "change", null, nativeEvent, target), dispatchQueue.push({
            event: nativeEvent,
            listeners: inst
        }));
    }
    function runEventInBatch(dispatchQueue) {
        processDispatchQueue(dispatchQueue, 0);
    }
    function getInstIfValueChanged(targetInst) {
        var targetNode = getNodeFromInstance(targetInst);
        if (updateValueIfChanged(targetNode)) return targetInst;
    }
    function getTargetInstForChangeEvent(domEventName, targetInst) {
        if ("change" === domEventName) return targetInst;
    }
    function stopWatchingForValueChange() {
        activeElement$1 && (activeElement$1.detachEvent("onpropertychange", handlePropertyChange), activeElementInst$1 = activeElement$1 = null);
    }
    function handlePropertyChange(nativeEvent) {
        if ("value" === nativeEvent.propertyName && getInstIfValueChanged(activeElementInst$1)) {
            var dispatchQueue = [];
            createAndAccumulateChangeEvent(dispatchQueue, activeElementInst$1, nativeEvent, getEventTarget(nativeEvent));
            batchedUpdates$1(runEventInBatch, dispatchQueue);
        }
    }
    function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
        "focusin" === domEventName ? (stopWatchingForValueChange(), activeElement$1 = target, activeElementInst$1 = targetInst, activeElement$1.attachEvent("onpropertychange", handlePropertyChange)) : "focusout" === domEventName && stopWatchingForValueChange();
    }
    function getTargetInstForInputEventPolyfill(domEventName) {
        if ("selectionchange" === domEventName || "keyup" === domEventName || "keydown" === domEventName) return getInstIfValueChanged(activeElementInst$1);
    }
    function getTargetInstForClickEvent(domEventName, targetInst) {
        if ("click" === domEventName) return getInstIfValueChanged(targetInst);
    }
    function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
        if ("input" === domEventName || "change" === domEventName) return getInstIfValueChanged(targetInst);
    }
    function is(x, y) {
        return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
    }
    function shallowEqual(objA, objB) {
        if (objectIs(objA, objB)) return !0;
        if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return !1;
        var keysA = Object.keys(objA), keysB = Object.keys(objB);
        if (keysA.length !== keysB.length) return !1;
        for(keysB = 0; keysB < keysA.length; keysB++){
            var currentKey = keysA[keysB];
            if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) return !1;
        }
        return !0;
    }
    function getLeafNode(node) {
        for(; node && node.firstChild;)node = node.firstChild;
        return node;
    }
    function getNodeForCharacterOffset(root, offset) {
        var node = getLeafNode(root);
        root = 0;
        for(var nodeEnd; node;){
            if (3 === node.nodeType) {
                nodeEnd = root + node.textContent.length;
                if (root <= offset && nodeEnd >= offset) return {
                    node: node,
                    offset: offset - root
                };
                root = nodeEnd;
            }
            a: {
                for(; node;){
                    if (node.nextSibling) {
                        node = node.nextSibling;
                        break a;
                    }
                    node = node.parentNode;
                }
                node = void 0;
            }
            node = getLeafNode(node);
        }
    }
    function containsNode(outerNode, innerNode) {
        return outerNode && innerNode ? outerNode === innerNode ? !0 : outerNode && 3 === outerNode.nodeType ? !1 : innerNode && 3 === innerNode.nodeType ? containsNode(outerNode, innerNode.parentNode) : "contains" in outerNode ? outerNode.contains(innerNode) : outerNode.compareDocumentPosition ? !!(outerNode.compareDocumentPosition(innerNode) & 16) : !1 : !1;
    }
    function getActiveElementDeep(containerInfo) {
        containerInfo = null != containerInfo && null != containerInfo.ownerDocument && null != containerInfo.ownerDocument.defaultView ? containerInfo.ownerDocument.defaultView : window;
        for(var element = getActiveElement(containerInfo.document); element instanceof containerInfo.HTMLIFrameElement;){
            try {
                var JSCompiler_inline_result = "string" === typeof element.contentWindow.location.href;
            } catch (err) {
                JSCompiler_inline_result = !1;
            }
            if (JSCompiler_inline_result) containerInfo = element.contentWindow;
            else break;
            element = getActiveElement(containerInfo.document);
        }
        return element;
    }
    function hasSelectionCapabilities(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName && ("input" === nodeName && ("text" === elem.type || "search" === elem.type || "tel" === elem.type || "url" === elem.type || "password" === elem.type) || "textarea" === nodeName || "true" === elem.contentEditable);
    }
    function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
        var doc = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget.document : 9 === nativeEventTarget.nodeType ? nativeEventTarget : nativeEventTarget.ownerDocument;
        mouseDown || null == activeElement || activeElement !== getActiveElement(doc) || (doc = activeElement, "selectionStart" in doc && hasSelectionCapabilities(doc) ? doc = {
            start: doc.selectionStart,
            end: doc.selectionEnd
        } : (doc = (doc.ownerDocument && doc.ownerDocument.defaultView || window).getSelection(), doc = {
            anchorNode: doc.anchorNode,
            anchorOffset: doc.anchorOffset,
            focusNode: doc.focusNode,
            focusOffset: doc.focusOffset
        }), lastSelection && shallowEqual(lastSelection, doc) || (lastSelection = doc, doc = accumulateTwoPhaseListeners(activeElementInst, "onSelect"), 0 < doc.length && (nativeEvent = new SyntheticEvent("onSelect", "select", null, nativeEvent, nativeEventTarget), dispatchQueue.push({
            event: nativeEvent,
            listeners: doc
        }), nativeEvent.target = activeElement)));
    }
    function makePrefixMap(styleProp, eventName) {
        var prefixes = {};
        prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
        prefixes["Webkit" + styleProp] = "webkit" + eventName;
        prefixes["Moz" + styleProp] = "moz" + eventName;
        return prefixes;
    }
    function getVendorPrefixedEventName(eventName) {
        if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];
        if (!vendorPrefixes[eventName]) return eventName;
        var prefixMap = vendorPrefixes[eventName], styleProp;
        for(styleProp in prefixMap)if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) return prefixedEventNames[eventName] = prefixMap[styleProp];
        return eventName;
    }
    function registerSimpleEvent(domEventName, reactName) {
        topLevelEventsToReactNames.set(domEventName, reactName);
        registerTwoPhaseEvent(reactName, [
            domEventName
        ]);
    }
    function createCapturedValueAtFiber(value, source) {
        if ("object" === typeof value && null !== value) {
            var existing = CapturedStacks.get(value);
            if (void 0 !== existing) return existing;
            source = {
                value: value,
                source: source,
                stack: getStackByFiberInDevAndProd(source)
            };
            CapturedStacks.set(value, source);
            return source;
        }
        return {
            value: value,
            source: source,
            stack: getStackByFiberInDevAndProd(source)
        };
    }
    function finishQueueingConcurrentUpdates() {
        for(var endIndex = concurrentQueuesIndex, i = concurrentlyUpdatedLanes = concurrentQueuesIndex = 0; i < endIndex;){
            var fiber = concurrentQueues[i];
            concurrentQueues[i++] = null;
            var queue = concurrentQueues[i];
            concurrentQueues[i++] = null;
            var update = concurrentQueues[i];
            concurrentQueues[i++] = null;
            var lane = concurrentQueues[i];
            concurrentQueues[i++] = null;
            if (null !== queue && null !== update) {
                var pending = queue.pending;
                null === pending ? update.next = update : (update.next = pending.next, pending.next = update);
                queue.pending = update;
            }
            0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);
        }
    }
    function enqueueUpdate$1(fiber, queue, update, lane) {
        concurrentQueues[concurrentQueuesIndex++] = fiber;
        concurrentQueues[concurrentQueuesIndex++] = queue;
        concurrentQueues[concurrentQueuesIndex++] = update;
        concurrentQueues[concurrentQueuesIndex++] = lane;
        concurrentlyUpdatedLanes |= lane;
        fiber.lanes |= lane;
        fiber = fiber.alternate;
        null !== fiber && (fiber.lanes |= lane);
    }
    function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
        enqueueUpdate$1(fiber, queue, update, lane);
        return getRootForUpdatedFiber(fiber);
    }
    function enqueueConcurrentRenderForLane(fiber, lane) {
        enqueueUpdate$1(fiber, null, null, lane);
        return getRootForUpdatedFiber(fiber);
    }
    function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
        sourceFiber.lanes |= lane;
        var alternate = sourceFiber.alternate;
        null !== alternate && (alternate.lanes |= lane);
        for(var isHidden = !1, parent = sourceFiber.return; null !== parent;)parent.childLanes |= lane, alternate = parent.alternate, null !== alternate && (alternate.childLanes |= lane), 22 === parent.tag && (sourceFiber = parent.stateNode, null === sourceFiber || sourceFiber._visibility & OffscreenVisible || (isHidden = !0)), sourceFiber = parent, parent = parent.return;
        return 3 === sourceFiber.tag ? (parent = sourceFiber.stateNode, isHidden && null !== update && (isHidden = 31 - clz32(lane), sourceFiber = parent.hiddenUpdates, alternate = sourceFiber[isHidden], null === alternate ? sourceFiber[isHidden] = [
            update
        ] : alternate.push(update), update.lane = lane | 536870912), parent) : null;
    }
    function getRootForUpdatedFiber(sourceFiber) {
        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) throw nestedPassiveUpdateCount = nestedUpdateCount = 0, rootWithPassiveNestedUpdates = rootWithNestedUpdates = null, Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
        nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT && (nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = null, console.error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render."));
        null === sourceFiber.alternate && 0 !== (sourceFiber.flags & 4098) && warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        for(var node = sourceFiber, parent = node.return; null !== parent;)null === node.alternate && 0 !== (node.flags & 4098) && warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber), node = parent, parent = node.return;
        return 3 === node.tag ? node.stateNode : null;
    }
    function resolveFunctionForHotReloading(type) {
        if (null === resolveFamily) return type;
        var family = resolveFamily(type);
        return void 0 === family ? type : family.current;
    }
    function resolveForwardRefForHotReloading(type) {
        if (null === resolveFamily) return type;
        var family = resolveFamily(type);
        return void 0 === family ? null !== type && void 0 !== type && "function" === typeof type.render && (family = resolveFunctionForHotReloading(type.render), type.render !== family) ? (family = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: family
        }, void 0 !== type.displayName && (family.displayName = type.displayName), family) : type : family.current;
    }
    function isCompatibleFamilyForHotReloading(fiber, element) {
        if (null === resolveFamily) return !1;
        var prevType = fiber.elementType;
        element = element.type;
        var needsCompareFamilies = !1, $$typeofNextType = "object" === typeof element && null !== element ? element.$$typeof : null;
        switch(fiber.tag){
            case 1:
                "function" === typeof element && (needsCompareFamilies = !0);
                break;
            case 0:
                "function" === typeof element ? needsCompareFamilies = !0 : $$typeofNextType === REACT_LAZY_TYPE && (needsCompareFamilies = !0);
                break;
            case 11:
                $$typeofNextType === REACT_FORWARD_REF_TYPE ? needsCompareFamilies = !0 : $$typeofNextType === REACT_LAZY_TYPE && (needsCompareFamilies = !0);
                break;
            case 14:
            case 15:
                $$typeofNextType === REACT_MEMO_TYPE ? needsCompareFamilies = !0 : $$typeofNextType === REACT_LAZY_TYPE && (needsCompareFamilies = !0);
                break;
            default:
                return !1;
        }
        return needsCompareFamilies && (fiber = resolveFamily(prevType), void 0 !== fiber && fiber === resolveFamily(element)) ? !0 : !1;
    }
    function markFailedErrorBoundaryForHotReloading(fiber) {
        null !== resolveFamily && "function" === typeof WeakSet && (null === failedBoundaries && (failedBoundaries = new WeakSet()), failedBoundaries.add(fiber));
    }
    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
        var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type, candidateType = null;
        switch(tag){
            case 0:
            case 15:
            case 1:
                candidateType = type;
                break;
            case 11:
                candidateType = type.render;
        }
        if (null === resolveFamily) throw Error("Expected resolveFamily to be set during hot reload.");
        var needsRender = !1;
        type = !1;
        null !== candidateType && (candidateType = resolveFamily(candidateType), void 0 !== candidateType && (staleFamilies.has(candidateType) ? type = !0 : updatedFamilies.has(candidateType) && (1 === tag ? type = !0 : needsRender = !0)));
        null !== failedBoundaries && (failedBoundaries.has(fiber) || null !== alternate && failedBoundaries.has(alternate)) && (type = !0);
        type && (fiber._debugNeedsRemount = !0);
        if (type || needsRender) alternate = enqueueConcurrentRenderForLane(fiber, 2), null !== alternate && scheduleUpdateOnFiber(alternate, fiber, 2);
        null === child || type || scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
        null !== sibling && scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
    function FiberNode(tag, pendingProps, key, mode) {
        this.tag = tag;
        this.key = key;
        this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
        this.index = 0;
        this.refCleanup = this.ref = null;
        this.pendingProps = pendingProps;
        this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
        this.mode = mode;
        this.subtreeFlags = this.flags = 0;
        this.deletions = null;
        this.childLanes = this.lanes = 0;
        this.alternate = null;
        this.actualDuration = -0;
        this.actualStartTime = -1.1;
        this.treeBaseDuration = this.selfBaseDuration = -0;
        this._debugTask = this._debugStack = this._debugOwner = this._debugInfo = null;
        this._debugNeedsRemount = !1;
        this._debugHookTypes = null;
        hasBadMapPolyfill || "function" !== typeof Object.preventExtensions || Object.preventExtensions(this);
    }
    function shouldConstruct(Component) {
        Component = Component.prototype;
        return !(!Component || !Component.isReactComponent);
    }
    function createWorkInProgress(current, pendingProps) {
        var workInProgress = current.alternate;
        null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress._debugOwner = current._debugOwner, workInProgress._debugStack = current._debugStack, workInProgress._debugTask = current._debugTask, workInProgress._debugHookTypes = current._debugHookTypes, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.type = current.type, workInProgress.flags = 0, workInProgress.subtreeFlags = 0, workInProgress.deletions = null, workInProgress.actualDuration = -0, workInProgress.actualStartTime = -1.1);
        workInProgress.flags = current.flags & 65011712;
        workInProgress.childLanes = current.childLanes;
        workInProgress.lanes = current.lanes;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue;
        pendingProps = current.dependencies;
        workInProgress.dependencies = null === pendingProps ? null : {
            lanes: pendingProps.lanes,
            firstContext: pendingProps.firstContext,
            _debugThenableState: pendingProps._debugThenableState
        };
        workInProgress.sibling = current.sibling;
        workInProgress.index = current.index;
        workInProgress.ref = current.ref;
        workInProgress.refCleanup = current.refCleanup;
        workInProgress.selfBaseDuration = current.selfBaseDuration;
        workInProgress.treeBaseDuration = current.treeBaseDuration;
        workInProgress._debugInfo = current._debugInfo;
        workInProgress._debugNeedsRemount = current._debugNeedsRemount;
        switch(workInProgress.tag){
            case 0:
            case 15:
                workInProgress.type = resolveFunctionForHotReloading(current.type);
                break;
            case 1:
                workInProgress.type = resolveFunctionForHotReloading(current.type);
                break;
            case 11:
                workInProgress.type = resolveForwardRefForHotReloading(current.type);
        }
        return workInProgress;
    }
    function resetWorkInProgress(workInProgress, renderLanes) {
        workInProgress.flags &= 65011714;
        var current = workInProgress.alternate;
        null === current ? (workInProgress.childLanes = 0, workInProgress.lanes = renderLanes, workInProgress.child = null, workInProgress.subtreeFlags = 0, workInProgress.memoizedProps = null, workInProgress.memoizedState = null, workInProgress.updateQueue = null, workInProgress.dependencies = null, workInProgress.stateNode = null, workInProgress.selfBaseDuration = 0, workInProgress.treeBaseDuration = 0) : (workInProgress.childLanes = current.childLanes, workInProgress.lanes = current.lanes, workInProgress.child = current.child, workInProgress.subtreeFlags = 0, workInProgress.deletions = null, workInProgress.memoizedProps = current.memoizedProps, workInProgress.memoizedState = current.memoizedState, workInProgress.updateQueue = current.updateQueue, workInProgress.type = current.type, renderLanes = current.dependencies, workInProgress.dependencies = null === renderLanes ? null : {
            lanes: renderLanes.lanes,
            firstContext: renderLanes.firstContext,
            _debugThenableState: renderLanes._debugThenableState
        }, workInProgress.selfBaseDuration = current.selfBaseDuration, workInProgress.treeBaseDuration = current.treeBaseDuration);
        return workInProgress;
    }
    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
        var fiberTag = 0, resolvedType = type;
        if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1), resolvedType = resolveFunctionForHotReloading(resolvedType);
        else if ("string" === typeof type) fiberTag = getHostContext(), fiberTag = isHostHoistableType(type, pendingProps, fiberTag) ? 26 : "html" === type || "head" === type || "body" === type ? 27 : 5;
        else a: switch(type){
            case REACT_ACTIVITY_TYPE:
                return key = createFiber(31, pendingProps, key, mode), key.elementType = REACT_ACTIVITY_TYPE, key.lanes = lanes, key;
            case REACT_FRAGMENT_TYPE:
                return createFiberFromFragment(pendingProps.children, mode, lanes, key);
            case REACT_STRICT_MODE_TYPE:
                fiberTag = 8;
                mode |= StrictLegacyMode;
                mode |= StrictEffectsMode;
                break;
            case REACT_PROFILER_TYPE:
                return type = pendingProps, owner = mode, "string" !== typeof type.id && console.error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof type.id), key = createFiber(12, type, key, owner | ProfileMode), key.elementType = REACT_PROFILER_TYPE, key.lanes = lanes, key.stateNode = {
                    effectDuration: 0,
                    passiveEffectDuration: 0
                }, key;
            case REACT_SUSPENSE_TYPE:
                return key = createFiber(13, pendingProps, key, mode), key.elementType = REACT_SUSPENSE_TYPE, key.lanes = lanes, key;
            case REACT_SUSPENSE_LIST_TYPE:
                return key = createFiber(19, pendingProps, key, mode), key.elementType = REACT_SUSPENSE_LIST_TYPE, key.lanes = lanes, key;
            default:
                if ("object" === typeof type && null !== type) switch(type.$$typeof){
                    case REACT_PROVIDER_TYPE:
                    case REACT_CONTEXT_TYPE:
                        fiberTag = 10;
                        break a;
                    case REACT_CONSUMER_TYPE:
                        fiberTag = 9;
                        break a;
                    case REACT_FORWARD_REF_TYPE:
                        fiberTag = 11;
                        resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        break a;
                    case REACT_MEMO_TYPE:
                        fiberTag = 14;
                        break a;
                    case REACT_LAZY_TYPE:
                        fiberTag = 16;
                        resolvedType = null;
                        break a;
                }
                resolvedType = "";
                if (void 0 === type || "object" === typeof type && null !== type && 0 === Object.keys(type).length) resolvedType += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                null === type ? pendingProps = "null" : isArrayImpl(type) ? pendingProps = "array" : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE ? (pendingProps = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />", resolvedType = " Did you accidentally export a JSX literal instead of a component?") : pendingProps = typeof type;
                (fiberTag = owner ? getComponentNameFromOwner(owner) : null) && (resolvedType += "\n\nCheck the render method of `" + fiberTag + "`.");
                fiberTag = 29;
                pendingProps = Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (pendingProps + "." + resolvedType));
                resolvedType = null;
        }
        key = createFiber(fiberTag, pendingProps, key, mode);
        key.elementType = type;
        key.type = resolvedType;
        key.lanes = lanes;
        key._debugOwner = owner;
        return key;
    }
    function createFiberFromElement(element, mode, lanes) {
        mode = createFiberFromTypeAndProps(element.type, element.key, element.props, element._owner, mode, lanes);
        mode._debugOwner = element._owner;
        mode._debugStack = element._debugStack;
        mode._debugTask = element._debugTask;
        return mode;
    }
    function createFiberFromFragment(elements, mode, lanes, key) {
        elements = createFiber(7, elements, key, mode);
        elements.lanes = lanes;
        return elements;
    }
    function createFiberFromText(content, mode, lanes) {
        content = createFiber(6, content, null, mode);
        content.lanes = lanes;
        return content;
    }
    function createFiberFromPortal(portal, mode, lanes) {
        mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
        mode.lanes = lanes;
        mode.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            implementation: portal.implementation
        };
        return mode;
    }
    function pushTreeFork(workInProgress, totalChildren) {
        warnIfNotHydrating();
        forkStack[forkStackIndex++] = treeForkCount;
        forkStack[forkStackIndex++] = treeForkProvider;
        treeForkProvider = workInProgress;
        treeForkCount = totalChildren;
    }
    function pushTreeId(workInProgress, totalChildren, index) {
        warnIfNotHydrating();
        idStack[idStackIndex++] = treeContextId;
        idStack[idStackIndex++] = treeContextOverflow;
        idStack[idStackIndex++] = treeContextProvider;
        treeContextProvider = workInProgress;
        var baseIdWithLeadingBit = treeContextId;
        workInProgress = treeContextOverflow;
        var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;
        baseIdWithLeadingBit &= ~(1 << baseLength);
        index += 1;
        var length = 32 - clz32(totalChildren) + baseLength;
        if (30 < length) {
            var numberOfOverflowBits = baseLength - baseLength % 5;
            length = (baseIdWithLeadingBit & (1 << numberOfOverflowBits) - 1).toString(32);
            baseIdWithLeadingBit >>= numberOfOverflowBits;
            baseLength -= numberOfOverflowBits;
            treeContextId = 1 << 32 - clz32(totalChildren) + baseLength | index << baseLength | baseIdWithLeadingBit;
            treeContextOverflow = length + workInProgress;
        } else treeContextId = 1 << length | index << baseLength | baseIdWithLeadingBit, treeContextOverflow = workInProgress;
    }
    function pushMaterializedTreeId(workInProgress) {
        warnIfNotHydrating();
        null !== workInProgress.return && (pushTreeFork(workInProgress, 1), pushTreeId(workInProgress, 1, 0));
    }
    function popTreeContext(workInProgress) {
        for(; workInProgress === treeForkProvider;)treeForkProvider = forkStack[--forkStackIndex], forkStack[forkStackIndex] = null, treeForkCount = forkStack[--forkStackIndex], forkStack[forkStackIndex] = null;
        for(; workInProgress === treeContextProvider;)treeContextProvider = idStack[--idStackIndex], idStack[idStackIndex] = null, treeContextOverflow = idStack[--idStackIndex], idStack[idStackIndex] = null, treeContextId = idStack[--idStackIndex], idStack[idStackIndex] = null;
    }
    function warnIfNotHydrating() {
        isHydrating || console.error("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    function buildHydrationDiffNode(fiber, distanceFromLeaf) {
        if (null === fiber.return) {
            if (null === hydrationDiffRootDEV) hydrationDiffRootDEV = {
                fiber: fiber,
                children: [],
                serverProps: void 0,
                serverTail: [],
                distanceFromLeaf: distanceFromLeaf
            };
            else {
                if (hydrationDiffRootDEV.fiber !== fiber) throw Error("Saw multiple hydration diff roots in a pass. This is a bug in React.");
                hydrationDiffRootDEV.distanceFromLeaf > distanceFromLeaf && (hydrationDiffRootDEV.distanceFromLeaf = distanceFromLeaf);
            }
            return hydrationDiffRootDEV;
        }
        var siblings = buildHydrationDiffNode(fiber.return, distanceFromLeaf + 1).children;
        if (0 < siblings.length && siblings[siblings.length - 1].fiber === fiber) return siblings = siblings[siblings.length - 1], siblings.distanceFromLeaf > distanceFromLeaf && (siblings.distanceFromLeaf = distanceFromLeaf), siblings;
        distanceFromLeaf = {
            fiber: fiber,
            children: [],
            serverProps: void 0,
            serverTail: [],
            distanceFromLeaf: distanceFromLeaf
        };
        siblings.push(distanceFromLeaf);
        return distanceFromLeaf;
    }
    function warnNonHydratedInstance(fiber, rejectedCandidate) {
        didSuspendOrErrorDEV || (fiber = buildHydrationDiffNode(fiber, 0), fiber.serverProps = null, null !== rejectedCandidate && (rejectedCandidate = describeHydratableInstanceForDevWarnings(rejectedCandidate), fiber.serverTail.push(rejectedCandidate)));
    }
    function throwOnHydrationMismatch(fiber) {
        var diff = "", diffRoot = hydrationDiffRootDEV;
        null !== diffRoot && (hydrationDiffRootDEV = null, diff = describeDiff(diffRoot));
        queueHydrationError(createCapturedValueAtFiber(Error("Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\nhttps://react.dev/link/hydration-mismatch" + diff), fiber));
        throw HydrationMismatchException;
    }
    function prepareToHydrateHostInstance(fiber) {
        var didHydrate = fiber.stateNode;
        var type = fiber.type, props = fiber.memoizedProps;
        didHydrate[internalInstanceKey] = fiber;
        didHydrate[internalPropsKey] = props;
        validatePropertiesInDevelopment(type, props);
        switch(type){
            case "dialog":
                listenToNonDelegatedEvent("cancel", didHydrate);
                listenToNonDelegatedEvent("close", didHydrate);
                break;
            case "iframe":
            case "object":
            case "embed":
                listenToNonDelegatedEvent("load", didHydrate);
                break;
            case "video":
            case "audio":
                for(type = 0; type < mediaEventTypes.length; type++)listenToNonDelegatedEvent(mediaEventTypes[type], didHydrate);
                break;
            case "source":
                listenToNonDelegatedEvent("error", didHydrate);
                break;
            case "img":
            case "image":
            case "link":
                listenToNonDelegatedEvent("error", didHydrate);
                listenToNonDelegatedEvent("load", didHydrate);
                break;
            case "details":
                listenToNonDelegatedEvent("toggle", didHydrate);
                break;
            case "input":
                checkControlledValueProps("input", props);
                listenToNonDelegatedEvent("invalid", didHydrate);
                validateInputProps(didHydrate, props);
                initInput(didHydrate, props.value, props.defaultValue, props.checked, props.defaultChecked, props.type, props.name, !0);
                track(didHydrate);
                break;
            case "option":
                validateOptionProps(didHydrate, props);
                break;
            case "select":
                checkControlledValueProps("select", props);
                listenToNonDelegatedEvent("invalid", didHydrate);
                validateSelectProps(didHydrate, props);
                break;
            case "textarea":
                checkControlledValueProps("textarea", props), listenToNonDelegatedEvent("invalid", didHydrate), validateTextareaProps(didHydrate, props), initTextarea(didHydrate, props.value, props.defaultValue, props.children), track(didHydrate);
        }
        type = props.children;
        "string" !== typeof type && "number" !== typeof type && "bigint" !== typeof type || didHydrate.textContent === "" + type || !0 === props.suppressHydrationWarning || checkForUnmatchedText(didHydrate.textContent, type) ? (null != props.popover && (listenToNonDelegatedEvent("beforetoggle", didHydrate), listenToNonDelegatedEvent("toggle", didHydrate)), null != props.onScroll && listenToNonDelegatedEvent("scroll", didHydrate), null != props.onScrollEnd && listenToNonDelegatedEvent("scrollend", didHydrate), null != props.onClick && (didHydrate.onclick = noop$1), didHydrate = !0) : didHydrate = !1;
        didHydrate || throwOnHydrationMismatch(fiber);
    }
    function popToNextHostParent(fiber) {
        for(hydrationParentFiber = fiber.return; hydrationParentFiber;)switch(hydrationParentFiber.tag){
            case 5:
            case 13:
                rootOrSingletonContext = !1;
                return;
            case 27:
            case 3:
                rootOrSingletonContext = !0;
                return;
            default:
                hydrationParentFiber = hydrationParentFiber.return;
        }
    }
    function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber) return !1;
        if (!isHydrating) return popToNextHostParent(fiber), isHydrating = !0, !1;
        var tag = fiber.tag, JSCompiler_temp;
        if (JSCompiler_temp = 3 !== tag && 27 !== tag) {
            if (JSCompiler_temp = 5 === tag) JSCompiler_temp = fiber.type, JSCompiler_temp = !("form" !== JSCompiler_temp && "button" !== JSCompiler_temp) || shouldSetTextContent(fiber.type, fiber.memoizedProps);
            JSCompiler_temp = !JSCompiler_temp;
        }
        if (JSCompiler_temp && nextHydratableInstance) {
            for(JSCompiler_temp = nextHydratableInstance; JSCompiler_temp;){
                var diffNode = buildHydrationDiffNode(fiber, 0), description = describeHydratableInstanceForDevWarnings(JSCompiler_temp);
                diffNode.serverTail.push(description);
                JSCompiler_temp = "Suspense" === description.type ? getNextHydratableInstanceAfterSuspenseInstance(JSCompiler_temp) : getNextHydratable(JSCompiler_temp.nextSibling);
            }
            throwOnHydrationMismatch(fiber);
        }
        popToNextHostParent(fiber);
        if (13 === tag) {
            fiber = fiber.memoizedState;
            fiber = null !== fiber ? fiber.dehydrated : null;
            if (!fiber) throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
            nextHydratableInstance = getNextHydratableInstanceAfterSuspenseInstance(fiber);
        } else 27 === tag ? (tag = nextHydratableInstance, isSingletonScope(fiber.type) ? (fiber = previousHydratableOnEnteringScopedSingleton, previousHydratableOnEnteringScopedSingleton = null, nextHydratableInstance = fiber) : nextHydratableInstance = tag) : nextHydratableInstance = hydrationParentFiber ? getNextHydratable(fiber.stateNode.nextSibling) : null;
        return !0;
    }
    function resetHydrationState() {
        nextHydratableInstance = hydrationParentFiber = null;
        didSuspendOrErrorDEV = isHydrating = !1;
    }
    function upgradeHydrationErrorsToRecoverable() {
        var queuedErrors = hydrationErrors;
        null !== queuedErrors && (null === workInProgressRootRecoverableErrors ? workInProgressRootRecoverableErrors = queuedErrors : workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, queuedErrors), hydrationErrors = null);
        return queuedErrors;
    }
    function queueHydrationError(error) {
        null === hydrationErrors ? hydrationErrors = [
            error
        ] : hydrationErrors.push(error);
    }
    function emitPendingHydrationWarnings() {
        var diffRoot = hydrationDiffRootDEV;
        if (null !== diffRoot) {
            hydrationDiffRootDEV = null;
            for(var diff = describeDiff(diffRoot); 0 < diffRoot.children.length;)diffRoot = diffRoot.children[0];
            runWithFiberInDEV(diffRoot.fiber, function() {
                console.error("A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s", "https://react.dev/link/hydration-mismatch", diff);
            });
        }
    }
    function resetContextDependencies() {
        lastContextDependency = currentlyRenderingFiber$1 = null;
        isDisallowedContextReadInDEV = !1;
    }
    function pushProvider(providerFiber, context, nextValue) {
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
        push(rendererCursorDEV, context._currentRenderer, providerFiber);
        void 0 !== context._currentRenderer && null !== context._currentRenderer && context._currentRenderer !== rendererSigil && console.error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
        context._currentRenderer = rendererSigil;
    }
    function popProvider(context, providerFiber) {
        context._currentValue = valueCursor.current;
        var currentRenderer = rendererCursorDEV.current;
        pop(rendererCursorDEV, providerFiber);
        context._currentRenderer = currentRenderer;
        pop(valueCursor, providerFiber);
    }
    function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
        for(; null !== parent;){
            var alternate = parent.alternate;
            (parent.childLanes & renderLanes) !== renderLanes ? (parent.childLanes |= renderLanes, null !== alternate && (alternate.childLanes |= renderLanes)) : null !== alternate && (alternate.childLanes & renderLanes) !== renderLanes && (alternate.childLanes |= renderLanes);
            if (parent === propagationRoot) break;
            parent = parent.return;
        }
        parent !== propagationRoot && console.error("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function propagateContextChanges(workInProgress, contexts, renderLanes, forcePropagateEntireTree) {
        var fiber = workInProgress.child;
        null !== fiber && (fiber.return = workInProgress);
        for(; null !== fiber;){
            var list = fiber.dependencies;
            if (null !== list) {
                var nextFiber = fiber.child;
                list = list.firstContext;
                a: for(; null !== list;){
                    var dependency = list;
                    list = fiber;
                    for(var i = 0; i < contexts.length; i++)if (dependency.context === contexts[i]) {
                        list.lanes |= renderLanes;
                        dependency = list.alternate;
                        null !== dependency && (dependency.lanes |= renderLanes);
                        scheduleContextWorkOnParentPath(list.return, renderLanes, workInProgress);
                        forcePropagateEntireTree || (nextFiber = null);
                        break a;
                    }
                    list = dependency.next;
                }
            } else if (18 === fiber.tag) {
                nextFiber = fiber.return;
                if (null === nextFiber) throw Error("We just came from a parent so we must have had a parent. This is a bug in React.");
                nextFiber.lanes |= renderLanes;
                list = nextFiber.alternate;
                null !== list && (list.lanes |= renderLanes);
                scheduleContextWorkOnParentPath(nextFiber, renderLanes, workInProgress);
                nextFiber = null;
            } else nextFiber = fiber.child;
            if (null !== nextFiber) nextFiber.return = fiber;
            else for(nextFiber = fiber; null !== nextFiber;){
                if (nextFiber === workInProgress) {
                    nextFiber = null;
                    break;
                }
                fiber = nextFiber.sibling;
                if (null !== fiber) {
                    fiber.return = nextFiber.return;
                    nextFiber = fiber;
                    break;
                }
                nextFiber = nextFiber.return;
            }
            fiber = nextFiber;
        }
    }
    function propagateParentContextChanges(current, workInProgress, renderLanes, forcePropagateEntireTree) {
        current = null;
        for(var parent = workInProgress, isInsidePropagationBailout = !1; null !== parent;){
            if (!isInsidePropagationBailout) {
                if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = !0;
                else if (0 !== (parent.flags & 262144)) break;
            }
            if (10 === parent.tag) {
                var currentParent = parent.alternate;
                if (null === currentParent) throw Error("Should have a current fiber. This is a bug in React.");
                currentParent = currentParent.memoizedProps;
                if (null !== currentParent) {
                    var context = parent.type;
                    objectIs(parent.pendingProps.value, currentParent.value) || (null !== current ? current.push(context) : current = [
                        context
                    ]);
                }
            } else if (parent === hostTransitionProviderCursor.current) {
                currentParent = parent.alternate;
                if (null === currentParent) throw Error("Should have a current fiber. This is a bug in React.");
                currentParent.memoizedState.memoizedState !== parent.memoizedState.memoizedState && (null !== current ? current.push(HostTransitionContext) : current = [
                    HostTransitionContext
                ]);
            }
            parent = parent.return;
        }
        null !== current && propagateContextChanges(workInProgress, current, renderLanes, forcePropagateEntireTree);
        workInProgress.flags |= 262144;
    }
    function checkIfContextChanged(currentDependencies) {
        for(currentDependencies = currentDependencies.firstContext; null !== currentDependencies;){
            if (!objectIs(currentDependencies.context._currentValue, currentDependencies.memoizedValue)) return !0;
            currentDependencies = currentDependencies.next;
        }
        return !1;
    }
    function prepareToReadContext(workInProgress) {
        currentlyRenderingFiber$1 = workInProgress;
        lastContextDependency = null;
        workInProgress = workInProgress.dependencies;
        null !== workInProgress && (workInProgress.firstContext = null);
    }
    function readContext(context) {
        isDisallowedContextReadInDEV && console.error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
        return readContextForConsumer(currentlyRenderingFiber$1, context);
    }
    function readContextDuringReconciliation(consumer, context) {
        null === currentlyRenderingFiber$1 && prepareToReadContext(consumer);
        return readContextForConsumer(consumer, context);
    }
    function readContextForConsumer(consumer, context) {
        var value = context._currentValue;
        context = {
            context: context,
            memoizedValue: value,
            next: null
        };
        if (null === lastContextDependency) {
            if (null === consumer) throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            lastContextDependency = context;
            consumer.dependencies = {
                lanes: 0,
                firstContext: context,
                _debugThenableState: null
            };
            consumer.flags |= 524288;
        } else lastContextDependency = lastContextDependency.next = context;
        return value;
    }
    function createCache() {
        return {
            controller: new AbortControllerLocal(),
            data: new Map(),
            refCount: 0
        };
    }
    function retainCache(cache) {
        cache.controller.signal.aborted && console.warn("A cache instance was retained after it was already freed. This likely indicates a bug in React.");
        cache.refCount++;
    }
    function releaseCache(cache) {
        cache.refCount--;
        0 > cache.refCount && console.warn("A cache instance was released after it was already freed. This likely indicates a bug in React.");
        0 === cache.refCount && scheduleCallback$2(NormalPriority, function() {
            cache.controller.abort();
        });
    }
    function pushNestedEffectDurations() {
        var prevEffectDuration = profilerEffectDuration;
        profilerEffectDuration = 0;
        return prevEffectDuration;
    }
    function popNestedEffectDurations(prevEffectDuration) {
        var elapsedTime = profilerEffectDuration;
        profilerEffectDuration = prevEffectDuration;
        return elapsedTime;
    }
    function bubbleNestedEffectDurations(prevEffectDuration) {
        var elapsedTime = profilerEffectDuration;
        profilerEffectDuration += prevEffectDuration;
        return elapsedTime;
    }
    function startProfilerTimer(fiber) {
        profilerStartTime = now();
        0 > fiber.actualStartTime && (fiber.actualStartTime = profilerStartTime);
    }
    function stopProfilerTimerIfRunningAndRecordDuration(fiber) {
        if (0 <= profilerStartTime) {
            var elapsedTime = now() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            fiber.selfBaseDuration = elapsedTime;
            profilerStartTime = -1;
        }
    }
    function stopProfilerTimerIfRunningAndRecordIncompleteDuration(fiber) {
        if (0 <= profilerStartTime) {
            var elapsedTime = now() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            profilerStartTime = -1;
        }
    }
    function recordEffectDuration() {
        if (0 <= profilerStartTime) {
            var elapsedTime = now() - profilerStartTime;
            profilerStartTime = -1;
            profilerEffectDuration += elapsedTime;
        }
    }
    function startEffectTimer() {
        profilerStartTime = now();
    }
    function transferActualDuration(fiber) {
        for(var child = fiber.child; child;)fiber.actualDuration += child.actualDuration, child = child.sibling;
    }
    function entangleAsyncAction(transition, thenable) {
        if (null === currentEntangledListeners) {
            var entangledListeners = currentEntangledListeners = [];
            currentEntangledPendingCount = 0;
            currentEntangledLane = requestTransitionLane();
            currentEntangledActionThenable = {
                status: "pending",
                value: void 0,
                then: function(resolve) {
                    entangledListeners.push(resolve);
                }
            };
        }
        currentEntangledPendingCount++;
        thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);
        return thenable;
    }
    function pingEngtangledActionScope() {
        if (0 === --currentEntangledPendingCount && null !== currentEntangledListeners) {
            null !== currentEntangledActionThenable && (currentEntangledActionThenable.status = "fulfilled");
            var listeners = currentEntangledListeners;
            currentEntangledListeners = null;
            currentEntangledLane = 0;
            currentEntangledActionThenable = null;
            for(var i = 0; i < listeners.length; i++)(0, listeners[i])();
        }
    }
    function chainThenableValue(thenable, result) {
        var listeners = [], thenableWithOverride = {
            status: "pending",
            value: null,
            reason: null,
            then: function(resolve) {
                listeners.push(resolve);
            }
        };
        thenable.then(function() {
            thenableWithOverride.status = "fulfilled";
            thenableWithOverride.value = result;
            for(var i = 0; i < listeners.length; i++)(0, listeners[i])(result);
        }, function(error) {
            thenableWithOverride.status = "rejected";
            thenableWithOverride.reason = error;
            for(error = 0; error < listeners.length; error++)(0, listeners[error])(void 0);
        });
        return thenableWithOverride;
    }
    function peekCacheFromPool() {
        var cacheResumedFromPreviousRender = resumedCache.current;
        return null !== cacheResumedFromPreviousRender ? cacheResumedFromPreviousRender : workInProgressRoot.pooledCache;
    }
    function pushTransition(offscreenWorkInProgress, prevCachePool) {
        null === prevCachePool ? push(resumedCache, resumedCache.current, offscreenWorkInProgress) : push(resumedCache, prevCachePool.pool, offscreenWorkInProgress);
    }
    function getSuspendedCache() {
        var cacheFromPool = peekCacheFromPool();
        return null === cacheFromPool ? null : {
            parent: CacheContext._currentValue,
            pool: cacheFromPool
        };
    }
    function createThenableState() {
        return {
            didWarnAboutUncachedPromise: !1,
            thenables: []
        };
    }
    function isThenableResolved(thenable) {
        thenable = thenable.status;
        return "fulfilled" === thenable || "rejected" === thenable;
    }
    function noop$3() {}
    function trackUsedThenable(thenableState, thenable, index) {
        null !== ReactSharedInternals.actQueue && (ReactSharedInternals.didUsePromise = !0);
        var trackedThenables = thenableState.thenables;
        index = trackedThenables[index];
        void 0 === index ? trackedThenables.push(thenable) : index !== thenable && (thenableState.didWarnAboutUncachedPromise || (thenableState.didWarnAboutUncachedPromise = !0, console.error("A component was suspended by an uncached promise. Creating promises inside a Client Component or hook is not yet supported, except via a Suspense-compatible library or framework.")), thenable.then(noop$3, noop$3), thenable = index);
        switch(thenable.status){
            case "fulfilled":
                return thenable.value;
            case "rejected":
                throw thenableState = thenable.reason, checkIfUseWrappedInAsyncCatch(thenableState), thenableState;
            default:
                if ("string" === typeof thenable.status) thenable.then(noop$3, noop$3);
                else {
                    thenableState = workInProgressRoot;
                    if (null !== thenableState && 100 < thenableState.shellSuspendCounter) throw Error("An unknown Component is an async Client Component. Only Server Components can be async at the moment. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.");
                    thenableState = thenable;
                    thenableState.status = "pending";
                    thenableState.then(function(fulfilledValue) {
                        if ("pending" === thenable.status) {
                            var fulfilledThenable = thenable;
                            fulfilledThenable.status = "fulfilled";
                            fulfilledThenable.value = fulfilledValue;
                        }
                    }, function(error) {
                        if ("pending" === thenable.status) {
                            var rejectedThenable = thenable;
                            rejectedThenable.status = "rejected";
                            rejectedThenable.reason = error;
                        }
                    });
                }
                switch(thenable.status){
                    case "fulfilled":
                        return thenable.value;
                    case "rejected":
                        throw thenableState = thenable.reason, checkIfUseWrappedInAsyncCatch(thenableState), thenableState;
                }
                suspendedThenable = thenable;
                needsToResetSuspendedThenableDEV = !0;
                throw SuspenseException;
        }
    }
    function getSuspendedThenable() {
        if (null === suspendedThenable) throw Error("Expected a suspended thenable. This is a bug in React. Please file an issue.");
        var thenable = suspendedThenable;
        suspendedThenable = null;
        needsToResetSuspendedThenableDEV = !1;
        return thenable;
    }
    function checkIfUseWrappedInAsyncCatch(rejectedReason) {
        if (rejectedReason === SuspenseException || rejectedReason === SuspenseActionException) throw Error("Hooks are not supported inside an async component. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.");
    }
    function initializeUpdateQueue(fiber) {
        fiber.updateQueue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
                pending: null,
                lanes: 0,
                hiddenCallbacks: null
            },
            callbacks: null
        };
    }
    function cloneUpdateQueue(current, workInProgress) {
        current = current.updateQueue;
        workInProgress.updateQueue === current && (workInProgress.updateQueue = {
            baseState: current.baseState,
            firstBaseUpdate: current.firstBaseUpdate,
            lastBaseUpdate: current.lastBaseUpdate,
            shared: current.shared,
            callbacks: null
        });
    }
    function createUpdate(lane) {
        return {
            lane: lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
        };
    }
    function enqueueUpdate(fiber, update, lane) {
        var updateQueue = fiber.updateQueue;
        if (null === updateQueue) return null;
        updateQueue = updateQueue.shared;
        if (currentlyProcessingQueue === updateQueue && !didWarnUpdateInsideUpdate) {
            var componentName = getComponentNameFromFiber(fiber);
            console.error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.\n\nPlease update the following component: %s", componentName);
            didWarnUpdateInsideUpdate = !0;
        }
        if ((executionContext & RenderContext) !== NoContext) return componentName = updateQueue.pending, null === componentName ? update.next = update : (update.next = componentName.next, componentName.next = update), updateQueue.pending = update, update = getRootForUpdatedFiber(fiber), markUpdateLaneFromFiberToRoot(fiber, null, lane), update;
        enqueueUpdate$1(fiber, updateQueue, update, lane);
        return getRootForUpdatedFiber(fiber);
    }
    function entangleTransitions(root, fiber, lane) {
        fiber = fiber.updateQueue;
        if (null !== fiber && (fiber = fiber.shared, 0 !== (lane & 4194048))) {
            var queueLanes = fiber.lanes;
            queueLanes &= root.pendingLanes;
            lane |= queueLanes;
            fiber.lanes = lane;
            markRootEntangled(root, lane);
        }
    }
    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
        var queue = workInProgress.updateQueue, current = workInProgress.alternate;
        if (null !== current && (current = current.updateQueue, queue === current)) {
            var newFirst = null, newLast = null;
            queue = queue.firstBaseUpdate;
            if (null !== queue) {
                do {
                    var clone = {
                        lane: queue.lane,
                        tag: queue.tag,
                        payload: queue.payload,
                        callback: null,
                        next: null
                    };
                    null === newLast ? newFirst = newLast = clone : newLast = newLast.next = clone;
                    queue = queue.next;
                }while (null !== queue);
                null === newLast ? newFirst = newLast = capturedUpdate : newLast = newLast.next = capturedUpdate;
            } else newFirst = newLast = capturedUpdate;
            queue = {
                baseState: current.baseState,
                firstBaseUpdate: newFirst,
                lastBaseUpdate: newLast,
                shared: current.shared,
                callbacks: current.callbacks
            };
            workInProgress.updateQueue = queue;
            return;
        }
        workInProgress = queue.lastBaseUpdate;
        null === workInProgress ? queue.firstBaseUpdate = capturedUpdate : workInProgress.next = capturedUpdate;
        queue.lastBaseUpdate = capturedUpdate;
    }
    function suspendIfUpdateReadFromEntangledAsyncAction() {
        if (didReadFromEntangledAsyncAction) {
            var entangledActionThenable = currentEntangledActionThenable;
            if (null !== entangledActionThenable) throw entangledActionThenable;
        }
    }
    function processUpdateQueue(workInProgress, props, instance$jscomp$0, renderLanes) {
        didReadFromEntangledAsyncAction = !1;
        var queue = workInProgress.updateQueue;
        hasForceUpdate = !1;
        currentlyProcessingQueue = queue.shared;
        var firstBaseUpdate = queue.firstBaseUpdate, lastBaseUpdate = queue.lastBaseUpdate, pendingQueue = queue.shared.pending;
        if (null !== pendingQueue) {
            queue.shared.pending = null;
            var lastPendingUpdate = pendingQueue, firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null;
            null === lastBaseUpdate ? firstBaseUpdate = firstPendingUpdate : lastBaseUpdate.next = firstPendingUpdate;
            lastBaseUpdate = lastPendingUpdate;
            var current = workInProgress.alternate;
            null !== current && (current = current.updateQueue, pendingQueue = current.lastBaseUpdate, pendingQueue !== lastBaseUpdate && (null === pendingQueue ? current.firstBaseUpdate = firstPendingUpdate : pendingQueue.next = firstPendingUpdate, current.lastBaseUpdate = lastPendingUpdate));
        }
        if (null !== firstBaseUpdate) {
            var newState = queue.baseState;
            lastBaseUpdate = 0;
            current = firstPendingUpdate = lastPendingUpdate = null;
            pendingQueue = firstBaseUpdate;
            do {
                var updateLane = pendingQueue.lane & -536870913, isHiddenUpdate = updateLane !== pendingQueue.lane;
                if (isHiddenUpdate ? (workInProgressRootRenderLanes & updateLane) === updateLane : (renderLanes & updateLane) === updateLane) {
                    0 !== updateLane && updateLane === currentEntangledLane && (didReadFromEntangledAsyncAction = !0);
                    null !== current && (current = current.next = {
                        lane: 0,
                        tag: pendingQueue.tag,
                        payload: pendingQueue.payload,
                        callback: null,
                        next: null
                    });
                    a: {
                        updateLane = workInProgress;
                        var partialState = pendingQueue;
                        var nextProps = props, instance = instance$jscomp$0;
                        switch(partialState.tag){
                            case ReplaceState:
                                partialState = partialState.payload;
                                if ("function" === typeof partialState) {
                                    isDisallowedContextReadInDEV = !0;
                                    var nextState = partialState.call(instance, newState, nextProps);
                                    if (updateLane.mode & StrictLegacyMode) {
                                        setIsStrictModeForDevtools(!0);
                                        try {
                                            partialState.call(instance, newState, nextProps);
                                        } finally{
                                            setIsStrictModeForDevtools(!1);
                                        }
                                    }
                                    isDisallowedContextReadInDEV = !1;
                                    newState = nextState;
                                    break a;
                                }
                                newState = partialState;
                                break a;
                            case CaptureUpdate:
                                updateLane.flags = updateLane.flags & -65537 | 128;
                            case UpdateState:
                                nextState = partialState.payload;
                                if ("function" === typeof nextState) {
                                    isDisallowedContextReadInDEV = !0;
                                    partialState = nextState.call(instance, newState, nextProps);
                                    if (updateLane.mode & StrictLegacyMode) {
                                        setIsStrictModeForDevtools(!0);
                                        try {
                                            nextState.call(instance, newState, nextProps);
                                        } finally{
                                            setIsStrictModeForDevtools(!1);
                                        }
                                    }
                                    isDisallowedContextReadInDEV = !1;
                                } else partialState = nextState;
                                if (null === partialState || void 0 === partialState) break a;
                                newState = assign({}, newState, partialState);
                                break a;
                            case ForceUpdate:
                                hasForceUpdate = !0;
                        }
                    }
                    updateLane = pendingQueue.callback;
                    null !== updateLane && (workInProgress.flags |= 64, isHiddenUpdate && (workInProgress.flags |= 8192), isHiddenUpdate = queue.callbacks, null === isHiddenUpdate ? queue.callbacks = [
                        updateLane
                    ] : isHiddenUpdate.push(updateLane));
                } else isHiddenUpdate = {
                    lane: updateLane,
                    tag: pendingQueue.tag,
                    payload: pendingQueue.payload,
                    callback: pendingQueue.callback,
                    next: null
                }, null === current ? (firstPendingUpdate = current = isHiddenUpdate, lastPendingUpdate = newState) : current = current.next = isHiddenUpdate, lastBaseUpdate |= updateLane;
                pendingQueue = pendingQueue.next;
                if (null === pendingQueue) {
                    if (pendingQueue = queue.shared.pending, null === pendingQueue) break;
                    else isHiddenUpdate = pendingQueue, pendingQueue = isHiddenUpdate.next, isHiddenUpdate.next = null, queue.lastBaseUpdate = isHiddenUpdate, queue.shared.pending = null;
                }
            }while (1);
            null === current && (lastPendingUpdate = newState);
            queue.baseState = lastPendingUpdate;
            queue.firstBaseUpdate = firstPendingUpdate;
            queue.lastBaseUpdate = current;
            null === firstBaseUpdate && (queue.shared.lanes = 0);
            workInProgressRootSkippedLanes |= lastBaseUpdate;
            workInProgress.lanes = lastBaseUpdate;
            workInProgress.memoizedState = newState;
        }
        currentlyProcessingQueue = null;
    }
    function callCallback(callback, context) {
        if ("function" !== typeof callback) throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback);
        callback.call(context);
    }
    function commitHiddenCallbacks(updateQueue, context) {
        var hiddenCallbacks = updateQueue.shared.hiddenCallbacks;
        if (null !== hiddenCallbacks) for(updateQueue.shared.hiddenCallbacks = null, updateQueue = 0; updateQueue < hiddenCallbacks.length; updateQueue++)callCallback(hiddenCallbacks[updateQueue], context);
    }
    function commitCallbacks(updateQueue, context) {
        var callbacks = updateQueue.callbacks;
        if (null !== callbacks) for(updateQueue.callbacks = null, updateQueue = 0; updateQueue < callbacks.length; updateQueue++)callCallback(callbacks[updateQueue], context);
    }
    function pushHiddenContext(fiber, context) {
        var prevEntangledRenderLanes = entangledRenderLanes;
        push(prevEntangledRenderLanesCursor, prevEntangledRenderLanes, fiber);
        push(currentTreeHiddenStackCursor, context, fiber);
        entangledRenderLanes = prevEntangledRenderLanes | context.baseLanes;
    }
    function reuseHiddenContextOnStack(fiber) {
        push(prevEntangledRenderLanesCursor, entangledRenderLanes, fiber);
        push(currentTreeHiddenStackCursor, currentTreeHiddenStackCursor.current, fiber);
    }
    function popHiddenContext(fiber) {
        entangledRenderLanes = prevEntangledRenderLanesCursor.current;
        pop(currentTreeHiddenStackCursor, fiber);
        pop(prevEntangledRenderLanesCursor, fiber);
    }
    function mountHookTypesDev() {
        var hookName = currentHookNameInDev;
        null === hookTypesDev ? hookTypesDev = [
            hookName
        ] : hookTypesDev.push(hookName);
    }
    function updateHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (null !== hookTypesDev && (hookTypesUpdateIndexDev++, hookTypesDev[hookTypesUpdateIndexDev] !== hookName)) {
            var componentName = getComponentNameFromFiber(currentlyRenderingFiber);
            if (!didWarnAboutMismatchedHooksForComponent.has(componentName) && (didWarnAboutMismatchedHooksForComponent.add(componentName), null !== hookTypesDev)) {
                for(var table = "", i = 0; i <= hookTypesUpdateIndexDev; i++){
                    var oldHookName = hookTypesDev[i], newHookName = i === hookTypesUpdateIndexDev ? hookName : oldHookName;
                    for(oldHookName = i + 1 + ". " + oldHookName; 30 > oldHookName.length;)oldHookName += " ";
                    oldHookName += newHookName + "\n";
                    table += oldHookName;
                }
                console.error("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://react.dev/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
            }
        }
    }
    function checkDepsAreArrayDev(deps) {
        void 0 === deps || null === deps || isArrayImpl(deps) || console.error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
    }
    function warnOnUseFormStateInDev() {
        var componentName = getComponentNameFromFiber(currentlyRenderingFiber);
        didWarnAboutUseFormState.has(componentName) || (didWarnAboutUseFormState.add(componentName), console.error("ReactDOM.useFormState has been renamed to React.useActionState. Please update %s to use React.useActionState.", componentName));
    }
    function throwInvalidHookError() {
        throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.");
    }
    function areHookInputsEqual(nextDeps, prevDeps) {
        if (ignorePreviousDependencies) return !1;
        if (null === prevDeps) return console.error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev), !1;
        nextDeps.length !== prevDeps.length && console.error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
        for(var i = 0; i < prevDeps.length && i < nextDeps.length; i++)if (!objectIs(nextDeps[i], prevDeps[i])) return !1;
        return !0;
    }
    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
        renderLanes = nextRenderLanes;
        currentlyRenderingFiber = workInProgress;
        hookTypesDev = null !== current ? current._debugHookTypes : null;
        hookTypesUpdateIndexDev = -1;
        ignorePreviousDependencies = null !== current && current.type !== workInProgress.type;
        if ("[object AsyncFunction]" === Object.prototype.toString.call(Component) || "[object AsyncGeneratorFunction]" === Object.prototype.toString.call(Component)) nextRenderLanes = getComponentNameFromFiber(currentlyRenderingFiber), didWarnAboutAsyncClientComponent.has(nextRenderLanes) || (didWarnAboutAsyncClientComponent.add(nextRenderLanes), console.error("%s is an async Client Component. Only Server Components can be async at the moment. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.", null === nextRenderLanes ? "An unknown Component" : "<" + nextRenderLanes + ">"));
        workInProgress.memoizedState = null;
        workInProgress.updateQueue = null;
        workInProgress.lanes = 0;
        ReactSharedInternals.H = null !== current && null !== current.memoizedState ? HooksDispatcherOnUpdateInDEV : null !== hookTypesDev ? HooksDispatcherOnMountWithHookTypesInDEV : HooksDispatcherOnMountInDEV;
        shouldDoubleInvokeUserFnsInHooksDEV = nextRenderLanes = (workInProgress.mode & StrictLegacyMode) !== NoMode;
        var children = callComponentInDEV(Component, props, secondArg);
        shouldDoubleInvokeUserFnsInHooksDEV = !1;
        didScheduleRenderPhaseUpdateDuringThisPass && (children = renderWithHooksAgain(workInProgress, Component, props, secondArg));
        if (nextRenderLanes) {
            setIsStrictModeForDevtools(!0);
            try {
                children = renderWithHooksAgain(workInProgress, Component, props, secondArg);
            } finally{
                setIsStrictModeForDevtools(!1);
            }
        }
        finishRenderingHooks(current, workInProgress);
        return children;
    }
    function finishRenderingHooks(current, workInProgress) {
        workInProgress._debugHookTypes = hookTypesDev;
        null === workInProgress.dependencies ? null !== thenableState$1 && (workInProgress.dependencies = {
            lanes: 0,
            firstContext: null,
            _debugThenableState: thenableState$1
        }) : workInProgress.dependencies._debugThenableState = thenableState$1;
        ReactSharedInternals.H = ContextOnlyDispatcher;
        var didRenderTooFewHooks = null !== currentHook && null !== currentHook.next;
        renderLanes = 0;
        hookTypesDev = currentHookNameInDev = workInProgressHook = currentHook = currentlyRenderingFiber = null;
        hookTypesUpdateIndexDev = -1;
        null !== current && (current.flags & 65011712) !== (workInProgress.flags & 65011712) && console.error("Internal React error: Expected static flag was missing. Please notify the React team.");
        didScheduleRenderPhaseUpdate = !1;
        thenableIndexCounter$1 = 0;
        thenableState$1 = null;
        if (didRenderTooFewHooks) throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
        null === current || didReceiveUpdate || (current = current.dependencies, null !== current && checkIfContextChanged(current) && (didReceiveUpdate = !0));
        needsToResetSuspendedThenableDEV ? (needsToResetSuspendedThenableDEV = !1, current = !0) : current = !1;
        current && (workInProgress = getComponentNameFromFiber(workInProgress) || "Unknown", didWarnAboutUseWrappedInTryCatch.has(workInProgress) || didWarnAboutAsyncClientComponent.has(workInProgress) || (didWarnAboutUseWrappedInTryCatch.add(workInProgress), console.error("`use` was called from inside a try/catch block. This is not allowed and can lead to unexpected behavior. To handle errors triggered by `use`, wrap your component in a error boundary.")));
    }
    function renderWithHooksAgain(workInProgress, Component, props, secondArg) {
        currentlyRenderingFiber = workInProgress;
        var numberOfReRenders = 0;
        do {
            didScheduleRenderPhaseUpdateDuringThisPass && (thenableState$1 = null);
            thenableIndexCounter$1 = 0;
            didScheduleRenderPhaseUpdateDuringThisPass = !1;
            if (numberOfReRenders >= RE_RENDER_LIMIT) throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
            numberOfReRenders += 1;
            ignorePreviousDependencies = !1;
            workInProgressHook = currentHook = null;
            if (null != workInProgress.updateQueue) {
                var children = workInProgress.updateQueue;
                children.lastEffect = null;
                children.events = null;
                children.stores = null;
                null != children.memoCache && (children.memoCache.index = 0);
            }
            hookTypesUpdateIndexDev = -1;
            ReactSharedInternals.H = HooksDispatcherOnRerenderInDEV;
            children = callComponentInDEV(Component, props, secondArg);
        }while (didScheduleRenderPhaseUpdateDuringThisPass);
        return children;
    }
    function TransitionAwareHostComponent() {
        var dispatcher = ReactSharedInternals.H, maybeThenable = dispatcher.useState()[0];
        maybeThenable = "function" === typeof maybeThenable.then ? useThenable(maybeThenable) : maybeThenable;
        dispatcher = dispatcher.useState()[0];
        (null !== currentHook ? currentHook.memoizedState : null) !== dispatcher && (currentlyRenderingFiber.flags |= 1024);
        return maybeThenable;
    }
    function checkDidRenderIdHook() {
        var didRenderIdHook = 0 !== localIdCounter;
        localIdCounter = 0;
        return didRenderIdHook;
    }
    function bailoutHooks(current, workInProgress, lanes) {
        workInProgress.updateQueue = current.updateQueue;
        workInProgress.flags = (workInProgress.mode & StrictEffectsMode) !== NoMode ? workInProgress.flags & -402655237 : workInProgress.flags & -2053;
        current.lanes &= ~lanes;
    }
    function resetHooksOnUnwind(workInProgress) {
        if (didScheduleRenderPhaseUpdate) {
            for(workInProgress = workInProgress.memoizedState; null !== workInProgress;){
                var queue = workInProgress.queue;
                null !== queue && (queue.pending = null);
                workInProgress = workInProgress.next;
            }
            didScheduleRenderPhaseUpdate = !1;
        }
        renderLanes = 0;
        hookTypesDev = workInProgressHook = currentHook = currentlyRenderingFiber = null;
        hookTypesUpdateIndexDev = -1;
        currentHookNameInDev = null;
        didScheduleRenderPhaseUpdateDuringThisPass = !1;
        thenableIndexCounter$1 = localIdCounter = 0;
        thenableState$1 = null;
    }
    function mountWorkInProgressHook() {
        var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
        };
        null === workInProgressHook ? currentlyRenderingFiber.memoizedState = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
        return workInProgressHook;
    }
    function updateWorkInProgressHook() {
        if (null === currentHook) {
            var nextCurrentHook = currentlyRenderingFiber.alternate;
            nextCurrentHook = null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;
        } else nextCurrentHook = currentHook.next;
        var nextWorkInProgressHook = null === workInProgressHook ? currentlyRenderingFiber.memoizedState : workInProgressHook.next;
        if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, currentHook = nextCurrentHook;
        else {
            if (null === nextCurrentHook) {
                if (null === currentlyRenderingFiber.alternate) throw Error("Update hook called on initial render. This is likely a bug in React. Please file an issue.");
                throw Error("Rendered more hooks than during the previous render.");
            }
            currentHook = nextCurrentHook;
            nextCurrentHook = {
                memoizedState: currentHook.memoizedState,
                baseState: currentHook.baseState,
                baseQueue: currentHook.baseQueue,
                queue: currentHook.queue,
                next: null
            };
            null === workInProgressHook ? currentlyRenderingFiber.memoizedState = workInProgressHook = nextCurrentHook : workInProgressHook = workInProgressHook.next = nextCurrentHook;
        }
        return workInProgressHook;
    }
    function createFunctionComponentUpdateQueue() {
        return {
            lastEffect: null,
            events: null,
            stores: null,
            memoCache: null
        };
    }
    function useThenable(thenable) {
        var index = thenableIndexCounter$1;
        thenableIndexCounter$1 += 1;
        null === thenableState$1 && (thenableState$1 = createThenableState());
        thenable = trackUsedThenable(thenableState$1, thenable, index);
        index = currentlyRenderingFiber;
        null === (null === workInProgressHook ? index.memoizedState : workInProgressHook.next) && (index = index.alternate, ReactSharedInternals.H = null !== index && null !== index.memoizedState ? HooksDispatcherOnUpdateInDEV : HooksDispatcherOnMountInDEV);
        return thenable;
    }
    function use(usable) {
        if (null !== usable && "object" === typeof usable) {
            if ("function" === typeof usable.then) return useThenable(usable);
            if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);
        }
        throw Error("An unsupported type was passed to use(): " + String(usable));
    }
    function useMemoCache(size) {
        var memoCache = null, updateQueue = currentlyRenderingFiber.updateQueue;
        null !== updateQueue && (memoCache = updateQueue.memoCache);
        if (null == memoCache) {
            var current = currentlyRenderingFiber.alternate;
            null !== current && (current = current.updateQueue, null !== current && (current = current.memoCache, null != current && (memoCache = {
                data: current.data.map(function(array) {
                    return array.slice();
                }),
                index: 0
            })));
        }
        null == memoCache && (memoCache = {
            data: [],
            index: 0
        });
        null === updateQueue && (updateQueue = createFunctionComponentUpdateQueue(), currentlyRenderingFiber.updateQueue = updateQueue);
        updateQueue.memoCache = memoCache;
        updateQueue = memoCache.data[memoCache.index];
        if (void 0 === updateQueue || ignorePreviousDependencies) for(updateQueue = memoCache.data[memoCache.index] = Array(size), current = 0; current < size; current++)updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;
        else updateQueue.length !== size && console.error("Expected a constant size argument for each invocation of useMemoCache. The previous cache was allocated with size %s but size %s was requested.", updateQueue.length, size);
        memoCache.index++;
        return updateQueue;
    }
    function basicStateReducer(state, action) {
        return "function" === typeof action ? action(state) : action;
    }
    function mountReducer(reducer, initialArg, init) {
        var hook = mountWorkInProgressHook();
        if (void 0 !== init) {
            var initialState = init(initialArg);
            if (shouldDoubleInvokeUserFnsInHooksDEV) {
                setIsStrictModeForDevtools(!0);
                try {
                    init(initialArg);
                } finally{
                    setIsStrictModeForDevtools(!1);
                }
            }
        } else initialState = initialArg;
        hook.memoizedState = hook.baseState = initialState;
        reducer = {
            pending: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
        };
        hook.queue = reducer;
        reducer = reducer.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber, reducer);
        return [
            hook.memoizedState,
            reducer
        ];
    }
    function updateReducer(reducer) {
        var hook = updateWorkInProgressHook();
        return updateReducerImpl(hook, currentHook, reducer);
    }
    function updateReducerImpl(hook, current, reducer) {
        var queue = hook.queue;
        if (null === queue) throw Error("Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)");
        queue.lastRenderedReducer = reducer;
        var baseQueue = hook.baseQueue, pendingQueue = queue.pending;
        if (null !== pendingQueue) {
            if (null !== baseQueue) {
                var baseFirst = baseQueue.next;
                baseQueue.next = pendingQueue.next;
                pendingQueue.next = baseFirst;
            }
            current.baseQueue !== baseQueue && console.error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
            current.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
        }
        pendingQueue = hook.baseState;
        if (null === baseQueue) hook.memoizedState = pendingQueue;
        else {
            current = baseQueue.next;
            var newBaseQueueFirst = baseFirst = null, newBaseQueueLast = null, update = current, didReadFromEntangledAsyncAction = !1;
            do {
                var updateLane = update.lane & -536870913;
                if (updateLane !== update.lane ? (workInProgressRootRenderLanes & updateLane) === updateLane : (renderLanes & updateLane) === updateLane) {
                    var revertLane = update.revertLane;
                    if (0 === revertLane) null !== newBaseQueueLast && (newBaseQueueLast = newBaseQueueLast.next = {
                        lane: 0,
                        revertLane: 0,
                        action: update.action,
                        hasEagerState: update.hasEagerState,
                        eagerState: update.eagerState,
                        next: null
                    }), updateLane === currentEntangledLane && (didReadFromEntangledAsyncAction = !0);
                    else if ((renderLanes & revertLane) === revertLane) {
                        update = update.next;
                        revertLane === currentEntangledLane && (didReadFromEntangledAsyncAction = !0);
                        continue;
                    } else updateLane = {
                        lane: 0,
                        revertLane: update.revertLane,
                        action: update.action,
                        hasEagerState: update.hasEagerState,
                        eagerState: update.eagerState,
                        next: null
                    }, null === newBaseQueueLast ? (newBaseQueueFirst = newBaseQueueLast = updateLane, baseFirst = pendingQueue) : newBaseQueueLast = newBaseQueueLast.next = updateLane, currentlyRenderingFiber.lanes |= revertLane, workInProgressRootSkippedLanes |= revertLane;
                    updateLane = update.action;
                    shouldDoubleInvokeUserFnsInHooksDEV && reducer(pendingQueue, updateLane);
                    pendingQueue = update.hasEagerState ? update.eagerState : reducer(pendingQueue, updateLane);
                } else revertLane = {
                    lane: updateLane,
                    revertLane: update.revertLane,
                    action: update.action,
                    hasEagerState: update.hasEagerState,
                    eagerState: update.eagerState,
                    next: null
                }, null === newBaseQueueLast ? (newBaseQueueFirst = newBaseQueueLast = revertLane, baseFirst = pendingQueue) : newBaseQueueLast = newBaseQueueLast.next = revertLane, currentlyRenderingFiber.lanes |= updateLane, workInProgressRootSkippedLanes |= updateLane;
                update = update.next;
            }while (null !== update && update !== current);
            null === newBaseQueueLast ? baseFirst = pendingQueue : newBaseQueueLast.next = newBaseQueueFirst;
            if (!objectIs(pendingQueue, hook.memoizedState) && (didReceiveUpdate = !0, didReadFromEntangledAsyncAction && (reducer = currentEntangledActionThenable, null !== reducer))) throw reducer;
            hook.memoizedState = pendingQueue;
            hook.baseState = baseFirst;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = pendingQueue;
        }
        null === baseQueue && (queue.lanes = 0);
        return [
            hook.memoizedState,
            queue.dispatch
        ];
    }
    function rerenderReducer(reducer) {
        var hook = updateWorkInProgressHook(), queue = hook.queue;
        if (null === queue) throw Error("Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)");
        queue.lastRenderedReducer = reducer;
        var dispatch = queue.dispatch, lastRenderPhaseUpdate = queue.pending, newState = hook.memoizedState;
        if (null !== lastRenderPhaseUpdate) {
            queue.pending = null;
            var update = lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            do newState = reducer(newState, update.action), update = update.next;
            while (update !== lastRenderPhaseUpdate);
            objectIs(newState, hook.memoizedState) || (didReceiveUpdate = !0);
            hook.memoizedState = newState;
            null === hook.baseQueue && (hook.baseState = newState);
            queue.lastRenderedState = newState;
        }
        return [
            newState,
            dispatch
        ];
    }
    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber, hook = mountWorkInProgressHook();
        if (isHydrating) {
            if (void 0 === getServerSnapshot) throw Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            var nextSnapshot = getServerSnapshot();
            didWarnUncachedGetSnapshot || nextSnapshot === getServerSnapshot() || (console.error("The result of getServerSnapshot should be cached to avoid an infinite loop"), didWarnUncachedGetSnapshot = !0);
        } else {
            nextSnapshot = getSnapshot();
            didWarnUncachedGetSnapshot || (getServerSnapshot = getSnapshot(), objectIs(nextSnapshot, getServerSnapshot) || (console.error("The result of getSnapshot should be cached to avoid an infinite loop"), didWarnUncachedGetSnapshot = !0));
            if (null === workInProgressRoot) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            0 !== (workInProgressRootRenderLanes & 124) || pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        }
        hook.memoizedState = nextSnapshot;
        getServerSnapshot = {
            value: nextSnapshot,
            getSnapshot: getSnapshot
        };
        hook.queue = getServerSnapshot;
        mountEffect(subscribeToStore.bind(null, fiber, getServerSnapshot, subscribe), [
            subscribe
        ]);
        fiber.flags |= 2048;
        pushSimpleEffect(HasEffect | Passive, createEffectInstance(), updateStoreInstance.bind(null, fiber, getServerSnapshot, nextSnapshot, getSnapshot), null);
        return nextSnapshot;
    }
    function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber, hook = updateWorkInProgressHook(), isHydrating$jscomp$0 = isHydrating;
        if (isHydrating$jscomp$0) {
            if (void 0 === getServerSnapshot) throw Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            getServerSnapshot = getServerSnapshot();
        } else if (getServerSnapshot = getSnapshot(), !didWarnUncachedGetSnapshot) {
            var cachedSnapshot = getSnapshot();
            objectIs(getServerSnapshot, cachedSnapshot) || (console.error("The result of getSnapshot should be cached to avoid an infinite loop"), didWarnUncachedGetSnapshot = !0);
        }
        if (cachedSnapshot = !objectIs((currentHook || hook).memoizedState, getServerSnapshot)) hook.memoizedState = getServerSnapshot, didReceiveUpdate = !0;
        hook = hook.queue;
        var create = subscribeToStore.bind(null, fiber, hook, subscribe);
        updateEffectImpl(2048, Passive, create, [
            subscribe
        ]);
        if (hook.getSnapshot !== getSnapshot || cachedSnapshot || null !== workInProgressHook && workInProgressHook.memoizedState.tag & HasEffect) {
            fiber.flags |= 2048;
            pushSimpleEffect(HasEffect | Passive, createEffectInstance(), updateStoreInstance.bind(null, fiber, hook, getServerSnapshot, getSnapshot), null);
            if (null === workInProgressRoot) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            isHydrating$jscomp$0 || 0 !== (renderLanes & 124) || pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);
        }
        return getServerSnapshot;
    }
    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
        fiber.flags |= 16384;
        fiber = {
            getSnapshot: getSnapshot,
            value: renderedSnapshot
        };
        getSnapshot = currentlyRenderingFiber.updateQueue;
        null === getSnapshot ? (getSnapshot = createFunctionComponentUpdateQueue(), currentlyRenderingFiber.updateQueue = getSnapshot, getSnapshot.stores = [
            fiber
        ]) : (renderedSnapshot = getSnapshot.stores, null === renderedSnapshot ? getSnapshot.stores = [
            fiber
        ] : renderedSnapshot.push(fiber));
    }
    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
        inst.value = nextSnapshot;
        inst.getSnapshot = getSnapshot;
        checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
    }
    function subscribeToStore(fiber, inst, subscribe) {
        return subscribe(function() {
            checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
        });
    }
    function checkIfSnapshotChanged(inst) {
        var latestGetSnapshot = inst.getSnapshot;
        inst = inst.value;
        try {
            var nextValue = latestGetSnapshot();
            return !objectIs(inst, nextValue);
        } catch (error) {
            return !0;
        }
    }
    function forceStoreRerender(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, 2);
        null !== root && scheduleUpdateOnFiber(root, fiber, 2);
    }
    function mountStateImpl(initialState) {
        var hook = mountWorkInProgressHook();
        if ("function" === typeof initialState) {
            var initialStateInitializer = initialState;
            initialState = initialStateInitializer();
            if (shouldDoubleInvokeUserFnsInHooksDEV) {
                setIsStrictModeForDevtools(!0);
                try {
                    initialStateInitializer();
                } finally{
                    setIsStrictModeForDevtools(!1);
                }
            }
        }
        hook.memoizedState = hook.baseState = initialState;
        hook.queue = {
            pending: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
        };
        return hook;
    }
    function mountState(initialState) {
        initialState = mountStateImpl(initialState);
        var queue = initialState.queue, dispatch = dispatchSetState.bind(null, currentlyRenderingFiber, queue);
        queue.dispatch = dispatch;
        return [
            initialState.memoizedState,
            dispatch
        ];
    }
    function mountOptimistic(passthrough) {
        var hook = mountWorkInProgressHook();
        hook.memoizedState = hook.baseState = passthrough;
        var queue = {
            pending: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: null,
            lastRenderedState: null
        };
        hook.queue = queue;
        hook = dispatchOptimisticSetState.bind(null, currentlyRenderingFiber, !0, queue);
        queue.dispatch = hook;
        return [
            passthrough,
            hook
        ];
    }
    function updateOptimistic(passthrough, reducer) {
        var hook = updateWorkInProgressHook();
        return updateOptimisticImpl(hook, currentHook, passthrough, reducer);
    }
    function updateOptimisticImpl(hook, current, passthrough, reducer) {
        hook.baseState = passthrough;
        return updateReducerImpl(hook, currentHook, "function" === typeof reducer ? reducer : basicStateReducer);
    }
    function rerenderOptimistic(passthrough, reducer) {
        var hook = updateWorkInProgressHook();
        if (null !== currentHook) return updateOptimisticImpl(hook, currentHook, passthrough, reducer);
        hook.baseState = passthrough;
        return [
            passthrough,
            hook.queue.dispatch
        ];
    }
    function dispatchActionState(fiber, actionQueue, setPendingState, setState, payload) {
        if (isRenderPhaseUpdate(fiber)) throw Error("Cannot update form state while rendering.");
        fiber = actionQueue.action;
        if (null !== fiber) {
            var actionNode = {
                payload: payload,
                action: fiber,
                next: null,
                isTransition: !0,
                status: "pending",
                value: null,
                reason: null,
                listeners: [],
                then: function(listener) {
                    actionNode.listeners.push(listener);
                }
            };
            null !== ReactSharedInternals.T ? setPendingState(!0) : actionNode.isTransition = !1;
            setState(actionNode);
            setPendingState = actionQueue.pending;
            null === setPendingState ? (actionNode.next = actionQueue.pending = actionNode, runActionStateAction(actionQueue, actionNode)) : (actionNode.next = setPendingState.next, actionQueue.pending = setPendingState.next = actionNode);
        }
    }
    function runActionStateAction(actionQueue, node) {
        var action = node.action, payload = node.payload, prevState = actionQueue.state;
        if (node.isTransition) {
            var prevTransition = ReactSharedInternals.T, currentTransition = {};
            ReactSharedInternals.T = currentTransition;
            ReactSharedInternals.T._updatedFibers = new Set();
            try {
                var returnValue = action(prevState, payload), onStartTransitionFinish = ReactSharedInternals.S;
                null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
                handleActionReturnValue(actionQueue, node, returnValue);
            } catch (error) {
                onActionError(actionQueue, node, error);
            } finally{
                ReactSharedInternals.T = prevTransition, null === prevTransition && currentTransition._updatedFibers && (actionQueue = currentTransition._updatedFibers.size, currentTransition._updatedFibers.clear(), 10 < actionQueue && console.warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."));
            }
        } else try {
            currentTransition = action(prevState, payload), handleActionReturnValue(actionQueue, node, currentTransition);
        } catch (error$4) {
            onActionError(actionQueue, node, error$4);
        }
    }
    function handleActionReturnValue(actionQueue, node, returnValue) {
        null !== returnValue && "object" === typeof returnValue && "function" === typeof returnValue.then ? (returnValue.then(function(nextState) {
            onActionSuccess(actionQueue, node, nextState);
        }, function(error) {
            return onActionError(actionQueue, node, error);
        }), node.isTransition || console.error("An async function with useActionState was called outside of a transition. This is likely not what you intended (for example, isPending will not update correctly). Either call the returned function inside startTransition, or pass it to an `action` or `formAction` prop.")) : onActionSuccess(actionQueue, node, returnValue);
    }
    function onActionSuccess(actionQueue, actionNode, nextState) {
        actionNode.status = "fulfilled";
        actionNode.value = nextState;
        notifyActionListeners(actionNode);
        actionQueue.state = nextState;
        actionNode = actionQueue.pending;
        null !== actionNode && (nextState = actionNode.next, nextState === actionNode ? actionQueue.pending = null : (nextState = nextState.next, actionNode.next = nextState, runActionStateAction(actionQueue, nextState)));
    }
    function onActionError(actionQueue, actionNode, error) {
        var last = actionQueue.pending;
        actionQueue.pending = null;
        if (null !== last) {
            last = last.next;
            do actionNode.status = "rejected", actionNode.reason = error, notifyActionListeners(actionNode), actionNode = actionNode.next;
            while (actionNode !== last);
        }
        actionQueue.action = null;
    }
    function notifyActionListeners(actionNode) {
        actionNode = actionNode.listeners;
        for(var i = 0; i < actionNode.length; i++)(0, actionNode[i])();
    }
    function actionStateReducer(oldState, newState) {
        return newState;
    }
    function mountActionState(action, initialStateProp) {
        if (isHydrating) {
            var ssrFormState = workInProgressRoot.formState;
            if (null !== ssrFormState) {
                a: {
                    var isMatching = currentlyRenderingFiber;
                    if (isHydrating) {
                        if (nextHydratableInstance) {
                            b: {
                                var markerInstance = nextHydratableInstance;
                                for(var inRootOrSingleton = rootOrSingletonContext; 8 !== markerInstance.nodeType;){
                                    if (!inRootOrSingleton) {
                                        markerInstance = null;
                                        break b;
                                    }
                                    markerInstance = getNextHydratable(markerInstance.nextSibling);
                                    if (null === markerInstance) {
                                        markerInstance = null;
                                        break b;
                                    }
                                }
                                inRootOrSingleton = markerInstance.data;
                                markerInstance = inRootOrSingleton === FORM_STATE_IS_MATCHING || inRootOrSingleton === FORM_STATE_IS_NOT_MATCHING ? markerInstance : null;
                            }
                            if (markerInstance) {
                                nextHydratableInstance = getNextHydratable(markerInstance.nextSibling);
                                isMatching = markerInstance.data === FORM_STATE_IS_MATCHING;
                                break a;
                            }
                        }
                        throwOnHydrationMismatch(isMatching);
                    }
                    isMatching = !1;
                }
                isMatching && (initialStateProp = ssrFormState[0]);
            }
        }
        ssrFormState = mountWorkInProgressHook();
        ssrFormState.memoizedState = ssrFormState.baseState = initialStateProp;
        isMatching = {
            pending: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: actionStateReducer,
            lastRenderedState: initialStateProp
        };
        ssrFormState.queue = isMatching;
        ssrFormState = dispatchSetState.bind(null, currentlyRenderingFiber, isMatching);
        isMatching.dispatch = ssrFormState;
        isMatching = mountStateImpl(!1);
        inRootOrSingleton = dispatchOptimisticSetState.bind(null, currentlyRenderingFiber, !1, isMatching.queue);
        isMatching = mountWorkInProgressHook();
        markerInstance = {
            state: initialStateProp,
            dispatch: null,
            action: action,
            pending: null
        };
        isMatching.queue = markerInstance;
        ssrFormState = dispatchActionState.bind(null, currentlyRenderingFiber, markerInstance, inRootOrSingleton, ssrFormState);
        markerInstance.dispatch = ssrFormState;
        isMatching.memoizedState = action;
        return [
            initialStateProp,
            ssrFormState,
            !1
        ];
    }
    function updateActionState(action) {
        var stateHook = updateWorkInProgressHook();
        return updateActionStateImpl(stateHook, currentHook, action);
    }
    function updateActionStateImpl(stateHook, currentStateHook, action) {
        currentStateHook = updateReducerImpl(stateHook, currentStateHook, actionStateReducer)[0];
        stateHook = updateReducer(basicStateReducer)[0];
        if ("object" === typeof currentStateHook && null !== currentStateHook && "function" === typeof currentStateHook.then) try {
            var state = useThenable(currentStateHook);
        } catch (x) {
            if (x === SuspenseException) throw SuspenseActionException;
            throw x;
        }
        else state = currentStateHook;
        currentStateHook = updateWorkInProgressHook();
        var actionQueue = currentStateHook.queue, dispatch = actionQueue.dispatch;
        action !== currentStateHook.memoizedState && (currentlyRenderingFiber.flags |= 2048, pushSimpleEffect(HasEffect | Passive, createEffectInstance(), actionStateActionEffect.bind(null, actionQueue, action), null));
        return [
            state,
            dispatch,
            stateHook
        ];
    }
    function actionStateActionEffect(actionQueue, action) {
        actionQueue.action = action;
    }
    function rerenderActionState(action) {
        var stateHook = updateWorkInProgressHook(), currentStateHook = currentHook;
        if (null !== currentStateHook) return updateActionStateImpl(stateHook, currentStateHook, action);
        updateWorkInProgressHook();
        stateHook = stateHook.memoizedState;
        currentStateHook = updateWorkInProgressHook();
        var dispatch = currentStateHook.queue.dispatch;
        currentStateHook.memoizedState = action;
        return [
            stateHook,
            dispatch,
            !1
        ];
    }
    function pushSimpleEffect(tag, inst, create, createDeps) {
        tag = {
            tag: tag,
            create: create,
            deps: createDeps,
            inst: inst,
            next: null
        };
        inst = currentlyRenderingFiber.updateQueue;
        null === inst && (inst = createFunctionComponentUpdateQueue(), currentlyRenderingFiber.updateQueue = inst);
        create = inst.lastEffect;
        null === create ? inst.lastEffect = tag.next = tag : (createDeps = create.next, create.next = tag, tag.next = createDeps, inst.lastEffect = tag);
        return tag;
    }
    function createEffectInstance() {
        return {
            destroy: void 0,
            resource: void 0
        };
    }
    function mountRef(initialValue) {
        var hook = mountWorkInProgressHook();
        initialValue = {
            current: initialValue
        };
        return hook.memoizedState = initialValue;
    }
    function mountEffectImpl(fiberFlags, hookFlags, create, createDeps) {
        var hook = mountWorkInProgressHook();
        createDeps = void 0 === createDeps ? null : createDeps;
        currentlyRenderingFiber.flags |= fiberFlags;
        hook.memoizedState = pushSimpleEffect(HasEffect | hookFlags, createEffectInstance(), create, createDeps);
    }
    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = updateWorkInProgressHook();
        deps = void 0 === deps ? null : deps;
        var inst = hook.memoizedState.inst;
        null !== currentHook && null !== deps && areHookInputsEqual(deps, currentHook.memoizedState.deps) ? hook.memoizedState = pushSimpleEffect(hookFlags, inst, create, deps) : (currentlyRenderingFiber.flags |= fiberFlags, hook.memoizedState = pushSimpleEffect(HasEffect | hookFlags, inst, create, deps));
    }
    function mountEffect(create, createDeps) {
        (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode && (currentlyRenderingFiber.mode & NoStrictPassiveEffectsMode) === NoMode ? mountEffectImpl(276826112, Passive, create, createDeps) : mountEffectImpl(8390656, Passive, create, createDeps);
    }
    function mountLayoutEffect(create, deps) {
        var fiberFlags = 4194308;
        (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode && (fiberFlags |= 134217728);
        return mountEffectImpl(fiberFlags, Layout, create, deps);
    }
    function imperativeHandleEffect(create, ref) {
        if ("function" === typeof ref) {
            create = create();
            var refCleanup = ref(create);
            return function() {
                "function" === typeof refCleanup ? refCleanup() : ref(null);
            };
        }
        if (null !== ref && void 0 !== ref) return ref.hasOwnProperty("current") || console.error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(ref).join(", ") + "}"), create = create(), ref.current = create, function() {
            ref.current = null;
        };
    }
    function mountImperativeHandle(ref, create, deps) {
        "function" !== typeof create && console.error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", null !== create ? typeof create : "null");
        deps = null !== deps && void 0 !== deps ? deps.concat([
            ref
        ]) : null;
        var fiberFlags = 4194308;
        (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode && (fiberFlags |= 134217728);
        mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), deps);
    }
    function updateImperativeHandle(ref, create, deps) {
        "function" !== typeof create && console.error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", null !== create ? typeof create : "null");
        deps = null !== deps && void 0 !== deps ? deps.concat([
            ref
        ]) : null;
        updateEffectImpl(4, Layout, imperativeHandleEffect.bind(null, create, ref), deps);
    }
    function mountCallback(callback, deps) {
        mountWorkInProgressHook().memoizedState = [
            callback,
            void 0 === deps ? null : deps
        ];
        return callback;
    }
    function updateCallback(callback, deps) {
        var hook = updateWorkInProgressHook();
        deps = void 0 === deps ? null : deps;
        var prevState = hook.memoizedState;
        if (null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
        hook.memoizedState = [
            callback,
            deps
        ];
        return callback;
    }
    function mountMemo(nextCreate, deps) {
        var hook = mountWorkInProgressHook();
        deps = void 0 === deps ? null : deps;
        var nextValue = nextCreate();
        if (shouldDoubleInvokeUserFnsInHooksDEV) {
            setIsStrictModeForDevtools(!0);
            try {
                nextCreate();
            } finally{
                setIsStrictModeForDevtools(!1);
            }
        }
        hook.memoizedState = [
            nextValue,
            deps
        ];
        return nextValue;
    }
    function updateMemo(nextCreate, deps) {
        var hook = updateWorkInProgressHook();
        deps = void 0 === deps ? null : deps;
        var prevState = hook.memoizedState;
        if (null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
        prevState = nextCreate();
        if (shouldDoubleInvokeUserFnsInHooksDEV) {
            setIsStrictModeForDevtools(!0);
            try {
                nextCreate();
            } finally{
                setIsStrictModeForDevtools(!1);
            }
        }
        hook.memoizedState = [
            prevState,
            deps
        ];
        return prevState;
    }
    function mountDeferredValue(value, initialValue) {
        var hook = mountWorkInProgressHook();
        return mountDeferredValueImpl(hook, value, initialValue);
    }
    function updateDeferredValue(value, initialValue) {
        var hook = updateWorkInProgressHook();
        return updateDeferredValueImpl(hook, currentHook.memoizedState, value, initialValue);
    }
    function rerenderDeferredValue(value, initialValue) {
        var hook = updateWorkInProgressHook();
        return null === currentHook ? mountDeferredValueImpl(hook, value, initialValue) : updateDeferredValueImpl(hook, currentHook.memoizedState, value, initialValue);
    }
    function mountDeferredValueImpl(hook, value, initialValue) {
        if (void 0 === initialValue || 0 !== (renderLanes & 1073741824)) return hook.memoizedState = value;
        hook.memoizedState = initialValue;
        hook = requestDeferredLane();
        currentlyRenderingFiber.lanes |= hook;
        workInProgressRootSkippedLanes |= hook;
        return initialValue;
    }
    function updateDeferredValueImpl(hook, prevValue, value, initialValue) {
        if (objectIs(value, prevValue)) return value;
        if (null !== currentTreeHiddenStackCursor.current) return hook = mountDeferredValueImpl(hook, value, initialValue), objectIs(hook, prevValue) || (didReceiveUpdate = !0), hook;
        if (0 === (renderLanes & 42)) return didReceiveUpdate = !0, hook.memoizedState = value;
        hook = requestDeferredLane();
        currentlyRenderingFiber.lanes |= hook;
        workInProgressRootSkippedLanes |= hook;
        return prevValue;
    }
    function startTransition(fiber, queue, pendingState, finishedState, callback) {
        var previousPriority = ReactDOMSharedInternals.p;
        ReactDOMSharedInternals.p = 0 !== previousPriority && previousPriority < ContinuousEventPriority ? previousPriority : ContinuousEventPriority;
        var prevTransition = ReactSharedInternals.T, currentTransition = {};
        ReactSharedInternals.T = currentTransition;
        dispatchOptimisticSetState(fiber, !1, queue, pendingState);
        currentTransition._updatedFibers = new Set();
        try {
            var returnValue = callback(), onStartTransitionFinish = ReactSharedInternals.S;
            null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
            if (null !== returnValue && "object" === typeof returnValue && "function" === typeof returnValue.then) {
                var thenableForFinishedState = chainThenableValue(returnValue, finishedState);
                dispatchSetStateInternal(fiber, queue, thenableForFinishedState, requestUpdateLane(fiber));
            } else dispatchSetStateInternal(fiber, queue, finishedState, requestUpdateLane(fiber));
        } catch (error) {
            dispatchSetStateInternal(fiber, queue, {
                then: function() {},
                status: "rejected",
                reason: error
            }, requestUpdateLane(fiber));
        } finally{
            ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = prevTransition, null === prevTransition && currentTransition._updatedFibers && (fiber = currentTransition._updatedFibers.size, currentTransition._updatedFibers.clear(), 10 < fiber && console.warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."));
        }
    }
    function startHostTransition(formFiber, pendingState, action, formData) {
        if (5 !== formFiber.tag) throw Error("Expected the form instance to be a HostComponent. This is a bug in React.");
        var queue = ensureFormComponentIsStateful(formFiber).queue;
        startTransition(formFiber, queue, pendingState, NotPendingTransition, null === action ? noop$2 : function() {
            requestFormReset$1(formFiber);
            return action(formData);
        });
    }
    function ensureFormComponentIsStateful(formFiber) {
        var existingStateHook = formFiber.memoizedState;
        if (null !== existingStateHook) return existingStateHook;
        existingStateHook = {
            memoizedState: NotPendingTransition,
            baseState: NotPendingTransition,
            baseQueue: null,
            queue: {
                pending: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: basicStateReducer,
                lastRenderedState: NotPendingTransition
            },
            next: null
        };
        var initialResetState = {};
        existingStateHook.next = {
            memoizedState: initialResetState,
            baseState: initialResetState,
            baseQueue: null,
            queue: {
                pending: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: basicStateReducer,
                lastRenderedState: initialResetState
            },
            next: null
        };
        formFiber.memoizedState = existingStateHook;
        formFiber = formFiber.alternate;
        null !== formFiber && (formFiber.memoizedState = existingStateHook);
        return existingStateHook;
    }
    function requestFormReset$1(formFiber) {
        null === ReactSharedInternals.T && console.error("requestFormReset was called outside a transition or action. To fix, move to an action, or wrap with startTransition.");
        var resetStateQueue = ensureFormComponentIsStateful(formFiber).next.queue;
        dispatchSetStateInternal(formFiber, resetStateQueue, {}, requestUpdateLane(formFiber));
    }
    function mountTransition() {
        var stateHook = mountStateImpl(!1);
        stateHook = startTransition.bind(null, currentlyRenderingFiber, stateHook.queue, !0, !1);
        mountWorkInProgressHook().memoizedState = stateHook;
        return [
            !1,
            stateHook
        ];
    }
    function updateTransition() {
        var booleanOrThenable = updateReducer(basicStateReducer)[0], start = updateWorkInProgressHook().memoizedState;
        return [
            "boolean" === typeof booleanOrThenable ? booleanOrThenable : useThenable(booleanOrThenable),
            start
        ];
    }
    function rerenderTransition() {
        var booleanOrThenable = rerenderReducer(basicStateReducer)[0], start = updateWorkInProgressHook().memoizedState;
        return [
            "boolean" === typeof booleanOrThenable ? booleanOrThenable : useThenable(booleanOrThenable),
            start
        ];
    }
    function useHostTransitionStatus() {
        return readContext(HostTransitionContext);
    }
    function mountId() {
        var hook = mountWorkInProgressHook(), identifierPrefix = workInProgressRoot.identifierPrefix;
        if (isHydrating) {
            var treeId = treeContextOverflow;
            var idWithLeadingBit = treeContextId;
            treeId = (idWithLeadingBit & ~(1 << 32 - clz32(idWithLeadingBit) - 1)).toString(32) + treeId;
            identifierPrefix = "\u00ab" + identifierPrefix + "R" + treeId;
            treeId = localIdCounter++;
            0 < treeId && (identifierPrefix += "H" + treeId.toString(32));
            identifierPrefix += "\u00bb";
        } else treeId = globalClientIdCounter++, identifierPrefix = "\u00ab" + identifierPrefix + "r" + treeId.toString(32) + "\u00bb";
        return hook.memoizedState = identifierPrefix;
    }
    function mountRefresh() {
        return mountWorkInProgressHook().memoizedState = refreshCache.bind(null, currentlyRenderingFiber);
    }
    function refreshCache(fiber, seedKey) {
        for(var provider = fiber.return; null !== provider;){
            switch(provider.tag){
                case 24:
                case 3:
                    var lane = requestUpdateLane(provider);
                    fiber = createUpdate(lane);
                    var root = enqueueUpdate(provider, fiber, lane);
                    null !== root && (scheduleUpdateOnFiber(root, provider, lane), entangleTransitions(root, provider, lane));
                    provider = createCache();
                    null !== seedKey && void 0 !== seedKey && null !== root && console.error("The seed argument is not enabled outside experimental channels.");
                    fiber.payload = {
                        cache: provider
                    };
                    return;
            }
            provider = provider.return;
        }
    }
    function dispatchReducerAction(fiber, queue, action) {
        var args = arguments;
        "function" === typeof args[3] && console.error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        args = requestUpdateLane(fiber);
        var update = {
            lane: args,
            revertLane: 0,
            action: action,
            hasEagerState: !1,
            eagerState: null,
            next: null
        };
        isRenderPhaseUpdate(fiber) ? enqueueRenderPhaseUpdate(queue, update) : (update = enqueueConcurrentHookUpdate(fiber, queue, update, args), null !== update && (scheduleUpdateOnFiber(update, fiber, args), entangleTransitionUpdate(update, queue, args)));
        markStateUpdateScheduled(fiber, args);
    }
    function dispatchSetState(fiber, queue, action) {
        var args = arguments;
        "function" === typeof args[3] && console.error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        args = requestUpdateLane(fiber);
        dispatchSetStateInternal(fiber, queue, action, args);
        markStateUpdateScheduled(fiber, args);
    }
    function dispatchSetStateInternal(fiber, queue, action, lane) {
        var update = {
            lane: lane,
            revertLane: 0,
            action: action,
            hasEagerState: !1,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
        else {
            var alternate = fiber.alternate;
            if (0 === fiber.lanes && (null === alternate || 0 === alternate.lanes) && (alternate = queue.lastRenderedReducer, null !== alternate)) {
                var prevDispatcher = ReactSharedInternals.H;
                ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                    var currentState = queue.lastRenderedState, eagerState = alternate(currentState, action);
                    update.hasEagerState = !0;
                    update.eagerState = eagerState;
                    if (objectIs(eagerState, currentState)) return enqueueUpdate$1(fiber, queue, update, 0), null === workInProgressRoot && finishQueueingConcurrentUpdates(), !1;
                } catch (error) {} finally{
                    ReactSharedInternals.H = prevDispatcher;
                }
            }
            action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
            if (null !== action) return scheduleUpdateOnFiber(action, fiber, lane), entangleTransitionUpdate(action, queue, lane), !0;
        }
        return !1;
    }
    function dispatchOptimisticSetState(fiber, throwIfDuringRender, queue, action) {
        null === ReactSharedInternals.T && 0 === currentEntangledLane && console.error("An optimistic state update occurred outside a transition or action. To fix, move the update to an action, or wrap with startTransition.");
        action = {
            lane: 2,
            revertLane: requestTransitionLane(),
            action: action,
            hasEagerState: !1,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) {
            if (throwIfDuringRender) throw Error("Cannot update optimistic state while rendering.");
            console.error("Cannot call startTransition while rendering.");
        } else throwIfDuringRender = enqueueConcurrentHookUpdate(fiber, queue, action, 2), null !== throwIfDuringRender && scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);
        markStateUpdateScheduled(fiber, 2);
    }
    function isRenderPhaseUpdate(fiber) {
        var alternate = fiber.alternate;
        return fiber === currentlyRenderingFiber || null !== alternate && alternate === currentlyRenderingFiber;
    }
    function enqueueRenderPhaseUpdate(queue, update) {
        didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = !0;
        var pending = queue.pending;
        null === pending ? update.next = update : (update.next = pending.next, pending.next = update);
        queue.pending = update;
    }
    function entangleTransitionUpdate(root, queue, lane) {
        if (0 !== (lane & 4194048)) {
            var queueLanes = queue.lanes;
            queueLanes &= root.pendingLanes;
            lane |= queueLanes;
            queue.lanes = lane;
            markRootEntangled(root, lane);
        }
    }
    function pushDebugInfo(debugInfo) {
        var previousDebugInfo = currentDebugInfo;
        null != debugInfo && (currentDebugInfo = null === previousDebugInfo ? debugInfo : previousDebugInfo.concat(debugInfo));
        return previousDebugInfo;
    }
    function validateFragmentProps(element, fiber, returnFiber) {
        for(var keys = Object.keys(element.props), i = 0; i < keys.length; i++){
            var key = keys[i];
            if ("children" !== key && "key" !== key) {
                null === fiber && (fiber = createFiberFromElement(element, returnFiber.mode, 0), fiber._debugInfo = currentDebugInfo, fiber.return = returnFiber);
                runWithFiberInDEV(fiber, function(erroredKey) {
                    console.error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", erroredKey);
                }, key);
                break;
            }
        }
    }
    function unwrapThenable(thenable) {
        var index = thenableIndexCounter;
        thenableIndexCounter += 1;
        null === thenableState && (thenableState = createThenableState());
        return trackUsedThenable(thenableState, thenable, index);
    }
    function coerceRef(workInProgress, element) {
        element = element.props.ref;
        workInProgress.ref = void 0 !== element ? element : null;
    }
    function throwOnInvalidObjectType(returnFiber, newChild) {
        if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE) throw Error('A React Element from an older version of React was rendered. This is not supported. It can happen if:\n- Multiple copies of the "react" package is used.\n- A library pre-bundled an old copy of "react" or "react/jsx-runtime".\n- A compiler tries to "inline" JSX instead of using the runtime.');
        returnFiber = Object.prototype.toString.call(newChild);
        throw Error("Objects are not valid as a React child (found: " + ("[object Object]" === returnFiber ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : returnFiber) + "). If you meant to render a collection of children, use an array instead.");
    }
    function warnOnFunctionType(returnFiber, invalidChild) {
        var parentName = getComponentNameFromFiber(returnFiber) || "Component";
        ownerHasFunctionTypeWarning[parentName] || (ownerHasFunctionTypeWarning[parentName] = !0, invalidChild = invalidChild.displayName || invalidChild.name || "Component", 3 === returnFiber.tag ? console.error("Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\n  root.render(%s)", invalidChild, invalidChild, invalidChild) : console.error("Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\n  <%s>{%s}</%s>", invalidChild, invalidChild, parentName, invalidChild, parentName));
    }
    function warnOnSymbolType(returnFiber, invalidChild) {
        var parentName = getComponentNameFromFiber(returnFiber) || "Component";
        ownerHasSymbolTypeWarning[parentName] || (ownerHasSymbolTypeWarning[parentName] = !0, invalidChild = String(invalidChild), 3 === returnFiber.tag ? console.error("Symbols are not valid as a React child.\n  root.render(%s)", invalidChild) : console.error("Symbols are not valid as a React child.\n  <%s>%s</%s>", parentName, invalidChild, parentName));
    }
    function createChildReconciler(shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
            if (shouldTrackSideEffects) {
                var deletions = returnFiber.deletions;
                null === deletions ? (returnFiber.deletions = [
                    childToDelete
                ], returnFiber.flags |= 16) : deletions.push(childToDelete);
            }
        }
        function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) return null;
            for(; null !== currentFirstChild;)deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
            return null;
        }
        function mapRemainingChildren(currentFirstChild) {
            for(var existingChildren = new Map(); null !== currentFirstChild;)null !== currentFirstChild.key ? existingChildren.set(currentFirstChild.key, currentFirstChild) : existingChildren.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
            return existingChildren;
        }
        function useFiber(fiber, pendingProps) {
            fiber = createWorkInProgress(fiber, pendingProps);
            fiber.index = 0;
            fiber.sibling = null;
            return fiber;
        }
        function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) return newFiber.flags |= 1048576, lastPlacedIndex;
            newIndex = newFiber.alternate;
            if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.flags |= 67108866, lastPlacedIndex) : newIndex;
            newFiber.flags |= 67108866;
            return lastPlacedIndex;
        }
        function placeSingleChild(newFiber) {
            shouldTrackSideEffects && null === newFiber.alternate && (newFiber.flags |= 67108866);
            return newFiber;
        }
        function updateTextNode(returnFiber, current, textContent, lanes) {
            if (null === current || 6 !== current.tag) return current = createFiberFromText(textContent, returnFiber.mode, lanes), current.return = returnFiber, current._debugOwner = returnFiber, current._debugTask = returnFiber._debugTask, current._debugInfo = currentDebugInfo, current;
            current = useFiber(current, textContent);
            current.return = returnFiber;
            current._debugInfo = currentDebugInfo;
            return current;
        }
        function updateElement(returnFiber, current, element, lanes) {
            var elementType = element.type;
            if (elementType === REACT_FRAGMENT_TYPE) return current = updateFragment(returnFiber, current, element.props.children, lanes, element.key), validateFragmentProps(element, current, returnFiber), current;
            if (null !== current && (current.elementType === elementType || isCompatibleFamilyForHotReloading(current, element) || "object" === typeof elementType && null !== elementType && elementType.$$typeof === REACT_LAZY_TYPE && callLazyInitInDEV(elementType) === current.type)) return current = useFiber(current, element.props), coerceRef(current, element), current.return = returnFiber, current._debugOwner = element._owner, current._debugInfo = currentDebugInfo, current;
            current = createFiberFromElement(element, returnFiber.mode, lanes);
            coerceRef(current, element);
            current.return = returnFiber;
            current._debugInfo = currentDebugInfo;
            return current;
        }
        function updatePortal(returnFiber, current, portal, lanes) {
            if (null === current || 4 !== current.tag || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) return current = createFiberFromPortal(portal, returnFiber.mode, lanes), current.return = returnFiber, current._debugInfo = currentDebugInfo, current;
            current = useFiber(current, portal.children || []);
            current.return = returnFiber;
            current._debugInfo = currentDebugInfo;
            return current;
        }
        function updateFragment(returnFiber, current, fragment, lanes, key) {
            if (null === current || 7 !== current.tag) return current = createFiberFromFragment(fragment, returnFiber.mode, lanes, key), current.return = returnFiber, current._debugOwner = returnFiber, current._debugTask = returnFiber._debugTask, current._debugInfo = currentDebugInfo, current;
            current = useFiber(current, fragment);
            current.return = returnFiber;
            current._debugInfo = currentDebugInfo;
            return current;
        }
        function createChild(returnFiber, newChild, lanes) {
            if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, lanes), newChild.return = returnFiber, newChild._debugOwner = returnFiber, newChild._debugTask = returnFiber._debugTask, newChild._debugInfo = currentDebugInfo, newChild;
            if ("object" === typeof newChild && null !== newChild) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return lanes = createFiberFromElement(newChild, returnFiber.mode, lanes), coerceRef(lanes, newChild), lanes.return = returnFiber, returnFiber = pushDebugInfo(newChild._debugInfo), lanes._debugInfo = currentDebugInfo, currentDebugInfo = returnFiber, lanes;
                    case REACT_PORTAL_TYPE:
                        return newChild = createFiberFromPortal(newChild, returnFiber.mode, lanes), newChild.return = returnFiber, newChild._debugInfo = currentDebugInfo, newChild;
                    case REACT_LAZY_TYPE:
                        var _prevDebugInfo = pushDebugInfo(newChild._debugInfo);
                        newChild = callLazyInitInDEV(newChild);
                        returnFiber = createChild(returnFiber, newChild, lanes);
                        currentDebugInfo = _prevDebugInfo;
                        return returnFiber;
                }
                if (isArrayImpl(newChild) || getIteratorFn(newChild)) return lanes = createFiberFromFragment(newChild, returnFiber.mode, lanes, null), lanes.return = returnFiber, lanes._debugOwner = returnFiber, lanes._debugTask = returnFiber._debugTask, returnFiber = pushDebugInfo(newChild._debugInfo), lanes._debugInfo = currentDebugInfo, currentDebugInfo = returnFiber, lanes;
                if ("function" === typeof newChild.then) return _prevDebugInfo = pushDebugInfo(newChild._debugInfo), returnFiber = createChild(returnFiber, unwrapThenable(newChild), lanes), currentDebugInfo = _prevDebugInfo, returnFiber;
                if (newChild.$$typeof === REACT_CONTEXT_TYPE) return createChild(returnFiber, readContextDuringReconciliation(returnFiber, newChild), lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            "function" === typeof newChild && warnOnFunctionType(returnFiber, newChild);
            "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
            return null;
        }
        function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            var key = null !== oldFiber ? oldFiber.key : null;
            if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
            if ("object" === typeof newChild && null !== newChild) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return newChild.key === key ? (key = pushDebugInfo(newChild._debugInfo), returnFiber = updateElement(returnFiber, oldFiber, newChild, lanes), currentDebugInfo = key, returnFiber) : null;
                    case REACT_PORTAL_TYPE:
                        return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, lanes) : null;
                    case REACT_LAZY_TYPE:
                        return key = pushDebugInfo(newChild._debugInfo), newChild = callLazyInitInDEV(newChild), returnFiber = updateSlot(returnFiber, oldFiber, newChild, lanes), currentDebugInfo = key, returnFiber;
                }
                if (isArrayImpl(newChild) || getIteratorFn(newChild)) {
                    if (null !== key) return null;
                    key = pushDebugInfo(newChild._debugInfo);
                    returnFiber = updateFragment(returnFiber, oldFiber, newChild, lanes, null);
                    currentDebugInfo = key;
                    return returnFiber;
                }
                if ("function" === typeof newChild.then) return key = pushDebugInfo(newChild._debugInfo), returnFiber = updateSlot(returnFiber, oldFiber, unwrapThenable(newChild), lanes), currentDebugInfo = key, returnFiber;
                if (newChild.$$typeof === REACT_CONTEXT_TYPE) return updateSlot(returnFiber, oldFiber, readContextDuringReconciliation(returnFiber, newChild), lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            "function" === typeof newChild && warnOnFunctionType(returnFiber, newChild);
            "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
            return null;
        }
        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, lanes);
            if ("object" === typeof newChild && null !== newChild) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return newIdx = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, existingChildren = pushDebugInfo(newChild._debugInfo), returnFiber = updateElement(returnFiber, newIdx, newChild, lanes), currentDebugInfo = existingChildren, returnFiber;
                    case REACT_PORTAL_TYPE:
                        return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, lanes);
                    case REACT_LAZY_TYPE:
                        var _prevDebugInfo7 = pushDebugInfo(newChild._debugInfo);
                        newChild = callLazyInitInDEV(newChild);
                        returnFiber = updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes);
                        currentDebugInfo = _prevDebugInfo7;
                        return returnFiber;
                }
                if (isArrayImpl(newChild) || getIteratorFn(newChild)) return newIdx = existingChildren.get(newIdx) || null, existingChildren = pushDebugInfo(newChild._debugInfo), returnFiber = updateFragment(returnFiber, newIdx, newChild, lanes, null), currentDebugInfo = existingChildren, returnFiber;
                if ("function" === typeof newChild.then) return _prevDebugInfo7 = pushDebugInfo(newChild._debugInfo), returnFiber = updateFromMap(existingChildren, returnFiber, newIdx, unwrapThenable(newChild), lanes), currentDebugInfo = _prevDebugInfo7, returnFiber;
                if (newChild.$$typeof === REACT_CONTEXT_TYPE) return updateFromMap(existingChildren, returnFiber, newIdx, readContextDuringReconciliation(returnFiber, newChild), lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            "function" === typeof newChild && warnOnFunctionType(returnFiber, newChild);
            "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
            return null;
        }
        function warnOnInvalidKey(returnFiber, workInProgress, child, knownKeys) {
            if ("object" !== typeof child || null === child) return knownKeys;
            switch(child.$$typeof){
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                    warnForMissingKey(returnFiber, workInProgress, child);
                    var key = child.key;
                    if ("string" !== typeof key) break;
                    if (null === knownKeys) {
                        knownKeys = new Set();
                        knownKeys.add(key);
                        break;
                    }
                    if (!knownKeys.has(key)) {
                        knownKeys.add(key);
                        break;
                    }
                    runWithFiberInDEV(workInProgress, function() {
                        console.error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                    });
                    break;
                case REACT_LAZY_TYPE:
                    child = callLazyInitInDEV(child), warnOnInvalidKey(returnFiber, workInProgress, child, knownKeys);
            }
            return knownKeys;
        }
        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            for(var knownKeys = null, resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++){
                oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
                if (null === newFiber) {
                    null === oldFiber && (oldFiber = nextOldFiber);
                    break;
                }
                knownKeys = warnOnInvalidKey(returnFiber, newFiber, newChildren[newIdx], knownKeys);
                shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
                currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
                null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), isHydrating && pushTreeFork(returnFiber, newIdx), resultingFirstChild;
            if (null === oldFiber) {
                for(; newIdx < newChildren.length; newIdx++)oldFiber = createChild(returnFiber, newChildren[newIdx], lanes), null !== oldFiber && (knownKeys = warnOnInvalidKey(returnFiber, oldFiber, newChildren[newIdx], knownKeys), currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
                isHydrating && pushTreeFork(returnFiber, newIdx);
                return resultingFirstChild;
            }
            for(oldFiber = mapRemainingChildren(oldFiber); newIdx < newChildren.length; newIdx++)nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], lanes), null !== nextOldFiber && (knownKeys = warnOnInvalidKey(returnFiber, nextOldFiber, newChildren[newIdx], knownKeys), shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
            shouldTrackSideEffects && oldFiber.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            isHydrating && pushTreeFork(returnFiber, newIdx);
            return resultingFirstChild;
        }
        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildren, lanes) {
            if (null == newChildren) throw Error("An iterable object provided no iterator.");
            for(var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, knownKeys = null, step = newChildren.next(); null !== oldFiber && !step.done; newIdx++, step = newChildren.next()){
                oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
                if (null === newFiber) {
                    null === oldFiber && (oldFiber = nextOldFiber);
                    break;
                }
                knownKeys = warnOnInvalidKey(returnFiber, newFiber, step.value, knownKeys);
                shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
                currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
                null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), isHydrating && pushTreeFork(returnFiber, newIdx), resultingFirstChild;
            if (null === oldFiber) {
                for(; !step.done; newIdx++, step = newChildren.next())oldFiber = createChild(returnFiber, step.value, lanes), null !== oldFiber && (knownKeys = warnOnInvalidKey(returnFiber, oldFiber, step.value, knownKeys), currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
                isHydrating && pushTreeFork(returnFiber, newIdx);
                return resultingFirstChild;
            }
            for(oldFiber = mapRemainingChildren(oldFiber); !step.done; newIdx++, step = newChildren.next())nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes), null !== nextOldFiber && (knownKeys = warnOnInvalidKey(returnFiber, nextOldFiber, step.value, knownKeys), shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
            shouldTrackSideEffects && oldFiber.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            isHydrating && pushTreeFork(returnFiber, newIdx);
            return resultingFirstChild;
        }
        function reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes) {
            "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key && (validateFragmentProps(newChild, null, returnFiber), newChild = newChild.props.children);
            if ("object" === typeof newChild && null !== newChild) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var prevDebugInfo = pushDebugInfo(newChild._debugInfo);
                        a: {
                            for(var key = newChild.key; null !== currentFirstChild;){
                                if (currentFirstChild.key === key) {
                                    key = newChild.type;
                                    if (key === REACT_FRAGMENT_TYPE) {
                                        if (7 === currentFirstChild.tag) {
                                            deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                                            lanes = useFiber(currentFirstChild, newChild.props.children);
                                            lanes.return = returnFiber;
                                            lanes._debugOwner = newChild._owner;
                                            lanes._debugInfo = currentDebugInfo;
                                            validateFragmentProps(newChild, lanes, returnFiber);
                                            returnFiber = lanes;
                                            break a;
                                        }
                                    } else if (currentFirstChild.elementType === key || isCompatibleFamilyForHotReloading(currentFirstChild, newChild) || "object" === typeof key && null !== key && key.$$typeof === REACT_LAZY_TYPE && callLazyInitInDEV(key) === currentFirstChild.type) {
                                        deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                                        lanes = useFiber(currentFirstChild, newChild.props);
                                        coerceRef(lanes, newChild);
                                        lanes.return = returnFiber;
                                        lanes._debugOwner = newChild._owner;
                                        lanes._debugInfo = currentDebugInfo;
                                        returnFiber = lanes;
                                        break a;
                                    }
                                    deleteRemainingChildren(returnFiber, currentFirstChild);
                                    break;
                                } else deleteChild(returnFiber, currentFirstChild);
                                currentFirstChild = currentFirstChild.sibling;
                            }
                            newChild.type === REACT_FRAGMENT_TYPE ? (lanes = createFiberFromFragment(newChild.props.children, returnFiber.mode, lanes, newChild.key), lanes.return = returnFiber, lanes._debugOwner = returnFiber, lanes._debugTask = returnFiber._debugTask, lanes._debugInfo = currentDebugInfo, validateFragmentProps(newChild, lanes, returnFiber), returnFiber = lanes) : (lanes = createFiberFromElement(newChild, returnFiber.mode, lanes), coerceRef(lanes, newChild), lanes.return = returnFiber, lanes._debugInfo = currentDebugInfo, returnFiber = lanes);
                        }
                        returnFiber = placeSingleChild(returnFiber);
                        currentDebugInfo = prevDebugInfo;
                        return returnFiber;
                    case REACT_PORTAL_TYPE:
                        a: {
                            prevDebugInfo = newChild;
                            for(newChild = prevDebugInfo.key; null !== currentFirstChild;){
                                if (currentFirstChild.key === newChild) {
                                    if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === prevDebugInfo.containerInfo && currentFirstChild.stateNode.implementation === prevDebugInfo.implementation) {
                                        deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                                        lanes = useFiber(currentFirstChild, prevDebugInfo.children || []);
                                        lanes.return = returnFiber;
                                        returnFiber = lanes;
                                        break a;
                                    } else {
                                        deleteRemainingChildren(returnFiber, currentFirstChild);
                                        break;
                                    }
                                } else deleteChild(returnFiber, currentFirstChild);
                                currentFirstChild = currentFirstChild.sibling;
                            }
                            lanes = createFiberFromPortal(prevDebugInfo, returnFiber.mode, lanes);
                            lanes.return = returnFiber;
                            returnFiber = lanes;
                        }
                        return placeSingleChild(returnFiber);
                    case REACT_LAZY_TYPE:
                        return prevDebugInfo = pushDebugInfo(newChild._debugInfo), newChild = callLazyInitInDEV(newChild), returnFiber = reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes), currentDebugInfo = prevDebugInfo, returnFiber;
                }
                if (isArrayImpl(newChild)) return prevDebugInfo = pushDebugInfo(newChild._debugInfo), returnFiber = reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes), currentDebugInfo = prevDebugInfo, returnFiber;
                if (getIteratorFn(newChild)) {
                    prevDebugInfo = pushDebugInfo(newChild._debugInfo);
                    key = getIteratorFn(newChild);
                    if ("function" !== typeof key) throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
                    var newChildren = key.call(newChild);
                    if (newChildren === newChild) {
                        if (0 !== returnFiber.tag || "[object GeneratorFunction]" !== Object.prototype.toString.call(returnFiber.type) || "[object Generator]" !== Object.prototype.toString.call(newChildren)) didWarnAboutGenerators || console.error("Using Iterators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. You can also use an Iterable that can iterate multiple times over the same items."), didWarnAboutGenerators = !0;
                    } else newChild.entries !== key || didWarnAboutMaps || (console.error("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), didWarnAboutMaps = !0);
                    returnFiber = reconcileChildrenIterator(returnFiber, currentFirstChild, newChildren, lanes);
                    currentDebugInfo = prevDebugInfo;
                    return returnFiber;
                }
                if ("function" === typeof newChild.then) return prevDebugInfo = pushDebugInfo(newChild._debugInfo), returnFiber = reconcileChildFibersImpl(returnFiber, currentFirstChild, unwrapThenable(newChild), lanes), currentDebugInfo = prevDebugInfo, returnFiber;
                if (newChild.$$typeof === REACT_CONTEXT_TYPE) return reconcileChildFibersImpl(returnFiber, currentFirstChild, readContextDuringReconciliation(returnFiber, newChild), lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return prevDebugInfo = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), lanes = useFiber(currentFirstChild, prevDebugInfo), lanes.return = returnFiber, returnFiber = lanes) : (deleteRemainingChildren(returnFiber, currentFirstChild), lanes = createFiberFromText(prevDebugInfo, returnFiber.mode, lanes), lanes.return = returnFiber, lanes._debugOwner = returnFiber, lanes._debugTask = returnFiber._debugTask, lanes._debugInfo = currentDebugInfo, returnFiber = lanes), placeSingleChild(returnFiber);
            "function" === typeof newChild && warnOnFunctionType(returnFiber, newChild);
            "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
            return deleteRemainingChildren(returnFiber, currentFirstChild);
        }
        return function(returnFiber, currentFirstChild, newChild, lanes) {
            var prevDebugInfo = currentDebugInfo;
            currentDebugInfo = null;
            try {
                thenableIndexCounter = 0;
                var firstChildFiber = reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes);
                thenableState = null;
                return firstChildFiber;
            } catch (x) {
                if (x === SuspenseException || x === SuspenseActionException) throw x;
                var fiber = createFiber(29, x, null, returnFiber.mode);
                fiber.lanes = lanes;
                fiber.return = returnFiber;
                var debugInfo = fiber._debugInfo = currentDebugInfo;
                fiber._debugOwner = returnFiber._debugOwner;
                fiber._debugTask = returnFiber._debugTask;
                if (null != debugInfo) {
                    for(var i = debugInfo.length - 1; 0 <= i; i--)if ("string" === typeof debugInfo[i].stack) {
                        fiber._debugOwner = debugInfo[i];
                        fiber._debugTask = debugInfo[i].debugTask;
                        break;
                    }
                }
                return fiber;
            } finally{
                currentDebugInfo = prevDebugInfo;
            }
        };
    }
    function pushPrimaryTreeSuspenseHandler(handler) {
        var current = handler.alternate;
        push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, handler);
        push(suspenseHandlerStackCursor, handler, handler);
        null === shellBoundary && (null === current || null !== currentTreeHiddenStackCursor.current ? shellBoundary = handler : null !== current.memoizedState && (shellBoundary = handler));
    }
    function pushOffscreenSuspenseHandler(fiber) {
        if (22 === fiber.tag) {
            if (push(suspenseStackCursor, suspenseStackCursor.current, fiber), push(suspenseHandlerStackCursor, fiber, fiber), null === shellBoundary) {
                var current = fiber.alternate;
                null !== current && null !== current.memoizedState && (shellBoundary = fiber);
            }
        } else reuseSuspenseHandlerOnStack(fiber);
    }
    function reuseSuspenseHandlerOnStack(fiber) {
        push(suspenseStackCursor, suspenseStackCursor.current, fiber);
        push(suspenseHandlerStackCursor, suspenseHandlerStackCursor.current, fiber);
    }
    function popSuspenseHandler(fiber) {
        pop(suspenseHandlerStackCursor, fiber);
        shellBoundary === fiber && (shellBoundary = null);
        pop(suspenseStackCursor, fiber);
    }
    function findFirstSuspended(row) {
        for(var node = row; null !== node;){
            if (13 === node.tag) {
                var state = node.memoizedState;
                if (null !== state && (state = state.dehydrated, null === state || state.data === SUSPENSE_PENDING_START_DATA || isSuspenseInstanceFallback(state))) return node;
            } else if (19 === node.tag && void 0 !== node.memoizedProps.revealOrder) {
                if (0 !== (node.flags & 128)) return node;
            } else if (null !== node.child) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === row) break;
            for(; null === node.sibling;){
                if (null === node.return || node.return === row) return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return null;
    }
    function warnOnInvalidCallback(callback) {
        if (null !== callback && "function" !== typeof callback) {
            var key = String(callback);
            didWarnOnInvalidCallback.has(key) || (didWarnOnInvalidCallback.add(key), console.error("Expected the last optional `callback` argument to be a function. Instead received: %s.", callback));
        }
    }
    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
        var prevState = workInProgress.memoizedState, partialState = getDerivedStateFromProps(nextProps, prevState);
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(!0);
            try {
                partialState = getDerivedStateFromProps(nextProps, prevState);
            } finally{
                setIsStrictModeForDevtools(!1);
            }
        }
        void 0 === partialState && (ctor = getComponentNameFromType(ctor) || "Component", didWarnAboutUndefinedDerivedState.has(ctor) || (didWarnAboutUndefinedDerivedState.add(ctor), console.error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", ctor)));
        prevState = null === partialState || void 0 === partialState ? prevState : assign({}, prevState, partialState);
        workInProgress.memoizedState = prevState;
        0 === workInProgress.lanes && (workInProgress.updateQueue.baseState = prevState);
    }
    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
        var instance = workInProgress.stateNode;
        if ("function" === typeof instance.shouldComponentUpdate) {
            oldProps = instance.shouldComponentUpdate(newProps, newState, nextContext);
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(!0);
                try {
                    oldProps = instance.shouldComponentUpdate(newProps, newState, nextContext);
                } finally{
                    setIsStrictModeForDevtools(!1);
                }
            }
            void 0 === oldProps && console.error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentNameFromType(ctor) || "Component");
            return oldProps;
        }
        return ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : !0;
    }
    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
        var oldState = instance.state;
        "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
        "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
        instance.state !== oldState && (workInProgress = getComponentNameFromFiber(workInProgress) || "Component", didWarnAboutStateAssignmentForComponent.has(workInProgress) || (didWarnAboutStateAssignmentForComponent.add(workInProgress), console.error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", workInProgress)), classComponentUpdater.enqueueReplaceState(instance, instance.state, null));
    }
    function resolveClassComponentProps(Component, baseProps) {
        var newProps = baseProps;
        if ("ref" in baseProps) {
            newProps = {};
            for(var propName in baseProps)"ref" !== propName && (newProps[propName] = baseProps[propName]);
        }
        if (Component = Component.defaultProps) {
            newProps === baseProps && (newProps = assign({}, newProps));
            for(var _propName in Component)void 0 === newProps[_propName] && (newProps[_propName] = Component[_propName]);
        }
        return newProps;
    }
    function defaultOnUncaughtError(error) {
        reportGlobalError(error);
        console.warn("%s\n\n%s\n", componentName ? "An error occurred in the <" + componentName + "> component." : "An error occurred in one of your React components.", "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://react.dev/link/error-boundaries to learn more about error boundaries.");
    }
    function defaultOnCaughtError(error) {
        var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component." : "The above error occurred in one of your React components.", recreateMessage = "React will try to recreate this component tree from scratch using the error boundary you provided, " + ((errorBoundaryName || "Anonymous") + ".");
        if ("object" === typeof error && null !== error && "string" === typeof error.environmentName) {
            var JSCompiler_inline_result = error.environmentName;
            error = [
                "%o\n\n%s\n\n%s\n",
                error,
                componentNameMessage,
                recreateMessage
            ].slice(0);
            "string" === typeof error[0] ? error.splice(0, 1, badgeFormat + error[0], badgeStyle, pad + JSCompiler_inline_result + pad, resetStyle) : error.splice(0, 0, badgeFormat, badgeStyle, pad + JSCompiler_inline_result + pad, resetStyle);
            error.unshift(console);
            JSCompiler_inline_result = bind.apply(console.error, error);
            JSCompiler_inline_result();
        } else console.error("%o\n\n%s\n\n%s\n", error, componentNameMessage, recreateMessage);
    }
    function defaultOnRecoverableError(error) {
        reportGlobalError(error);
    }
    function logUncaughtError(root, errorInfo) {
        try {
            componentName = errorInfo.source ? getComponentNameFromFiber(errorInfo.source) : null;
            errorBoundaryName = null;
            var error = errorInfo.value;
            if (null !== ReactSharedInternals.actQueue) ReactSharedInternals.thrownErrors.push(error);
            else {
                var onUncaughtError = root.onUncaughtError;
                onUncaughtError(error, {
                    componentStack: errorInfo.stack
                });
            }
        } catch (e$5) {
            setTimeout(function() {
                throw e$5;
            });
        }
    }
    function logCaughtError(root, boundary, errorInfo) {
        try {
            componentName = errorInfo.source ? getComponentNameFromFiber(errorInfo.source) : null;
            errorBoundaryName = getComponentNameFromFiber(boundary);
            var onCaughtError = root.onCaughtError;
            onCaughtError(errorInfo.value, {
                componentStack: errorInfo.stack,
                errorBoundary: 1 === boundary.tag ? boundary.stateNode : null
            });
        } catch (e$6) {
            setTimeout(function() {
                throw e$6;
            });
        }
    }
    function createRootErrorUpdate(root, errorInfo, lane) {
        lane = createUpdate(lane);
        lane.tag = CaptureUpdate;
        lane.payload = {
            element: null
        };
        lane.callback = function() {
            runWithFiberInDEV(errorInfo.source, logUncaughtError, root, errorInfo);
        };
        return lane;
    }
    function createClassErrorUpdate(lane) {
        lane = createUpdate(lane);
        lane.tag = CaptureUpdate;
        return lane;
    }
    function initializeClassErrorUpdate(update, root, fiber, errorInfo) {
        var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
        if ("function" === typeof getDerivedStateFromError) {
            var error = errorInfo.value;
            update.payload = function() {
                return getDerivedStateFromError(error);
            };
            update.callback = function() {
                markFailedErrorBoundaryForHotReloading(fiber);
                runWithFiberInDEV(errorInfo.source, logCaughtError, root, fiber, errorInfo);
            };
        }
        var inst = fiber.stateNode;
        null !== inst && "function" === typeof inst.componentDidCatch && (update.callback = function() {
            markFailedErrorBoundaryForHotReloading(fiber);
            runWithFiberInDEV(errorInfo.source, logCaughtError, root, fiber, errorInfo);
            "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([
                this
            ]) : legacyErrorBoundariesThatAlreadyFailed.add(this));
            callComponentDidCatchInDEV(this, errorInfo);
            "function" === typeof getDerivedStateFromError || 0 === (fiber.lanes & 2) && console.error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentNameFromFiber(fiber) || "Unknown");
        });
    }
    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
        sourceFiber.flags |= 32768;
        isDevToolsPresent && restorePendingUpdaters(root, rootRenderLanes);
        if (null !== value && "object" === typeof value && "function" === typeof value.then) {
            returnFiber = sourceFiber.alternate;
            null !== returnFiber && propagateParentContextChanges(returnFiber, sourceFiber, rootRenderLanes, !0);
            isHydrating && (didSuspendOrErrorDEV = !0);
            sourceFiber = suspenseHandlerStackCursor.current;
            if (null !== sourceFiber) {
                switch(sourceFiber.tag){
                    case 13:
                        return null === shellBoundary ? renderDidSuspendDelayIfPossible() : null === sourceFiber.alternate && workInProgressRootExitStatus === RootInProgress && (workInProgressRootExitStatus = RootSuspended), sourceFiber.flags &= -257, sourceFiber.flags |= 65536, sourceFiber.lanes = rootRenderLanes, value === noopSuspenseyCommitThenable ? sourceFiber.flags |= 16384 : (returnFiber = sourceFiber.updateQueue, null === returnFiber ? sourceFiber.updateQueue = new Set([
                            value
                        ]) : returnFiber.add(value), attachPingListener(root, value, rootRenderLanes)), !1;
                    case 22:
                        return sourceFiber.flags |= 65536, value === noopSuspenseyCommitThenable ? sourceFiber.flags |= 16384 : (returnFiber = sourceFiber.updateQueue, null === returnFiber ? (returnFiber = {
                            transitions: null,
                            markerInstances: null,
                            retryQueue: new Set([
                                value
                            ])
                        }, sourceFiber.updateQueue = returnFiber) : (sourceFiber = returnFiber.retryQueue, null === sourceFiber ? returnFiber.retryQueue = new Set([
                            value
                        ]) : sourceFiber.add(value)), attachPingListener(root, value, rootRenderLanes)), !1;
                }
                throw Error("Unexpected Suspense handler tag (" + sourceFiber.tag + "). This is a bug in React.");
            }
            attachPingListener(root, value, rootRenderLanes);
            renderDidSuspendDelayIfPossible();
            return !1;
        }
        if (isHydrating) return didSuspendOrErrorDEV = !0, returnFiber = suspenseHandlerStackCursor.current, null !== returnFiber ? (0 === (returnFiber.flags & 65536) && (returnFiber.flags |= 256), returnFiber.flags |= 65536, returnFiber.lanes = rootRenderLanes, value !== HydrationMismatchException && queueHydrationError(createCapturedValueAtFiber(Error("There was an error while hydrating but React was able to recover by instead client rendering from the nearest Suspense boundary.", {
            cause: value
        }), sourceFiber))) : (value !== HydrationMismatchException && queueHydrationError(createCapturedValueAtFiber(Error("There was an error while hydrating but React was able to recover by instead client rendering the entire root.", {
            cause: value
        }), sourceFiber)), root = root.current.alternate, root.flags |= 65536, rootRenderLanes &= -rootRenderLanes, root.lanes |= rootRenderLanes, value = createCapturedValueAtFiber(value, sourceFiber), rootRenderLanes = createRootErrorUpdate(root.stateNode, value, rootRenderLanes), enqueueCapturedUpdate(root, rootRenderLanes), workInProgressRootExitStatus !== RootSuspendedWithDelay && (workInProgressRootExitStatus = RootErrored)), !1;
        var error = createCapturedValueAtFiber(Error("There was an error during concurrent rendering but React was able to recover by instead synchronously rendering the entire root.", {
            cause: value
        }), sourceFiber);
        null === workInProgressRootConcurrentErrors ? workInProgressRootConcurrentErrors = [
            error
        ] : workInProgressRootConcurrentErrors.push(error);
        workInProgressRootExitStatus !== RootSuspendedWithDelay && (workInProgressRootExitStatus = RootErrored);
        if (null === returnFiber) return !0;
        value = createCapturedValueAtFiber(value, sourceFiber);
        sourceFiber = returnFiber;
        do {
            switch(sourceFiber.tag){
                case 3:
                    return sourceFiber.flags |= 65536, root = rootRenderLanes & -rootRenderLanes, sourceFiber.lanes |= root, root = createRootErrorUpdate(sourceFiber.stateNode, value, root), enqueueCapturedUpdate(sourceFiber, root), !1;
                case 1:
                    if (returnFiber = sourceFiber.type, error = sourceFiber.stateNode, 0 === (sourceFiber.flags & 128) && ("function" === typeof returnFiber.getDerivedStateFromError || null !== error && "function" === typeof error.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(error)))) return sourceFiber.flags |= 65536, rootRenderLanes &= -rootRenderLanes, sourceFiber.lanes |= rootRenderLanes, rootRenderLanes = createClassErrorUpdate(rootRenderLanes), initializeClassErrorUpdate(rootRenderLanes, root, sourceFiber, value), enqueueCapturedUpdate(sourceFiber, rootRenderLanes), !1;
            }
            sourceFiber = sourceFiber.return;
        }while (null !== sourceFiber);
        return !1;
    }
    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
        workInProgress.child = null === current ? mountChildFibers(workInProgress, null, nextChildren, renderLanes) : reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);
    }
    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
        Component = Component.render;
        var ref = workInProgress.ref;
        if ("ref" in nextProps) {
            var propsWithoutRef = {};
            for(var key in nextProps)"ref" !== key && (propsWithoutRef[key] = nextProps[key]);
        } else propsWithoutRef = nextProps;
        prepareToReadContext(workInProgress);
        markComponentRenderStarted(workInProgress);
        nextProps = renderWithHooks(current, workInProgress, Component, propsWithoutRef, ref, renderLanes);
        key = checkDidRenderIdHook();
        markComponentRenderStopped();
        if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        isHydrating && key && pushMaterializedTreeId(workInProgress);
        workInProgress.flags |= 1;
        reconcileChildren(current, workInProgress, nextProps, renderLanes);
        return workInProgress.child;
    }
    function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (null === current) {
            var type = Component.type;
            if ("function" === typeof type && !shouldConstruct(type) && void 0 === type.defaultProps && null === Component.compare) return Component = resolveFunctionForHotReloading(type), workInProgress.tag = 15, workInProgress.type = Component, validateFunctionComponentInDev(workInProgress, type), updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes);
            current = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
            current.ref = workInProgress.ref;
            current.return = workInProgress;
            return workInProgress.child = current;
        }
        type = current.child;
        if (!checkScheduledUpdateOrContext(current, renderLanes)) {
            var prevProps = type.memoizedProps;
            Component = Component.compare;
            Component = null !== Component ? Component : shallowEqual;
            if (Component(prevProps, nextProps) && current.ref === workInProgress.ref) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        workInProgress.flags |= 1;
        current = createWorkInProgress(type, nextProps);
        current.ref = workInProgress.ref;
        current.return = workInProgress;
        return workInProgress.child = current;
    }
    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (null !== current) {
            var prevProps = current.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && workInProgress.type === current.type) {
                if (didReceiveUpdate = !1, workInProgress.pendingProps = nextProps = prevProps, checkScheduledUpdateOrContext(current, renderLanes)) 0 !== (current.flags & 131072) && (didReceiveUpdate = !0);
                else return workInProgress.lanes = current.lanes, bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            }
        }
        return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
    }
    function updateOffscreenComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps, nextChildren = nextProps.children, prevState = null !== current ? current.memoizedState : null;
        if ("hidden" === nextProps.mode) {
            if (0 !== (workInProgress.flags & 128)) {
                nextProps = null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;
                if (null !== current) {
                    nextChildren = workInProgress.child = current.child;
                    for(prevState = 0; null !== nextChildren;)prevState = prevState | nextChildren.lanes | nextChildren.childLanes, nextChildren = nextChildren.sibling;
                    workInProgress.childLanes = prevState & ~nextProps;
                } else workInProgress.childLanes = 0, workInProgress.child = null;
                return deferHiddenOffscreenComponent(current, workInProgress, nextProps, renderLanes);
            }
            if (0 !== (renderLanes & 536870912)) workInProgress.memoizedState = {
                baseLanes: 0,
                cachePool: null
            }, null !== current && pushTransition(workInProgress, null !== prevState ? prevState.cachePool : null), null !== prevState ? pushHiddenContext(workInProgress, prevState) : reuseHiddenContextOnStack(workInProgress), pushOffscreenSuspenseHandler(workInProgress);
            else return workInProgress.lanes = workInProgress.childLanes = 536870912, deferHiddenOffscreenComponent(current, workInProgress, null !== prevState ? prevState.baseLanes | renderLanes : renderLanes, renderLanes);
        } else null !== prevState ? (pushTransition(workInProgress, prevState.cachePool), pushHiddenContext(workInProgress, prevState), reuseSuspenseHandlerOnStack(workInProgress), workInProgress.memoizedState = null) : (null !== current && pushTransition(workInProgress, null), reuseHiddenContextOnStack(workInProgress), reuseSuspenseHandlerOnStack(workInProgress));
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function deferHiddenOffscreenComponent(current, workInProgress, nextBaseLanes, renderLanes) {
        var JSCompiler_inline_result = peekCacheFromPool();
        JSCompiler_inline_result = null === JSCompiler_inline_result ? null : {
            parent: CacheContext._currentValue,
            pool: JSCompiler_inline_result
        };
        workInProgress.memoizedState = {
            baseLanes: nextBaseLanes,
            cachePool: JSCompiler_inline_result
        };
        null !== current && pushTransition(workInProgress, null);
        reuseHiddenContextOnStack(workInProgress);
        pushOffscreenSuspenseHandler(workInProgress);
        null !== current && propagateParentContextChanges(current, workInProgress, renderLanes, !0);
        return null;
    }
    function markRef(current, workInProgress) {
        var ref = workInProgress.ref;
        if (null === ref) null !== current && null !== current.ref && (workInProgress.flags |= 4194816);
        else {
            if ("function" !== typeof ref && "object" !== typeof ref) throw Error("Expected ref to be a function, an object returned by React.createRef(), or undefined/null.");
            if (null === current || current.ref !== ref) workInProgress.flags |= 4194816;
        }
    }
    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (Component.prototype && "function" === typeof Component.prototype.render) {
            var componentName = getComponentNameFromType(Component) || "Unknown";
            didWarnAboutBadClass[componentName] || (console.error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName), didWarnAboutBadClass[componentName] = !0);
        }
        workInProgress.mode & StrictLegacyMode && ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
        null === current && (validateFunctionComponentInDev(workInProgress, workInProgress.type), Component.contextTypes && (componentName = getComponentNameFromType(Component) || "Unknown", didWarnAboutContextTypes[componentName] || (didWarnAboutContextTypes[componentName] = !0, console.error("%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with React.useContext() instead. (https://react.dev/link/legacy-context)", componentName))));
        prepareToReadContext(workInProgress);
        markComponentRenderStarted(workInProgress);
        Component = renderWithHooks(current, workInProgress, Component, nextProps, void 0, renderLanes);
        nextProps = checkDidRenderIdHook();
        markComponentRenderStopped();
        if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        isHydrating && nextProps && pushMaterializedTreeId(workInProgress);
        workInProgress.flags |= 1;
        reconcileChildren(current, workInProgress, Component, renderLanes);
        return workInProgress.child;
    }
    function replayFunctionComponent(current, workInProgress, nextProps, Component, secondArg, renderLanes) {
        prepareToReadContext(workInProgress);
        markComponentRenderStarted(workInProgress);
        hookTypesUpdateIndexDev = -1;
        ignorePreviousDependencies = null !== current && current.type !== workInProgress.type;
        workInProgress.updateQueue = null;
        nextProps = renderWithHooksAgain(workInProgress, Component, nextProps, secondArg);
        finishRenderingHooks(current, workInProgress);
        Component = checkDidRenderIdHook();
        markComponentRenderStopped();
        if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        isHydrating && Component && pushMaterializedTreeId(workInProgress);
        workInProgress.flags |= 1;
        reconcileChildren(current, workInProgress, nextProps, renderLanes);
        return workInProgress.child;
    }
    function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
        switch(shouldErrorImpl(workInProgress)){
            case !1:
                var _instance = workInProgress.stateNode, state = new workInProgress.type(workInProgress.memoizedProps, _instance.context).state;
                _instance.updater.enqueueSetState(_instance, state, null);
                break;
            case !0:
                workInProgress.flags |= 128;
                workInProgress.flags |= 65536;
                _instance = Error("Simulated error coming from DevTools");
                var lane = renderLanes & -renderLanes;
                workInProgress.lanes |= lane;
                state = workInProgressRoot;
                if (null === state) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
                lane = createClassErrorUpdate(lane);
                initializeClassErrorUpdate(lane, state, workInProgress, createCapturedValueAtFiber(_instance, workInProgress));
                enqueueCapturedUpdate(workInProgress, lane);
        }
        prepareToReadContext(workInProgress);
        if (null === workInProgress.stateNode) {
            state = emptyContextObject;
            _instance = Component.contextType;
            "contextType" in Component && null !== _instance && (void 0 === _instance || _instance.$$typeof !== REACT_CONTEXT_TYPE) && !didWarnAboutInvalidateContextType.has(Component) && (didWarnAboutInvalidateContextType.add(Component), lane = void 0 === _instance ? " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : "object" !== typeof _instance ? " However, it is set to a " + typeof _instance + "." : _instance.$$typeof === REACT_CONSUMER_TYPE ? " Did you accidentally pass the Context.Consumer instead?" : " However, it is set to an object with keys {" + Object.keys(_instance).join(", ") + "}.", console.error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(Component) || "Component", lane));
            "object" === typeof _instance && null !== _instance && (state = readContext(_instance));
            _instance = new Component(nextProps, state);
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(!0);
                try {
                    _instance = new Component(nextProps, state);
                } finally{
                    setIsStrictModeForDevtools(!1);
                }
            }
            state = workInProgress.memoizedState = null !== _instance.state && void 0 !== _instance.state ? _instance.state : null;
            _instance.updater = classComponentUpdater;
            workInProgress.stateNode = _instance;
            _instance._reactInternals = workInProgress;
            _instance._reactInternalInstance = fakeInternalInstance;
            "function" === typeof Component.getDerivedStateFromProps && null === state && (state = getComponentNameFromType(Component) || "Component", didWarnAboutUninitializedState.has(state) || (didWarnAboutUninitializedState.add(state), console.error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", state, null === _instance.state ? "null" : "undefined", state)));
            if ("function" === typeof Component.getDerivedStateFromProps || "function" === typeof _instance.getSnapshotBeforeUpdate) {
                var foundWillUpdateName = lane = state = null;
                "function" === typeof _instance.componentWillMount && !0 !== _instance.componentWillMount.__suppressDeprecationWarning ? state = "componentWillMount" : "function" === typeof _instance.UNSAFE_componentWillMount && (state = "UNSAFE_componentWillMount");
                "function" === typeof _instance.componentWillReceiveProps && !0 !== _instance.componentWillReceiveProps.__suppressDeprecationWarning ? lane = "componentWillReceiveProps" : "function" === typeof _instance.UNSAFE_componentWillReceiveProps && (lane = "UNSAFE_componentWillReceiveProps");
                "function" === typeof _instance.componentWillUpdate && !0 !== _instance.componentWillUpdate.__suppressDeprecationWarning ? foundWillUpdateName = "componentWillUpdate" : "function" === typeof _instance.UNSAFE_componentWillUpdate && (foundWillUpdateName = "UNSAFE_componentWillUpdate");
                if (null !== state || null !== lane || null !== foundWillUpdateName) {
                    _instance = getComponentNameFromType(Component) || "Component";
                    var newApiName = "function" === typeof Component.getDerivedStateFromProps ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                    didWarnAboutLegacyLifecyclesAndDerivedState.has(_instance) || (didWarnAboutLegacyLifecyclesAndDerivedState.add(_instance), console.error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://react.dev/link/unsafe-component-lifecycles", _instance, newApiName, null !== state ? "\n  " + state : "", null !== lane ? "\n  " + lane : "", null !== foundWillUpdateName ? "\n  " + foundWillUpdateName : ""));
                }
            }
            _instance = workInProgress.stateNode;
            state = getComponentNameFromType(Component) || "Component";
            _instance.render || (Component.prototype && "function" === typeof Component.prototype.render ? console.error("No `render` method found on the %s instance: did you accidentally return an object from the constructor?", state) : console.error("No `render` method found on the %s instance: you may have forgotten to define `render`.", state));
            !_instance.getInitialState || _instance.getInitialState.isReactClassApproved || _instance.state || console.error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", state);
            _instance.getDefaultProps && !_instance.getDefaultProps.isReactClassApproved && console.error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", state);
            _instance.contextType && console.error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", state);
            Component.childContextTypes && !didWarnAboutChildContextTypes.has(Component) && (didWarnAboutChildContextTypes.add(Component), console.error("%s uses the legacy childContextTypes API which was removed in React 19. Use React.createContext() instead. (https://react.dev/link/legacy-context)", state));
            Component.contextTypes && !didWarnAboutContextTypes$1.has(Component) && (didWarnAboutContextTypes$1.add(Component), console.error("%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with static contextType instead. (https://react.dev/link/legacy-context)", state));
            "function" === typeof _instance.componentShouldUpdate && console.error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", state);
            Component.prototype && Component.prototype.isPureReactComponent && "undefined" !== typeof _instance.shouldComponentUpdate && console.error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(Component) || "A pure component");
            "function" === typeof _instance.componentDidUnmount && console.error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", state);
            "function" === typeof _instance.componentDidReceiveProps && console.error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", state);
            "function" === typeof _instance.componentWillRecieveProps && console.error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", state);
            "function" === typeof _instance.UNSAFE_componentWillRecieveProps && console.error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", state);
            lane = _instance.props !== nextProps;
            void 0 !== _instance.props && lane && console.error("When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", state);
            _instance.defaultProps && console.error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", state, state);
            "function" !== typeof _instance.getSnapshotBeforeUpdate || "function" === typeof _instance.componentDidUpdate || didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(Component) || (didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(Component), console.error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(Component)));
            "function" === typeof _instance.getDerivedStateFromProps && console.error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", state);
            "function" === typeof _instance.getDerivedStateFromError && console.error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", state);
            "function" === typeof Component.getSnapshotBeforeUpdate && console.error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", state);
            (lane = _instance.state) && ("object" !== typeof lane || isArrayImpl(lane)) && console.error("%s.state: must be set to an object or null", state);
            "function" === typeof _instance.getChildContext && "object" !== typeof Component.childContextTypes && console.error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", state);
            _instance = workInProgress.stateNode;
            _instance.props = nextProps;
            _instance.state = workInProgress.memoizedState;
            _instance.refs = {};
            initializeUpdateQueue(workInProgress);
            state = Component.contextType;
            _instance.context = "object" === typeof state && null !== state ? readContext(state) : emptyContextObject;
            _instance.state === nextProps && (state = getComponentNameFromType(Component) || "Component", didWarnAboutDirectlyAssigningPropsToState.has(state) || (didWarnAboutDirectlyAssigningPropsToState.add(state), console.error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", state)));
            workInProgress.mode & StrictLegacyMode && ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, _instance);
            ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, _instance);
            _instance.state = workInProgress.memoizedState;
            state = Component.getDerivedStateFromProps;
            "function" === typeof state && (applyDerivedStateFromProps(workInProgress, Component, state, nextProps), _instance.state = workInProgress.memoizedState);
            "function" === typeof Component.getDerivedStateFromProps || "function" === typeof _instance.getSnapshotBeforeUpdate || "function" !== typeof _instance.UNSAFE_componentWillMount && "function" !== typeof _instance.componentWillMount || (state = _instance.state, "function" === typeof _instance.componentWillMount && _instance.componentWillMount(), "function" === typeof _instance.UNSAFE_componentWillMount && _instance.UNSAFE_componentWillMount(), state !== _instance.state && (console.error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromFiber(workInProgress) || "Component"), classComponentUpdater.enqueueReplaceState(_instance, _instance.state, null)), processUpdateQueue(workInProgress, nextProps, _instance, renderLanes), suspendIfUpdateReadFromEntangledAsyncAction(), _instance.state = workInProgress.memoizedState);
            "function" === typeof _instance.componentDidMount && (workInProgress.flags |= 4194308);
            (workInProgress.mode & StrictEffectsMode) !== NoMode && (workInProgress.flags |= 134217728);
            _instance = !0;
        } else if (null === current) {
            _instance = workInProgress.stateNode;
            var unresolvedOldProps = workInProgress.memoizedProps;
            lane = resolveClassComponentProps(Component, unresolvedOldProps);
            _instance.props = lane;
            var oldContext = _instance.context;
            foundWillUpdateName = Component.contextType;
            state = emptyContextObject;
            "object" === typeof foundWillUpdateName && null !== foundWillUpdateName && (state = readContext(foundWillUpdateName));
            newApiName = Component.getDerivedStateFromProps;
            foundWillUpdateName = "function" === typeof newApiName || "function" === typeof _instance.getSnapshotBeforeUpdate;
            unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;
            foundWillUpdateName || "function" !== typeof _instance.UNSAFE_componentWillReceiveProps && "function" !== typeof _instance.componentWillReceiveProps || (unresolvedOldProps || oldContext !== state) && callComponentWillReceiveProps(workInProgress, _instance, nextProps, state);
            hasForceUpdate = !1;
            var oldState = workInProgress.memoizedState;
            _instance.state = oldState;
            processUpdateQueue(workInProgress, nextProps, _instance, renderLanes);
            suspendIfUpdateReadFromEntangledAsyncAction();
            oldContext = workInProgress.memoizedState;
            unresolvedOldProps || oldState !== oldContext || hasForceUpdate ? ("function" === typeof newApiName && (applyDerivedStateFromProps(workInProgress, Component, newApiName, nextProps), oldContext = workInProgress.memoizedState), (lane = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, lane, nextProps, oldState, oldContext, state)) ? (foundWillUpdateName || "function" !== typeof _instance.UNSAFE_componentWillMount && "function" !== typeof _instance.componentWillMount || ("function" === typeof _instance.componentWillMount && _instance.componentWillMount(), "function" === typeof _instance.UNSAFE_componentWillMount && _instance.UNSAFE_componentWillMount()), "function" === typeof _instance.componentDidMount && (workInProgress.flags |= 4194308), (workInProgress.mode & StrictEffectsMode) !== NoMode && (workInProgress.flags |= 134217728)) : ("function" === typeof _instance.componentDidMount && (workInProgress.flags |= 4194308), (workInProgress.mode & StrictEffectsMode) !== NoMode && (workInProgress.flags |= 134217728), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), _instance.props = nextProps, _instance.state = oldContext, _instance.context = state, _instance = lane) : ("function" === typeof _instance.componentDidMount && (workInProgress.flags |= 4194308), (workInProgress.mode & StrictEffectsMode) !== NoMode && (workInProgress.flags |= 134217728), _instance = !1);
        } else {
            _instance = workInProgress.stateNode;
            cloneUpdateQueue(current, workInProgress);
            state = workInProgress.memoizedProps;
            foundWillUpdateName = resolveClassComponentProps(Component, state);
            _instance.props = foundWillUpdateName;
            newApiName = workInProgress.pendingProps;
            oldState = _instance.context;
            oldContext = Component.contextType;
            lane = emptyContextObject;
            "object" === typeof oldContext && null !== oldContext && (lane = readContext(oldContext));
            unresolvedOldProps = Component.getDerivedStateFromProps;
            (oldContext = "function" === typeof unresolvedOldProps || "function" === typeof _instance.getSnapshotBeforeUpdate) || "function" !== typeof _instance.UNSAFE_componentWillReceiveProps && "function" !== typeof _instance.componentWillReceiveProps || (state !== newApiName || oldState !== lane) && callComponentWillReceiveProps(workInProgress, _instance, nextProps, lane);
            hasForceUpdate = !1;
            oldState = workInProgress.memoizedState;
            _instance.state = oldState;
            processUpdateQueue(workInProgress, nextProps, _instance, renderLanes);
            suspendIfUpdateReadFromEntangledAsyncAction();
            var newState = workInProgress.memoizedState;
            state !== newApiName || oldState !== newState || hasForceUpdate || null !== current && null !== current.dependencies && checkIfContextChanged(current.dependencies) ? ("function" === typeof unresolvedOldProps && (applyDerivedStateFromProps(workInProgress, Component, unresolvedOldProps, nextProps), newState = workInProgress.memoizedState), (foundWillUpdateName = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, foundWillUpdateName, nextProps, oldState, newState, lane) || null !== current && null !== current.dependencies && checkIfContextChanged(current.dependencies)) ? (oldContext || "function" !== typeof _instance.UNSAFE_componentWillUpdate && "function" !== typeof _instance.componentWillUpdate || ("function" === typeof _instance.componentWillUpdate && _instance.componentWillUpdate(nextProps, newState, lane), "function" === typeof _instance.UNSAFE_componentWillUpdate && _instance.UNSAFE_componentWillUpdate(nextProps, newState, lane)), "function" === typeof _instance.componentDidUpdate && (workInProgress.flags |= 4), "function" === typeof _instance.getSnapshotBeforeUpdate && (workInProgress.flags |= 1024)) : ("function" !== typeof _instance.componentDidUpdate || state === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 4), "function" !== typeof _instance.getSnapshotBeforeUpdate || state === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 1024), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = newState), _instance.props = nextProps, _instance.state = newState, _instance.context = lane, _instance = foundWillUpdateName) : ("function" !== typeof _instance.componentDidUpdate || state === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 4), "function" !== typeof _instance.getSnapshotBeforeUpdate || state === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 1024), _instance = !1);
        }
        lane = _instance;
        markRef(current, workInProgress);
        state = 0 !== (workInProgress.flags & 128);
        if (lane || state) {
            lane = workInProgress.stateNode;
            setCurrentFiber(workInProgress);
            if (state && "function" !== typeof Component.getDerivedStateFromError) Component = null, profilerStartTime = -1;
            else {
                markComponentRenderStarted(workInProgress);
                Component = callRenderInDEV(lane);
                if (workInProgress.mode & StrictLegacyMode) {
                    setIsStrictModeForDevtools(!0);
                    try {
                        callRenderInDEV(lane);
                    } finally{
                        setIsStrictModeForDevtools(!1);
                    }
                }
                markComponentRenderStopped();
            }
            workInProgress.flags |= 1;
            null !== current && state ? (workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes), workInProgress.child = reconcileChildFibers(workInProgress, null, Component, renderLanes)) : reconcileChildren(current, workInProgress, Component, renderLanes);
            workInProgress.memoizedState = lane.state;
            current = workInProgress.child;
        } else current = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        renderLanes = workInProgress.stateNode;
        _instance && renderLanes.props !== nextProps && (didWarnAboutReassigningProps || console.error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromFiber(workInProgress) || "a component"), didWarnAboutReassigningProps = !0);
        return current;
    }
    function mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes) {
        resetHydrationState();
        workInProgress.flags |= 256;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function validateFunctionComponentInDev(workInProgress, Component) {
        Component && Component.childContextTypes && console.error("childContextTypes cannot be defined on a function component.\n  %s.childContextTypes = ...", Component.displayName || Component.name || "Component");
        "function" === typeof Component.getDerivedStateFromProps && (workInProgress = getComponentNameFromType(Component) || "Unknown", didWarnAboutGetDerivedStateOnFunctionComponent[workInProgress] || (console.error("%s: Function components do not support getDerivedStateFromProps.", workInProgress), didWarnAboutGetDerivedStateOnFunctionComponent[workInProgress] = !0));
        "object" === typeof Component.contextType && null !== Component.contextType && (Component = getComponentNameFromType(Component) || "Unknown", didWarnAboutContextTypeOnFunctionComponent[Component] || (console.error("%s: Function components do not support contextType.", Component), didWarnAboutContextTypeOnFunctionComponent[Component] = !0));
    }
    function mountSuspenseOffscreenState(renderLanes) {
        return {
            baseLanes: renderLanes,
            cachePool: getSuspendedCache()
        };
    }
    function getRemainingWorkInPrimaryTree(current, primaryTreeDidDefer, renderLanes) {
        current = null !== current ? current.childLanes & ~renderLanes : 0;
        primaryTreeDidDefer && (current |= workInProgressDeferredLane);
        return current;
    }
    function updateSuspenseComponent(current, workInProgress, renderLanes) {
        var JSCompiler_object_inline_digest_2451;
        var JSCompiler_object_inline_stack_2452 = workInProgress.pendingProps;
        shouldSuspendImpl(workInProgress) && (workInProgress.flags |= 128);
        var JSCompiler_object_inline_componentStack_2453 = !1;
        var didSuspend = 0 !== (workInProgress.flags & 128);
        (JSCompiler_object_inline_digest_2451 = didSuspend) || (JSCompiler_object_inline_digest_2451 = null !== current && null === current.memoizedState ? !1 : 0 !== (suspenseStackCursor.current & ForceSuspenseFallback));
        JSCompiler_object_inline_digest_2451 && (JSCompiler_object_inline_componentStack_2453 = !0, workInProgress.flags &= -129);
        JSCompiler_object_inline_digest_2451 = 0 !== (workInProgress.flags & 32);
        workInProgress.flags &= -33;
        if (null === current) {
            if (isHydrating) {
                JSCompiler_object_inline_componentStack_2453 ? pushPrimaryTreeSuspenseHandler(workInProgress) : reuseSuspenseHandlerOnStack(workInProgress);
                if (isHydrating) {
                    var JSCompiler_object_inline_message_2450 = nextHydratableInstance;
                    var JSCompiler_temp;
                    if (!(JSCompiler_temp = !JSCompiler_object_inline_message_2450)) {
                        c: {
                            var instance = JSCompiler_object_inline_message_2450;
                            for(JSCompiler_temp = rootOrSingletonContext; 8 !== instance.nodeType;){
                                if (!JSCompiler_temp) {
                                    JSCompiler_temp = null;
                                    break c;
                                }
                                instance = getNextHydratable(instance.nextSibling);
                                if (null === instance) {
                                    JSCompiler_temp = null;
                                    break c;
                                }
                            }
                            JSCompiler_temp = instance;
                        }
                        null !== JSCompiler_temp ? (warnIfNotHydrating(), workInProgress.memoizedState = {
                            dehydrated: JSCompiler_temp,
                            treeContext: null !== treeContextProvider ? {
                                id: treeContextId,
                                overflow: treeContextOverflow
                            } : null,
                            retryLane: 536870912,
                            hydrationErrors: null
                        }, instance = createFiber(18, null, null, NoMode), instance.stateNode = JSCompiler_temp, instance.return = workInProgress, workInProgress.child = instance, hydrationParentFiber = workInProgress, nextHydratableInstance = null, JSCompiler_temp = !0) : JSCompiler_temp = !1;
                        JSCompiler_temp = !JSCompiler_temp;
                    }
                    JSCompiler_temp && (warnNonHydratedInstance(workInProgress, JSCompiler_object_inline_message_2450), throwOnHydrationMismatch(workInProgress));
                }
                JSCompiler_object_inline_message_2450 = workInProgress.memoizedState;
                if (null !== JSCompiler_object_inline_message_2450 && (JSCompiler_object_inline_message_2450 = JSCompiler_object_inline_message_2450.dehydrated, null !== JSCompiler_object_inline_message_2450)) return isSuspenseInstanceFallback(JSCompiler_object_inline_message_2450) ? workInProgress.lanes = 32 : workInProgress.lanes = 536870912, null;
                popSuspenseHandler(workInProgress);
            }
            JSCompiler_object_inline_message_2450 = JSCompiler_object_inline_stack_2452.children;
            JSCompiler_object_inline_stack_2452 = JSCompiler_object_inline_stack_2452.fallback;
            if (JSCompiler_object_inline_componentStack_2453) return reuseSuspenseHandlerOnStack(workInProgress), JSCompiler_object_inline_componentStack_2453 = workInProgress.mode, JSCompiler_object_inline_message_2450 = mountWorkInProgressOffscreenFiber({
                mode: "hidden",
                children: JSCompiler_object_inline_message_2450
            }, JSCompiler_object_inline_componentStack_2453), JSCompiler_object_inline_stack_2452 = createFiberFromFragment(JSCompiler_object_inline_stack_2452, JSCompiler_object_inline_componentStack_2453, renderLanes, null), JSCompiler_object_inline_message_2450.return = workInProgress, JSCompiler_object_inline_stack_2452.return = workInProgress, JSCompiler_object_inline_message_2450.sibling = JSCompiler_object_inline_stack_2452, workInProgress.child = JSCompiler_object_inline_message_2450, JSCompiler_object_inline_componentStack_2453 = workInProgress.child, JSCompiler_object_inline_componentStack_2453.memoizedState = mountSuspenseOffscreenState(renderLanes), JSCompiler_object_inline_componentStack_2453.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_object_inline_digest_2451, renderLanes), workInProgress.memoizedState = SUSPENDED_MARKER, JSCompiler_object_inline_stack_2452;
            pushPrimaryTreeSuspenseHandler(workInProgress);
            return mountSuspensePrimaryChildren(workInProgress, JSCompiler_object_inline_message_2450);
        }
        var prevState = current.memoizedState;
        if (null !== prevState && (JSCompiler_object_inline_message_2450 = prevState.dehydrated, null !== JSCompiler_object_inline_message_2450)) {
            if (didSuspend) workInProgress.flags & 256 ? (pushPrimaryTreeSuspenseHandler(workInProgress), workInProgress.flags &= -257, workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes)) : null !== workInProgress.memoizedState ? (reuseSuspenseHandlerOnStack(workInProgress), workInProgress.child = current.child, workInProgress.flags |= 128, workInProgress = null) : (reuseSuspenseHandlerOnStack(workInProgress), JSCompiler_object_inline_componentStack_2453 = JSCompiler_object_inline_stack_2452.fallback, JSCompiler_object_inline_message_2450 = workInProgress.mode, JSCompiler_object_inline_stack_2452 = mountWorkInProgressOffscreenFiber({
                mode: "visible",
                children: JSCompiler_object_inline_stack_2452.children
            }, JSCompiler_object_inline_message_2450), JSCompiler_object_inline_componentStack_2453 = createFiberFromFragment(JSCompiler_object_inline_componentStack_2453, JSCompiler_object_inline_message_2450, renderLanes, null), JSCompiler_object_inline_componentStack_2453.flags |= 2, JSCompiler_object_inline_stack_2452.return = workInProgress, JSCompiler_object_inline_componentStack_2453.return = workInProgress, JSCompiler_object_inline_stack_2452.sibling = JSCompiler_object_inline_componentStack_2453, workInProgress.child = JSCompiler_object_inline_stack_2452, reconcileChildFibers(workInProgress, current.child, null, renderLanes), JSCompiler_object_inline_stack_2452 = workInProgress.child, JSCompiler_object_inline_stack_2452.memoizedState = mountSuspenseOffscreenState(renderLanes), JSCompiler_object_inline_stack_2452.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_object_inline_digest_2451, renderLanes), workInProgress.memoizedState = SUSPENDED_MARKER, workInProgress = JSCompiler_object_inline_componentStack_2453);
            else if (pushPrimaryTreeSuspenseHandler(workInProgress), isHydrating && console.error("We should not be hydrating here. This is a bug in React. Please file a bug."), isSuspenseInstanceFallback(JSCompiler_object_inline_message_2450)) {
                JSCompiler_object_inline_digest_2451 = JSCompiler_object_inline_message_2450.nextSibling && JSCompiler_object_inline_message_2450.nextSibling.dataset;
                if (JSCompiler_object_inline_digest_2451) {
                    JSCompiler_temp = JSCompiler_object_inline_digest_2451.dgst;
                    var message = JSCompiler_object_inline_digest_2451.msg;
                    instance = JSCompiler_object_inline_digest_2451.stck;
                    var componentStack = JSCompiler_object_inline_digest_2451.cstck;
                }
                JSCompiler_object_inline_message_2450 = message;
                JSCompiler_object_inline_digest_2451 = JSCompiler_temp;
                JSCompiler_object_inline_stack_2452 = instance;
                JSCompiler_temp = JSCompiler_object_inline_componentStack_2453 = componentStack;
                JSCompiler_object_inline_componentStack_2453 = JSCompiler_object_inline_message_2450 ? Error(JSCompiler_object_inline_message_2450) : Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
                JSCompiler_object_inline_componentStack_2453.stack = JSCompiler_object_inline_stack_2452 || "";
                JSCompiler_object_inline_componentStack_2453.digest = JSCompiler_object_inline_digest_2451;
                JSCompiler_object_inline_digest_2451 = void 0 === JSCompiler_temp ? null : JSCompiler_temp;
                JSCompiler_object_inline_stack_2452 = {
                    value: JSCompiler_object_inline_componentStack_2453,
                    source: null,
                    stack: JSCompiler_object_inline_digest_2451
                };
                "string" === typeof JSCompiler_object_inline_digest_2451 && CapturedStacks.set(JSCompiler_object_inline_componentStack_2453, JSCompiler_object_inline_stack_2452);
                queueHydrationError(JSCompiler_object_inline_stack_2452);
                workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes);
            } else if (didReceiveUpdate || propagateParentContextChanges(current, workInProgress, renderLanes, !1), JSCompiler_object_inline_digest_2451 = 0 !== (renderLanes & current.childLanes), didReceiveUpdate || JSCompiler_object_inline_digest_2451) {
                JSCompiler_object_inline_digest_2451 = workInProgressRoot;
                if (null !== JSCompiler_object_inline_digest_2451 && (JSCompiler_object_inline_stack_2452 = renderLanes & -renderLanes, JSCompiler_object_inline_stack_2452 = 0 !== (JSCompiler_object_inline_stack_2452 & 42) ? 1 : getBumpedLaneForHydrationByLane(JSCompiler_object_inline_stack_2452), JSCompiler_object_inline_stack_2452 = 0 !== (JSCompiler_object_inline_stack_2452 & (JSCompiler_object_inline_digest_2451.suspendedLanes | renderLanes)) ? 0 : JSCompiler_object_inline_stack_2452, 0 !== JSCompiler_object_inline_stack_2452 && JSCompiler_object_inline_stack_2452 !== prevState.retryLane)) throw prevState.retryLane = JSCompiler_object_inline_stack_2452, enqueueConcurrentRenderForLane(current, JSCompiler_object_inline_stack_2452), scheduleUpdateOnFiber(JSCompiler_object_inline_digest_2451, current, JSCompiler_object_inline_stack_2452), SelectiveHydrationException;
                JSCompiler_object_inline_message_2450.data === SUSPENSE_PENDING_START_DATA || renderDidSuspendDelayIfPossible();
                workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes);
            } else JSCompiler_object_inline_message_2450.data === SUSPENSE_PENDING_START_DATA ? (workInProgress.flags |= 192, workInProgress.child = current.child, workInProgress = null) : (current = prevState.treeContext, nextHydratableInstance = getNextHydratable(JSCompiler_object_inline_message_2450.nextSibling), hydrationParentFiber = workInProgress, isHydrating = !0, hydrationErrors = null, didSuspendOrErrorDEV = !1, hydrationDiffRootDEV = null, rootOrSingletonContext = !1, null !== current && (warnIfNotHydrating(), idStack[idStackIndex++] = treeContextId, idStack[idStackIndex++] = treeContextOverflow, idStack[idStackIndex++] = treeContextProvider, treeContextId = current.id, treeContextOverflow = current.overflow, treeContextProvider = workInProgress), workInProgress = mountSuspensePrimaryChildren(workInProgress, JSCompiler_object_inline_stack_2452.children), workInProgress.flags |= 4096);
            return workInProgress;
        }
        if (JSCompiler_object_inline_componentStack_2453) return reuseSuspenseHandlerOnStack(workInProgress), JSCompiler_object_inline_componentStack_2453 = JSCompiler_object_inline_stack_2452.fallback, JSCompiler_object_inline_message_2450 = workInProgress.mode, JSCompiler_temp = current.child, instance = JSCompiler_temp.sibling, JSCompiler_object_inline_stack_2452 = createWorkInProgress(JSCompiler_temp, {
            mode: "hidden",
            children: JSCompiler_object_inline_stack_2452.children
        }), JSCompiler_object_inline_stack_2452.subtreeFlags = JSCompiler_temp.subtreeFlags & 65011712, null !== instance ? JSCompiler_object_inline_componentStack_2453 = createWorkInProgress(instance, JSCompiler_object_inline_componentStack_2453) : (JSCompiler_object_inline_componentStack_2453 = createFiberFromFragment(JSCompiler_object_inline_componentStack_2453, JSCompiler_object_inline_message_2450, renderLanes, null), JSCompiler_object_inline_componentStack_2453.flags |= 2), JSCompiler_object_inline_componentStack_2453.return = workInProgress, JSCompiler_object_inline_stack_2452.return = workInProgress, JSCompiler_object_inline_stack_2452.sibling = JSCompiler_object_inline_componentStack_2453, workInProgress.child = JSCompiler_object_inline_stack_2452, JSCompiler_object_inline_stack_2452 = JSCompiler_object_inline_componentStack_2453, JSCompiler_object_inline_componentStack_2453 = workInProgress.child, JSCompiler_object_inline_message_2450 = current.child.memoizedState, null === JSCompiler_object_inline_message_2450 ? JSCompiler_object_inline_message_2450 = mountSuspenseOffscreenState(renderLanes) : (JSCompiler_temp = JSCompiler_object_inline_message_2450.cachePool, null !== JSCompiler_temp ? (instance = CacheContext._currentValue, JSCompiler_temp = JSCompiler_temp.parent !== instance ? {
            parent: instance,
            pool: instance
        } : JSCompiler_temp) : JSCompiler_temp = getSuspendedCache(), JSCompiler_object_inline_message_2450 = {
            baseLanes: JSCompiler_object_inline_message_2450.baseLanes | renderLanes,
            cachePool: JSCompiler_temp
        }), JSCompiler_object_inline_componentStack_2453.memoizedState = JSCompiler_object_inline_message_2450, JSCompiler_object_inline_componentStack_2453.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_object_inline_digest_2451, renderLanes), workInProgress.memoizedState = SUSPENDED_MARKER, JSCompiler_object_inline_stack_2452;
        pushPrimaryTreeSuspenseHandler(workInProgress);
        renderLanes = current.child;
        current = renderLanes.sibling;
        renderLanes = createWorkInProgress(renderLanes, {
            mode: "visible",
            children: JSCompiler_object_inline_stack_2452.children
        });
        renderLanes.return = workInProgress;
        renderLanes.sibling = null;
        null !== current && (JSCompiler_object_inline_digest_2451 = workInProgress.deletions, null === JSCompiler_object_inline_digest_2451 ? (workInProgress.deletions = [
            current
        ], workInProgress.flags |= 16) : JSCompiler_object_inline_digest_2451.push(current));
        workInProgress.child = renderLanes;
        workInProgress.memoizedState = null;
        return renderLanes;
    }
    function mountSuspensePrimaryChildren(workInProgress, primaryChildren) {
        primaryChildren = mountWorkInProgressOffscreenFiber({
            mode: "visible",
            children: primaryChildren
        }, workInProgress.mode);
        primaryChildren.return = workInProgress;
        return workInProgress.child = primaryChildren;
    }
    function mountWorkInProgressOffscreenFiber(offscreenProps, mode) {
        offscreenProps = createFiber(22, offscreenProps, null, mode);
        offscreenProps.lanes = 0;
        offscreenProps.stateNode = {
            _visibility: OffscreenVisible,
            _pendingMarkers: null,
            _retryCache: null,
            _transitions: null
        };
        return offscreenProps;
    }
    function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes) {
        reconcileChildFibers(workInProgress, current.child, null, renderLanes);
        current = mountSuspensePrimaryChildren(workInProgress, workInProgress.pendingProps.children);
        current.flags |= 2;
        workInProgress.memoizedState = null;
        return current;
    }
    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {
        fiber.lanes |= renderLanes;
        var alternate = fiber.alternate;
        null !== alternate && (alternate.lanes |= renderLanes);
        scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);
    }
    function validateSuspenseListNestedChild(childSlot, index) {
        var isAnArray = isArrayImpl(childSlot);
        childSlot = !isAnArray && "function" === typeof getIteratorFn(childSlot);
        return isAnArray || childSlot ? (isAnArray = isAnArray ? "array" : "iterable", console.error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", isAnArray, index, isAnArray), !1) : !0;
    }
    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
        var renderState = workInProgress.memoizedState;
        null === renderState ? workInProgress.memoizedState = {
            isBackwards: isBackwards,
            rendering: null,
            renderingStartTime: 0,
            last: lastContentRow,
            tail: tail,
            tailMode: tailMode
        } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.renderingStartTime = 0, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailMode = tailMode);
    }
    function updateSuspenseListComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps, revealOrder = nextProps.revealOrder, tailMode = nextProps.tail;
        nextProps = nextProps.children;
        if (void 0 !== revealOrder && "forwards" !== revealOrder && "backwards" !== revealOrder && "together" !== revealOrder && !didWarnAboutRevealOrder[revealOrder]) {
            if (didWarnAboutRevealOrder[revealOrder] = !0, "string" === typeof revealOrder) switch(revealOrder.toLowerCase()){
                case "together":
                case "forwards":
                case "backwards":
                    console.error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                case "forward":
                case "backward":
                    console.error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                default:
                    console.error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
            }
            else console.error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
        }
        void 0 === tailMode || didWarnAboutTailOptions[tailMode] || ("collapsed" !== tailMode && "hidden" !== tailMode ? (didWarnAboutTailOptions[tailMode] = !0, console.error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode)) : "forwards" !== revealOrder && "backwards" !== revealOrder && (didWarnAboutTailOptions[tailMode] = !0, console.error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode)));
        a: if (("forwards" === revealOrder || "backwards" === revealOrder) && void 0 !== nextProps && null !== nextProps && !1 !== nextProps) {
            if (isArrayImpl(nextProps)) for(var i = 0; i < nextProps.length; i++){
                if (!validateSuspenseListNestedChild(nextProps[i], i)) break a;
            }
            else if (i = getIteratorFn(nextProps), "function" === typeof i) {
                if (i = i.call(nextProps)) for(var step = i.next(), _i = 0; !step.done; step = i.next()){
                    if (!validateSuspenseListNestedChild(step.value, _i)) break a;
                    _i++;
                }
            } else console.error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
        }
        reconcileChildren(current, workInProgress, nextProps, renderLanes);
        nextProps = suspenseStackCursor.current;
        if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.flags |= 128;
        else {
            if (null !== current && 0 !== (current.flags & 128)) a: for(current = workInProgress.child; null !== current;){
                if (13 === current.tag) null !== current.memoizedState && scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);
                else if (19 === current.tag) scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);
                else if (null !== current.child) {
                    current.child.return = current;
                    current = current.child;
                    continue;
                }
                if (current === workInProgress) break a;
                for(; null === current.sibling;){
                    if (null === current.return || current.return === workInProgress) break a;
                    current = current.return;
                }
                current.sibling.return = current.return;
                current = current.sibling;
            }
            nextProps &= SubtreeSuspenseContextMask;
        }
        push(suspenseStackCursor, nextProps, workInProgress);
        switch(revealOrder){
            case "forwards":
                renderLanes = workInProgress.child;
                for(revealOrder = null; null !== renderLanes;)current = renderLanes.alternate, null !== current && null === findFirstSuspended(current) && (revealOrder = renderLanes), renderLanes = renderLanes.sibling;
                renderLanes = revealOrder;
                null === renderLanes ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderLanes.sibling, renderLanes.sibling = null);
                initSuspenseListRenderState(workInProgress, !1, revealOrder, renderLanes, tailMode);
                break;
            case "backwards":
                renderLanes = null;
                revealOrder = workInProgress.child;
                for(workInProgress.child = null; null !== revealOrder;){
                    current = revealOrder.alternate;
                    if (null !== current && null === findFirstSuspended(current)) {
                        workInProgress.child = revealOrder;
                        break;
                    }
                    current = revealOrder.sibling;
                    revealOrder.sibling = renderLanes;
                    renderLanes = revealOrder;
                    revealOrder = current;
                }
                initSuspenseListRenderState(workInProgress, !0, renderLanes, null, tailMode);
                break;
            case "together":
                initSuspenseListRenderState(workInProgress, !1, null, null, void 0);
                break;
            default:
                workInProgress.memoizedState = null;
        }
        return workInProgress.child;
    }
    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
        null !== current && (workInProgress.dependencies = current.dependencies);
        profilerStartTime = -1;
        workInProgressRootSkippedLanes |= workInProgress.lanes;
        if (0 === (renderLanes & workInProgress.childLanes)) {
            if (null !== current) {
                if (propagateParentContextChanges(current, workInProgress, renderLanes, !1), 0 === (renderLanes & workInProgress.childLanes)) return null;
            } else return null;
        }
        if (null !== current && workInProgress.child !== current.child) throw Error("Resuming work not yet implemented.");
        if (null !== workInProgress.child) {
            current = workInProgress.child;
            renderLanes = createWorkInProgress(current, current.pendingProps);
            workInProgress.child = renderLanes;
            for(renderLanes.return = workInProgress; null !== current.sibling;)current = current.sibling, renderLanes = renderLanes.sibling = createWorkInProgress(current, current.pendingProps), renderLanes.return = workInProgress;
            renderLanes.sibling = null;
        }
        return workInProgress.child;
    }
    function checkScheduledUpdateOrContext(current, renderLanes) {
        if (0 !== (current.lanes & renderLanes)) return !0;
        current = current.dependencies;
        return null !== current && checkIfContextChanged(current) ? !0 : !1;
    }
    function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {
        switch(workInProgress.tag){
            case 3:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                pushProvider(workInProgress, CacheContext, current.memoizedState.cache);
                resetHydrationState();
                break;
            case 27:
            case 5:
                pushHostContext(workInProgress);
                break;
            case 4:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                break;
            case 10:
                pushProvider(workInProgress, workInProgress.type, workInProgress.memoizedProps.value);
                break;
            case 12:
                0 !== (renderLanes & workInProgress.childLanes) && (workInProgress.flags |= 4);
                workInProgress.flags |= 2048;
                var stateNode = workInProgress.stateNode;
                stateNode.effectDuration = -0;
                stateNode.passiveEffectDuration = -0;
                break;
            case 13:
                stateNode = workInProgress.memoizedState;
                if (null !== stateNode) {
                    if (null !== stateNode.dehydrated) return pushPrimaryTreeSuspenseHandler(workInProgress), workInProgress.flags |= 128, null;
                    if (0 !== (renderLanes & workInProgress.child.childLanes)) return updateSuspenseComponent(current, workInProgress, renderLanes);
                    pushPrimaryTreeSuspenseHandler(workInProgress);
                    current = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                    return null !== current ? current.sibling : null;
                }
                pushPrimaryTreeSuspenseHandler(workInProgress);
                break;
            case 19:
                var didSuspendBefore = 0 !== (current.flags & 128);
                stateNode = 0 !== (renderLanes & workInProgress.childLanes);
                stateNode || (propagateParentContextChanges(current, workInProgress, renderLanes, !1), stateNode = 0 !== (renderLanes & workInProgress.childLanes));
                if (didSuspendBefore) {
                    if (stateNode) return updateSuspenseListComponent(current, workInProgress, renderLanes);
                    workInProgress.flags |= 128;
                }
                didSuspendBefore = workInProgress.memoizedState;
                null !== didSuspendBefore && (didSuspendBefore.rendering = null, didSuspendBefore.tail = null, didSuspendBefore.lastEffect = null);
                push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
                if (stateNode) break;
                else return null;
            case 22:
            case 23:
                return workInProgress.lanes = 0, updateOffscreenComponent(current, workInProgress, renderLanes);
            case 24:
                pushProvider(workInProgress, CacheContext, current.memoizedState.cache);
        }
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
    function beginWork(current, workInProgress, renderLanes) {
        if (workInProgress._debugNeedsRemount && null !== current) {
            renderLanes = createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes);
            renderLanes._debugStack = workInProgress._debugStack;
            renderLanes._debugTask = workInProgress._debugTask;
            var returnFiber = workInProgress.return;
            if (null === returnFiber) throw Error("Cannot swap the root fiber.");
            current.alternate = null;
            workInProgress.alternate = null;
            renderLanes.index = workInProgress.index;
            renderLanes.sibling = workInProgress.sibling;
            renderLanes.return = workInProgress.return;
            renderLanes.ref = workInProgress.ref;
            renderLanes._debugInfo = workInProgress._debugInfo;
            if (workInProgress === returnFiber.child) returnFiber.child = renderLanes;
            else {
                var prevSibling = returnFiber.child;
                if (null === prevSibling) throw Error("Expected parent to have a child.");
                for(; prevSibling.sibling !== workInProgress;)if (prevSibling = prevSibling.sibling, null === prevSibling) throw Error("Expected to find the previous sibling.");
                prevSibling.sibling = renderLanes;
            }
            workInProgress = returnFiber.deletions;
            null === workInProgress ? (returnFiber.deletions = [
                current
            ], returnFiber.flags |= 16) : workInProgress.push(current);
            renderLanes.flags |= 2;
            return renderLanes;
        }
        if (null !== current) {
            if (current.memoizedProps !== workInProgress.pendingProps || workInProgress.type !== current.type) didReceiveUpdate = !0;
            else {
                if (!checkScheduledUpdateOrContext(current, renderLanes) && 0 === (workInProgress.flags & 128)) return didReceiveUpdate = !1, attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);
                didReceiveUpdate = 0 !== (current.flags & 131072) ? !0 : !1;
            }
        } else {
            didReceiveUpdate = !1;
            if (returnFiber = isHydrating) warnIfNotHydrating(), returnFiber = 0 !== (workInProgress.flags & 1048576);
            returnFiber && (returnFiber = workInProgress.index, warnIfNotHydrating(), pushTreeId(workInProgress, treeForkCount, returnFiber));
        }
        workInProgress.lanes = 0;
        switch(workInProgress.tag){
            case 16:
                a: if (returnFiber = workInProgress.pendingProps, current = callLazyInitInDEV(workInProgress.elementType), workInProgress.type = current, "function" === typeof current) shouldConstruct(current) ? (returnFiber = resolveClassComponentProps(current, returnFiber), workInProgress.tag = 1, workInProgress.type = current = resolveFunctionForHotReloading(current), workInProgress = updateClassComponent(null, workInProgress, current, returnFiber, renderLanes)) : (workInProgress.tag = 0, validateFunctionComponentInDev(workInProgress, current), workInProgress.type = current = resolveFunctionForHotReloading(current), workInProgress = updateFunctionComponent(null, workInProgress, current, returnFiber, renderLanes));
                else {
                    if (void 0 !== current && null !== current) {
                        if (prevSibling = current.$$typeof, prevSibling === REACT_FORWARD_REF_TYPE) {
                            workInProgress.tag = 11;
                            workInProgress.type = current = resolveForwardRefForHotReloading(current);
                            workInProgress = updateForwardRef(null, workInProgress, current, returnFiber, renderLanes);
                            break a;
                        } else if (prevSibling === REACT_MEMO_TYPE) {
                            workInProgress.tag = 14;
                            workInProgress = updateMemoComponent(null, workInProgress, current, returnFiber, renderLanes);
                            break a;
                        }
                    }
                    workInProgress = "";
                    null !== current && "object" === typeof current && current.$$typeof === REACT_LAZY_TYPE && (workInProgress = " Did you wrap a component in React.lazy() more than once?");
                    current = getComponentNameFromType(current) || current;
                    throw Error("Element type is invalid. Received a promise that resolves to: " + current + ". Lazy element type must resolve to a class or function." + workInProgress);
                }
                return workInProgress;
            case 0:
                return updateFunctionComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case 1:
                return returnFiber = workInProgress.type, prevSibling = resolveClassComponentProps(returnFiber, workInProgress.pendingProps), updateClassComponent(current, workInProgress, returnFiber, prevSibling, renderLanes);
            case 3:
                a: {
                    pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                    if (null === current) throw Error("Should have a current fiber. This is a bug in React.");
                    returnFiber = workInProgress.pendingProps;
                    var prevState = workInProgress.memoizedState;
                    prevSibling = prevState.element;
                    cloneUpdateQueue(current, workInProgress);
                    processUpdateQueue(workInProgress, returnFiber, null, renderLanes);
                    var nextState = workInProgress.memoizedState;
                    returnFiber = nextState.cache;
                    pushProvider(workInProgress, CacheContext, returnFiber);
                    returnFiber !== prevState.cache && propagateContextChanges(workInProgress, [
                        CacheContext
                    ], renderLanes, !0);
                    suspendIfUpdateReadFromEntangledAsyncAction();
                    returnFiber = nextState.element;
                    if (prevState.isDehydrated) {
                        if (prevState = {
                            element: returnFiber,
                            isDehydrated: !1,
                            cache: nextState.cache
                        }, workInProgress.updateQueue.baseState = prevState, workInProgress.memoizedState = prevState, workInProgress.flags & 256) {
                            workInProgress = mountHostRootWithoutHydrating(current, workInProgress, returnFiber, renderLanes);
                            break a;
                        } else if (returnFiber !== prevSibling) {
                            prevSibling = createCapturedValueAtFiber(Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), workInProgress);
                            queueHydrationError(prevSibling);
                            workInProgress = mountHostRootWithoutHydrating(current, workInProgress, returnFiber, renderLanes);
                            break a;
                        } else {
                            current = workInProgress.stateNode.containerInfo;
                            switch(current.nodeType){
                                case 9:
                                    current = current.body;
                                    break;
                                default:
                                    current = "HTML" === current.nodeName ? current.ownerDocument.body : current;
                            }
                            nextHydratableInstance = getNextHydratable(current.firstChild);
                            hydrationParentFiber = workInProgress;
                            isHydrating = !0;
                            hydrationErrors = null;
                            didSuspendOrErrorDEV = !1;
                            hydrationDiffRootDEV = null;
                            rootOrSingletonContext = !0;
                            current = mountChildFibers(workInProgress, null, returnFiber, renderLanes);
                            for(workInProgress.child = current; current;)current.flags = current.flags & -3 | 4096, current = current.sibling;
                        }
                    } else {
                        resetHydrationState();
                        if (returnFiber === prevSibling) {
                            workInProgress = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                            break a;
                        }
                        reconcileChildren(current, workInProgress, returnFiber, renderLanes);
                    }
                    workInProgress = workInProgress.child;
                }
                return workInProgress;
            case 26:
                return markRef(current, workInProgress), null === current ? (current = getResource(workInProgress.type, null, workInProgress.pendingProps, null)) ? workInProgress.memoizedState = current : isHydrating || (current = workInProgress.type, renderLanes = workInProgress.pendingProps, returnFiber = requiredContext(rootInstanceStackCursor.current), returnFiber = getOwnerDocumentFromRootContainer(returnFiber).createElement(current), returnFiber[internalInstanceKey] = workInProgress, returnFiber[internalPropsKey] = renderLanes, setInitialProperties(returnFiber, current, renderLanes), markNodeAsHoistable(returnFiber), workInProgress.stateNode = returnFiber) : workInProgress.memoizedState = getResource(workInProgress.type, current.memoizedProps, workInProgress.pendingProps, current.memoizedState), null;
            case 27:
                return pushHostContext(workInProgress), null === current && isHydrating && (returnFiber = requiredContext(rootInstanceStackCursor.current), prevSibling = getHostContext(), returnFiber = workInProgress.stateNode = resolveSingletonInstance(workInProgress.type, workInProgress.pendingProps, returnFiber, prevSibling, !1), didSuspendOrErrorDEV || (prevSibling = diffHydratedProperties(returnFiber, workInProgress.type, workInProgress.pendingProps, prevSibling), null !== prevSibling && (buildHydrationDiffNode(workInProgress, 0).serverProps = prevSibling)), hydrationParentFiber = workInProgress, rootOrSingletonContext = !0, prevSibling = nextHydratableInstance, isSingletonScope(workInProgress.type) ? (previousHydratableOnEnteringScopedSingleton = prevSibling, nextHydratableInstance = getNextHydratable(returnFiber.firstChild)) : nextHydratableInstance = prevSibling), reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), markRef(current, workInProgress), null === current && (workInProgress.flags |= 4194304), workInProgress.child;
            case 5:
                return null === current && isHydrating && (prevState = getHostContext(), returnFiber = validateDOMNesting(workInProgress.type, prevState.ancestorInfo), prevSibling = nextHydratableInstance, (nextState = !prevSibling) || (nextState = canHydrateInstance(prevSibling, workInProgress.type, workInProgress.pendingProps, rootOrSingletonContext), null !== nextState ? (workInProgress.stateNode = nextState, didSuspendOrErrorDEV || (prevState = diffHydratedProperties(nextState, workInProgress.type, workInProgress.pendingProps, prevState), null !== prevState && (buildHydrationDiffNode(workInProgress, 0).serverProps = prevState)), hydrationParentFiber = workInProgress, nextHydratableInstance = getNextHydratable(nextState.firstChild), rootOrSingletonContext = !1, prevState = !0) : prevState = !1, nextState = !prevState), nextState && (returnFiber && warnNonHydratedInstance(workInProgress, prevSibling), throwOnHydrationMismatch(workInProgress))), pushHostContext(workInProgress), prevSibling = workInProgress.type, prevState = workInProgress.pendingProps, nextState = null !== current ? current.memoizedProps : null, returnFiber = prevState.children, shouldSetTextContent(prevSibling, prevState) ? returnFiber = null : null !== nextState && shouldSetTextContent(prevSibling, nextState) && (workInProgress.flags |= 32), null !== workInProgress.memoizedState && (prevSibling = renderWithHooks(current, workInProgress, TransitionAwareHostComponent, null, null, renderLanes), HostTransitionContext._currentValue = prevSibling), markRef(current, workInProgress), reconcileChildren(current, workInProgress, returnFiber, renderLanes), workInProgress.child;
            case 6:
                return null === current && isHydrating && (current = workInProgress.pendingProps, renderLanes = getHostContext(), returnFiber = renderLanes.ancestorInfo.current, current = null != returnFiber ? validateTextNesting(current, returnFiber.tag, renderLanes.ancestorInfo.implicitRootScope) : !0, renderLanes = nextHydratableInstance, (returnFiber = !renderLanes) || (returnFiber = canHydrateTextInstance(renderLanes, workInProgress.pendingProps, rootOrSingletonContext), null !== returnFiber ? (workInProgress.stateNode = returnFiber, hydrationParentFiber = workInProgress, nextHydratableInstance = null, returnFiber = !0) : returnFiber = !1, returnFiber = !returnFiber), returnFiber && (current && warnNonHydratedInstance(workInProgress, renderLanes), throwOnHydrationMismatch(workInProgress))), null;
            case 13:
                return updateSuspenseComponent(current, workInProgress, renderLanes);
            case 4:
                return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), returnFiber = workInProgress.pendingProps, null === current ? workInProgress.child = reconcileChildFibers(workInProgress, null, returnFiber, renderLanes) : reconcileChildren(current, workInProgress, returnFiber, renderLanes), workInProgress.child;
            case 11:
                return updateForwardRef(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case 7:
                return reconcileChildren(current, workInProgress, workInProgress.pendingProps, renderLanes), workInProgress.child;
            case 8:
                return reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
            case 12:
                return workInProgress.flags |= 4, workInProgress.flags |= 2048, returnFiber = workInProgress.stateNode, returnFiber.effectDuration = -0, returnFiber.passiveEffectDuration = -0, reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
            case 10:
                return returnFiber = workInProgress.type, prevSibling = workInProgress.pendingProps, prevState = prevSibling.value, "value" in prevSibling || hasWarnedAboutUsingNoValuePropOnContextProvider || (hasWarnedAboutUsingNoValuePropOnContextProvider = !0, console.error("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?")), pushProvider(workInProgress, returnFiber, prevState), reconcileChildren(current, workInProgress, prevSibling.children, renderLanes), workInProgress.child;
            case 9:
                return prevSibling = workInProgress.type._context, returnFiber = workInProgress.pendingProps.children, "function" !== typeof returnFiber && console.error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."), prepareToReadContext(workInProgress), prevSibling = readContext(prevSibling), markComponentRenderStarted(workInProgress), returnFiber = callComponentInDEV(returnFiber, prevSibling, void 0), markComponentRenderStopped(), workInProgress.flags |= 1, reconcileChildren(current, workInProgress, returnFiber, renderLanes), workInProgress.child;
            case 14:
                return updateMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case 15:
                return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case 19:
                return updateSuspenseListComponent(current, workInProgress, renderLanes);
            case 31:
                return returnFiber = workInProgress.pendingProps, renderLanes = workInProgress.mode, returnFiber = {
                    mode: returnFiber.mode,
                    children: returnFiber.children
                }, null === current ? (current = mountWorkInProgressOffscreenFiber(returnFiber, renderLanes), current.ref = workInProgress.ref, workInProgress.child = current, current.return = workInProgress, workInProgress = current) : (current = createWorkInProgress(current.child, returnFiber), current.ref = workInProgress.ref, workInProgress.child = current, current.return = workInProgress, workInProgress = current), workInProgress;
            case 22:
                return updateOffscreenComponent(current, workInProgress, renderLanes);
            case 24:
                return prepareToReadContext(workInProgress), returnFiber = readContext(CacheContext), null === current ? (prevSibling = peekCacheFromPool(), null === prevSibling && (prevSibling = workInProgressRoot, prevState = createCache(), prevSibling.pooledCache = prevState, retainCache(prevState), null !== prevState && (prevSibling.pooledCacheLanes |= renderLanes), prevSibling = prevState), workInProgress.memoizedState = {
                    parent: returnFiber,
                    cache: prevSibling
                }, initializeUpdateQueue(workInProgress), pushProvider(workInProgress, CacheContext, prevSibling)) : (0 !== (current.lanes & renderLanes) && (cloneUpdateQueue(current, workInProgress), processUpdateQueue(workInProgress, null, null, renderLanes), suspendIfUpdateReadFromEntangledAsyncAction()), prevSibling = current.memoizedState, prevState = workInProgress.memoizedState, prevSibling.parent !== returnFiber ? (prevSibling = {
                    parent: returnFiber,
                    cache: returnFiber
                }, workInProgress.memoizedState = prevSibling, 0 === workInProgress.lanes && (workInProgress.memoizedState = workInProgress.updateQueue.baseState = prevSibling), pushProvider(workInProgress, CacheContext, returnFiber)) : (returnFiber = prevState.cache, pushProvider(workInProgress, CacheContext, returnFiber), returnFiber !== prevSibling.cache && propagateContextChanges(workInProgress, [
                    CacheContext
                ], renderLanes, !0))), reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
            case 29:
                throw workInProgress.pendingProps;
        }
        throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function markUpdate(workInProgress) {
        workInProgress.flags |= 4;
    }
    function preloadResourceAndSuspendIfNeeded(workInProgress, resource) {
        if ("stylesheet" !== resource.type || (resource.state.loading & Inserted) !== NotLoaded) workInProgress.flags &= -16777217;
        else if (workInProgress.flags |= 16777216, !preloadResource(resource)) {
            resource = suspenseHandlerStackCursor.current;
            if (null !== resource && ((workInProgressRootRenderLanes & 4194048) === workInProgressRootRenderLanes ? null !== shellBoundary : (workInProgressRootRenderLanes & 62914560) !== workInProgressRootRenderLanes && 0 === (workInProgressRootRenderLanes & 536870912) || resource !== shellBoundary)) throw suspendedThenable = noopSuspenseyCommitThenable, SuspenseyCommitException;
            workInProgress.flags |= 8192;
        }
    }
    function scheduleRetryEffect(workInProgress, retryQueue) {
        null !== retryQueue && (workInProgress.flags |= 4);
        workInProgress.flags & 16384 && (retryQueue = 22 !== workInProgress.tag ? claimNextRetryLane() : 536870912, workInProgress.lanes |= retryQueue, workInProgressSuspendedRetryLanes |= retryQueue);
    }
    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
        if (!isHydrating) switch(renderState.tailMode){
            case "hidden":
                hasRenderedATailFallback = renderState.tail;
                for(var lastTailNode = null; null !== hasRenderedATailFallback;)null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
                null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
                break;
            case "collapsed":
                lastTailNode = renderState.tail;
                for(var _lastTailNode = null; null !== lastTailNode;)null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
                null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
        }
    }
    function bubbleProperties(completedWork) {
        var didBailout = null !== completedWork.alternate && completedWork.alternate.child === completedWork.child, newChildLanes = 0, subtreeFlags = 0;
        if (didBailout) {
            if ((completedWork.mode & ProfileMode) !== NoMode) {
                for(var _treeBaseDuration = completedWork.selfBaseDuration, _child2 = completedWork.child; null !== _child2;)newChildLanes |= _child2.lanes | _child2.childLanes, subtreeFlags |= _child2.subtreeFlags & 65011712, subtreeFlags |= _child2.flags & 65011712, _treeBaseDuration += _child2.treeBaseDuration, _child2 = _child2.sibling;
                completedWork.treeBaseDuration = _treeBaseDuration;
            } else for(_treeBaseDuration = completedWork.child; null !== _treeBaseDuration;)newChildLanes |= _treeBaseDuration.lanes | _treeBaseDuration.childLanes, subtreeFlags |= _treeBaseDuration.subtreeFlags & 65011712, subtreeFlags |= _treeBaseDuration.flags & 65011712, _treeBaseDuration.return = completedWork, _treeBaseDuration = _treeBaseDuration.sibling;
        } else if ((completedWork.mode & ProfileMode) !== NoMode) {
            _treeBaseDuration = completedWork.actualDuration;
            _child2 = completedWork.selfBaseDuration;
            for(var child = completedWork.child; null !== child;)newChildLanes |= child.lanes | child.childLanes, subtreeFlags |= child.subtreeFlags, subtreeFlags |= child.flags, _treeBaseDuration += child.actualDuration, _child2 += child.treeBaseDuration, child = child.sibling;
            completedWork.actualDuration = _treeBaseDuration;
            completedWork.treeBaseDuration = _child2;
        } else for(_treeBaseDuration = completedWork.child; null !== _treeBaseDuration;)newChildLanes |= _treeBaseDuration.lanes | _treeBaseDuration.childLanes, subtreeFlags |= _treeBaseDuration.subtreeFlags, subtreeFlags |= _treeBaseDuration.flags, _treeBaseDuration.return = completedWork, _treeBaseDuration = _treeBaseDuration.sibling;
        completedWork.subtreeFlags |= subtreeFlags;
        completedWork.childLanes = newChildLanes;
        return didBailout;
    }
    function completeWork(current, workInProgress, renderLanes) {
        var newProps = workInProgress.pendingProps;
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case 31:
            case 16:
            case 15:
            case 0:
            case 11:
            case 7:
            case 8:
            case 12:
            case 9:
            case 14:
                return bubbleProperties(workInProgress), null;
            case 1:
                return bubbleProperties(workInProgress), null;
            case 3:
                renderLanes = workInProgress.stateNode;
                newProps = null;
                null !== current && (newProps = current.memoizedState.cache);
                workInProgress.memoizedState.cache !== newProps && (workInProgress.flags |= 2048);
                popProvider(CacheContext, workInProgress);
                popHostContainer(workInProgress);
                renderLanes.pendingContext && (renderLanes.context = renderLanes.pendingContext, renderLanes.pendingContext = null);
                if (null === current || null === current.child) popHydrationState(workInProgress) ? (emitPendingHydrationWarnings(), markUpdate(workInProgress)) : null === current || current.memoizedState.isDehydrated && 0 === (workInProgress.flags & 256) || (workInProgress.flags |= 1024, upgradeHydrationErrorsToRecoverable());
                bubbleProperties(workInProgress);
                return null;
            case 26:
                return renderLanes = workInProgress.memoizedState, null === current ? (markUpdate(workInProgress), null !== renderLanes ? (bubbleProperties(workInProgress), preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes)) : (bubbleProperties(workInProgress), workInProgress.flags &= -16777217)) : renderLanes ? renderLanes !== current.memoizedState ? (markUpdate(workInProgress), bubbleProperties(workInProgress), preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes)) : (bubbleProperties(workInProgress), workInProgress.flags &= -16777217) : (current.memoizedProps !== newProps && markUpdate(workInProgress), bubbleProperties(workInProgress), workInProgress.flags &= -16777217), null;
            case 27:
                popHostContext(workInProgress);
                renderLanes = requiredContext(rootInstanceStackCursor.current);
                var _type = workInProgress.type;
                if (null !== current && null != workInProgress.stateNode) current.memoizedProps !== newProps && markUpdate(workInProgress);
                else {
                    if (!newProps) {
                        if (null === workInProgress.stateNode) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                        bubbleProperties(workInProgress);
                        return null;
                    }
                    current = getHostContext();
                    popHydrationState(workInProgress) ? prepareToHydrateHostInstance(workInProgress, current) : (current = resolveSingletonInstance(_type, newProps, renderLanes, current, !0), workInProgress.stateNode = current, markUpdate(workInProgress));
                }
                bubbleProperties(workInProgress);
                return null;
            case 5:
                popHostContext(workInProgress);
                renderLanes = workInProgress.type;
                if (null !== current && null != workInProgress.stateNode) current.memoizedProps !== newProps && markUpdate(workInProgress);
                else {
                    if (!newProps) {
                        if (null === workInProgress.stateNode) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                        bubbleProperties(workInProgress);
                        return null;
                    }
                    _type = getHostContext();
                    if (popHydrationState(workInProgress)) prepareToHydrateHostInstance(workInProgress, _type);
                    else {
                        current = requiredContext(rootInstanceStackCursor.current);
                        validateDOMNesting(renderLanes, _type.ancestorInfo);
                        _type = _type.context;
                        current = getOwnerDocumentFromRootContainer(current);
                        switch(_type){
                            case HostContextNamespaceSvg:
                                current = current.createElementNS(SVG_NAMESPACE, renderLanes);
                                break;
                            case HostContextNamespaceMath:
                                current = current.createElementNS(MATH_NAMESPACE, renderLanes);
                                break;
                            default:
                                switch(renderLanes){
                                    case "svg":
                                        current = current.createElementNS(SVG_NAMESPACE, renderLanes);
                                        break;
                                    case "math":
                                        current = current.createElementNS(MATH_NAMESPACE, renderLanes);
                                        break;
                                    case "script":
                                        current = current.createElement("div");
                                        current.innerHTML = "<script>\x3c/script>";
                                        current = current.removeChild(current.firstChild);
                                        break;
                                    case "select":
                                        current = "string" === typeof newProps.is ? current.createElement("select", {
                                            is: newProps.is
                                        }) : current.createElement("select");
                                        newProps.multiple ? current.multiple = !0 : newProps.size && (current.size = newProps.size);
                                        break;
                                    default:
                                        current = "string" === typeof newProps.is ? current.createElement(renderLanes, {
                                            is: newProps.is
                                        }) : current.createElement(renderLanes), -1 === renderLanes.indexOf("-") && (renderLanes !== renderLanes.toLowerCase() && console.error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", renderLanes), "[object HTMLUnknownElement]" !== Object.prototype.toString.call(current) || hasOwnProperty.call(warnedUnknownTags, renderLanes) || (warnedUnknownTags[renderLanes] = !0, console.error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", renderLanes)));
                                }
                        }
                        current[internalInstanceKey] = workInProgress;
                        current[internalPropsKey] = newProps;
                        a: for(_type = workInProgress.child; null !== _type;){
                            if (5 === _type.tag || 6 === _type.tag) current.appendChild(_type.stateNode);
                            else if (4 !== _type.tag && 27 !== _type.tag && null !== _type.child) {
                                _type.child.return = _type;
                                _type = _type.child;
                                continue;
                            }
                            if (_type === workInProgress) break a;
                            for(; null === _type.sibling;){
                                if (null === _type.return || _type.return === workInProgress) break a;
                                _type = _type.return;
                            }
                            _type.sibling.return = _type.return;
                            _type = _type.sibling;
                        }
                        workInProgress.stateNode = current;
                        a: switch(setInitialProperties(current, renderLanes, newProps), renderLanes){
                            case "button":
                            case "input":
                            case "select":
                            case "textarea":
                                current = !!newProps.autoFocus;
                                break a;
                            case "img":
                                current = !0;
                                break a;
                            default:
                                current = !1;
                        }
                        current && markUpdate(workInProgress);
                    }
                }
                bubbleProperties(workInProgress);
                workInProgress.flags &= -16777217;
                return null;
            case 6:
                if (current && null != workInProgress.stateNode) current.memoizedProps !== newProps && markUpdate(workInProgress);
                else {
                    if ("string" !== typeof newProps && null === workInProgress.stateNode) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                    current = requiredContext(rootInstanceStackCursor.current);
                    renderLanes = getHostContext();
                    if (popHydrationState(workInProgress)) {
                        current = workInProgress.stateNode;
                        renderLanes = workInProgress.memoizedProps;
                        _type = !didSuspendOrErrorDEV;
                        newProps = null;
                        var returnFiber = hydrationParentFiber;
                        if (null !== returnFiber) switch(returnFiber.tag){
                            case 3:
                                _type && (_type = diffHydratedTextForDevWarnings(current, renderLanes, newProps), null !== _type && (buildHydrationDiffNode(workInProgress, 0).serverProps = _type));
                                break;
                            case 27:
                            case 5:
                                newProps = returnFiber.memoizedProps, _type && (_type = diffHydratedTextForDevWarnings(current, renderLanes, newProps), null !== _type && (buildHydrationDiffNode(workInProgress, 0).serverProps = _type));
                        }
                        current[internalInstanceKey] = workInProgress;
                        current = current.nodeValue === renderLanes || null !== newProps && !0 === newProps.suppressHydrationWarning || checkForUnmatchedText(current.nodeValue, renderLanes) ? !0 : !1;
                        current || throwOnHydrationMismatch(workInProgress);
                    } else _type = renderLanes.ancestorInfo.current, null != _type && validateTextNesting(newProps, _type.tag, renderLanes.ancestorInfo.implicitRootScope), current = getOwnerDocumentFromRootContainer(current).createTextNode(newProps), current[internalInstanceKey] = workInProgress, workInProgress.stateNode = current;
                }
                bubbleProperties(workInProgress);
                return null;
            case 13:
                newProps = workInProgress.memoizedState;
                if (null === current || null !== current.memoizedState && null !== current.memoizedState.dehydrated) {
                    _type = popHydrationState(workInProgress);
                    if (null !== newProps && null !== newProps.dehydrated) {
                        if (null === current) {
                            if (!_type) throw Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                            _type = workInProgress.memoizedState;
                            _type = null !== _type ? _type.dehydrated : null;
                            if (!_type) throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
                            _type[internalInstanceKey] = workInProgress;
                            bubbleProperties(workInProgress);
                            (workInProgress.mode & ProfileMode) !== NoMode && null !== newProps && (_type = workInProgress.child, null !== _type && (workInProgress.treeBaseDuration -= _type.treeBaseDuration));
                        } else emitPendingHydrationWarnings(), resetHydrationState(), 0 === (workInProgress.flags & 128) && (workInProgress.memoizedState = null), workInProgress.flags |= 4, bubbleProperties(workInProgress), (workInProgress.mode & ProfileMode) !== NoMode && null !== newProps && (_type = workInProgress.child, null !== _type && (workInProgress.treeBaseDuration -= _type.treeBaseDuration));
                        _type = !1;
                    } else _type = upgradeHydrationErrorsToRecoverable(), null !== current && null !== current.memoizedState && (current.memoizedState.hydrationErrors = _type), _type = !0;
                    if (!_type) {
                        if (workInProgress.flags & 256) return popSuspenseHandler(workInProgress), workInProgress;
                        popSuspenseHandler(workInProgress);
                        return null;
                    }
                }
                popSuspenseHandler(workInProgress);
                if (0 !== (workInProgress.flags & 128)) return workInProgress.lanes = renderLanes, (workInProgress.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress), workInProgress;
                renderLanes = null !== newProps;
                current = null !== current && null !== current.memoizedState;
                renderLanes && (newProps = workInProgress.child, _type = null, null !== newProps.alternate && null !== newProps.alternate.memoizedState && null !== newProps.alternate.memoizedState.cachePool && (_type = newProps.alternate.memoizedState.cachePool.pool), returnFiber = null, null !== newProps.memoizedState && null !== newProps.memoizedState.cachePool && (returnFiber = newProps.memoizedState.cachePool.pool), returnFiber !== _type && (newProps.flags |= 2048));
                renderLanes !== current && renderLanes && (workInProgress.child.flags |= 8192);
                scheduleRetryEffect(workInProgress, workInProgress.updateQueue);
                bubbleProperties(workInProgress);
                (workInProgress.mode & ProfileMode) !== NoMode && renderLanes && (current = workInProgress.child, null !== current && (workInProgress.treeBaseDuration -= current.treeBaseDuration));
                return null;
            case 4:
                return popHostContainer(workInProgress), null === current && listenToAllSupportedEvents(workInProgress.stateNode.containerInfo), bubbleProperties(workInProgress), null;
            case 10:
                return popProvider(workInProgress.type, workInProgress), bubbleProperties(workInProgress), null;
            case 19:
                pop(suspenseStackCursor, workInProgress);
                _type = workInProgress.memoizedState;
                if (null === _type) return bubbleProperties(workInProgress), null;
                newProps = 0 !== (workInProgress.flags & 128);
                returnFiber = _type.rendering;
                if (null === returnFiber) {
                    if (newProps) cutOffTailIfNeeded(_type, !1);
                    else {
                        if (workInProgressRootExitStatus !== RootInProgress || null !== current && 0 !== (current.flags & 128)) for(current = workInProgress.child; null !== current;){
                            returnFiber = findFirstSuspended(current);
                            if (null !== returnFiber) {
                                workInProgress.flags |= 128;
                                cutOffTailIfNeeded(_type, !1);
                                current = returnFiber.updateQueue;
                                workInProgress.updateQueue = current;
                                scheduleRetryEffect(workInProgress, current);
                                workInProgress.subtreeFlags = 0;
                                current = renderLanes;
                                for(renderLanes = workInProgress.child; null !== renderLanes;)resetWorkInProgress(renderLanes, current), renderLanes = renderLanes.sibling;
                                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress);
                                return workInProgress.child;
                            }
                            current = current.sibling;
                        }
                        null !== _type.tail && now$1() > workInProgressRootRenderTargetTime && (workInProgress.flags |= 128, newProps = !0, cutOffTailIfNeeded(_type, !1), workInProgress.lanes = 4194304);
                    }
                } else {
                    if (!newProps) {
                        if (current = findFirstSuspended(returnFiber), null !== current) {
                            if (workInProgress.flags |= 128, newProps = !0, current = current.updateQueue, workInProgress.updateQueue = current, scheduleRetryEffect(workInProgress, current), cutOffTailIfNeeded(_type, !0), null === _type.tail && "hidden" === _type.tailMode && !returnFiber.alternate && !isHydrating) return bubbleProperties(workInProgress), null;
                        } else 2 * now$1() - _type.renderingStartTime > workInProgressRootRenderTargetTime && 536870912 !== renderLanes && (workInProgress.flags |= 128, newProps = !0, cutOffTailIfNeeded(_type, !1), workInProgress.lanes = 4194304);
                    }
                    _type.isBackwards ? (returnFiber.sibling = workInProgress.child, workInProgress.child = returnFiber) : (current = _type.last, null !== current ? current.sibling = returnFiber : workInProgress.child = returnFiber, _type.last = returnFiber);
                }
                if (null !== _type.tail) return current = _type.tail, _type.rendering = current, _type.tail = current.sibling, _type.renderingStartTime = now$1(), current.sibling = null, renderLanes = suspenseStackCursor.current, renderLanes = newProps ? renderLanes & SubtreeSuspenseContextMask | ForceSuspenseFallback : renderLanes & SubtreeSuspenseContextMask, push(suspenseStackCursor, renderLanes, workInProgress), current;
                bubbleProperties(workInProgress);
                return null;
            case 22:
            case 23:
                return popSuspenseHandler(workInProgress), popHiddenContext(workInProgress), newProps = null !== workInProgress.memoizedState, null !== current ? null !== current.memoizedState !== newProps && (workInProgress.flags |= 8192) : newProps && (workInProgress.flags |= 8192), newProps ? 0 !== (renderLanes & 536870912) && 0 === (workInProgress.flags & 128) && (bubbleProperties(workInProgress), workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192)) : bubbleProperties(workInProgress), renderLanes = workInProgress.updateQueue, null !== renderLanes && scheduleRetryEffect(workInProgress, renderLanes.retryQueue), renderLanes = null, null !== current && null !== current.memoizedState && null !== current.memoizedState.cachePool && (renderLanes = current.memoizedState.cachePool.pool), newProps = null, null !== workInProgress.memoizedState && null !== workInProgress.memoizedState.cachePool && (newProps = workInProgress.memoizedState.cachePool.pool), newProps !== renderLanes && (workInProgress.flags |= 2048), null !== current && pop(resumedCache, workInProgress), null;
            case 24:
                return renderLanes = null, null !== current && (renderLanes = current.memoizedState.cache), workInProgress.memoizedState.cache !== renderLanes && (workInProgress.flags |= 2048), popProvider(CacheContext, workInProgress), bubbleProperties(workInProgress), null;
            case 25:
                return null;
            case 30:
                return null;
        }
        throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function unwindWork(current, workInProgress) {
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case 1:
                return current = workInProgress.flags, current & 65536 ? (workInProgress.flags = current & -65537 | 128, (workInProgress.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress), workInProgress) : null;
            case 3:
                return popProvider(CacheContext, workInProgress), popHostContainer(workInProgress), current = workInProgress.flags, 0 !== (current & 65536) && 0 === (current & 128) ? (workInProgress.flags = current & -65537 | 128, workInProgress) : null;
            case 26:
            case 27:
            case 5:
                return popHostContext(workInProgress), null;
            case 13:
                popSuspenseHandler(workInProgress);
                current = workInProgress.memoizedState;
                if (null !== current && null !== current.dehydrated) {
                    if (null === workInProgress.alternate) throw Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                    resetHydrationState();
                }
                current = workInProgress.flags;
                return current & 65536 ? (workInProgress.flags = current & -65537 | 128, (workInProgress.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress), workInProgress) : null;
            case 19:
                return pop(suspenseStackCursor, workInProgress), null;
            case 4:
                return popHostContainer(workInProgress), null;
            case 10:
                return popProvider(workInProgress.type, workInProgress), null;
            case 22:
            case 23:
                return popSuspenseHandler(workInProgress), popHiddenContext(workInProgress), null !== current && pop(resumedCache, workInProgress), current = workInProgress.flags, current & 65536 ? (workInProgress.flags = current & -65537 | 128, (workInProgress.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress), workInProgress) : null;
            case 24:
                return popProvider(CacheContext, workInProgress), null;
            case 25:
                return null;
            default:
                return null;
        }
    }
    function unwindInterruptedWork(current, interruptedWork) {
        popTreeContext(interruptedWork);
        switch(interruptedWork.tag){
            case 3:
                popProvider(CacheContext, interruptedWork);
                popHostContainer(interruptedWork);
                break;
            case 26:
            case 27:
            case 5:
                popHostContext(interruptedWork);
                break;
            case 4:
                popHostContainer(interruptedWork);
                break;
            case 13:
                popSuspenseHandler(interruptedWork);
                break;
            case 19:
                pop(suspenseStackCursor, interruptedWork);
                break;
            case 10:
                popProvider(interruptedWork.type, interruptedWork);
                break;
            case 22:
            case 23:
                popSuspenseHandler(interruptedWork);
                popHiddenContext(interruptedWork);
                null !== current && pop(resumedCache, interruptedWork);
                break;
            case 24:
                popProvider(CacheContext, interruptedWork);
        }
    }
    function shouldProfile(current) {
        return (current.mode & ProfileMode) !== NoMode;
    }
    function commitHookLayoutEffects(finishedWork, hookFlags) {
        shouldProfile(finishedWork) ? (startEffectTimer(), commitHookEffectListMount(hookFlags, finishedWork), recordEffectDuration()) : commitHookEffectListMount(hookFlags, finishedWork);
    }
    function commitHookLayoutUnmountEffects(finishedWork, nearestMountedAncestor, hookFlags) {
        shouldProfile(finishedWork) ? (startEffectTimer(), commitHookEffectListUnmount(hookFlags, finishedWork, nearestMountedAncestor), recordEffectDuration()) : commitHookEffectListUnmount(hookFlags, finishedWork, nearestMountedAncestor);
    }
    function commitHookEffectListMount(flags, finishedWork) {
        try {
            var updateQueue = finishedWork.updateQueue, lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;
            if (null !== lastEffect) {
                var firstEffect = lastEffect.next;
                updateQueue = firstEffect;
                do {
                    if ((updateQueue.tag & flags) === flags && ((flags & Passive) !== NoFlags ? null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted && injectedProfilingHooks.markComponentPassiveEffectMountStarted(finishedWork) : (flags & Layout) !== NoFlags && null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted && injectedProfilingHooks.markComponentLayoutEffectMountStarted(finishedWork), lastEffect = void 0, (flags & Insertion) !== NoFlags && (isRunningInsertionEffect = !0), lastEffect = runWithFiberInDEV(finishedWork, callCreateInDEV, updateQueue), (flags & Insertion) !== NoFlags && (isRunningInsertionEffect = !1), (flags & Passive) !== NoFlags ? null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped && injectedProfilingHooks.markComponentPassiveEffectMountStopped() : (flags & Layout) !== NoFlags && null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped && injectedProfilingHooks.markComponentLayoutEffectMountStopped(), void 0 !== lastEffect && "function" !== typeof lastEffect)) {
                        var hookName = void 0;
                        hookName = 0 !== (updateQueue.tag & Layout) ? "useLayoutEffect" : 0 !== (updateQueue.tag & Insertion) ? "useInsertionEffect" : "useEffect";
                        var addendum = void 0;
                        addendum = null === lastEffect ? " You returned null. If your effect does not require clean up, return undefined (or nothing)." : "function" === typeof lastEffect.then ? "\n\nIt looks like you wrote " + hookName + "(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\n" + hookName + "(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://react.dev/link/hooks-data-fetching" : " You returned: " + lastEffect;
                        runWithFiberInDEV(finishedWork, function(n, a) {
                            console.error("%s must not return anything besides a function, which is used for clean-up.%s", n, a);
                        }, hookName, addendum);
                    }
                    updateQueue = updateQueue.next;
                }while (updateQueue !== firstEffect);
            }
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
        try {
            var updateQueue = finishedWork.updateQueue, lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;
            if (null !== lastEffect) {
                var firstEffect = lastEffect.next;
                updateQueue = firstEffect;
                do {
                    if ((updateQueue.tag & flags) === flags) {
                        var inst = updateQueue.inst, destroy = inst.destroy;
                        void 0 !== destroy && (inst.destroy = void 0, (flags & Passive) !== NoFlags ? null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted && injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(finishedWork) : (flags & Layout) !== NoFlags && null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted && injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(finishedWork), (flags & Insertion) !== NoFlags && (isRunningInsertionEffect = !0), lastEffect = finishedWork, runWithFiberInDEV(lastEffect, callDestroyInDEV, lastEffect, nearestMountedAncestor, destroy), (flags & Insertion) !== NoFlags && (isRunningInsertionEffect = !1), (flags & Passive) !== NoFlags ? null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped && injectedProfilingHooks.markComponentPassiveEffectUnmountStopped() : (flags & Layout) !== NoFlags && null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped && injectedProfilingHooks.markComponentLayoutEffectUnmountStopped());
                    }
                    updateQueue = updateQueue.next;
                }while (updateQueue !== firstEffect);
            }
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function commitHookPassiveMountEffects(finishedWork, hookFlags) {
        shouldProfile(finishedWork) ? (startEffectTimer(), commitHookEffectListMount(hookFlags, finishedWork), recordEffectDuration()) : commitHookEffectListMount(hookFlags, finishedWork);
    }
    function commitHookPassiveUnmountEffects(finishedWork, nearestMountedAncestor, hookFlags) {
        shouldProfile(finishedWork) ? (startEffectTimer(), commitHookEffectListUnmount(hookFlags, finishedWork, nearestMountedAncestor), recordEffectDuration()) : commitHookEffectListUnmount(hookFlags, finishedWork, nearestMountedAncestor);
    }
    function commitClassCallbacks(finishedWork) {
        var updateQueue = finishedWork.updateQueue;
        if (null !== updateQueue) {
            var instance = finishedWork.stateNode;
            finishedWork.type.defaultProps || "ref" in finishedWork.memoizedProps || didWarnAboutReassigningProps || (instance.props !== finishedWork.memoizedProps && console.error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), instance.state !== finishedWork.memoizedState && console.error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"));
            try {
                runWithFiberInDEV(finishedWork, commitCallbacks, updateQueue, instance);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
        }
    }
    function callGetSnapshotBeforeUpdates(instance, prevProps, prevState) {
        return instance.getSnapshotBeforeUpdate(prevProps, prevState);
    }
    function commitClassSnapshot(finishedWork, current) {
        var prevProps = current.memoizedProps, prevState = current.memoizedState;
        current = finishedWork.stateNode;
        finishedWork.type.defaultProps || "ref" in finishedWork.memoizedProps || didWarnAboutReassigningProps || (current.props !== finishedWork.memoizedProps && console.error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), current.state !== finishedWork.memoizedState && console.error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"));
        try {
            var resolvedPrevProps = resolveClassComponentProps(finishedWork.type, prevProps, finishedWork.elementType === finishedWork.type);
            var snapshot = runWithFiberInDEV(finishedWork, callGetSnapshotBeforeUpdates, current, resolvedPrevProps, prevState);
            prevProps = didWarnAboutUndefinedSnapshotBeforeUpdate;
            void 0 !== snapshot || prevProps.has(finishedWork.type) || (prevProps.add(finishedWork.type), runWithFiberInDEV(finishedWork, function() {
                console.error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentNameFromFiber(finishedWork));
            }));
            current.__reactInternalSnapshotBeforeUpdate = snapshot;
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {
        instance.props = resolveClassComponentProps(current.type, current.memoizedProps);
        instance.state = current.memoizedState;
        shouldProfile(current) ? (startEffectTimer(), runWithFiberInDEV(current, callComponentWillUnmountInDEV, current, nearestMountedAncestor, instance), recordEffectDuration()) : runWithFiberInDEV(current, callComponentWillUnmountInDEV, current, nearestMountedAncestor, instance);
    }
    function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (null !== ref) {
            switch(finishedWork.tag){
                case 26:
                case 27:
                case 5:
                    var instanceToUse = finishedWork.stateNode;
                    break;
                case 30:
                    instanceToUse = finishedWork.stateNode;
                    break;
                default:
                    instanceToUse = finishedWork.stateNode;
            }
            if ("function" === typeof ref) {
                if (shouldProfile(finishedWork)) try {
                    startEffectTimer(), finishedWork.refCleanup = ref(instanceToUse);
                } finally{
                    recordEffectDuration();
                }
                else finishedWork.refCleanup = ref(instanceToUse);
            } else "string" === typeof ref ? console.error("String refs are no longer supported.") : ref.hasOwnProperty("current") || console.error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentNameFromFiber(finishedWork)), ref.current = instanceToUse;
        }
    }
    function safelyAttachRef(current, nearestMountedAncestor) {
        try {
            runWithFiberInDEV(current, commitAttachRef, current);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    }
    function safelyDetachRef(current, nearestMountedAncestor) {
        var ref = current.ref, refCleanup = current.refCleanup;
        if (null !== ref) {
            if ("function" === typeof refCleanup) try {
                if (shouldProfile(current)) try {
                    startEffectTimer(), runWithFiberInDEV(current, refCleanup);
                } finally{
                    recordEffectDuration(current);
                }
                else runWithFiberInDEV(current, refCleanup);
            } catch (error) {
                captureCommitPhaseError(current, nearestMountedAncestor, error);
            } finally{
                current.refCleanup = null, current = current.alternate, null != current && (current.refCleanup = null);
            }
            else if ("function" === typeof ref) try {
                if (shouldProfile(current)) try {
                    startEffectTimer(), runWithFiberInDEV(current, ref, null);
                } finally{
                    recordEffectDuration(current);
                }
                else runWithFiberInDEV(current, ref, null);
            } catch (error$7) {
                captureCommitPhaseError(current, nearestMountedAncestor, error$7);
            }
            else ref.current = null;
        }
    }
    function commitProfiler(finishedWork, current, commitStartTime, effectDuration) {
        var _finishedWork$memoize = finishedWork.memoizedProps, id = _finishedWork$memoize.id, onCommit = _finishedWork$memoize.onCommit;
        _finishedWork$memoize = _finishedWork$memoize.onRender;
        current = null === current ? "mount" : "update";
        currentUpdateIsNested && (current = "nested-update");
        "function" === typeof _finishedWork$memoize && _finishedWork$memoize(id, current, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitStartTime);
        "function" === typeof onCommit && onCommit(finishedWork.memoizedProps.id, current, effectDuration, commitStartTime);
    }
    function commitProfilerPostCommitImpl(finishedWork, current, commitStartTime, passiveEffectDuration) {
        var _finishedWork$memoize2 = finishedWork.memoizedProps;
        finishedWork = _finishedWork$memoize2.id;
        _finishedWork$memoize2 = _finishedWork$memoize2.onPostCommit;
        current = null === current ? "mount" : "update";
        currentUpdateIsNested && (current = "nested-update");
        "function" === typeof _finishedWork$memoize2 && _finishedWork$memoize2(finishedWork, current, passiveEffectDuration, commitStartTime);
    }
    function commitHostMount(finishedWork) {
        var type = finishedWork.type, props = finishedWork.memoizedProps, instance = finishedWork.stateNode;
        try {
            runWithFiberInDEV(finishedWork, commitMount, instance, type, props, finishedWork);
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function commitHostUpdate(finishedWork, newProps, oldProps) {
        try {
            runWithFiberInDEV(finishedWork, commitUpdate, finishedWork.stateNode, finishedWork.type, oldProps, newProps, finishedWork);
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function isHostParent(fiber) {
        return 5 === fiber.tag || 3 === fiber.tag || 26 === fiber.tag || 27 === fiber.tag && isSingletonScope(fiber.type) || 4 === fiber.tag;
    }
    function getHostSibling(fiber) {
        a: for(;;){
            for(; null === fiber.sibling;){
                if (null === fiber.return || isHostParent(fiber.return)) return null;
                fiber = fiber.return;
            }
            fiber.sibling.return = fiber.return;
            for(fiber = fiber.sibling; 5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;){
                if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;
                if (fiber.flags & 2) continue a;
                if (null === fiber.child || 4 === fiber.tag) continue a;
                else fiber.child.return = fiber, fiber = fiber.child;
            }
            if (!(fiber.flags & 2)) return fiber.stateNode;
        }
    }
    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
        var tag = node.tag;
        if (5 === tag || 6 === tag) node = node.stateNode, before ? (9 === parent.nodeType ? parent.body : "HTML" === parent.nodeName ? parent.ownerDocument.body : parent).insertBefore(node, before) : (before = 9 === parent.nodeType ? parent.body : "HTML" === parent.nodeName ? parent.ownerDocument.body : parent, before.appendChild(node), parent = parent._reactRootContainer, null !== parent && void 0 !== parent || null !== before.onclick || (before.onclick = noop$1));
        else if (4 !== tag && (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode, before = null), node = node.child, null !== node)) for(insertOrAppendPlacementNodeIntoContainer(node, before, parent), node = node.sibling; null !== node;)insertOrAppendPlacementNodeIntoContainer(node, before, parent), node = node.sibling;
    }
    function insertOrAppendPlacementNode(node, before, parent) {
        var tag = node.tag;
        if (5 === tag || 6 === tag) node = node.stateNode, before ? parent.insertBefore(node, before) : parent.appendChild(node);
        else if (4 !== tag && (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode), node = node.child, null !== node)) for(insertOrAppendPlacementNode(node, before, parent), node = node.sibling; null !== node;)insertOrAppendPlacementNode(node, before, parent), node = node.sibling;
    }
    function commitPlacement(finishedWork) {
        for(var hostParentFiber, parentFiber = finishedWork.return; null !== parentFiber;){
            if (isHostParent(parentFiber)) {
                hostParentFiber = parentFiber;
                break;
            }
            parentFiber = parentFiber.return;
        }
        if (null == hostParentFiber) throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        switch(hostParentFiber.tag){
            case 27:
                hostParentFiber = hostParentFiber.stateNode;
                parentFiber = getHostSibling(finishedWork);
                insertOrAppendPlacementNode(finishedWork, parentFiber, hostParentFiber);
                break;
            case 5:
                parentFiber = hostParentFiber.stateNode;
                hostParentFiber.flags & 32 && (resetTextContent(parentFiber), hostParentFiber.flags &= -33);
                hostParentFiber = getHostSibling(finishedWork);
                insertOrAppendPlacementNode(finishedWork, hostParentFiber, parentFiber);
                break;
            case 3:
            case 4:
                hostParentFiber = hostParentFiber.stateNode.containerInfo;
                parentFiber = getHostSibling(finishedWork);
                insertOrAppendPlacementNodeIntoContainer(finishedWork, parentFiber, hostParentFiber);
                break;
            default:
                throw Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
        }
    }
    function commitHostSingletonAcquisition(finishedWork) {
        var singleton = finishedWork.stateNode, props = finishedWork.memoizedProps;
        try {
            runWithFiberInDEV(finishedWork, acquireSingletonInstance, finishedWork.type, props, singleton, finishedWork);
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function commitBeforeMutationEffects(root, firstChild) {
        root = root.containerInfo;
        eventsEnabled = _enabled;
        root = getActiveElementDeep(root);
        if (hasSelectionCapabilities(root)) {
            if ("selectionStart" in root) var JSCompiler_temp = {
                start: root.selectionStart,
                end: root.selectionEnd
            };
            else a: {
                JSCompiler_temp = (JSCompiler_temp = root.ownerDocument) && JSCompiler_temp.defaultView || window;
                var selection = JSCompiler_temp.getSelection && JSCompiler_temp.getSelection();
                if (selection && 0 !== selection.rangeCount) {
                    JSCompiler_temp = selection.anchorNode;
                    var anchorOffset = selection.anchorOffset, focusNode = selection.focusNode;
                    selection = selection.focusOffset;
                    try {
                        JSCompiler_temp.nodeType, focusNode.nodeType;
                    } catch (e$2) {
                        JSCompiler_temp = null;
                        break a;
                    }
                    var length = 0, start = -1, end = -1, indexWithinAnchor = 0, indexWithinFocus = 0, node = root, parentNode = null;
                    b: for(;;){
                        for(var next;;){
                            node !== JSCompiler_temp || 0 !== anchorOffset && 3 !== node.nodeType || (start = length + anchorOffset);
                            node !== focusNode || 0 !== selection && 3 !== node.nodeType || (end = length + selection);
                            3 === node.nodeType && (length += node.nodeValue.length);
                            if (null === (next = node.firstChild)) break;
                            parentNode = node;
                            node = next;
                        }
                        for(;;){
                            if (node === root) break b;
                            parentNode === JSCompiler_temp && ++indexWithinAnchor === anchorOffset && (start = length);
                            parentNode === focusNode && ++indexWithinFocus === selection && (end = length);
                            if (null !== (next = node.nextSibling)) break;
                            node = parentNode;
                            parentNode = node.parentNode;
                        }
                        node = next;
                    }
                    JSCompiler_temp = -1 === start || -1 === end ? null : {
                        start: start,
                        end: end
                    };
                } else JSCompiler_temp = null;
            }
            JSCompiler_temp = JSCompiler_temp || {
                start: 0,
                end: 0
            };
        } else JSCompiler_temp = null;
        selectionInformation = {
            focusedElem: root,
            selectionRange: JSCompiler_temp
        };
        _enabled = !1;
        for(nextEffect = firstChild; null !== nextEffect;)if (firstChild = nextEffect, root = firstChild.child, 0 !== (firstChild.subtreeFlags & 1024) && null !== root) root.return = firstChild, nextEffect = root;
        else for(; null !== nextEffect;){
            root = firstChild = nextEffect;
            JSCompiler_temp = root.alternate;
            anchorOffset = root.flags;
            switch(root.tag){
                case 0:
                    break;
                case 11:
                case 15:
                    break;
                case 1:
                    0 !== (anchorOffset & 1024) && null !== JSCompiler_temp && commitClassSnapshot(root, JSCompiler_temp);
                    break;
                case 3:
                    if (0 !== (anchorOffset & 1024)) {
                        if (root = root.stateNode.containerInfo, JSCompiler_temp = root.nodeType, 9 === JSCompiler_temp) clearContainerSparingly(root);
                        else if (1 === JSCompiler_temp) switch(root.nodeName){
                            case "HEAD":
                            case "HTML":
                            case "BODY":
                                clearContainerSparingly(root);
                                break;
                            default:
                                root.textContent = "";
                        }
                    }
                    break;
                case 5:
                case 26:
                case 27:
                case 6:
                case 4:
                case 17:
                    break;
                default:
                    if (0 !== (anchorOffset & 1024)) throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
            root = firstChild.sibling;
            if (null !== root) {
                root.return = firstChild.return;
                nextEffect = root;
                break;
            }
            nextEffect = firstChild.return;
        }
    }
    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
        var flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                flags & 4 && commitHookLayoutEffects(finishedWork, Layout | HasEffect);
                break;
            case 1:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                if (flags & 4) {
                    if (finishedRoot = finishedWork.stateNode, null === current) finishedWork.type.defaultProps || "ref" in finishedWork.memoizedProps || didWarnAboutReassigningProps || (finishedRoot.props !== finishedWork.memoizedProps && console.error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), finishedRoot.state !== finishedWork.memoizedState && console.error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance")), shouldProfile(finishedWork) ? (startEffectTimer(), runWithFiberInDEV(finishedWork, callComponentDidMountInDEV, finishedWork, finishedRoot), recordEffectDuration()) : runWithFiberInDEV(finishedWork, callComponentDidMountInDEV, finishedWork, finishedRoot);
                    else {
                        var prevProps = resolveClassComponentProps(finishedWork.type, current.memoizedProps);
                        current = current.memoizedState;
                        finishedWork.type.defaultProps || "ref" in finishedWork.memoizedProps || didWarnAboutReassigningProps || (finishedRoot.props !== finishedWork.memoizedProps && console.error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), finishedRoot.state !== finishedWork.memoizedState && console.error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"));
                        shouldProfile(finishedWork) ? (startEffectTimer(), runWithFiberInDEV(finishedWork, callComponentDidUpdateInDEV, finishedWork, finishedRoot, prevProps, current, finishedRoot.__reactInternalSnapshotBeforeUpdate), recordEffectDuration()) : runWithFiberInDEV(finishedWork, callComponentDidUpdateInDEV, finishedWork, finishedRoot, prevProps, current, finishedRoot.__reactInternalSnapshotBeforeUpdate);
                    }
                }
                flags & 64 && commitClassCallbacks(finishedWork);
                flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 3:
                current = pushNestedEffectDurations();
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                if (flags & 64 && (flags = finishedWork.updateQueue, null !== flags)) {
                    prevProps = null;
                    if (null !== finishedWork.child) switch(finishedWork.child.tag){
                        case 27:
                        case 5:
                            prevProps = finishedWork.child.stateNode;
                            break;
                        case 1:
                            prevProps = finishedWork.child.stateNode;
                    }
                    try {
                        runWithFiberInDEV(finishedWork, commitCallbacks, flags, prevProps);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                finishedRoot.effectDuration += popNestedEffectDurations(current);
                break;
            case 27:
                null === current && flags & 4 && commitHostSingletonAcquisition(finishedWork);
            case 26:
            case 5:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                null === current && flags & 4 && commitHostMount(finishedWork);
                flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 12:
                if (flags & 4) {
                    flags = pushNestedEffectDurations();
                    recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                    finishedRoot = finishedWork.stateNode;
                    finishedRoot.effectDuration += bubbleNestedEffectDurations(flags);
                    try {
                        runWithFiberInDEV(finishedWork, commitProfiler, finishedWork, current, commitStartTime, finishedRoot.effectDuration);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                } else recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                break;
            case 13:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                flags & 64 && (finishedRoot = finishedWork.memoizedState, null !== finishedRoot && (finishedRoot = finishedRoot.dehydrated, null !== finishedRoot && (finishedWork = retryDehydratedSuspenseBoundary.bind(null, finishedWork), registerSuspenseInstanceRetry(finishedRoot, finishedWork))));
                break;
            case 22:
                flags = null !== finishedWork.memoizedState || offscreenSubtreeIsHidden;
                if (!flags) {
                    current = null !== current && null !== current.memoizedState || offscreenSubtreeWasHidden;
                    prevProps = offscreenSubtreeIsHidden;
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                    offscreenSubtreeIsHidden = flags;
                    (offscreenSubtreeWasHidden = current) && !prevOffscreenSubtreeWasHidden ? recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, 0 !== (finishedWork.subtreeFlags & 8772)) : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                    offscreenSubtreeIsHidden = prevProps;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                }
                break;
            case 30:
                break;
            default:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        }
    }
    function detachFiberAfterEffects(fiber) {
        var alternate = fiber.alternate;
        null !== alternate && (fiber.alternate = null, detachFiberAfterEffects(alternate));
        fiber.child = null;
        fiber.deletions = null;
        fiber.sibling = null;
        5 === fiber.tag && (alternate = fiber.stateNode, null !== alternate && detachDeletedInstance(alternate));
        fiber.stateNode = null;
        fiber._debugOwner = null;
        fiber.return = null;
        fiber.dependencies = null;
        fiber.memoizedProps = null;
        fiber.memoizedState = null;
        fiber.pendingProps = null;
        fiber.stateNode = null;
        fiber.updateQueue = null;
    }
    function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
        for(parent = parent.child; null !== parent;)commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent), parent = parent.sibling;
    }
    function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
        if (injectedHook && "function" === typeof injectedHook.onCommitFiberUnmount) try {
            injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);
        } catch (err) {
            hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
        }
        switch(deletedFiber.tag){
            case 26:
                offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                deletedFiber.memoizedState ? deletedFiber.memoizedState.count-- : deletedFiber.stateNode && (deletedFiber = deletedFiber.stateNode, deletedFiber.parentNode.removeChild(deletedFiber));
                break;
            case 27:
                offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
                var prevHostParent = hostParent, prevHostParentIsContainer = hostParentIsContainer;
                isSingletonScope(deletedFiber.type) && (hostParent = deletedFiber.stateNode, hostParentIsContainer = !1);
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                runWithFiberInDEV(deletedFiber, releaseSingletonInstance, deletedFiber.stateNode);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                break;
            case 5:
                offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
            case 6:
                prevHostParent = hostParent;
                prevHostParentIsContainer = hostParentIsContainer;
                hostParent = null;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                if (null !== hostParent) {
                    if (hostParentIsContainer) try {
                        runWithFiberInDEV(deletedFiber, removeChildFromContainer, hostParent, deletedFiber.stateNode);
                    } catch (error) {
                        captureCommitPhaseError(deletedFiber, nearestMountedAncestor, error);
                    }
                    else try {
                        runWithFiberInDEV(deletedFiber, removeChild, hostParent, deletedFiber.stateNode);
                    } catch (error) {
                        captureCommitPhaseError(deletedFiber, nearestMountedAncestor, error);
                    }
                }
                break;
            case 18:
                null !== hostParent && (hostParentIsContainer ? (finishedRoot = hostParent, clearSuspenseBoundary(9 === finishedRoot.nodeType ? finishedRoot.body : "HTML" === finishedRoot.nodeName ? finishedRoot.ownerDocument.body : finishedRoot, deletedFiber.stateNode), retryIfBlockedOn(finishedRoot)) : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));
                break;
            case 4:
                prevHostParent = hostParent;
                prevHostParentIsContainer = hostParentIsContainer;
                hostParent = deletedFiber.stateNode.containerInfo;
                hostParentIsContainer = !0;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                break;
            case 0:
            case 11:
            case 14:
            case 15:
                offscreenSubtreeWasHidden || commitHookEffectListUnmount(Insertion, deletedFiber, nearestMountedAncestor);
                offscreenSubtreeWasHidden || commitHookLayoutUnmountEffects(deletedFiber, nearestMountedAncestor, Layout);
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            case 1:
                offscreenSubtreeWasHidden || (safelyDetachRef(deletedFiber, nearestMountedAncestor), prevHostParent = deletedFiber.stateNode, "function" === typeof prevHostParent.componentWillUnmount && safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, prevHostParent));
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            case 21:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            case 22:
                offscreenSubtreeWasHidden = (prevHostParent = offscreenSubtreeWasHidden) || null !== deletedFiber.memoizedState;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                offscreenSubtreeWasHidden = prevHostParent;
                break;
            default:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        }
    }
    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
        if (null === finishedWork.memoizedState && (finishedRoot = finishedWork.alternate, null !== finishedRoot && (finishedRoot = finishedRoot.memoizedState, null !== finishedRoot && (finishedRoot = finishedRoot.dehydrated, null !== finishedRoot)))) try {
            runWithFiberInDEV(finishedWork, commitHydratedSuspenseInstance, finishedRoot);
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function getRetryCache(finishedWork) {
        switch(finishedWork.tag){
            case 13:
            case 19:
                var retryCache = finishedWork.stateNode;
                null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet());
                return retryCache;
            case 22:
                return finishedWork = finishedWork.stateNode, retryCache = finishedWork._retryCache, null === retryCache && (retryCache = finishedWork._retryCache = new PossiblyWeakSet()), retryCache;
            default:
                throw Error("Unexpected Suspense handler tag (" + finishedWork.tag + "). This is a bug in React.");
        }
    }
    function attachSuspenseRetryListeners(finishedWork, wakeables) {
        var retryCache = getRetryCache(finishedWork);
        wakeables.forEach(function(wakeable) {
            var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
            if (!retryCache.has(wakeable)) {
                retryCache.add(wakeable);
                if (isDevToolsPresent) {
                    if (null !== inProgressLanes && null !== inProgressRoot) restorePendingUpdaters(inProgressRoot, inProgressLanes);
                    else throw Error("Expected finished root and lanes to be set. This is a bug in React.");
                }
                wakeable.then(retry, retry);
            }
        });
    }
    function recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {
        var deletions = parentFiber.deletions;
        if (null !== deletions) for(var i = 0; i < deletions.length; i++){
            var root = root$jscomp$0, returnFiber = parentFiber, deletedFiber = deletions[i], parent = returnFiber;
            a: for(; null !== parent;){
                switch(parent.tag){
                    case 27:
                        if (isSingletonScope(parent.type)) {
                            hostParent = parent.stateNode;
                            hostParentIsContainer = !1;
                            break a;
                        }
                        break;
                    case 5:
                        hostParent = parent.stateNode;
                        hostParentIsContainer = !1;
                        break a;
                    case 3:
                    case 4:
                        hostParent = parent.stateNode.containerInfo;
                        hostParentIsContainer = !0;
                        break a;
                }
                parent = parent.return;
            }
            if (null === hostParent) throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
            commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);
            hostParent = null;
            hostParentIsContainer = !1;
            root = deletedFiber;
            returnFiber = root.alternate;
            null !== returnFiber && (returnFiber.return = null);
            root.return = null;
        }
        if (parentFiber.subtreeFlags & 13878) for(parentFiber = parentFiber.child; null !== parentFiber;)commitMutationEffectsOnFiber(parentFiber, root$jscomp$0), parentFiber = parentFiber.sibling;
    }
    function commitMutationEffectsOnFiber(finishedWork, root) {
        var current = finishedWork.alternate, flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 14:
            case 15:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 4 && (commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return), commitHookEffectListMount(Insertion | HasEffect, finishedWork), commitHookLayoutUnmountEffects(finishedWork, finishedWork.return, Layout | HasEffect));
                break;
            case 1:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
                flags & 64 && offscreenSubtreeIsHidden && (finishedWork = finishedWork.updateQueue, null !== finishedWork && (flags = finishedWork.callbacks, null !== flags && (current = finishedWork.shared.hiddenCallbacks, finishedWork.shared.hiddenCallbacks = null === current ? flags : current.concat(flags))));
                break;
            case 26:
                var hoistableRoot = currentHoistableRoot;
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
                if (flags & 4) {
                    if (root = null !== current ? current.memoizedState : null, flags = finishedWork.memoizedState, null === current) {
                        if (null === flags) {
                            if (null === finishedWork.stateNode) {
                                a: {
                                    flags = finishedWork.type;
                                    current = finishedWork.memoizedProps;
                                    root = hoistableRoot.ownerDocument || hoistableRoot;
                                    b: switch(flags){
                                        case "title":
                                            hoistableRoot = root.getElementsByTagName("title")[0];
                                            if (!hoistableRoot || hoistableRoot[internalHoistableMarker] || hoistableRoot[internalInstanceKey] || hoistableRoot.namespaceURI === SVG_NAMESPACE || hoistableRoot.hasAttribute("itemprop")) hoistableRoot = root.createElement(flags), root.head.insertBefore(hoistableRoot, root.querySelector("head > title"));
                                            setInitialProperties(hoistableRoot, flags, current);
                                            hoistableRoot[internalInstanceKey] = finishedWork;
                                            markNodeAsHoistable(hoistableRoot);
                                            flags = hoistableRoot;
                                            break a;
                                        case "link":
                                            var maybeNodes = getHydratableHoistableCache("link", "href", root).get(flags + (current.href || ""));
                                            if (maybeNodes) {
                                                for(var i = 0; i < maybeNodes.length; i++)if (hoistableRoot = maybeNodes[i], hoistableRoot.getAttribute("href") === (null == current.href || "" === current.href ? null : current.href) && hoistableRoot.getAttribute("rel") === (null == current.rel ? null : current.rel) && hoistableRoot.getAttribute("title") === (null == current.title ? null : current.title) && hoistableRoot.getAttribute("crossorigin") === (null == current.crossOrigin ? null : current.crossOrigin)) {
                                                    maybeNodes.splice(i, 1);
                                                    break b;
                                                }
                                            }
                                            hoistableRoot = root.createElement(flags);
                                            setInitialProperties(hoistableRoot, flags, current);
                                            root.head.appendChild(hoistableRoot);
                                            break;
                                        case "meta":
                                            if (maybeNodes = getHydratableHoistableCache("meta", "content", root).get(flags + (current.content || ""))) {
                                                for(i = 0; i < maybeNodes.length; i++)if (hoistableRoot = maybeNodes[i], checkAttributeStringCoercion(current.content, "content"), hoistableRoot.getAttribute("content") === (null == current.content ? null : "" + current.content) && hoistableRoot.getAttribute("name") === (null == current.name ? null : current.name) && hoistableRoot.getAttribute("property") === (null == current.property ? null : current.property) && hoistableRoot.getAttribute("http-equiv") === (null == current.httpEquiv ? null : current.httpEquiv) && hoistableRoot.getAttribute("charset") === (null == current.charSet ? null : current.charSet)) {
                                                    maybeNodes.splice(i, 1);
                                                    break b;
                                                }
                                            }
                                            hoistableRoot = root.createElement(flags);
                                            setInitialProperties(hoistableRoot, flags, current);
                                            root.head.appendChild(hoistableRoot);
                                            break;
                                        default:
                                            throw Error('getNodesForType encountered a type it did not expect: "' + flags + '". This is a bug in React.');
                                    }
                                    hoistableRoot[internalInstanceKey] = finishedWork;
                                    markNodeAsHoistable(hoistableRoot);
                                    flags = hoistableRoot;
                                }
                                finishedWork.stateNode = flags;
                            } else mountHoistable(hoistableRoot, finishedWork.type, finishedWork.stateNode);
                        } else finishedWork.stateNode = acquireResource(hoistableRoot, flags, finishedWork.memoizedProps);
                    } else root !== flags ? (null === root ? null !== current.stateNode && (current = current.stateNode, current.parentNode.removeChild(current)) : root.count--, null === flags ? mountHoistable(hoistableRoot, finishedWork.type, finishedWork.stateNode) : acquireResource(hoistableRoot, flags, finishedWork.memoizedProps)) : null === flags && null !== finishedWork.stateNode && commitHostUpdate(finishedWork, finishedWork.memoizedProps, current.memoizedProps);
                }
                break;
            case 27:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
                null !== current && flags & 4 && commitHostUpdate(finishedWork, finishedWork.memoizedProps, current.memoizedProps);
                break;
            case 5:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
                if (finishedWork.flags & 32) {
                    root = finishedWork.stateNode;
                    try {
                        runWithFiberInDEV(finishedWork, resetTextContent, root);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                flags & 4 && null != finishedWork.stateNode && (root = finishedWork.memoizedProps, commitHostUpdate(finishedWork, root, null !== current ? current.memoizedProps : root));
                flags & 1024 && (needsFormReset = !0, "form" !== finishedWork.type && console.error("Unexpected host component type. Expected a form. This is a bug in React."));
                break;
            case 6:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & 4) {
                    if (null === finishedWork.stateNode) throw Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                    flags = finishedWork.memoizedProps;
                    current = null !== current ? current.memoizedProps : flags;
                    root = finishedWork.stateNode;
                    try {
                        runWithFiberInDEV(finishedWork, commitTextUpdate, root, current, flags);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                break;
            case 3:
                hoistableRoot = pushNestedEffectDurations();
                tagCaches = null;
                maybeNodes = currentHoistableRoot;
                currentHoistableRoot = getHoistableRoot(root.containerInfo);
                recursivelyTraverseMutationEffects(root, finishedWork);
                currentHoistableRoot = maybeNodes;
                commitReconciliationEffects(finishedWork);
                if (flags & 4 && null !== current && current.memoizedState.isDehydrated) try {
                    runWithFiberInDEV(finishedWork, commitHydratedContainer, root.containerInfo);
                } catch (error) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error);
                }
                needsFormReset && (needsFormReset = !1, recursivelyResetForms(finishedWork));
                root.effectDuration += popNestedEffectDurations(hoistableRoot);
                break;
            case 4:
                flags = currentHoistableRoot;
                currentHoistableRoot = getHoistableRoot(finishedWork.stateNode.containerInfo);
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                currentHoistableRoot = flags;
                break;
            case 12:
                flags = pushNestedEffectDurations();
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                finishedWork.stateNode.effectDuration += bubbleNestedEffectDurations(flags);
                break;
            case 13:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                finishedWork.child.flags & 8192 && null !== finishedWork.memoizedState !== (null !== current && null !== current.memoizedState) && (globalMostRecentFallbackTime = now$1());
                flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (finishedWork.updateQueue = null, attachSuspenseRetryListeners(finishedWork, flags)));
                break;
            case 22:
                hoistableRoot = null !== finishedWork.memoizedState;
                var wasHidden = null !== current && null !== current.memoizedState, prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden, prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden || hoistableRoot;
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || wasHidden;
                recursivelyTraverseMutationEffects(root, finishedWork);
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
                commitReconciliationEffects(finishedWork);
                if (flags & 8192) a: for(root = finishedWork.stateNode, root._visibility = hoistableRoot ? root._visibility & ~OffscreenVisible : root._visibility | OffscreenVisible, hoistableRoot && (null === current || wasHidden || offscreenSubtreeIsHidden || offscreenSubtreeWasHidden || recursivelyTraverseDisappearLayoutEffects(finishedWork)), current = null, root = finishedWork;;){
                    if (5 === root.tag || 26 === root.tag) {
                        if (null === current) {
                            wasHidden = current = root;
                            try {
                                maybeNodes = wasHidden.stateNode, hoistableRoot ? runWithFiberInDEV(wasHidden, hideInstance, maybeNodes) : runWithFiberInDEV(wasHidden, unhideInstance, wasHidden.stateNode, wasHidden.memoizedProps);
                            } catch (error) {
                                captureCommitPhaseError(wasHidden, wasHidden.return, error);
                            }
                        }
                    } else if (6 === root.tag) {
                        if (null === current) {
                            wasHidden = root;
                            try {
                                i = wasHidden.stateNode, hoistableRoot ? runWithFiberInDEV(wasHidden, hideTextInstance, i) : runWithFiberInDEV(wasHidden, unhideTextInstance, i, wasHidden.memoizedProps);
                            } catch (error) {
                                captureCommitPhaseError(wasHidden, wasHidden.return, error);
                            }
                        }
                    } else if ((22 !== root.tag && 23 !== root.tag || null === root.memoizedState || root === finishedWork) && null !== root.child) {
                        root.child.return = root;
                        root = root.child;
                        continue;
                    }
                    if (root === finishedWork) break a;
                    for(; null === root.sibling;){
                        if (null === root.return || root.return === finishedWork) break a;
                        current === root && (current = null);
                        root = root.return;
                    }
                    current === root && (current = null);
                    root.sibling.return = root.return;
                    root = root.sibling;
                }
                flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (current = flags.retryQueue, null !== current && (flags.retryQueue = null, attachSuspenseRetryListeners(finishedWork, current))));
                break;
            case 19:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (finishedWork.updateQueue = null, attachSuspenseRetryListeners(finishedWork, flags)));
                break;
            case 30:
                break;
            case 21:
                break;
            default:
                recursivelyTraverseMutationEffects(root, finishedWork), commitReconciliationEffects(finishedWork);
        }
    }
    function commitReconciliationEffects(finishedWork) {
        var flags = finishedWork.flags;
        if (flags & 2) {
            try {
                runWithFiberInDEV(finishedWork, commitPlacement, finishedWork);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
            finishedWork.flags &= -3;
        }
        flags & 4096 && (finishedWork.flags &= -4097);
    }
    function recursivelyResetForms(parentFiber) {
        if (parentFiber.subtreeFlags & 1024) for(parentFiber = parentFiber.child; null !== parentFiber;){
            var fiber = parentFiber;
            recursivelyResetForms(fiber);
            5 === fiber.tag && fiber.flags & 1024 && fiber.stateNode.reset();
            parentFiber = parentFiber.sibling;
        }
    }
    function recursivelyTraverseLayoutEffects(root, parentFiber) {
        if (parentFiber.subtreeFlags & 8772) for(parentFiber = parentFiber.child; null !== parentFiber;)commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber), parentFiber = parentFiber.sibling;
    }
    function disappearLayoutEffects(finishedWork) {
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 14:
            case 15:
                commitHookLayoutUnmountEffects(finishedWork, finishedWork.return, Layout);
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            case 1:
                safelyDetachRef(finishedWork, finishedWork.return);
                var instance = finishedWork.stateNode;
                "function" === typeof instance.componentWillUnmount && safelyCallComponentWillUnmount(finishedWork, finishedWork.return, instance);
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            case 27:
                runWithFiberInDEV(finishedWork, releaseSingletonInstance, finishedWork.stateNode);
            case 26:
            case 5:
                safelyDetachRef(finishedWork, finishedWork.return);
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            case 22:
                null === finishedWork.memoizedState && recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            case 30:
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            default:
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
        }
    }
    function recursivelyTraverseDisappearLayoutEffects(parentFiber) {
        for(parentFiber = parentFiber.child; null !== parentFiber;)disappearLayoutEffects(parentFiber), parentFiber = parentFiber.sibling;
    }
    function reappearLayoutEffects(finishedRoot, current, finishedWork, includeWorkInProgressEffects) {
        var flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                commitHookLayoutEffects(finishedWork, Layout);
                break;
            case 1:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                current = finishedWork.stateNode;
                "function" === typeof current.componentDidMount && runWithFiberInDEV(finishedWork, callComponentDidMountInDEV, finishedWork, current);
                current = finishedWork.updateQueue;
                if (null !== current) {
                    finishedRoot = finishedWork.stateNode;
                    try {
                        runWithFiberInDEV(finishedWork, commitHiddenCallbacks, current, finishedRoot);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                includeWorkInProgressEffects && flags & 64 && commitClassCallbacks(finishedWork);
                safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 27:
                commitHostSingletonAcquisition(finishedWork);
            case 26:
            case 5:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                includeWorkInProgressEffects && null === current && flags & 4 && commitHostMount(finishedWork);
                safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 12:
                if (includeWorkInProgressEffects && flags & 4) {
                    flags = pushNestedEffectDurations();
                    recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                    includeWorkInProgressEffects = finishedWork.stateNode;
                    includeWorkInProgressEffects.effectDuration += bubbleNestedEffectDurations(flags);
                    try {
                        runWithFiberInDEV(finishedWork, commitProfiler, finishedWork, current, commitStartTime, includeWorkInProgressEffects.effectDuration);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                } else recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                break;
            case 13:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                includeWorkInProgressEffects && flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                break;
            case 22:
                null === finishedWork.memoizedState && recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 30:
                break;
            default:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
        }
    }
    function recursivelyTraverseReappearLayoutEffects(finishedRoot, parentFiber, includeWorkInProgressEffects) {
        includeWorkInProgressEffects = includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);
        for(parentFiber = parentFiber.child; null !== parentFiber;)reappearLayoutEffects(finishedRoot, parentFiber.alternate, parentFiber, includeWorkInProgressEffects), parentFiber = parentFiber.sibling;
    }
    function commitOffscreenPassiveMountEffects(current, finishedWork) {
        var previousCache = null;
        null !== current && null !== current.memoizedState && null !== current.memoizedState.cachePool && (previousCache = current.memoizedState.cachePool.pool);
        current = null;
        null !== finishedWork.memoizedState && null !== finishedWork.memoizedState.cachePool && (current = finishedWork.memoizedState.cachePool.pool);
        current !== previousCache && (null != current && retainCache(current), null != previousCache && releaseCache(previousCache));
    }
    function commitCachePassiveMountEffect(current, finishedWork) {
        current = null;
        null !== finishedWork.alternate && (current = finishedWork.alternate.memoizedState.cache);
        finishedWork = finishedWork.memoizedState.cache;
        finishedWork !== current && (retainCache(finishedWork), null != current && releaseCache(current));
    }
    function recursivelyTraversePassiveMountEffects(root, parentFiber, committedLanes, committedTransitions) {
        if (parentFiber.subtreeFlags & 10256) for(parentFiber = parentFiber.child; null !== parentFiber;)commitPassiveMountOnFiber(root, parentFiber, committedLanes, committedTransitions), parentFiber = parentFiber.sibling;
    }
    function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
        var flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                flags & 2048 && commitHookPassiveMountEffects(finishedWork, Passive | HasEffect);
                break;
            case 1:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                break;
            case 3:
                var prevEffectDuration = pushNestedEffectDurations();
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                flags & 2048 && (committedLanes = null, null !== finishedWork.alternate && (committedLanes = finishedWork.alternate.memoizedState.cache), finishedWork = finishedWork.memoizedState.cache, finishedWork !== committedLanes && (retainCache(finishedWork), null != committedLanes && releaseCache(committedLanes)));
                finishedRoot.passiveEffectDuration += popNestedEffectDurations(prevEffectDuration);
                break;
            case 12:
                if (flags & 2048) {
                    flags = pushNestedEffectDurations();
                    recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                    finishedRoot = finishedWork.stateNode;
                    finishedRoot.passiveEffectDuration += bubbleNestedEffectDurations(flags);
                    try {
                        runWithFiberInDEV(finishedWork, commitProfilerPostCommitImpl, finishedWork, finishedWork.alternate, commitStartTime, finishedRoot.passiveEffectDuration);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                } else recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                break;
            case 13:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                break;
            case 23:
                break;
            case 22:
                prevEffectDuration = finishedWork.stateNode;
                var _current = finishedWork.alternate;
                null !== finishedWork.memoizedState ? prevEffectDuration._visibility & OffscreenPassiveEffectsConnected ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions) : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork) : prevEffectDuration._visibility & OffscreenPassiveEffectsConnected ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions) : (prevEffectDuration._visibility |= OffscreenPassiveEffectsConnected, recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, 0 !== (finishedWork.subtreeFlags & 10256)));
                flags & 2048 && commitOffscreenPassiveMountEffects(_current, finishedWork);
                break;
            case 24:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
                break;
            default:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
        }
    }
    function recursivelyTraverseReconnectPassiveEffects(finishedRoot, parentFiber, committedLanes, committedTransitions, includeWorkInProgressEffects) {
        includeWorkInProgressEffects = includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 10256);
        for(parentFiber = parentFiber.child; null !== parentFiber;)reconnectPassiveEffects(finishedRoot, parentFiber, committedLanes, committedTransitions, includeWorkInProgressEffects), parentFiber = parentFiber.sibling;
    }
    function reconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects) {
        var flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
                commitHookPassiveMountEffects(finishedWork, Passive);
                break;
            case 23:
                break;
            case 22:
                var _instance2 = finishedWork.stateNode;
                null !== finishedWork.memoizedState ? _instance2._visibility & OffscreenPassiveEffectsConnected ? recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects) : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork) : (_instance2._visibility |= OffscreenPassiveEffectsConnected, recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects));
                includeWorkInProgressEffects && flags & 2048 && commitOffscreenPassiveMountEffects(finishedWork.alternate, finishedWork);
                break;
            case 24:
                recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
                includeWorkInProgressEffects && flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
                break;
            default:
                recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
        }
    }
    function recursivelyTraverseAtomicPassiveEffects(finishedRoot$jscomp$0, parentFiber) {
        if (parentFiber.subtreeFlags & 10256) for(parentFiber = parentFiber.child; null !== parentFiber;){
            var finishedRoot = finishedRoot$jscomp$0, finishedWork = parentFiber, flags = finishedWork.flags;
            switch(finishedWork.tag){
                case 22:
                    recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
                    flags & 2048 && commitOffscreenPassiveMountEffects(finishedWork.alternate, finishedWork);
                    break;
                case 24:
                    recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
                    flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
                    break;
                default:
                    recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
            }
            parentFiber = parentFiber.sibling;
        }
    }
    function recursivelyAccumulateSuspenseyCommit(parentFiber) {
        if (parentFiber.subtreeFlags & suspenseyCommitFlag) for(parentFiber = parentFiber.child; null !== parentFiber;)accumulateSuspenseyCommitOnFiber(parentFiber), parentFiber = parentFiber.sibling;
    }
    function accumulateSuspenseyCommitOnFiber(fiber) {
        switch(fiber.tag){
            case 26:
                recursivelyAccumulateSuspenseyCommit(fiber);
                fiber.flags & suspenseyCommitFlag && null !== fiber.memoizedState && suspendResource(currentHoistableRoot, fiber.memoizedState, fiber.memoizedProps);
                break;
            case 5:
                recursivelyAccumulateSuspenseyCommit(fiber);
                break;
            case 3:
            case 4:
                var previousHoistableRoot = currentHoistableRoot;
                currentHoistableRoot = getHoistableRoot(fiber.stateNode.containerInfo);
                recursivelyAccumulateSuspenseyCommit(fiber);
                currentHoistableRoot = previousHoistableRoot;
                break;
            case 22:
                null === fiber.memoizedState && (previousHoistableRoot = fiber.alternate, null !== previousHoistableRoot && null !== previousHoistableRoot.memoizedState ? (previousHoistableRoot = suspenseyCommitFlag, suspenseyCommitFlag = 16777216, recursivelyAccumulateSuspenseyCommit(fiber), suspenseyCommitFlag = previousHoistableRoot) : recursivelyAccumulateSuspenseyCommit(fiber));
                break;
            default:
                recursivelyAccumulateSuspenseyCommit(fiber);
        }
    }
    function detachAlternateSiblings(parentFiber) {
        var previousFiber = parentFiber.alternate;
        if (null !== previousFiber && (parentFiber = previousFiber.child, null !== parentFiber)) {
            previousFiber.child = null;
            do previousFiber = parentFiber.sibling, parentFiber.sibling = null, parentFiber = previousFiber;
            while (null !== parentFiber);
        }
    }
    function recursivelyTraversePassiveUnmountEffects(parentFiber) {
        var deletions = parentFiber.deletions;
        if (0 !== (parentFiber.flags & 16)) {
            if (null !== deletions) for(var i = 0; i < deletions.length; i++){
                var childToDelete = deletions[i];
                nextEffect = childToDelete;
                commitPassiveUnmountEffectsInsideOfDeletedTree_begin(childToDelete, parentFiber);
            }
            detachAlternateSiblings(parentFiber);
        }
        if (parentFiber.subtreeFlags & 10256) for(parentFiber = parentFiber.child; null !== parentFiber;)commitPassiveUnmountOnFiber(parentFiber), parentFiber = parentFiber.sibling;
    }
    function commitPassiveUnmountOnFiber(finishedWork) {
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraversePassiveUnmountEffects(finishedWork);
                finishedWork.flags & 2048 && commitHookPassiveUnmountEffects(finishedWork, finishedWork.return, Passive | HasEffect);
                break;
            case 3:
                var prevEffectDuration = pushNestedEffectDurations();
                recursivelyTraversePassiveUnmountEffects(finishedWork);
                finishedWork.stateNode.passiveEffectDuration += popNestedEffectDurations(prevEffectDuration);
                break;
            case 12:
                prevEffectDuration = pushNestedEffectDurations();
                recursivelyTraversePassiveUnmountEffects(finishedWork);
                finishedWork.stateNode.passiveEffectDuration += bubbleNestedEffectDurations(prevEffectDuration);
                break;
            case 22:
                prevEffectDuration = finishedWork.stateNode;
                null !== finishedWork.memoizedState && prevEffectDuration._visibility & OffscreenPassiveEffectsConnected && (null === finishedWork.return || 13 !== finishedWork.return.tag) ? (prevEffectDuration._visibility &= ~OffscreenPassiveEffectsConnected, recursivelyTraverseDisconnectPassiveEffects(finishedWork)) : recursivelyTraversePassiveUnmountEffects(finishedWork);
                break;
            default:
                recursivelyTraversePassiveUnmountEffects(finishedWork);
        }
    }
    function recursivelyTraverseDisconnectPassiveEffects(parentFiber) {
        var deletions = parentFiber.deletions;
        if (0 !== (parentFiber.flags & 16)) {
            if (null !== deletions) for(var i = 0; i < deletions.length; i++){
                var childToDelete = deletions[i];
                nextEffect = childToDelete;
                commitPassiveUnmountEffectsInsideOfDeletedTree_begin(childToDelete, parentFiber);
            }
            detachAlternateSiblings(parentFiber);
        }
        for(parentFiber = parentFiber.child; null !== parentFiber;)disconnectPassiveEffect(parentFiber), parentFiber = parentFiber.sibling;
    }
    function disconnectPassiveEffect(finishedWork) {
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                commitHookPassiveUnmountEffects(finishedWork, finishedWork.return, Passive);
                recursivelyTraverseDisconnectPassiveEffects(finishedWork);
                break;
            case 22:
                var instance = finishedWork.stateNode;
                instance._visibility & OffscreenPassiveEffectsConnected && (instance._visibility &= ~OffscreenPassiveEffectsConnected, recursivelyTraverseDisconnectPassiveEffects(finishedWork));
                break;
            default:
                recursivelyTraverseDisconnectPassiveEffects(finishedWork);
        }
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
        for(; null !== nextEffect;){
            var fiber = nextEffect, current = fiber;
            switch(current.tag){
                case 0:
                case 11:
                case 15:
                    commitHookPassiveUnmountEffects(current, nearestMountedAncestor, Passive);
                    break;
                case 23:
                case 22:
                    null !== current.memoizedState && null !== current.memoizedState.cachePool && (current = current.memoizedState.cachePool.pool, null != current && retainCache(current));
                    break;
                case 24:
                    releaseCache(current.memoizedState.cache);
            }
            current = fiber.child;
            if (null !== current) current.return = fiber, nextEffect = current;
            else a: for(fiber = deletedSubtreeRoot; null !== nextEffect;){
                current = nextEffect;
                var sibling = current.sibling, returnFiber = current.return;
                detachFiberAfterEffects(current);
                if (current === fiber) {
                    nextEffect = null;
                    break a;
                }
                if (null !== sibling) {
                    sibling.return = returnFiber;
                    nextEffect = sibling;
                    break a;
                }
                nextEffect = returnFiber;
            }
        }
    }
    function onCommitRoot() {
        commitHooks.forEach(function(commitHook) {
            return commitHook();
        });
    }
    function isConcurrentActEnvironment() {
        var isReactActEnvironmentGlobal = "undefined" !== typeof IS_REACT_ACT_ENVIRONMENT ? IS_REACT_ACT_ENVIRONMENT : void 0;
        isReactActEnvironmentGlobal || null === ReactSharedInternals.actQueue || console.error("The current testing environment is not configured to support act(...)");
        return isReactActEnvironmentGlobal;
    }
    function requestUpdateLane(fiber) {
        if ((executionContext & RenderContext) !== NoContext && 0 !== workInProgressRootRenderLanes) return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;
        var transition = ReactSharedInternals.T;
        return null !== transition ? (transition._updatedFibers || (transition._updatedFibers = new Set()), transition._updatedFibers.add(fiber), fiber = currentEntangledLane, 0 !== fiber ? fiber : requestTransitionLane()) : resolveUpdatePriority();
    }
    function requestDeferredLane() {
        0 === workInProgressDeferredLane && (workInProgressDeferredLane = 0 === (workInProgressRootRenderLanes & 536870912) || isHydrating ? claimNextTransitionLane() : 536870912);
        var suspenseHandler = suspenseHandlerStackCursor.current;
        null !== suspenseHandler && (suspenseHandler.flags |= 32);
        return workInProgressDeferredLane;
    }
    function scheduleUpdateOnFiber(root, fiber, lane) {
        isRunningInsertionEffect && console.error("useInsertionEffect must not schedule updates.");
        isFlushingPassiveEffects && (didScheduleUpdateDuringPassiveEffects = !0);
        if (root === workInProgressRoot && (workInProgressSuspendedReason === SuspendedOnData || workInProgressSuspendedReason === SuspendedOnAction) || null !== root.cancelPendingCommit) prepareFreshStack(root, 0), markRootSuspended(root, workInProgressRootRenderLanes, workInProgressDeferredLane, !1);
        markRootUpdated$1(root, lane);
        if (0 !== (executionContext & RenderContext) && root === workInProgressRoot) {
            if (isRendering) switch(fiber.tag){
                case 0:
                case 11:
                case 15:
                    root = workInProgress && getComponentNameFromFiber(workInProgress) || "Unknown";
                    didWarnAboutUpdateInRenderForAnotherComponent.has(root) || (didWarnAboutUpdateInRenderForAnotherComponent.add(root), fiber = getComponentNameFromFiber(fiber) || "Unknown", console.error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://react.dev/link/setstate-in-render", fiber, root, root));
                    break;
                case 1:
                    didWarnAboutUpdateInRender || (console.error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state."), didWarnAboutUpdateInRender = !0);
            }
        } else isDevToolsPresent && addFiberToLanesMap(root, fiber, lane), warnIfUpdatesNotWrappedWithActDEV(fiber), root === workInProgressRoot && ((executionContext & RenderContext) === NoContext && (workInProgressRootInterleavedUpdatedLanes |= lane), workInProgressRootExitStatus === RootSuspendedWithDelay && markRootSuspended(root, workInProgressRootRenderLanes, workInProgressDeferredLane, !1)), ensureRootIsScheduled(root);
    }
    function performWorkOnRoot(root, lanes, forceSync) {
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw Error("Should not already be working.");
        var shouldTimeSlice = !forceSync && 0 === (lanes & 124) && 0 === (lanes & root.expiredLanes) || checkIfRootIsPrerendering(root, lanes), exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes, !0), renderWasConcurrent = shouldTimeSlice;
        do {
            if (exitStatus === RootInProgress) {
                workInProgressRootIsPrerendering && !shouldTimeSlice && markRootSuspended(root, lanes, 0, !1);
                break;
            } else {
                forceSync = root.current.alternate;
                if (renderWasConcurrent && !isRenderConsistentWithExternalStores(forceSync)) {
                    exitStatus = renderRootSync(root, lanes, !1);
                    renderWasConcurrent = !1;
                    continue;
                }
                if (exitStatus === RootErrored) {
                    renderWasConcurrent = lanes;
                    if (root.errorRecoveryDisabledLanes & renderWasConcurrent) var errorRetryLanes = 0;
                    else errorRetryLanes = root.pendingLanes & -536870913, errorRetryLanes = 0 !== errorRetryLanes ? errorRetryLanes : errorRetryLanes & 536870912 ? 536870912 : 0;
                    if (0 !== errorRetryLanes) {
                        lanes = errorRetryLanes;
                        a: {
                            exitStatus = root;
                            var errorRetryLanes$jscomp$0 = errorRetryLanes;
                            errorRetryLanes = workInProgressRootConcurrentErrors;
                            var wasRootDehydrated = exitStatus.current.memoizedState.isDehydrated;
                            wasRootDehydrated && (prepareFreshStack(exitStatus, errorRetryLanes$jscomp$0).flags |= 256);
                            errorRetryLanes$jscomp$0 = renderRootSync(exitStatus, errorRetryLanes$jscomp$0, !1);
                            if (errorRetryLanes$jscomp$0 !== RootErrored) {
                                if (workInProgressRootDidAttachPingListener && !wasRootDehydrated) {
                                    exitStatus.errorRecoveryDisabledLanes |= renderWasConcurrent;
                                    workInProgressRootInterleavedUpdatedLanes |= renderWasConcurrent;
                                    exitStatus = RootSuspendedWithDelay;
                                    break a;
                                }
                                exitStatus = workInProgressRootRecoverableErrors;
                                workInProgressRootRecoverableErrors = errorRetryLanes;
                                null !== exitStatus && (null === workInProgressRootRecoverableErrors ? workInProgressRootRecoverableErrors = exitStatus : workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, exitStatus));
                            }
                            exitStatus = errorRetryLanes$jscomp$0;
                        }
                        renderWasConcurrent = !1;
                        if (exitStatus !== RootErrored) continue;
                    }
                }
                if (exitStatus === RootFatalErrored) {
                    prepareFreshStack(root, 0);
                    markRootSuspended(root, lanes, 0, !0);
                    break;
                }
                a: {
                    shouldTimeSlice = root;
                    switch(exitStatus){
                        case RootInProgress:
                        case RootFatalErrored:
                            throw Error("Root did not complete. This is a bug in React.");
                        case RootSuspendedWithDelay:
                            if ((lanes & 4194048) !== lanes) break;
                        case RootSuspendedAtTheShell:
                            markRootSuspended(shouldTimeSlice, lanes, workInProgressDeferredLane, !workInProgressRootDidSkipSuspendedSiblings);
                            break a;
                        case RootErrored:
                            workInProgressRootRecoverableErrors = null;
                            break;
                        case RootSuspended:
                        case RootCompleted:
                            break;
                        default:
                            throw Error("Unknown root exit status.");
                    }
                    if (null !== ReactSharedInternals.actQueue) commitRoot(shouldTimeSlice, forceSync, lanes, workInProgressRootRecoverableErrors, workInProgressTransitions, workInProgressRootDidIncludeRecursiveRenderUpdate, workInProgressDeferredLane, workInProgressRootInterleavedUpdatedLanes, workInProgressSuspendedRetryLanes);
                    else {
                        if ((lanes & 62914560) === lanes && (renderWasConcurrent = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now$1(), 10 < renderWasConcurrent)) {
                            markRootSuspended(shouldTimeSlice, lanes, workInProgressDeferredLane, !workInProgressRootDidSkipSuspendedSiblings);
                            if (0 !== getNextLanes(shouldTimeSlice, 0, !0)) break a;
                            shouldTimeSlice.timeoutHandle = scheduleTimeout(commitRootWhenReady.bind(null, shouldTimeSlice, forceSync, workInProgressRootRecoverableErrors, workInProgressTransitions, workInProgressRootDidIncludeRecursiveRenderUpdate, lanes, workInProgressDeferredLane, workInProgressRootInterleavedUpdatedLanes, workInProgressSuspendedRetryLanes, workInProgressRootDidSkipSuspendedSiblings, exitStatus, THROTTLED_COMMIT, renderStartTime, 0), renderWasConcurrent);
                            break a;
                        }
                        commitRootWhenReady(shouldTimeSlice, forceSync, workInProgressRootRecoverableErrors, workInProgressTransitions, workInProgressRootDidIncludeRecursiveRenderUpdate, lanes, workInProgressDeferredLane, workInProgressRootInterleavedUpdatedLanes, workInProgressSuspendedRetryLanes, workInProgressRootDidSkipSuspendedSiblings, exitStatus, IMMEDIATE_COMMIT, renderStartTime, 0);
                    }
                }
            }
            break;
        }while (1);
        ensureRootIsScheduled(root);
    }
    function commitRootWhenReady(root, finishedWork, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, lanes, spawnedLane, updatedLanes, suspendedRetryLanes, didSkipSuspendedSiblings, exitStatus, suspendedCommitReason, completedRenderStartTime, completedRenderEndTime) {
        root.timeoutHandle = noTimeout;
        suspendedCommitReason = finishedWork.subtreeFlags;
        if (suspendedCommitReason & 8192 || 16785408 === (suspendedCommitReason & 16785408)) {
            if (suspendedState = {
                stylesheets: null,
                count: 0,
                unsuspend: noop
            }, accumulateSuspenseyCommitOnFiber(finishedWork), suspendedCommitReason = waitForCommitToBeReady(), null !== suspendedCommitReason) {
                root.cancelPendingCommit = suspendedCommitReason(commitRoot.bind(null, root, finishedWork, lanes, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, spawnedLane, updatedLanes, suspendedRetryLanes, exitStatus, SUSPENDED_COMMIT, completedRenderStartTime, completedRenderEndTime));
                markRootSuspended(root, lanes, spawnedLane, !didSkipSuspendedSiblings);
                return;
            }
        }
        commitRoot(root, finishedWork, lanes, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, spawnedLane, updatedLanes, suspendedRetryLanes);
    }
    function isRenderConsistentWithExternalStores(finishedWork) {
        for(var node = finishedWork;;){
            var tag = node.tag;
            if ((0 === tag || 11 === tag || 15 === tag) && node.flags & 16384 && (tag = node.updateQueue, null !== tag && (tag = tag.stores, null !== tag))) for(var i = 0; i < tag.length; i++){
                var check = tag[i], getSnapshot = check.getSnapshot;
                check = check.value;
                try {
                    if (!objectIs(getSnapshot(), check)) return !1;
                } catch (error) {
                    return !1;
                }
            }
            tag = node.child;
            if (node.subtreeFlags & 16384 && null !== tag) tag.return = node, node = tag;
            else {
                if (node === finishedWork) break;
                for(; null === node.sibling;){
                    if (null === node.return || node.return === finishedWork) return !0;
                    node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
            }
        }
        return !0;
    }
    function markRootSuspended(root, suspendedLanes, spawnedLane, didAttemptEntireTree) {
        suspendedLanes &= ~workInProgressRootPingedLanes;
        suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;
        root.suspendedLanes |= suspendedLanes;
        root.pingedLanes &= ~suspendedLanes;
        didAttemptEntireTree && (root.warmLanes |= suspendedLanes);
        didAttemptEntireTree = root.expirationTimes;
        for(var lanes = suspendedLanes; 0 < lanes;){
            var index = 31 - clz32(lanes), lane = 1 << index;
            didAttemptEntireTree[index] = -1;
            lanes &= ~lane;
        }
        0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);
    }
    function flushSyncWork$1() {
        return (executionContext & (RenderContext | CommitContext)) === NoContext ? (flushSyncWorkAcrossRoots_impl(0, !1), !1) : !0;
    }
    function resetWorkInProgressStack() {
        if (null !== workInProgress) {
            if (workInProgressSuspendedReason === NotSuspended) var interruptedWork = workInProgress.return;
            else interruptedWork = workInProgress, resetContextDependencies(), resetHooksOnUnwind(interruptedWork), thenableState = null, thenableIndexCounter = 0, interruptedWork = workInProgress;
            for(; null !== interruptedWork;)unwindInterruptedWork(interruptedWork.alternate, interruptedWork), interruptedWork = interruptedWork.return;
            workInProgress = null;
        }
    }
    function prepareFreshStack(root, lanes) {
        var timeoutHandle = root.timeoutHandle;
        timeoutHandle !== noTimeout && (root.timeoutHandle = noTimeout, cancelTimeout(timeoutHandle));
        timeoutHandle = root.cancelPendingCommit;
        null !== timeoutHandle && (root.cancelPendingCommit = null, timeoutHandle());
        resetWorkInProgressStack();
        workInProgressRoot = root;
        workInProgress = timeoutHandle = createWorkInProgress(root.current, null);
        workInProgressRootRenderLanes = lanes;
        workInProgressSuspendedReason = NotSuspended;
        workInProgressThrownValue = null;
        workInProgressRootDidSkipSuspendedSiblings = !1;
        workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);
        workInProgressRootDidAttachPingListener = !1;
        workInProgressRootExitStatus = RootInProgress;
        workInProgressSuspendedRetryLanes = workInProgressDeferredLane = workInProgressRootPingedLanes = workInProgressRootInterleavedUpdatedLanes = workInProgressRootSkippedLanes = 0;
        workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors = null;
        workInProgressRootDidIncludeRecursiveRenderUpdate = !1;
        0 !== (lanes & 8) && (lanes |= lanes & 32);
        var allEntangledLanes = root.entangledLanes;
        if (0 !== allEntangledLanes) for(root = root.entanglements, allEntangledLanes &= lanes; 0 < allEntangledLanes;){
            var index = 31 - clz32(allEntangledLanes), lane = 1 << index;
            lanes |= root[index];
            allEntangledLanes &= ~lane;
        }
        entangledRenderLanes = lanes;
        finishQueueingConcurrentUpdates();
        lanes = getCurrentTime();
        1e3 < lanes - lastResetTime && (ReactSharedInternals.recentlyCreatedOwnerStacks = 0, lastResetTime = lanes);
        ReactStrictModeWarnings.discardPendingWarnings();
        return timeoutHandle;
    }
    function handleThrow(root, thrownValue) {
        currentlyRenderingFiber = null;
        ReactSharedInternals.H = ContextOnlyDispatcher;
        ReactSharedInternals.getCurrentStack = null;
        isRendering = !1;
        current = null;
        thrownValue === SuspenseException || thrownValue === SuspenseActionException ? (thrownValue = getSuspendedThenable(), workInProgressSuspendedReason = SuspendedOnImmediate) : thrownValue === SuspenseyCommitException ? (thrownValue = getSuspendedThenable(), workInProgressSuspendedReason = SuspendedOnInstance) : workInProgressSuspendedReason = thrownValue === SelectiveHydrationException ? SuspendedOnHydration : null !== thrownValue && "object" === typeof thrownValue && "function" === typeof thrownValue.then ? SuspendedOnDeprecatedThrowPromise : SuspendedOnError;
        workInProgressThrownValue = thrownValue;
        var erroredWork = workInProgress;
        if (null === erroredWork) workInProgressRootExitStatus = RootFatalErrored, logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current));
        else switch(erroredWork.mode & ProfileMode && stopProfilerTimerIfRunningAndRecordDuration(erroredWork), markComponentRenderStopped(), workInProgressSuspendedReason){
            case SuspendedOnError:
                null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentErrored && injectedProfilingHooks.markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
                break;
            case SuspendedOnData:
            case SuspendedOnAction:
            case SuspendedOnImmediate:
            case SuspendedOnDeprecatedThrowPromise:
            case SuspendedAndReadyToContinue:
                null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentSuspended && injectedProfilingHooks.markComponentSuspended(erroredWork, thrownValue, workInProgressRootRenderLanes);
        }
    }
    function pushDispatcher() {
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = ContextOnlyDispatcher;
        return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;
    }
    function pushAsyncDispatcher() {
        var prevAsyncDispatcher = ReactSharedInternals.A;
        ReactSharedInternals.A = DefaultAsyncDispatcher;
        return prevAsyncDispatcher;
    }
    function renderDidSuspendDelayIfPossible() {
        workInProgressRootExitStatus = RootSuspendedWithDelay;
        workInProgressRootDidSkipSuspendedSiblings || (workInProgressRootRenderLanes & 4194048) !== workInProgressRootRenderLanes && null !== suspenseHandlerStackCursor.current || (workInProgressRootIsPrerendering = !0);
        0 === (workInProgressRootSkippedLanes & 134217727) && 0 === (workInProgressRootInterleavedUpdatedLanes & 134217727) || null === workInProgressRoot || markRootSuspended(workInProgressRoot, workInProgressRootRenderLanes, workInProgressDeferredLane, !1);
    }
    function renderRootSync(root, lanes, shouldYieldForPrerendering) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(), prevAsyncDispatcher = pushAsyncDispatcher();
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                0 < memoizedUpdaters.size && (restorePendingUpdaters(root, workInProgressRootRenderLanes), memoizedUpdaters.clear());
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = null;
            prepareFreshStack(root, lanes);
        }
        markRenderStarted(lanes);
        lanes = !1;
        memoizedUpdaters = workInProgressRootExitStatus;
        a: do try {
            if (workInProgressSuspendedReason !== NotSuspended && null !== workInProgress) {
                var unitOfWork = workInProgress, thrownValue = workInProgressThrownValue;
                switch(workInProgressSuspendedReason){
                    case SuspendedOnHydration:
                        resetWorkInProgressStack();
                        memoizedUpdaters = RootSuspendedAtTheShell;
                        break a;
                    case SuspendedOnImmediate:
                    case SuspendedOnData:
                    case SuspendedOnAction:
                    case SuspendedOnDeprecatedThrowPromise:
                        null === suspenseHandlerStackCursor.current && (lanes = !0);
                        var reason = workInProgressSuspendedReason;
                        workInProgressSuspendedReason = NotSuspended;
                        workInProgressThrownValue = null;
                        throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);
                        if (shouldYieldForPrerendering && workInProgressRootIsPrerendering) {
                            memoizedUpdaters = RootInProgress;
                            break a;
                        }
                        break;
                    default:
                        reason = workInProgressSuspendedReason, workInProgressSuspendedReason = NotSuspended, workInProgressThrownValue = null, throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);
                }
            }
            workLoopSync();
            memoizedUpdaters = workInProgressRootExitStatus;
            break;
        } catch (thrownValue$8) {
            handleThrow(root, thrownValue$8);
        }
        while (1);
        lanes && root.shellSuspendCounter++;
        resetContextDependencies();
        executionContext = prevExecutionContext;
        ReactSharedInternals.H = prevDispatcher;
        ReactSharedInternals.A = prevAsyncDispatcher;
        markRenderStopped();
        null === workInProgress && (workInProgressRoot = null, workInProgressRootRenderLanes = 0, finishQueueingConcurrentUpdates());
        return memoizedUpdaters;
    }
    function workLoopSync() {
        for(; null !== workInProgress;)performUnitOfWork(workInProgress);
    }
    function renderRootConcurrent(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(), prevAsyncDispatcher = pushAsyncDispatcher();
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                0 < memoizedUpdaters.size && (restorePendingUpdaters(root, workInProgressRootRenderLanes), memoizedUpdaters.clear());
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = null;
            workInProgressRootRenderTargetTime = now$1() + RENDER_TIMEOUT_MS;
            prepareFreshStack(root, lanes);
        } else workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);
        markRenderStarted(lanes);
        a: do try {
            if (workInProgressSuspendedReason !== NotSuspended && null !== workInProgress) b: switch(lanes = workInProgress, memoizedUpdaters = workInProgressThrownValue, workInProgressSuspendedReason){
                case SuspendedOnError:
                    workInProgressSuspendedReason = NotSuspended;
                    workInProgressThrownValue = null;
                    throwAndUnwindWorkLoop(root, lanes, memoizedUpdaters, SuspendedOnError);
                    break;
                case SuspendedOnData:
                case SuspendedOnAction:
                    if (isThenableResolved(memoizedUpdaters)) {
                        workInProgressSuspendedReason = NotSuspended;
                        workInProgressThrownValue = null;
                        replaySuspendedUnitOfWork(lanes);
                        break;
                    }
                    lanes = function() {
                        workInProgressSuspendedReason !== SuspendedOnData && workInProgressSuspendedReason !== SuspendedOnAction || workInProgressRoot !== root || (workInProgressSuspendedReason = SuspendedAndReadyToContinue);
                        ensureRootIsScheduled(root);
                    };
                    memoizedUpdaters.then(lanes, lanes);
                    break a;
                case SuspendedOnImmediate:
                    workInProgressSuspendedReason = SuspendedAndReadyToContinue;
                    break a;
                case SuspendedOnInstance:
                    workInProgressSuspendedReason = SuspendedOnInstanceAndReadyToContinue;
                    break a;
                case SuspendedAndReadyToContinue:
                    isThenableResolved(memoizedUpdaters) ? (workInProgressSuspendedReason = NotSuspended, workInProgressThrownValue = null, replaySuspendedUnitOfWork(lanes)) : (workInProgressSuspendedReason = NotSuspended, workInProgressThrownValue = null, throwAndUnwindWorkLoop(root, lanes, memoizedUpdaters, SuspendedAndReadyToContinue));
                    break;
                case SuspendedOnInstanceAndReadyToContinue:
                    var resource = null;
                    switch(workInProgress.tag){
                        case 26:
                            resource = workInProgress.memoizedState;
                        case 5:
                        case 27:
                            var hostFiber = workInProgress;
                            if (resource ? preloadResource(resource) : 1) {
                                workInProgressSuspendedReason = NotSuspended;
                                workInProgressThrownValue = null;
                                var sibling = hostFiber.sibling;
                                if (null !== sibling) workInProgress = sibling;
                                else {
                                    var returnFiber = hostFiber.return;
                                    null !== returnFiber ? (workInProgress = returnFiber, completeUnitOfWork(returnFiber)) : workInProgress = null;
                                }
                                break b;
                            }
                            break;
                        default:
                            console.error("Unexpected type of fiber triggered a suspensey commit. This is a bug in React.");
                    }
                    workInProgressSuspendedReason = NotSuspended;
                    workInProgressThrownValue = null;
                    throwAndUnwindWorkLoop(root, lanes, memoizedUpdaters, SuspendedOnInstanceAndReadyToContinue);
                    break;
                case SuspendedOnDeprecatedThrowPromise:
                    workInProgressSuspendedReason = NotSuspended;
                    workInProgressThrownValue = null;
                    throwAndUnwindWorkLoop(root, lanes, memoizedUpdaters, SuspendedOnDeprecatedThrowPromise);
                    break;
                case SuspendedOnHydration:
                    resetWorkInProgressStack();
                    workInProgressRootExitStatus = RootSuspendedAtTheShell;
                    break a;
                default:
                    throw Error("Unexpected SuspendedReason. This is a bug in React.");
            }
            null !== ReactSharedInternals.actQueue ? workLoopSync() : workLoopConcurrentByScheduler();
            break;
        } catch (thrownValue$9) {
            handleThrow(root, thrownValue$9);
        }
        while (1);
        resetContextDependencies();
        ReactSharedInternals.H = prevDispatcher;
        ReactSharedInternals.A = prevAsyncDispatcher;
        executionContext = prevExecutionContext;
        if (null !== workInProgress) return null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markRenderYielded && injectedProfilingHooks.markRenderYielded(), RootInProgress;
        markRenderStopped();
        workInProgressRoot = null;
        workInProgressRootRenderLanes = 0;
        finishQueueingConcurrentUpdates();
        return workInProgressRootExitStatus;
    }
    function workLoopConcurrentByScheduler() {
        for(; null !== workInProgress && !shouldYield();)performUnitOfWork(workInProgress);
    }
    function performUnitOfWork(unitOfWork) {
        var current = unitOfWork.alternate;
        (unitOfWork.mode & ProfileMode) !== NoMode ? (startProfilerTimer(unitOfWork), current = runWithFiberInDEV(unitOfWork, beginWork, current, unitOfWork, entangledRenderLanes), stopProfilerTimerIfRunningAndRecordDuration(unitOfWork)) : current = runWithFiberInDEV(unitOfWork, beginWork, current, unitOfWork, entangledRenderLanes);
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        null === current ? completeUnitOfWork(unitOfWork) : workInProgress = current;
    }
    function replaySuspendedUnitOfWork(unitOfWork) {
        var next = runWithFiberInDEV(unitOfWork, replayBeginWork, unitOfWork);
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        null === next ? completeUnitOfWork(unitOfWork) : workInProgress = next;
    }
    function replayBeginWork(unitOfWork) {
        var current = unitOfWork.alternate, isProfilingMode = (unitOfWork.mode & ProfileMode) !== NoMode;
        isProfilingMode && startProfilerTimer(unitOfWork);
        switch(unitOfWork.tag){
            case 15:
            case 0:
                current = replayFunctionComponent(current, unitOfWork, unitOfWork.pendingProps, unitOfWork.type, void 0, workInProgressRootRenderLanes);
                break;
            case 11:
                current = replayFunctionComponent(current, unitOfWork, unitOfWork.pendingProps, unitOfWork.type.render, unitOfWork.ref, workInProgressRootRenderLanes);
                break;
            case 5:
                resetHooksOnUnwind(unitOfWork);
            default:
                unwindInterruptedWork(current, unitOfWork), unitOfWork = workInProgress = resetWorkInProgress(unitOfWork, entangledRenderLanes), current = beginWork(current, unitOfWork, entangledRenderLanes);
        }
        isProfilingMode && stopProfilerTimerIfRunningAndRecordDuration(unitOfWork);
        return current;
    }
    function throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, suspendedReason) {
        resetContextDependencies();
        resetHooksOnUnwind(unitOfWork);
        thenableState = null;
        thenableIndexCounter = 0;
        var returnFiber = unitOfWork.return;
        try {
            if (throwException(root, returnFiber, unitOfWork, thrownValue, workInProgressRootRenderLanes)) {
                workInProgressRootExitStatus = RootFatalErrored;
                logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current));
                workInProgress = null;
                return;
            }
        } catch (error) {
            if (null !== returnFiber) throw workInProgress = returnFiber, error;
            workInProgressRootExitStatus = RootFatalErrored;
            logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current));
            workInProgress = null;
            return;
        }
        if (unitOfWork.flags & 32768) {
            if (isHydrating || suspendedReason === SuspendedOnError) root = !0;
            else if (workInProgressRootIsPrerendering || 0 !== (workInProgressRootRenderLanes & 536870912)) root = !1;
            else if (workInProgressRootDidSkipSuspendedSiblings = root = !0, suspendedReason === SuspendedOnData || suspendedReason === SuspendedOnAction || suspendedReason === SuspendedOnImmediate || suspendedReason === SuspendedOnDeprecatedThrowPromise) suspendedReason = suspenseHandlerStackCursor.current, null !== suspendedReason && 13 === suspendedReason.tag && (suspendedReason.flags |= 16384);
            unwindUnitOfWork(unitOfWork, root);
        } else completeUnitOfWork(unitOfWork);
    }
    function completeUnitOfWork(unitOfWork) {
        var completedWork = unitOfWork;
        do {
            if (0 !== (completedWork.flags & 32768)) {
                unwindUnitOfWork(completedWork, workInProgressRootDidSkipSuspendedSiblings);
                return;
            }
            var current = completedWork.alternate;
            unitOfWork = completedWork.return;
            startProfilerTimer(completedWork);
            current = runWithFiberInDEV(completedWork, completeWork, current, completedWork, entangledRenderLanes);
            (completedWork.mode & ProfileMode) !== NoMode && stopProfilerTimerIfRunningAndRecordIncompleteDuration(completedWork);
            if (null !== current) {
                workInProgress = current;
                return;
            }
            completedWork = completedWork.sibling;
            if (null !== completedWork) {
                workInProgress = completedWork;
                return;
            }
            workInProgress = completedWork = unitOfWork;
        }while (null !== completedWork);
        workInProgressRootExitStatus === RootInProgress && (workInProgressRootExitStatus = RootCompleted);
    }
    function unwindUnitOfWork(unitOfWork, skipSiblings) {
        do {
            var next = unwindWork(unitOfWork.alternate, unitOfWork);
            if (null !== next) {
                next.flags &= 32767;
                workInProgress = next;
                return;
            }
            if ((unitOfWork.mode & ProfileMode) !== NoMode) {
                stopProfilerTimerIfRunningAndRecordIncompleteDuration(unitOfWork);
                next = unitOfWork.actualDuration;
                for(var child = unitOfWork.child; null !== child;)next += child.actualDuration, child = child.sibling;
                unitOfWork.actualDuration = next;
            }
            next = unitOfWork.return;
            null !== next && (next.flags |= 32768, next.subtreeFlags = 0, next.deletions = null);
            if (!skipSiblings && (unitOfWork = unitOfWork.sibling, null !== unitOfWork)) {
                workInProgress = unitOfWork;
                return;
            }
            workInProgress = unitOfWork = next;
        }while (null !== unitOfWork);
        workInProgressRootExitStatus = RootSuspendedAtTheShell;
        workInProgress = null;
    }
    function commitRoot(root, finishedWork, lanes, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, spawnedLane, updatedLanes, suspendedRetryLanes) {
        root.cancelPendingCommit = null;
        do flushPendingEffects();
        while (pendingEffectsStatus !== NO_PENDING_EFFECTS);
        ReactStrictModeWarnings.flushLegacyContextWarning();
        ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw Error("Should not already be working.");
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markCommitStarted && injectedProfilingHooks.markCommitStarted(lanes);
        if (null === finishedWork) markCommitStopped();
        else {
            0 === lanes && console.error("finishedLanes should not be empty during a commit. This is a bug in React.");
            if (finishedWork === root.current) throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
            didIncludeRenderPhaseUpdate = finishedWork.lanes | finishedWork.childLanes;
            didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;
            markRootFinished(root, lanes, didIncludeRenderPhaseUpdate, spawnedLane, updatedLanes, suspendedRetryLanes);
            root === workInProgressRoot && (workInProgress = workInProgressRoot = null, workInProgressRootRenderLanes = 0);
            pendingFinishedWork = finishedWork;
            pendingEffectsRoot = root;
            pendingEffectsLanes = lanes;
            pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;
            pendingPassiveTransitions = transitions;
            pendingRecoverableErrors = recoverableErrors;
            0 !== (finishedWork.subtreeFlags & 10256) || 0 !== (finishedWork.flags & 10256) ? (root.callbackNode = null, root.callbackPriority = 0, scheduleCallback$1(NormalPriority$1, function() {
                flushPassiveEffects(!0);
                return null;
            })) : (root.callbackNode = null, root.callbackPriority = 0);
            commitStartTime = now();
            recoverableErrors = 0 !== (finishedWork.flags & 13878);
            if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {
                recoverableErrors = ReactSharedInternals.T;
                ReactSharedInternals.T = null;
                transitions = ReactDOMSharedInternals.p;
                ReactDOMSharedInternals.p = DiscreteEventPriority;
                spawnedLane = executionContext;
                executionContext |= CommitContext;
                try {
                    commitBeforeMutationEffects(root, finishedWork, lanes);
                } finally{
                    executionContext = spawnedLane, ReactDOMSharedInternals.p = transitions, ReactSharedInternals.T = recoverableErrors;
                }
            }
            pendingEffectsStatus = PENDING_MUTATION_PHASE;
            flushMutationEffects();
            flushLayoutEffects();
            flushSpawnedWork();
        }
    }
    function flushMutationEffects() {
        if (pendingEffectsStatus === PENDING_MUTATION_PHASE) {
            pendingEffectsStatus = NO_PENDING_EFFECTS;
            var root = pendingEffectsRoot, finishedWork = pendingFinishedWork, lanes = pendingEffectsLanes, rootMutationHasEffect = 0 !== (finishedWork.flags & 13878);
            if (0 !== (finishedWork.subtreeFlags & 13878) || rootMutationHasEffect) {
                rootMutationHasEffect = ReactSharedInternals.T;
                ReactSharedInternals.T = null;
                var previousPriority = ReactDOMSharedInternals.p;
                ReactDOMSharedInternals.p = DiscreteEventPriority;
                var prevExecutionContext = executionContext;
                executionContext |= CommitContext;
                try {
                    inProgressLanes = lanes;
                    inProgressRoot = root;
                    commitMutationEffectsOnFiber(finishedWork, root);
                    inProgressRoot = inProgressLanes = null;
                    lanes = selectionInformation;
                    var curFocusedElem = getActiveElementDeep(root.containerInfo), priorFocusedElem = lanes.focusedElem, priorSelectionRange = lanes.selectionRange;
                    if (curFocusedElem !== priorFocusedElem && priorFocusedElem && priorFocusedElem.ownerDocument && containsNode(priorFocusedElem.ownerDocument.documentElement, priorFocusedElem)) {
                        if (null !== priorSelectionRange && hasSelectionCapabilities(priorFocusedElem)) {
                            var start = priorSelectionRange.start, end = priorSelectionRange.end;
                            void 0 === end && (end = start);
                            if ("selectionStart" in priorFocusedElem) priorFocusedElem.selectionStart = start, priorFocusedElem.selectionEnd = Math.min(end, priorFocusedElem.value.length);
                            else {
                                var doc = priorFocusedElem.ownerDocument || document, win = doc && doc.defaultView || window;
                                if (win.getSelection) {
                                    var selection = win.getSelection(), length = priorFocusedElem.textContent.length, start$jscomp$0 = Math.min(priorSelectionRange.start, length), end$jscomp$0 = void 0 === priorSelectionRange.end ? start$jscomp$0 : Math.min(priorSelectionRange.end, length);
                                    !selection.extend && start$jscomp$0 > end$jscomp$0 && (curFocusedElem = end$jscomp$0, end$jscomp$0 = start$jscomp$0, start$jscomp$0 = curFocusedElem);
                                    var startMarker = getNodeForCharacterOffset(priorFocusedElem, start$jscomp$0), endMarker = getNodeForCharacterOffset(priorFocusedElem, end$jscomp$0);
                                    if (startMarker && endMarker && (1 !== selection.rangeCount || selection.anchorNode !== startMarker.node || selection.anchorOffset !== startMarker.offset || selection.focusNode !== endMarker.node || selection.focusOffset !== endMarker.offset)) {
                                        var range = doc.createRange();
                                        range.setStart(startMarker.node, startMarker.offset);
                                        selection.removeAllRanges();
                                        start$jscomp$0 > end$jscomp$0 ? (selection.addRange(range), selection.extend(endMarker.node, endMarker.offset)) : (range.setEnd(endMarker.node, endMarker.offset), selection.addRange(range));
                                    }
                                }
                            }
                        }
                        doc = [];
                        for(selection = priorFocusedElem; selection = selection.parentNode;)1 === selection.nodeType && doc.push({
                            element: selection,
                            left: selection.scrollLeft,
                            top: selection.scrollTop
                        });
                        "function" === typeof priorFocusedElem.focus && priorFocusedElem.focus();
                        for(priorFocusedElem = 0; priorFocusedElem < doc.length; priorFocusedElem++){
                            var info = doc[priorFocusedElem];
                            info.element.scrollLeft = info.left;
                            info.element.scrollTop = info.top;
                        }
                    }
                    _enabled = !!eventsEnabled;
                    selectionInformation = eventsEnabled = null;
                } finally{
                    executionContext = prevExecutionContext, ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = rootMutationHasEffect;
                }
            }
            root.current = finishedWork;
            pendingEffectsStatus = PENDING_LAYOUT_PHASE;
        }
    }
    function flushLayoutEffects() {
        if (pendingEffectsStatus === PENDING_LAYOUT_PHASE) {
            pendingEffectsStatus = NO_PENDING_EFFECTS;
            var root = pendingEffectsRoot, finishedWork = pendingFinishedWork, lanes = pendingEffectsLanes, rootHasLayoutEffect = 0 !== (finishedWork.flags & 8772);
            if (0 !== (finishedWork.subtreeFlags & 8772) || rootHasLayoutEffect) {
                rootHasLayoutEffect = ReactSharedInternals.T;
                ReactSharedInternals.T = null;
                var previousPriority = ReactDOMSharedInternals.p;
                ReactDOMSharedInternals.p = DiscreteEventPriority;
                var prevExecutionContext = executionContext;
                executionContext |= CommitContext;
                try {
                    null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markLayoutEffectsStarted && injectedProfilingHooks.markLayoutEffectsStarted(lanes), inProgressLanes = lanes, inProgressRoot = root, commitLayoutEffectOnFiber(root, finishedWork.alternate, finishedWork), inProgressRoot = inProgressLanes = null, null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markLayoutEffectsStopped && injectedProfilingHooks.markLayoutEffectsStopped();
                } finally{
                    executionContext = prevExecutionContext, ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = rootHasLayoutEffect;
                }
            }
            pendingEffectsStatus = PENDING_AFTER_MUTATION_PHASE;
        }
    }
    function flushSpawnedWork() {
        if (pendingEffectsStatus === PENDING_SPAWNED_WORK || pendingEffectsStatus === PENDING_AFTER_MUTATION_PHASE) {
            pendingEffectsStatus = NO_PENDING_EFFECTS;
            requestPaint();
            var root = pendingEffectsRoot, finishedWork = pendingFinishedWork, lanes = pendingEffectsLanes, recoverableErrors = pendingRecoverableErrors, rootDidHavePassiveEffects = 0 !== (finishedWork.subtreeFlags & 10256) || 0 !== (finishedWork.flags & 10256);
            rootDidHavePassiveEffects ? pendingEffectsStatus = PENDING_PASSIVE_PHASE : (pendingEffectsStatus = NO_PENDING_EFFECTS, pendingFinishedWork = pendingEffectsRoot = null, releaseRootPooledCache(root, root.pendingLanes), nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = null);
            var remainingLanes = root.pendingLanes;
            0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);
            rootDidHavePassiveEffects || commitDoubleInvokeEffectsInDEV(root);
            rootDidHavePassiveEffects = lanesToEventPriority(lanes);
            finishedWork = finishedWork.stateNode;
            if (injectedHook && "function" === typeof injectedHook.onCommitFiberRoot) try {
                var didError = 128 === (finishedWork.current.flags & 128);
                switch(rootDidHavePassiveEffects){
                    case DiscreteEventPriority:
                        var schedulerPriority = ImmediatePriority;
                        break;
                    case ContinuousEventPriority:
                        schedulerPriority = UserBlockingPriority;
                        break;
                    case DefaultEventPriority:
                        schedulerPriority = NormalPriority$1;
                        break;
                    case IdleEventPriority:
                        schedulerPriority = IdlePriority;
                        break;
                    default:
                        schedulerPriority = NormalPriority$1;
                }
                injectedHook.onCommitFiberRoot(rendererID, finishedWork, schedulerPriority, didError);
            } catch (err) {
                hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
            }
            isDevToolsPresent && root.memoizedUpdaters.clear();
            onCommitRoot();
            if (null !== recoverableErrors) {
                didError = ReactSharedInternals.T;
                schedulerPriority = ReactDOMSharedInternals.p;
                ReactDOMSharedInternals.p = DiscreteEventPriority;
                ReactSharedInternals.T = null;
                try {
                    var onRecoverableError = root.onRecoverableError;
                    for(finishedWork = 0; finishedWork < recoverableErrors.length; finishedWork++){
                        var recoverableError = recoverableErrors[finishedWork], errorInfo = makeErrorInfo(recoverableError.stack);
                        runWithFiberInDEV(recoverableError.source, onRecoverableError, recoverableError.value, errorInfo);
                    }
                } finally{
                    ReactSharedInternals.T = didError, ReactDOMSharedInternals.p = schedulerPriority;
                }
            }
            0 !== (pendingEffectsLanes & 3) && flushPendingEffects();
            ensureRootIsScheduled(root);
            remainingLanes = root.pendingLanes;
            0 !== (lanes & 4194090) && 0 !== (remainingLanes & 42) ? (nestedUpdateScheduled = !0, root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root)) : nestedUpdateCount = 0;
            flushSyncWorkAcrossRoots_impl(0, !1);
            markCommitStopped();
        }
    }
    function makeErrorInfo(componentStack) {
        componentStack = {
            componentStack: componentStack
        };
        Object.defineProperty(componentStack, "digest", {
            get: function() {
                console.error('You are accessing "digest" from the errorInfo object passed to onRecoverableError. This property is no longer provided as part of errorInfo but can be accessed as a property of the Error instance itself.');
            }
        });
        return componentStack;
    }
    function releaseRootPooledCache(root, remainingLanes) {
        0 === (root.pooledCacheLanes &= remainingLanes) && (remainingLanes = root.pooledCache, null != remainingLanes && (root.pooledCache = null, releaseCache(remainingLanes)));
    }
    function flushPendingEffects(wasDelayedCommit) {
        flushMutationEffects();
        flushLayoutEffects();
        flushSpawnedWork();
        return flushPassiveEffects(wasDelayedCommit);
    }
    function flushPassiveEffects() {
        if (pendingEffectsStatus !== PENDING_PASSIVE_PHASE) return !1;
        var root = pendingEffectsRoot, remainingLanes = pendingEffectsRemainingLanes;
        pendingEffectsRemainingLanes = 0;
        var renderPriority = lanesToEventPriority(pendingEffectsLanes), priority = 0 === DefaultEventPriority || DefaultEventPriority > renderPriority ? DefaultEventPriority : renderPriority;
        renderPriority = ReactSharedInternals.T;
        var previousPriority = ReactDOMSharedInternals.p;
        try {
            ReactDOMSharedInternals.p = priority;
            ReactSharedInternals.T = null;
            priority = pendingPassiveTransitions;
            pendingPassiveTransitions = null;
            var root$jscomp$0 = pendingEffectsRoot, lanes = pendingEffectsLanes;
            pendingEffectsStatus = NO_PENDING_EFFECTS;
            pendingFinishedWork = pendingEffectsRoot = null;
            pendingEffectsLanes = 0;
            if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw Error("Cannot flush passive effects while already rendering.");
            isFlushingPassiveEffects = !0;
            didScheduleUpdateDuringPassiveEffects = !1;
            null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markPassiveEffectsStarted && injectedProfilingHooks.markPassiveEffectsStarted(lanes);
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext;
            commitPassiveUnmountOnFiber(root$jscomp$0.current);
            commitPassiveMountOnFiber(root$jscomp$0, root$jscomp$0.current, lanes, priority);
            null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markPassiveEffectsStopped && injectedProfilingHooks.markPassiveEffectsStopped();
            commitDoubleInvokeEffectsInDEV(root$jscomp$0);
            executionContext = prevExecutionContext;
            flushSyncWorkAcrossRoots_impl(0, !1);
            didScheduleUpdateDuringPassiveEffects ? root$jscomp$0 === rootWithPassiveNestedUpdates ? nestedPassiveUpdateCount++ : (nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = root$jscomp$0) : nestedPassiveUpdateCount = 0;
            didScheduleUpdateDuringPassiveEffects = isFlushingPassiveEffects = !1;
            if (injectedHook && "function" === typeof injectedHook.onPostCommitFiberRoot) try {
                injectedHook.onPostCommitFiberRoot(rendererID, root$jscomp$0);
            } catch (err) {
                hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
            }
            var stateNode = root$jscomp$0.current.stateNode;
            stateNode.effectDuration = 0;
            stateNode.passiveEffectDuration = 0;
            return !0;
        } finally{
            ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = renderPriority, releaseRootPooledCache(root, remainingLanes);
        }
    }
    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
        sourceFiber = createCapturedValueAtFiber(error, sourceFiber);
        sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);
        rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);
        null !== rootFiber && (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));
    }
    function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {
        isRunningInsertionEffect = !1;
        if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
        else {
            for(; null !== nearestMountedAncestor;){
                if (3 === nearestMountedAncestor.tag) {
                    captureCommitPhaseErrorOnRoot(nearestMountedAncestor, sourceFiber, error);
                    return;
                }
                if (1 === nearestMountedAncestor.tag) {
                    var instance = nearestMountedAncestor.stateNode;
                    if ("function" === typeof nearestMountedAncestor.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
                        sourceFiber = createCapturedValueAtFiber(error, sourceFiber);
                        error = createClassErrorUpdate(2);
                        instance = enqueueUpdate(nearestMountedAncestor, error, 2);
                        null !== instance && (initializeClassErrorUpdate(error, instance, nearestMountedAncestor, sourceFiber), markRootUpdated$1(instance, 2), ensureRootIsScheduled(instance));
                        return;
                    }
                }
                nearestMountedAncestor = nearestMountedAncestor.return;
            }
            console.error("Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Potential causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s", error);
        }
    }
    function attachPingListener(root, wakeable, lanes) {
        var pingCache = root.pingCache;
        if (null === pingCache) {
            pingCache = root.pingCache = new PossiblyWeakMap();
            var threadIDs = new Set();
            pingCache.set(wakeable, threadIDs);
        } else threadIDs = pingCache.get(wakeable), void 0 === threadIDs && (threadIDs = new Set(), pingCache.set(wakeable, threadIDs));
        threadIDs.has(lanes) || (workInProgressRootDidAttachPingListener = !0, threadIDs.add(lanes), pingCache = pingSuspendedRoot.bind(null, root, wakeable, lanes), isDevToolsPresent && restorePendingUpdaters(root, lanes), wakeable.then(pingCache, pingCache));
    }
    function pingSuspendedRoot(root, wakeable, pingedLanes) {
        var pingCache = root.pingCache;
        null !== pingCache && pingCache.delete(wakeable);
        root.pingedLanes |= root.suspendedLanes & pingedLanes;
        root.warmLanes &= ~pingedLanes;
        isConcurrentActEnvironment() && null === ReactSharedInternals.actQueue && console.error("A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act");
        workInProgressRoot === root && (workInProgressRootRenderLanes & pingedLanes) === pingedLanes && (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && (workInProgressRootRenderLanes & 62914560) === workInProgressRootRenderLanes && now$1() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? (executionContext & RenderContext) === NoContext && prepareFreshStack(root, 0) : workInProgressRootPingedLanes |= pingedLanes, workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes && (workInProgressSuspendedRetryLanes = 0));
        ensureRootIsScheduled(root);
    }
    function retryTimedOutBoundary(boundaryFiber, retryLane) {
        0 === retryLane && (retryLane = claimNextRetryLane());
        boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
        null !== boundaryFiber && (markRootUpdated$1(boundaryFiber, retryLane), ensureRootIsScheduled(boundaryFiber));
    }
    function retryDehydratedSuspenseBoundary(boundaryFiber) {
        var suspenseState = boundaryFiber.memoizedState, retryLane = 0;
        null !== suspenseState && (retryLane = suspenseState.retryLane);
        retryTimedOutBoundary(boundaryFiber, retryLane);
    }
    function resolveRetryWakeable(boundaryFiber, wakeable) {
        var retryLane = 0;
        switch(boundaryFiber.tag){
            case 13:
                var retryCache = boundaryFiber.stateNode;
                var suspenseState = boundaryFiber.memoizedState;
                null !== suspenseState && (retryLane = suspenseState.retryLane);
                break;
            case 19:
                retryCache = boundaryFiber.stateNode;
                break;
            case 22:
                retryCache = boundaryFiber.stateNode._retryCache;
                break;
            default:
                throw Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
        }
        null !== retryCache && retryCache.delete(wakeable);
        retryTimedOutBoundary(boundaryFiber, retryLane);
    }
    function recursivelyTraverseAndDoubleInvokeEffectsInDEV(root$jscomp$0, parentFiber, isInStrictMode) {
        if (0 !== (parentFiber.subtreeFlags & 67117056)) for(parentFiber = parentFiber.child; null !== parentFiber;){
            var root = root$jscomp$0, fiber = parentFiber, isStrictModeFiber = fiber.type === REACT_STRICT_MODE_TYPE;
            isStrictModeFiber = isInStrictMode || isStrictModeFiber;
            22 !== fiber.tag ? fiber.flags & 67108864 ? isStrictModeFiber && runWithFiberInDEV(fiber, doubleInvokeEffectsOnFiber, root, fiber, (fiber.mode & NoStrictPassiveEffectsMode) === NoMode) : recursivelyTraverseAndDoubleInvokeEffectsInDEV(root, fiber, isStrictModeFiber) : null === fiber.memoizedState && (isStrictModeFiber && fiber.flags & 8192 ? runWithFiberInDEV(fiber, doubleInvokeEffectsOnFiber, root, fiber) : fiber.subtreeFlags & 67108864 && runWithFiberInDEV(fiber, recursivelyTraverseAndDoubleInvokeEffectsInDEV, root, fiber, isStrictModeFiber));
            parentFiber = parentFiber.sibling;
        }
    }
    function doubleInvokeEffectsOnFiber(root, fiber) {
        var shouldDoubleInvokePassiveEffects = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : !0;
        setIsStrictModeForDevtools(!0);
        try {
            disappearLayoutEffects(fiber), shouldDoubleInvokePassiveEffects && disconnectPassiveEffect(fiber), reappearLayoutEffects(root, fiber.alternate, fiber, !1), shouldDoubleInvokePassiveEffects && reconnectPassiveEffects(root, fiber, 0, null, !1, 0);
        } finally{
            setIsStrictModeForDevtools(!1);
        }
    }
    function commitDoubleInvokeEffectsInDEV(root) {
        var doubleInvokeEffects = !0;
        root.current.mode & (StrictLegacyMode | StrictEffectsMode) || (doubleInvokeEffects = !1);
        recursivelyTraverseAndDoubleInvokeEffectsInDEV(root, root.current, doubleInvokeEffects);
    }
    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
        if ((executionContext & RenderContext) === NoContext) {
            var tag = fiber.tag;
            if (3 === tag || 1 === tag || 0 === tag || 11 === tag || 14 === tag || 15 === tag) {
                tag = getComponentNameFromFiber(fiber) || "ReactComponent";
                if (null !== didWarnStateUpdateForNotYetMountedComponent) {
                    if (didWarnStateUpdateForNotYetMountedComponent.has(tag)) return;
                    didWarnStateUpdateForNotYetMountedComponent.add(tag);
                } else didWarnStateUpdateForNotYetMountedComponent = new Set([
                    tag
                ]);
                runWithFiberInDEV(fiber, function() {
                    console.error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
                });
            }
        }
    }
    function restorePendingUpdaters(root, lanes) {
        isDevToolsPresent && root.memoizedUpdaters.forEach(function(schedulingFiber) {
            addFiberToLanesMap(root, schedulingFiber, lanes);
        });
    }
    function scheduleCallback$1(priorityLevel, callback) {
        var actQueue = ReactSharedInternals.actQueue;
        return null !== actQueue ? (actQueue.push(callback), fakeActCallbackNode$1) : scheduleCallback$3(priorityLevel, callback);
    }
    function warnIfUpdatesNotWrappedWithActDEV(fiber) {
        isConcurrentActEnvironment() && null === ReactSharedInternals.actQueue && runWithFiberInDEV(fiber, function() {
            console.error("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act", getComponentNameFromFiber(fiber));
        });
    }
    function ensureRootIsScheduled(root) {
        root !== lastScheduledRoot && null === root.next && (null === lastScheduledRoot ? firstScheduledRoot = lastScheduledRoot = root : lastScheduledRoot = lastScheduledRoot.next = root);
        mightHavePendingSyncWork = !0;
        null !== ReactSharedInternals.actQueue ? didScheduleMicrotask_act || (didScheduleMicrotask_act = !0, scheduleImmediateRootScheduleTask()) : didScheduleMicrotask || (didScheduleMicrotask = !0, scheduleImmediateRootScheduleTask());
    }
    function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
        if (!isFlushingWork && mightHavePendingSyncWork) {
            isFlushingWork = !0;
            do {
                var didPerformSomeWork = !1;
                for(var root = firstScheduledRoot; null !== root;){
                    if (!onlyLegacy) {
                        if (0 !== syncTransitionLanes) {
                            var pendingLanes = root.pendingLanes;
                            if (0 === pendingLanes) var nextLanes = 0;
                            else {
                                var suspendedLanes = root.suspendedLanes, pingedLanes = root.pingedLanes;
                                nextLanes = (1 << 31 - clz32(42 | syncTransitionLanes) + 1) - 1;
                                nextLanes &= pendingLanes & ~(suspendedLanes & ~pingedLanes);
                                nextLanes = nextLanes & 201326741 ? nextLanes & 201326741 | 1 : nextLanes ? nextLanes | 2 : 0;
                            }
                            0 !== nextLanes && (didPerformSomeWork = !0, performSyncWorkOnRoot(root, nextLanes));
                        } else nextLanes = workInProgressRootRenderLanes, nextLanes = getNextLanes(root, root === workInProgressRoot ? nextLanes : 0, null !== root.cancelPendingCommit || root.timeoutHandle !== noTimeout), 0 === (nextLanes & 3) || checkIfRootIsPrerendering(root, nextLanes) || (didPerformSomeWork = !0, performSyncWorkOnRoot(root, nextLanes));
                    }
                    root = root.next;
                }
            }while (didPerformSomeWork);
            isFlushingWork = !1;
        }
    }
    function processRootScheduleInImmediateTask() {
        processRootScheduleInMicrotask();
    }
    function processRootScheduleInMicrotask() {
        mightHavePendingSyncWork = didScheduleMicrotask_act = didScheduleMicrotask = !1;
        var syncTransitionLanes = 0;
        0 !== currentEventTransitionLane && (shouldAttemptEagerTransition() && (syncTransitionLanes = currentEventTransitionLane), currentEventTransitionLane = 0);
        for(var currentTime = now$1(), prev = null, root = firstScheduledRoot; null !== root;){
            var next = root.next, nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);
            if (0 === nextLanes) root.next = null, null === prev ? firstScheduledRoot = next : prev.next = next, null === next && (lastScheduledRoot = prev);
            else if (prev = root, 0 !== syncTransitionLanes || 0 !== (nextLanes & 3)) mightHavePendingSyncWork = !0;
            root = next;
        }
        flushSyncWorkAcrossRoots_impl(syncTransitionLanes, !1);
    }
    function scheduleTaskForRootDuringMicrotask(root, currentTime) {
        for(var suspendedLanes = root.suspendedLanes, pingedLanes = root.pingedLanes, expirationTimes = root.expirationTimes, lanes = root.pendingLanes & -62914561; 0 < lanes;){
            var index = 31 - clz32(lanes), lane = 1 << index, expirationTime = expirationTimes[index];
            if (-1 === expirationTime) {
                if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes)) expirationTimes[index] = computeExpirationTime(lane, currentTime);
            } else expirationTime <= currentTime && (root.expiredLanes |= lane);
            lanes &= ~lane;
        }
        currentTime = workInProgressRoot;
        suspendedLanes = workInProgressRootRenderLanes;
        suspendedLanes = getNextLanes(root, root === currentTime ? suspendedLanes : 0, null !== root.cancelPendingCommit || root.timeoutHandle !== noTimeout);
        pingedLanes = root.callbackNode;
        if (0 === suspendedLanes || root === currentTime && (workInProgressSuspendedReason === SuspendedOnData || workInProgressSuspendedReason === SuspendedOnAction) || null !== root.cancelPendingCommit) return null !== pingedLanes && cancelCallback(pingedLanes), root.callbackNode = null, root.callbackPriority = 0;
        if (0 === (suspendedLanes & 3) || checkIfRootIsPrerendering(root, suspendedLanes)) {
            currentTime = suspendedLanes & -suspendedLanes;
            if (currentTime !== root.callbackPriority || null !== ReactSharedInternals.actQueue && pingedLanes !== fakeActCallbackNode) cancelCallback(pingedLanes);
            else return currentTime;
            switch(lanesToEventPriority(suspendedLanes)){
                case DiscreteEventPriority:
                case ContinuousEventPriority:
                    suspendedLanes = UserBlockingPriority;
                    break;
                case DefaultEventPriority:
                    suspendedLanes = NormalPriority$1;
                    break;
                case IdleEventPriority:
                    suspendedLanes = IdlePriority;
                    break;
                default:
                    suspendedLanes = NormalPriority$1;
            }
            pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);
            null !== ReactSharedInternals.actQueue ? (ReactSharedInternals.actQueue.push(pingedLanes), suspendedLanes = fakeActCallbackNode) : suspendedLanes = scheduleCallback$3(suspendedLanes, pingedLanes);
            root.callbackPriority = currentTime;
            root.callbackNode = suspendedLanes;
            return currentTime;
        }
        null !== pingedLanes && cancelCallback(pingedLanes);
        root.callbackPriority = 2;
        root.callbackNode = null;
        return 2;
    }
    function performWorkOnRootViaSchedulerTask(root, didTimeout) {
        nestedUpdateScheduled = currentUpdateIsNested = !1;
        if (pendingEffectsStatus !== NO_PENDING_EFFECTS && pendingEffectsStatus !== PENDING_PASSIVE_PHASE) return root.callbackNode = null, root.callbackPriority = 0, null;
        var originalCallbackNode = root.callbackNode;
        if (flushPendingEffects(!0) && root.callbackNode !== originalCallbackNode) return null;
        var workInProgressRootRenderLanes$jscomp$0 = workInProgressRootRenderLanes;
        workInProgressRootRenderLanes$jscomp$0 = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes$jscomp$0 : 0, null !== root.cancelPendingCommit || root.timeoutHandle !== noTimeout);
        if (0 === workInProgressRootRenderLanes$jscomp$0) return null;
        performWorkOnRoot(root, workInProgressRootRenderLanes$jscomp$0, didTimeout);
        scheduleTaskForRootDuringMicrotask(root, now$1());
        return null != root.callbackNode && root.callbackNode === originalCallbackNode ? performWorkOnRootViaSchedulerTask.bind(null, root) : null;
    }
    function performSyncWorkOnRoot(root, lanes) {
        if (flushPendingEffects()) return null;
        currentUpdateIsNested = nestedUpdateScheduled;
        nestedUpdateScheduled = !1;
        performWorkOnRoot(root, lanes, !0);
    }
    function cancelCallback(callbackNode) {
        callbackNode !== fakeActCallbackNode && null !== callbackNode && cancelCallback$1(callbackNode);
    }
    function scheduleImmediateRootScheduleTask() {
        null !== ReactSharedInternals.actQueue && ReactSharedInternals.actQueue.push(function() {
            processRootScheduleInMicrotask();
            return null;
        });
        scheduleMicrotask(function() {
            (executionContext & (RenderContext | CommitContext)) !== NoContext ? scheduleCallback$3(ImmediatePriority, processRootScheduleInImmediateTask) : processRootScheduleInMicrotask();
        });
    }
    function requestTransitionLane() {
        0 === currentEventTransitionLane && (currentEventTransitionLane = claimNextTransitionLane());
        return currentEventTransitionLane;
    }
    function coerceFormActionProp(actionProp) {
        if (null == actionProp || "symbol" === typeof actionProp || "boolean" === typeof actionProp) return null;
        if ("function" === typeof actionProp) return actionProp;
        checkAttributeStringCoercion(actionProp, "action");
        return sanitizeURL("" + actionProp);
    }
    function createFormDataWithSubmitter(form, submitter) {
        var temp = submitter.ownerDocument.createElement("input");
        temp.name = submitter.name;
        temp.value = submitter.value;
        form.id && temp.setAttribute("form", form.id);
        submitter.parentNode.insertBefore(temp, submitter);
        form = new FormData(form);
        temp.parentNode.removeChild(temp);
        return form;
    }
    function extractEvents$1(dispatchQueue, domEventName, maybeTargetInst, nativeEvent, nativeEventTarget) {
        if ("submit" === domEventName && maybeTargetInst && maybeTargetInst.stateNode === nativeEventTarget) {
            var action = coerceFormActionProp((nativeEventTarget[internalPropsKey] || null).action), submitter = nativeEvent.submitter;
            submitter && (domEventName = (domEventName = submitter[internalPropsKey] || null) ? coerceFormActionProp(domEventName.formAction) : submitter.getAttribute("formAction"), null !== domEventName && (action = domEventName, submitter = null));
            var event = new SyntheticEvent("action", "action", null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: [
                    {
                        instance: null,
                        listener: function() {
                            if (nativeEvent.defaultPrevented) {
                                if (0 !== currentEventTransitionLane) {
                                    var formData = submitter ? createFormDataWithSubmitter(nativeEventTarget, submitter) : new FormData(nativeEventTarget), pendingState = {
                                        pending: !0,
                                        data: formData,
                                        method: nativeEventTarget.method,
                                        action: action
                                    };
                                    Object.freeze(pendingState);
                                    startHostTransition(maybeTargetInst, pendingState, null, formData);
                                }
                            } else "function" === typeof action && (event.preventDefault(), formData = submitter ? createFormDataWithSubmitter(nativeEventTarget, submitter) : new FormData(nativeEventTarget), pendingState = {
                                pending: !0,
                                data: formData,
                                method: nativeEventTarget.method,
                                action: action
                            }, Object.freeze(pendingState), startHostTransition(maybeTargetInst, pendingState, action, formData));
                        },
                        currentTarget: nativeEventTarget
                    }
                ]
            });
        }
    }
    function executeDispatch(event, listener, currentTarget) {
        event.currentTarget = currentTarget;
        try {
            listener(event);
        } catch (error) {
            reportGlobalError(error);
        }
        event.currentTarget = null;
    }
    function processDispatchQueue(dispatchQueue, eventSystemFlags) {
        eventSystemFlags = 0 !== (eventSystemFlags & 4);
        for(var i = 0; i < dispatchQueue.length; i++){
            var _dispatchQueue$i = dispatchQueue[i];
            a: {
                var previousInstance = void 0, event = _dispatchQueue$i.event;
                _dispatchQueue$i = _dispatchQueue$i.listeners;
                if (eventSystemFlags) for(var i$jscomp$0 = _dispatchQueue$i.length - 1; 0 <= i$jscomp$0; i$jscomp$0--){
                    var _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget;
                    _dispatchListeners$i = _dispatchListeners$i.listener;
                    if (instance !== previousInstance && event.isPropagationStopped()) break a;
                    null !== instance ? runWithFiberInDEV(instance, executeDispatch, event, _dispatchListeners$i, currentTarget) : executeDispatch(event, _dispatchListeners$i, currentTarget);
                    previousInstance = instance;
                }
                else for(i$jscomp$0 = 0; i$jscomp$0 < _dispatchQueue$i.length; i$jscomp$0++){
                    _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0];
                    instance = _dispatchListeners$i.instance;
                    currentTarget = _dispatchListeners$i.currentTarget;
                    _dispatchListeners$i = _dispatchListeners$i.listener;
                    if (instance !== previousInstance && event.isPropagationStopped()) break a;
                    null !== instance ? runWithFiberInDEV(instance, executeDispatch, event, _dispatchListeners$i, currentTarget) : executeDispatch(event, _dispatchListeners$i, currentTarget);
                    previousInstance = instance;
                }
            }
        }
    }
    function listenToNonDelegatedEvent(domEventName, targetElement) {
        nonDelegatedEvents.has(domEventName) || console.error('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', domEventName);
        var listenerSet = targetElement[internalEventHandlersKey];
        void 0 === listenerSet && (listenerSet = targetElement[internalEventHandlersKey] = new Set());
        var listenerSetKey = domEventName + "__bubble";
        listenerSet.has(listenerSetKey) || (addTrappedEventListener(targetElement, domEventName, 2, !1), listenerSet.add(listenerSetKey));
    }
    function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
        nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener && console.error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', domEventName);
        var eventSystemFlags = 0;
        isCapturePhaseListener && (eventSystemFlags |= 4);
        addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
    }
    function listenToAllSupportedEvents(rootContainerElement) {
        if (!rootContainerElement[listeningMarker]) {
            rootContainerElement[listeningMarker] = !0;
            allNativeEvents.forEach(function(domEventName) {
                "selectionchange" !== domEventName && (nonDelegatedEvents.has(domEventName) || listenToNativeEvent(domEventName, !1, rootContainerElement), listenToNativeEvent(domEventName, !0, rootContainerElement));
            });
            var ownerDocument = 9 === rootContainerElement.nodeType ? rootContainerElement : rootContainerElement.ownerDocument;
            null === ownerDocument || ownerDocument[listeningMarker] || (ownerDocument[listeningMarker] = !0, listenToNativeEvent("selectionchange", !1, ownerDocument));
        }
    }
    function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener) {
        switch(getEventPriority(domEventName)){
            case DiscreteEventPriority:
                var listenerWrapper = dispatchDiscreteEvent;
                break;
            case ContinuousEventPriority:
                listenerWrapper = dispatchContinuousEvent;
                break;
            default:
                listenerWrapper = dispatchEvent;
        }
        eventSystemFlags = listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
        listenerWrapper = void 0;
        !passiveBrowserEventsSupported || "touchstart" !== domEventName && "touchmove" !== domEventName && "wheel" !== domEventName || (listenerWrapper = !0);
        isCapturePhaseListener ? void 0 !== listenerWrapper ? targetContainer.addEventListener(domEventName, eventSystemFlags, {
            capture: !0,
            passive: listenerWrapper
        }) : targetContainer.addEventListener(domEventName, eventSystemFlags, !0) : void 0 !== listenerWrapper ? targetContainer.addEventListener(domEventName, eventSystemFlags, {
            passive: listenerWrapper
        }) : targetContainer.addEventListener(domEventName, eventSystemFlags, !1);
    }
    function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst$jscomp$0, targetContainer) {
        var ancestorInst = targetInst$jscomp$0;
        if (0 === (eventSystemFlags & 1) && 0 === (eventSystemFlags & 2) && null !== targetInst$jscomp$0) a: for(;;){
            if (null === targetInst$jscomp$0) return;
            var nodeTag = targetInst$jscomp$0.tag;
            if (3 === nodeTag || 4 === nodeTag) {
                var container = targetInst$jscomp$0.stateNode.containerInfo;
                if (container === targetContainer) break;
                if (4 === nodeTag) for(nodeTag = targetInst$jscomp$0.return; null !== nodeTag;){
                    var grandTag = nodeTag.tag;
                    if ((3 === grandTag || 4 === grandTag) && nodeTag.stateNode.containerInfo === targetContainer) return;
                    nodeTag = nodeTag.return;
                }
                for(; null !== container;){
                    nodeTag = getClosestInstanceFromNode(container);
                    if (null === nodeTag) return;
                    grandTag = nodeTag.tag;
                    if (5 === grandTag || 6 === grandTag || 26 === grandTag || 27 === grandTag) {
                        targetInst$jscomp$0 = ancestorInst = nodeTag;
                        continue a;
                    }
                    container = container.parentNode;
                }
            }
            targetInst$jscomp$0 = targetInst$jscomp$0.return;
        }
        batchedUpdates$1(function() {
            var targetInst = ancestorInst, nativeEventTarget = getEventTarget(nativeEvent), dispatchQueue = [];
            a: {
                var reactName = topLevelEventsToReactNames.get(domEventName);
                if (void 0 !== reactName) {
                    var SyntheticEventCtor = SyntheticEvent, reactEventType = domEventName;
                    switch(domEventName){
                        case "keypress":
                            if (0 === getEventCharCode(nativeEvent)) break a;
                        case "keydown":
                        case "keyup":
                            SyntheticEventCtor = SyntheticKeyboardEvent;
                            break;
                        case "focusin":
                            reactEventType = "focus";
                            SyntheticEventCtor = SyntheticFocusEvent;
                            break;
                        case "focusout":
                            reactEventType = "blur";
                            SyntheticEventCtor = SyntheticFocusEvent;
                            break;
                        case "beforeblur":
                        case "afterblur":
                            SyntheticEventCtor = SyntheticFocusEvent;
                            break;
                        case "click":
                            if (2 === nativeEvent.button) break a;
                        case "auxclick":
                        case "dblclick":
                        case "mousedown":
                        case "mousemove":
                        case "mouseup":
                        case "mouseout":
                        case "mouseover":
                        case "contextmenu":
                            SyntheticEventCtor = SyntheticMouseEvent;
                            break;
                        case "drag":
                        case "dragend":
                        case "dragenter":
                        case "dragexit":
                        case "dragleave":
                        case "dragover":
                        case "dragstart":
                        case "drop":
                            SyntheticEventCtor = SyntheticDragEvent;
                            break;
                        case "touchcancel":
                        case "touchend":
                        case "touchmove":
                        case "touchstart":
                            SyntheticEventCtor = SyntheticTouchEvent;
                            break;
                        case ANIMATION_END:
                        case ANIMATION_ITERATION:
                        case ANIMATION_START:
                            SyntheticEventCtor = SyntheticAnimationEvent;
                            break;
                        case TRANSITION_END:
                            SyntheticEventCtor = SyntheticTransitionEvent;
                            break;
                        case "scroll":
                        case "scrollend":
                            SyntheticEventCtor = SyntheticUIEvent;
                            break;
                        case "wheel":
                            SyntheticEventCtor = SyntheticWheelEvent;
                            break;
                        case "copy":
                        case "cut":
                        case "paste":
                            SyntheticEventCtor = SyntheticClipboardEvent;
                            break;
                        case "gotpointercapture":
                        case "lostpointercapture":
                        case "pointercancel":
                        case "pointerdown":
                        case "pointermove":
                        case "pointerout":
                        case "pointerover":
                        case "pointerup":
                            SyntheticEventCtor = SyntheticPointerEvent;
                            break;
                        case "toggle":
                        case "beforetoggle":
                            SyntheticEventCtor = SyntheticToggleEvent;
                    }
                    var inCapturePhase = 0 !== (eventSystemFlags & 4), accumulateTargetOnly = !inCapturePhase && ("scroll" === domEventName || "scrollend" === domEventName), reactEventName = inCapturePhase ? null !== reactName ? reactName + "Capture" : null : reactName;
                    inCapturePhase = [];
                    for(var instance = targetInst, lastHostComponent; null !== instance;){
                        var _instance2 = instance;
                        lastHostComponent = _instance2.stateNode;
                        _instance2 = _instance2.tag;
                        5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2 || null === lastHostComponent || null === reactEventName || (_instance2 = getListener(instance, reactEventName), null != _instance2 && inCapturePhase.push(createDispatchListener(instance, _instance2, lastHostComponent)));
                        if (accumulateTargetOnly) break;
                        instance = instance.return;
                    }
                    0 < inCapturePhase.length && (reactName = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget), dispatchQueue.push({
                        event: reactName,
                        listeners: inCapturePhase
                    }));
                }
            }
            if (0 === (eventSystemFlags & 7)) {
                a: {
                    reactName = "mouseover" === domEventName || "pointerover" === domEventName;
                    SyntheticEventCtor = "mouseout" === domEventName || "pointerout" === domEventName;
                    if (reactName && nativeEvent !== currentReplayingEvent && (reactEventType = nativeEvent.relatedTarget || nativeEvent.fromElement) && (getClosestInstanceFromNode(reactEventType) || reactEventType[internalContainerInstanceKey])) break a;
                    if (SyntheticEventCtor || reactName) {
                        reactName = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget : (reactName = nativeEventTarget.ownerDocument) ? reactName.defaultView || reactName.parentWindow : window;
                        if (SyntheticEventCtor) {
                            if (reactEventType = nativeEvent.relatedTarget || nativeEvent.toElement, SyntheticEventCtor = targetInst, reactEventType = reactEventType ? getClosestInstanceFromNode(reactEventType) : null, null !== reactEventType && (accumulateTargetOnly = getNearestMountedFiber(reactEventType), inCapturePhase = reactEventType.tag, reactEventType !== accumulateTargetOnly || 5 !== inCapturePhase && 27 !== inCapturePhase && 6 !== inCapturePhase)) reactEventType = null;
                        } else SyntheticEventCtor = null, reactEventType = targetInst;
                        if (SyntheticEventCtor !== reactEventType) {
                            inCapturePhase = SyntheticMouseEvent;
                            _instance2 = "onMouseLeave";
                            reactEventName = "onMouseEnter";
                            instance = "mouse";
                            if ("pointerout" === domEventName || "pointerover" === domEventName) inCapturePhase = SyntheticPointerEvent, _instance2 = "onPointerLeave", reactEventName = "onPointerEnter", instance = "pointer";
                            accumulateTargetOnly = null == SyntheticEventCtor ? reactName : getNodeFromInstance(SyntheticEventCtor);
                            lastHostComponent = null == reactEventType ? reactName : getNodeFromInstance(reactEventType);
                            reactName = new inCapturePhase(_instance2, instance + "leave", SyntheticEventCtor, nativeEvent, nativeEventTarget);
                            reactName.target = accumulateTargetOnly;
                            reactName.relatedTarget = lastHostComponent;
                            _instance2 = null;
                            getClosestInstanceFromNode(nativeEventTarget) === targetInst && (inCapturePhase = new inCapturePhase(reactEventName, instance + "enter", reactEventType, nativeEvent, nativeEventTarget), inCapturePhase.target = lastHostComponent, inCapturePhase.relatedTarget = accumulateTargetOnly, _instance2 = inCapturePhase);
                            accumulateTargetOnly = _instance2;
                            if (SyntheticEventCtor && reactEventType) b: {
                                inCapturePhase = SyntheticEventCtor;
                                reactEventName = reactEventType;
                                instance = 0;
                                for(lastHostComponent = inCapturePhase; lastHostComponent; lastHostComponent = getParent(lastHostComponent))instance++;
                                lastHostComponent = 0;
                                for(_instance2 = reactEventName; _instance2; _instance2 = getParent(_instance2))lastHostComponent++;
                                for(; 0 < instance - lastHostComponent;)inCapturePhase = getParent(inCapturePhase), instance--;
                                for(; 0 < lastHostComponent - instance;)reactEventName = getParent(reactEventName), lastHostComponent--;
                                for(; instance--;){
                                    if (inCapturePhase === reactEventName || null !== reactEventName && inCapturePhase === reactEventName.alternate) break b;
                                    inCapturePhase = getParent(inCapturePhase);
                                    reactEventName = getParent(reactEventName);
                                }
                                inCapturePhase = null;
                            }
                            else inCapturePhase = null;
                            null !== SyntheticEventCtor && accumulateEnterLeaveListenersForEvent(dispatchQueue, reactName, SyntheticEventCtor, inCapturePhase, !1);
                            null !== reactEventType && null !== accumulateTargetOnly && accumulateEnterLeaveListenersForEvent(dispatchQueue, accumulateTargetOnly, reactEventType, inCapturePhase, !0);
                        }
                    }
                }
                a: {
                    reactName = targetInst ? getNodeFromInstance(targetInst) : window;
                    SyntheticEventCtor = reactName.nodeName && reactName.nodeName.toLowerCase();
                    if ("select" === SyntheticEventCtor || "input" === SyntheticEventCtor && "file" === reactName.type) var getTargetInstFunc = getTargetInstForChangeEvent;
                    else if (isTextInputElement(reactName)) {
                        if (isInputEventSupported) getTargetInstFunc = getTargetInstForInputOrChangeEvent;
                        else {
                            getTargetInstFunc = getTargetInstForInputEventPolyfill;
                            var handleEventFunc = handleEventsForInputEventPolyfill;
                        }
                    } else SyntheticEventCtor = reactName.nodeName, !SyntheticEventCtor || "input" !== SyntheticEventCtor.toLowerCase() || "checkbox" !== reactName.type && "radio" !== reactName.type ? targetInst && isCustomElement(targetInst.elementType) && (getTargetInstFunc = getTargetInstForChangeEvent) : getTargetInstFunc = getTargetInstForClickEvent;
                    if (getTargetInstFunc && (getTargetInstFunc = getTargetInstFunc(domEventName, targetInst))) {
                        createAndAccumulateChangeEvent(dispatchQueue, getTargetInstFunc, nativeEvent, nativeEventTarget);
                        break a;
                    }
                    handleEventFunc && handleEventFunc(domEventName, reactName, targetInst);
                    "focusout" === domEventName && targetInst && "number" === reactName.type && null != targetInst.memoizedProps.value && setDefaultValue(reactName, "number", reactName.value);
                }
                handleEventFunc = targetInst ? getNodeFromInstance(targetInst) : window;
                switch(domEventName){
                    case "focusin":
                        if (isTextInputElement(handleEventFunc) || "true" === handleEventFunc.contentEditable) activeElement = handleEventFunc, activeElementInst = targetInst, lastSelection = null;
                        break;
                    case "focusout":
                        lastSelection = activeElementInst = activeElement = null;
                        break;
                    case "mousedown":
                        mouseDown = !0;
                        break;
                    case "contextmenu":
                    case "mouseup":
                    case "dragend":
                        mouseDown = !1;
                        constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                        break;
                    case "selectionchange":
                        if (skipSelectionChangeEvent) break;
                    case "keydown":
                    case "keyup":
                        constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                }
                var fallbackData;
                if (canUseCompositionEvent) b: {
                    switch(domEventName){
                        case "compositionstart":
                            var eventType = "onCompositionStart";
                            break b;
                        case "compositionend":
                            eventType = "onCompositionEnd";
                            break b;
                        case "compositionupdate":
                            eventType = "onCompositionUpdate";
                            break b;
                    }
                    eventType = void 0;
                }
                else isComposing ? isFallbackCompositionEnd(domEventName, nativeEvent) && (eventType = "onCompositionEnd") : "keydown" === domEventName && nativeEvent.keyCode === START_KEYCODE && (eventType = "onCompositionStart");
                eventType && (useFallbackCompositionData && "ko" !== nativeEvent.locale && (isComposing || "onCompositionStart" !== eventType ? "onCompositionEnd" === eventType && isComposing && (fallbackData = getData()) : (root = nativeEventTarget, startText = "value" in root ? root.value : root.textContent, isComposing = !0)), handleEventFunc = accumulateTwoPhaseListeners(targetInst, eventType), 0 < handleEventFunc.length && (eventType = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget), dispatchQueue.push({
                    event: eventType,
                    listeners: handleEventFunc
                }), fallbackData ? eventType.data = fallbackData : (fallbackData = getDataFromCustomEvent(nativeEvent), null !== fallbackData && (eventType.data = fallbackData))));
                if (fallbackData = canUseTextInputEvent ? getNativeBeforeInputChars(domEventName, nativeEvent) : getFallbackBeforeInputChars(domEventName, nativeEvent)) eventType = accumulateTwoPhaseListeners(targetInst, "onBeforeInput"), 0 < eventType.length && (handleEventFunc = new SyntheticInputEvent("onBeforeInput", "beforeinput", null, nativeEvent, nativeEventTarget), dispatchQueue.push({
                    event: handleEventFunc,
                    listeners: eventType
                }), handleEventFunc.data = fallbackData);
                extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            }
            processDispatchQueue(dispatchQueue, eventSystemFlags);
        });
    }
    function createDispatchListener(instance, listener, currentTarget) {
        return {
            instance: instance,
            listener: listener,
            currentTarget: currentTarget
        };
    }
    function accumulateTwoPhaseListeners(targetFiber, reactName) {
        for(var captureName = reactName + "Capture", listeners = []; null !== targetFiber;){
            var _instance3 = targetFiber, stateNode = _instance3.stateNode;
            _instance3 = _instance3.tag;
            5 !== _instance3 && 26 !== _instance3 && 27 !== _instance3 || null === stateNode || (_instance3 = getListener(targetFiber, captureName), null != _instance3 && listeners.unshift(createDispatchListener(targetFiber, _instance3, stateNode)), _instance3 = getListener(targetFiber, reactName), null != _instance3 && listeners.push(createDispatchListener(targetFiber, _instance3, stateNode)));
            if (3 === targetFiber.tag) return listeners;
            targetFiber = targetFiber.return;
        }
        return [];
    }
    function getParent(inst) {
        if (null === inst) return null;
        do inst = inst.return;
        while (inst && 5 !== inst.tag && 27 !== inst.tag);
        return inst ? inst : null;
    }
    function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
        for(var registrationName = event._reactName, listeners = []; null !== target && target !== common;){
            var _instance4 = target, alternate = _instance4.alternate, stateNode = _instance4.stateNode;
            _instance4 = _instance4.tag;
            if (null !== alternate && alternate === common) break;
            5 !== _instance4 && 26 !== _instance4 && 27 !== _instance4 || null === stateNode || (alternate = stateNode, inCapturePhase ? (stateNode = getListener(target, registrationName), null != stateNode && listeners.unshift(createDispatchListener(target, stateNode, alternate))) : inCapturePhase || (stateNode = getListener(target, registrationName), null != stateNode && listeners.push(createDispatchListener(target, stateNode, alternate))));
            target = target.return;
        }
        0 !== listeners.length && dispatchQueue.push({
            event: event,
            listeners: listeners
        });
    }
    function validatePropertiesInDevelopment(type, props) {
        validateProperties$2(type, props);
        "input" !== type && "textarea" !== type && "select" !== type || null == props || null !== props.value || didWarnValueNull || (didWarnValueNull = !0, "select" === type && props.multiple ? console.error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type) : console.error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type));
        var eventRegistry = {
            registrationNameDependencies: registrationNameDependencies,
            possibleRegistrationNames: possibleRegistrationNames
        };
        isCustomElement(type) || "string" === typeof props.is || warnUnknownProperties(type, props, eventRegistry);
        props.contentEditable && !props.suppressContentEditableWarning && null != props.children && console.error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
    }
    function warnForPropDifference(propName, serverValue, clientValue, serverDifferences) {
        serverValue !== clientValue && (clientValue = normalizeMarkupForTextOrAttribute(clientValue), normalizeMarkupForTextOrAttribute(serverValue) !== clientValue && (serverDifferences[propName] = serverValue));
    }
    function warnForExtraAttributes(domElement, attributeNames, serverDifferences) {
        attributeNames.forEach(function(attributeName) {
            serverDifferences[getPropNameFromAttributeName(attributeName)] = "style" === attributeName ? getStylesObjectFromElement(domElement) : domElement.getAttribute(attributeName);
        });
    }
    function warnForInvalidEventListener(registrationName, listener) {
        !1 === listener ? console.error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName) : console.error("Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
    }
    function normalizeHTML(parent, html) {
        parent = parent.namespaceURI === MATH_NAMESPACE || parent.namespaceURI === SVG_NAMESPACE ? parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName) : parent.ownerDocument.createElement(parent.tagName);
        parent.innerHTML = html;
        return parent.innerHTML;
    }
    function normalizeMarkupForTextOrAttribute(markup) {
        willCoercionThrow(markup) && (console.error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before using it here.", typeName(markup)), testStringCoercion(markup));
        return ("string" === typeof markup ? markup : "" + markup).replace(NORMALIZE_NEWLINES_REGEX, "\n").replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
    }
    function checkForUnmatchedText(serverText, clientText) {
        clientText = normalizeMarkupForTextOrAttribute(clientText);
        return normalizeMarkupForTextOrAttribute(serverText) === clientText ? !0 : !1;
    }
    function noop$1() {}
    function setProp(domElement, tag, key, value, props, prevValue) {
        switch(key){
            case "children":
                if ("string" === typeof value) validateTextNesting(value, tag, !1), "body" === tag || "textarea" === tag && "" === value || setTextContent(domElement, value);
                else if ("number" === typeof value || "bigint" === typeof value) validateTextNesting("" + value, tag, !1), "body" !== tag && setTextContent(domElement, "" + value);
                break;
            case "className":
                setValueForKnownAttribute(domElement, "class", value);
                break;
            case "tabIndex":
                setValueForKnownAttribute(domElement, "tabindex", value);
                break;
            case "dir":
            case "role":
            case "viewBox":
            case "width":
            case "height":
                setValueForKnownAttribute(domElement, key, value);
                break;
            case "style":
                setValueForStyles(domElement, value, prevValue);
                break;
            case "data":
                if ("object" !== tag) {
                    setValueForKnownAttribute(domElement, "data", value);
                    break;
                }
            case "src":
            case "href":
                if ("" === value && ("a" !== tag || "href" !== key)) {
                    "src" === key ? console.error('An empty string ("") was passed to the %s attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to %s instead of an empty string.', key, key) : console.error('An empty string ("") was passed to the %s attribute. To fix this, either do not render the element at all or pass null to %s instead of an empty string.', key, key);
                    domElement.removeAttribute(key);
                    break;
                }
                if (null == value || "function" === typeof value || "symbol" === typeof value || "boolean" === typeof value) {
                    domElement.removeAttribute(key);
                    break;
                }
                checkAttributeStringCoercion(value, key);
                value = sanitizeURL("" + value);
                domElement.setAttribute(key, value);
                break;
            case "action":
            case "formAction":
                null != value && ("form" === tag ? "formAction" === key ? console.error("You can only pass the formAction prop to <input> or <button>. Use the action prop on <form>.") : "function" === typeof value && (null == props.encType && null == props.method || didWarnFormActionMethod || (didWarnFormActionMethod = !0, console.error("Cannot specify a encType or method for a form that specifies a function as the action. React provides those automatically. They will get overridden.")), null == props.target || didWarnFormActionTarget || (didWarnFormActionTarget = !0, console.error("Cannot specify a target for a form that specifies a function as the action. The function will always be executed in the same window."))) : "input" === tag || "button" === tag ? "action" === key ? console.error("You can only pass the action prop to <form>. Use the formAction prop on <input> or <button>.") : "input" !== tag || "submit" === props.type || "image" === props.type || didWarnFormActionType ? "button" !== tag || null == props.type || "submit" === props.type || didWarnFormActionType ? "function" === typeof value && (null == props.name || didWarnFormActionName || (didWarnFormActionName = !0, console.error('Cannot specify a "name" prop for a button that specifies a function as a formAction. React needs it to encode which action should be invoked. It will get overridden.')), null == props.formEncType && null == props.formMethod || didWarnFormActionMethod || (didWarnFormActionMethod = !0, console.error("Cannot specify a formEncType or formMethod for a button that specifies a function as a formAction. React provides those automatically. They will get overridden.")), null == props.formTarget || didWarnFormActionTarget || (didWarnFormActionTarget = !0, console.error("Cannot specify a formTarget for a button that specifies a function as a formAction. The function will always be executed in the same window."))) : (didWarnFormActionType = !0, console.error('A button can only specify a formAction along with type="submit" or no type.')) : (didWarnFormActionType = !0, console.error('An input can only specify a formAction along with type="submit" or type="image".')) : "action" === key ? console.error("You can only pass the action prop to <form>.") : console.error("You can only pass the formAction prop to <input> or <button>."));
                if ("function" === typeof value) {
                    domElement.setAttribute(key, "javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");
                    break;
                } else "function" === typeof prevValue && ("formAction" === key ? ("input" !== tag && setProp(domElement, tag, "name", props.name, props, null), setProp(domElement, tag, "formEncType", props.formEncType, props, null), setProp(domElement, tag, "formMethod", props.formMethod, props, null), setProp(domElement, tag, "formTarget", props.formTarget, props, null)) : (setProp(domElement, tag, "encType", props.encType, props, null), setProp(domElement, tag, "method", props.method, props, null), setProp(domElement, tag, "target", props.target, props, null)));
                if (null == value || "symbol" === typeof value || "boolean" === typeof value) {
                    domElement.removeAttribute(key);
                    break;
                }
                checkAttributeStringCoercion(value, key);
                value = sanitizeURL("" + value);
                domElement.setAttribute(key, value);
                break;
            case "onClick":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), domElement.onclick = noop$1);
                break;
            case "onScroll":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), listenToNonDelegatedEvent("scroll", domElement));
                break;
            case "onScrollEnd":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), listenToNonDelegatedEvent("scrollend", domElement));
                break;
            case "dangerouslySetInnerHTML":
                if (null != value) {
                    if ("object" !== typeof value || !("__html" in value)) throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.");
                    key = value.__html;
                    if (null != key) {
                        if (null != props.children) throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
                        domElement.innerHTML = key;
                    }
                }
                break;
            case "multiple":
                domElement.multiple = value && "function" !== typeof value && "symbol" !== typeof value;
                break;
            case "muted":
                domElement.muted = value && "function" !== typeof value && "symbol" !== typeof value;
                break;
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "ref":
                break;
            case "autoFocus":
                break;
            case "xlinkHref":
                if (null == value || "function" === typeof value || "boolean" === typeof value || "symbol" === typeof value) {
                    domElement.removeAttribute("xlink:href");
                    break;
                }
                checkAttributeStringCoercion(value, key);
                key = sanitizeURL("" + value);
                domElement.setAttributeNS(xlinkNamespace, "xlink:href", key);
                break;
            case "contentEditable":
            case "spellCheck":
            case "draggable":
            case "value":
            case "autoReverse":
            case "externalResourcesRequired":
            case "focusable":
            case "preserveAlpha":
                null != value && "function" !== typeof value && "symbol" !== typeof value ? (checkAttributeStringCoercion(value, key), domElement.setAttribute(key, "" + value)) : domElement.removeAttribute(key);
                break;
            case "inert":
                "" !== value || didWarnForNewBooleanPropsWithEmptyValue[key] || (didWarnForNewBooleanPropsWithEmptyValue[key] = !0, console.error("Received an empty string for a boolean attribute `%s`. This will treat the attribute as if it were false. Either pass `false` to silence this warning, or pass `true` if you used an empty string in earlier versions of React to indicate this attribute is true.", key));
            case "allowFullScreen":
            case "async":
            case "autoPlay":
            case "controls":
            case "default":
            case "defer":
            case "disabled":
            case "disablePictureInPicture":
            case "disableRemotePlayback":
            case "formNoValidate":
            case "hidden":
            case "loop":
            case "noModule":
            case "noValidate":
            case "open":
            case "playsInline":
            case "readOnly":
            case "required":
            case "reversed":
            case "scoped":
            case "seamless":
            case "itemScope":
                value && "function" !== typeof value && "symbol" !== typeof value ? domElement.setAttribute(key, "") : domElement.removeAttribute(key);
                break;
            case "capture":
            case "download":
                !0 === value ? domElement.setAttribute(key, "") : !1 !== value && null != value && "function" !== typeof value && "symbol" !== typeof value ? (checkAttributeStringCoercion(value, key), domElement.setAttribute(key, value)) : domElement.removeAttribute(key);
                break;
            case "cols":
            case "rows":
            case "size":
            case "span":
                null != value && "function" !== typeof value && "symbol" !== typeof value && !isNaN(value) && 1 <= value ? (checkAttributeStringCoercion(value, key), domElement.setAttribute(key, value)) : domElement.removeAttribute(key);
                break;
            case "rowSpan":
            case "start":
                null == value || "function" === typeof value || "symbol" === typeof value || isNaN(value) ? domElement.removeAttribute(key) : (checkAttributeStringCoercion(value, key), domElement.setAttribute(key, value));
                break;
            case "popover":
                listenToNonDelegatedEvent("beforetoggle", domElement);
                listenToNonDelegatedEvent("toggle", domElement);
                setValueForAttribute(domElement, "popover", value);
                break;
            case "xlinkActuate":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:actuate", value);
                break;
            case "xlinkArcrole":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:arcrole", value);
                break;
            case "xlinkRole":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:role", value);
                break;
            case "xlinkShow":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:show", value);
                break;
            case "xlinkTitle":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:title", value);
                break;
            case "xlinkType":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:type", value);
                break;
            case "xmlBase":
                setValueForNamespacedAttribute(domElement, xmlNamespace, "xml:base", value);
                break;
            case "xmlLang":
                setValueForNamespacedAttribute(domElement, xmlNamespace, "xml:lang", value);
                break;
            case "xmlSpace":
                setValueForNamespacedAttribute(domElement, xmlNamespace, "xml:space", value);
                break;
            case "is":
                null != prevValue && console.error('Cannot update the "is" prop after it has been initialized.');
                setValueForAttribute(domElement, "is", value);
                break;
            case "innerText":
            case "textContent":
                break;
            case "popoverTarget":
                didWarnPopoverTargetObject || null == value || "object" !== typeof value || (didWarnPopoverTargetObject = !0, console.error("The `popoverTarget` prop expects the ID of an Element as a string. Received %s instead.", value));
            default:
                !(2 < key.length) || "o" !== key[0] && "O" !== key[0] || "n" !== key[1] && "N" !== key[1] ? (key = getAttributeAlias(key), setValueForAttribute(domElement, key, value)) : registrationNameDependencies.hasOwnProperty(key) && null != value && "function" !== typeof value && warnForInvalidEventListener(key, value);
        }
    }
    function setPropOnCustomElement(domElement, tag, key, value, props, prevValue) {
        switch(key){
            case "style":
                setValueForStyles(domElement, value, prevValue);
                break;
            case "dangerouslySetInnerHTML":
                if (null != value) {
                    if ("object" !== typeof value || !("__html" in value)) throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.");
                    key = value.__html;
                    if (null != key) {
                        if (null != props.children) throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
                        domElement.innerHTML = key;
                    }
                }
                break;
            case "children":
                "string" === typeof value ? setTextContent(domElement, value) : ("number" === typeof value || "bigint" === typeof value) && setTextContent(domElement, "" + value);
                break;
            case "onScroll":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), listenToNonDelegatedEvent("scroll", domElement));
                break;
            case "onScrollEnd":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), listenToNonDelegatedEvent("scrollend", domElement));
                break;
            case "onClick":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), domElement.onclick = noop$1);
                break;
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
            case "innerHTML":
            case "ref":
                break;
            case "innerText":
            case "textContent":
                break;
            default:
                if (registrationNameDependencies.hasOwnProperty(key)) null != value && "function" !== typeof value && warnForInvalidEventListener(key, value);
                else a: {
                    if ("o" === key[0] && "n" === key[1] && (props = key.endsWith("Capture"), tag = key.slice(2, props ? key.length - 7 : void 0), prevValue = domElement[internalPropsKey] || null, prevValue = null != prevValue ? prevValue[key] : null, "function" === typeof prevValue && domElement.removeEventListener(tag, prevValue, props), "function" === typeof value)) {
                        "function" !== typeof prevValue && null !== prevValue && (key in domElement ? domElement[key] = null : domElement.hasAttribute(key) && domElement.removeAttribute(key));
                        domElement.addEventListener(tag, value, props);
                        break a;
                    }
                    key in domElement ? domElement[key] = value : !0 === value ? domElement.setAttribute(key, "") : setValueForAttribute(domElement, key, value);
                }
        }
    }
    function setInitialProperties(domElement, tag, props) {
        validatePropertiesInDevelopment(tag, props);
        switch(tag){
            case "div":
            case "span":
            case "svg":
            case "path":
            case "a":
            case "g":
            case "p":
            case "li":
                break;
            case "img":
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                var hasSrc = !1, hasSrcSet = !1, propKey;
                for(propKey in props)if (props.hasOwnProperty(propKey)) {
                    var propValue = props[propKey];
                    if (null != propValue) switch(propKey){
                        case "src":
                            hasSrc = !0;
                            break;
                        case "srcSet":
                            hasSrcSet = !0;
                            break;
                        case "children":
                        case "dangerouslySetInnerHTML":
                            throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                        default:
                            setProp(domElement, tag, propKey, propValue, props, null);
                    }
                }
                hasSrcSet && setProp(domElement, tag, "srcSet", props.srcSet, props, null);
                hasSrc && setProp(domElement, tag, "src", props.src, props, null);
                return;
            case "input":
                checkControlledValueProps("input", props);
                listenToNonDelegatedEvent("invalid", domElement);
                var defaultValue = propKey = propValue = hasSrcSet = null, checked = null, defaultChecked = null;
                for(hasSrc in props)if (props.hasOwnProperty(hasSrc)) {
                    var _propValue = props[hasSrc];
                    if (null != _propValue) switch(hasSrc){
                        case "name":
                            hasSrcSet = _propValue;
                            break;
                        case "type":
                            propValue = _propValue;
                            break;
                        case "checked":
                            checked = _propValue;
                            break;
                        case "defaultChecked":
                            defaultChecked = _propValue;
                            break;
                        case "value":
                            propKey = _propValue;
                            break;
                        case "defaultValue":
                            defaultValue = _propValue;
                            break;
                        case "children":
                        case "dangerouslySetInnerHTML":
                            if (null != _propValue) throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                            break;
                        default:
                            setProp(domElement, tag, hasSrc, _propValue, props, null);
                    }
                }
                validateInputProps(domElement, props);
                initInput(domElement, propKey, defaultValue, checked, defaultChecked, propValue, hasSrcSet, !1);
                track(domElement);
                return;
            case "select":
                checkControlledValueProps("select", props);
                listenToNonDelegatedEvent("invalid", domElement);
                hasSrc = propValue = propKey = null;
                for(hasSrcSet in props)if (props.hasOwnProperty(hasSrcSet) && (defaultValue = props[hasSrcSet], null != defaultValue)) switch(hasSrcSet){
                    case "value":
                        propKey = defaultValue;
                        break;
                    case "defaultValue":
                        propValue = defaultValue;
                        break;
                    case "multiple":
                        hasSrc = defaultValue;
                    default:
                        setProp(domElement, tag, hasSrcSet, defaultValue, props, null);
                }
                validateSelectProps(domElement, props);
                tag = propKey;
                props = propValue;
                domElement.multiple = !!hasSrc;
                null != tag ? updateOptions(domElement, !!hasSrc, tag, !1) : null != props && updateOptions(domElement, !!hasSrc, props, !0);
                return;
            case "textarea":
                checkControlledValueProps("textarea", props);
                listenToNonDelegatedEvent("invalid", domElement);
                propKey = hasSrcSet = hasSrc = null;
                for(propValue in props)if (props.hasOwnProperty(propValue) && (defaultValue = props[propValue], null != defaultValue)) switch(propValue){
                    case "value":
                        hasSrc = defaultValue;
                        break;
                    case "defaultValue":
                        hasSrcSet = defaultValue;
                        break;
                    case "children":
                        propKey = defaultValue;
                        break;
                    case "dangerouslySetInnerHTML":
                        if (null != defaultValue) throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                        break;
                    default:
                        setProp(domElement, tag, propValue, defaultValue, props, null);
                }
                validateTextareaProps(domElement, props);
                initTextarea(domElement, hasSrc, hasSrcSet, propKey);
                track(domElement);
                return;
            case "option":
                validateOptionProps(domElement, props);
                for(checked in props)if (props.hasOwnProperty(checked) && (hasSrc = props[checked], null != hasSrc)) switch(checked){
                    case "selected":
                        domElement.selected = hasSrc && "function" !== typeof hasSrc && "symbol" !== typeof hasSrc;
                        break;
                    default:
                        setProp(domElement, tag, checked, hasSrc, props, null);
                }
                return;
            case "dialog":
                listenToNonDelegatedEvent("beforetoggle", domElement);
                listenToNonDelegatedEvent("toggle", domElement);
                listenToNonDelegatedEvent("cancel", domElement);
                listenToNonDelegatedEvent("close", domElement);
                break;
            case "iframe":
            case "object":
                listenToNonDelegatedEvent("load", domElement);
                break;
            case "video":
            case "audio":
                for(hasSrc = 0; hasSrc < mediaEventTypes.length; hasSrc++)listenToNonDelegatedEvent(mediaEventTypes[hasSrc], domElement);
                break;
            case "image":
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                break;
            case "details":
                listenToNonDelegatedEvent("toggle", domElement);
                break;
            case "embed":
            case "source":
            case "link":
                listenToNonDelegatedEvent("error", domElement), listenToNonDelegatedEvent("load", domElement);
            case "area":
            case "base":
            case "br":
            case "col":
            case "hr":
            case "keygen":
            case "meta":
            case "param":
            case "track":
            case "wbr":
            case "menuitem":
                for(defaultChecked in props)if (props.hasOwnProperty(defaultChecked) && (hasSrc = props[defaultChecked], null != hasSrc)) switch(defaultChecked){
                    case "children":
                    case "dangerouslySetInnerHTML":
                        throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                    default:
                        setProp(domElement, tag, defaultChecked, hasSrc, props, null);
                }
                return;
            default:
                if (isCustomElement(tag)) {
                    for(_propValue in props)props.hasOwnProperty(_propValue) && (hasSrc = props[_propValue], void 0 !== hasSrc && setPropOnCustomElement(domElement, tag, _propValue, hasSrc, props, void 0));
                    return;
                }
        }
        for(defaultValue in props)props.hasOwnProperty(defaultValue) && (hasSrc = props[defaultValue], null != hasSrc && setProp(domElement, tag, defaultValue, hasSrc, props, null));
    }
    function updateProperties(domElement, tag, lastProps, nextProps) {
        validatePropertiesInDevelopment(tag, nextProps);
        switch(tag){
            case "div":
            case "span":
            case "svg":
            case "path":
            case "a":
            case "g":
            case "p":
            case "li":
                break;
            case "input":
                var name = null, type = null, value = null, defaultValue = null, lastDefaultValue = null, checked = null, defaultChecked = null;
                for(propKey in lastProps){
                    var lastProp = lastProps[propKey];
                    if (lastProps.hasOwnProperty(propKey) && null != lastProp) switch(propKey){
                        case "checked":
                            break;
                        case "value":
                            break;
                        case "defaultValue":
                            lastDefaultValue = lastProp;
                        default:
                            nextProps.hasOwnProperty(propKey) || setProp(domElement, tag, propKey, null, nextProps, lastProp);
                    }
                }
                for(var _propKey8 in nextProps){
                    var propKey = nextProps[_propKey8];
                    lastProp = lastProps[_propKey8];
                    if (nextProps.hasOwnProperty(_propKey8) && (null != propKey || null != lastProp)) switch(_propKey8){
                        case "type":
                            type = propKey;
                            break;
                        case "name":
                            name = propKey;
                            break;
                        case "checked":
                            checked = propKey;
                            break;
                        case "defaultChecked":
                            defaultChecked = propKey;
                            break;
                        case "value":
                            value = propKey;
                            break;
                        case "defaultValue":
                            defaultValue = propKey;
                            break;
                        case "children":
                        case "dangerouslySetInnerHTML":
                            if (null != propKey) throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                            break;
                        default:
                            propKey !== lastProp && setProp(domElement, tag, _propKey8, propKey, nextProps, lastProp);
                    }
                }
                tag = "checkbox" === lastProps.type || "radio" === lastProps.type ? null != lastProps.checked : null != lastProps.value;
                nextProps = "checkbox" === nextProps.type || "radio" === nextProps.type ? null != nextProps.checked : null != nextProps.value;
                tag || !nextProps || didWarnUncontrolledToControlled || (console.error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://react.dev/link/controlled-components"), didWarnUncontrolledToControlled = !0);
                !tag || nextProps || didWarnControlledToUncontrolled || (console.error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://react.dev/link/controlled-components"), didWarnControlledToUncontrolled = !0);
                updateInput(domElement, value, defaultValue, lastDefaultValue, checked, defaultChecked, type, name);
                return;
            case "select":
                propKey = value = defaultValue = _propKey8 = null;
                for(type in lastProps)if (lastDefaultValue = lastProps[type], lastProps.hasOwnProperty(type) && null != lastDefaultValue) switch(type){
                    case "value":
                        break;
                    case "multiple":
                        propKey = lastDefaultValue;
                    default:
                        nextProps.hasOwnProperty(type) || setProp(domElement, tag, type, null, nextProps, lastDefaultValue);
                }
                for(name in nextProps)if (type = nextProps[name], lastDefaultValue = lastProps[name], nextProps.hasOwnProperty(name) && (null != type || null != lastDefaultValue)) switch(name){
                    case "value":
                        _propKey8 = type;
                        break;
                    case "defaultValue":
                        defaultValue = type;
                        break;
                    case "multiple":
                        value = type;
                    default:
                        type !== lastDefaultValue && setProp(domElement, tag, name, type, nextProps, lastDefaultValue);
                }
                nextProps = defaultValue;
                tag = value;
                lastProps = propKey;
                null != _propKey8 ? updateOptions(domElement, !!tag, _propKey8, !1) : !!lastProps !== !!tag && (null != nextProps ? updateOptions(domElement, !!tag, nextProps, !0) : updateOptions(domElement, !!tag, tag ? [] : "", !1));
                return;
            case "textarea":
                propKey = _propKey8 = null;
                for(defaultValue in lastProps)if (name = lastProps[defaultValue], lastProps.hasOwnProperty(defaultValue) && null != name && !nextProps.hasOwnProperty(defaultValue)) switch(defaultValue){
                    case "value":
                        break;
                    case "children":
                        break;
                    default:
                        setProp(domElement, tag, defaultValue, null, nextProps, name);
                }
                for(value in nextProps)if (name = nextProps[value], type = lastProps[value], nextProps.hasOwnProperty(value) && (null != name || null != type)) switch(value){
                    case "value":
                        _propKey8 = name;
                        break;
                    case "defaultValue":
                        propKey = name;
                        break;
                    case "children":
                        break;
                    case "dangerouslySetInnerHTML":
                        if (null != name) throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                        break;
                    default:
                        name !== type && setProp(domElement, tag, value, name, nextProps, type);
                }
                updateTextarea(domElement, _propKey8, propKey);
                return;
            case "option":
                for(var _propKey13 in lastProps)if (_propKey8 = lastProps[_propKey13], lastProps.hasOwnProperty(_propKey13) && null != _propKey8 && !nextProps.hasOwnProperty(_propKey13)) switch(_propKey13){
                    case "selected":
                        domElement.selected = !1;
                        break;
                    default:
                        setProp(domElement, tag, _propKey13, null, nextProps, _propKey8);
                }
                for(lastDefaultValue in nextProps)if (_propKey8 = nextProps[lastDefaultValue], propKey = lastProps[lastDefaultValue], nextProps.hasOwnProperty(lastDefaultValue) && _propKey8 !== propKey && (null != _propKey8 || null != propKey)) switch(lastDefaultValue){
                    case "selected":
                        domElement.selected = _propKey8 && "function" !== typeof _propKey8 && "symbol" !== typeof _propKey8;
                        break;
                    default:
                        setProp(domElement, tag, lastDefaultValue, _propKey8, nextProps, propKey);
                }
                return;
            case "img":
            case "link":
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "keygen":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr":
            case "menuitem":
                for(var _propKey15 in lastProps)_propKey8 = lastProps[_propKey15], lastProps.hasOwnProperty(_propKey15) && null != _propKey8 && !nextProps.hasOwnProperty(_propKey15) && setProp(domElement, tag, _propKey15, null, nextProps, _propKey8);
                for(checked in nextProps)if (_propKey8 = nextProps[checked], propKey = lastProps[checked], nextProps.hasOwnProperty(checked) && _propKey8 !== propKey && (null != _propKey8 || null != propKey)) switch(checked){
                    case "children":
                    case "dangerouslySetInnerHTML":
                        if (null != _propKey8) throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                        break;
                    default:
                        setProp(domElement, tag, checked, _propKey8, nextProps, propKey);
                }
                return;
            default:
                if (isCustomElement(tag)) {
                    for(var _propKey17 in lastProps)_propKey8 = lastProps[_propKey17], lastProps.hasOwnProperty(_propKey17) && void 0 !== _propKey8 && !nextProps.hasOwnProperty(_propKey17) && setPropOnCustomElement(domElement, tag, _propKey17, void 0, nextProps, _propKey8);
                    for(defaultChecked in nextProps)_propKey8 = nextProps[defaultChecked], propKey = lastProps[defaultChecked], !nextProps.hasOwnProperty(defaultChecked) || _propKey8 === propKey || void 0 === _propKey8 && void 0 === propKey || setPropOnCustomElement(domElement, tag, defaultChecked, _propKey8, nextProps, propKey);
                    return;
                }
        }
        for(var _propKey19 in lastProps)_propKey8 = lastProps[_propKey19], lastProps.hasOwnProperty(_propKey19) && null != _propKey8 && !nextProps.hasOwnProperty(_propKey19) && setProp(domElement, tag, _propKey19, null, nextProps, _propKey8);
        for(lastProp in nextProps)_propKey8 = nextProps[lastProp], propKey = lastProps[lastProp], !nextProps.hasOwnProperty(lastProp) || _propKey8 === propKey || null == _propKey8 && null == propKey || setProp(domElement, tag, lastProp, _propKey8, nextProps, propKey);
    }
    function getPropNameFromAttributeName(attrName) {
        switch(attrName){
            case "class":
                return "className";
            case "for":
                return "htmlFor";
            default:
                return attrName;
        }
    }
    function getStylesObjectFromElement(domElement) {
        var serverValueInObjectForm = {};
        domElement = domElement.style;
        for(var i = 0; i < domElement.length; i++){
            var styleName = domElement[i];
            serverValueInObjectForm[styleName] = domElement.getPropertyValue(styleName);
        }
        return serverValueInObjectForm;
    }
    function diffHydratedStyles(domElement, value$jscomp$0, serverDifferences) {
        if (null != value$jscomp$0 && "object" !== typeof value$jscomp$0) console.error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
        else {
            var clientValue;
            var delimiter = clientValue = "", styleName;
            for(styleName in value$jscomp$0)if (value$jscomp$0.hasOwnProperty(styleName)) {
                var value = value$jscomp$0[styleName];
                null != value && "boolean" !== typeof value && "" !== value && (0 === styleName.indexOf("--") ? (checkCSSPropertyStringCoercion(value, styleName), clientValue += delimiter + styleName + ":" + ("" + value).trim()) : "number" !== typeof value || 0 === value || unitlessNumbers.has(styleName) ? (checkCSSPropertyStringCoercion(value, styleName), clientValue += delimiter + styleName.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-") + ":" + ("" + value).trim()) : clientValue += delimiter + styleName.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-") + ":" + value + "px", delimiter = ";");
            }
            clientValue = clientValue || null;
            value$jscomp$0 = domElement.getAttribute("style");
            value$jscomp$0 !== clientValue && (clientValue = normalizeMarkupForTextOrAttribute(clientValue), normalizeMarkupForTextOrAttribute(value$jscomp$0) !== clientValue && (serverDifferences.style = getStylesObjectFromElement(domElement)));
        }
    }
    function hydrateAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) switch(typeof value){
            case "undefined":
            case "function":
            case "symbol":
            case "boolean":
                return;
        }
        else if (null != value) switch(typeof value){
            case "function":
            case "symbol":
            case "boolean":
                break;
            default:
                if (checkAttributeStringCoercion(value, propKey), domElement === "" + value) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateBooleanAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) {
            switch(typeof value){
                case "function":
                case "symbol":
                    return;
            }
            if (!value) return;
        } else switch(typeof value){
            case "function":
            case "symbol":
                break;
            default:
                if (value) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateBooleanishAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) switch(typeof value){
            case "undefined":
            case "function":
            case "symbol":
                return;
        }
        else if (null != value) switch(typeof value){
            case "function":
            case "symbol":
                break;
            default:
                if (checkAttributeStringCoercion(value, attributeName), domElement === "" + value) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateNumericAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) switch(typeof value){
            case "undefined":
            case "function":
            case "symbol":
            case "boolean":
                return;
            default:
                if (isNaN(value)) return;
        }
        else if (null != value) switch(typeof value){
            case "function":
            case "symbol":
            case "boolean":
                break;
            default:
                if (!isNaN(value) && (checkAttributeStringCoercion(value, propKey), domElement === "" + value)) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateSanitizedAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) switch(typeof value){
            case "undefined":
            case "function":
            case "symbol":
            case "boolean":
                return;
        }
        else if (null != value) switch(typeof value){
            case "function":
            case "symbol":
            case "boolean":
                break;
            default:
                if (checkAttributeStringCoercion(value, propKey), attributeName = sanitizeURL("" + value), domElement === attributeName) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function diffHydratedProperties(domElement, tag, props, hostContext) {
        for(var serverDifferences = {}, extraAttributes = new Set(), attributes = domElement.attributes, i = 0; i < attributes.length; i++)switch(attributes[i].name.toLowerCase()){
            case "value":
                break;
            case "checked":
                break;
            case "selected":
                break;
            default:
                extraAttributes.add(attributes[i].name);
        }
        if (isCustomElement(tag)) {
            for(var propKey in props)if (props.hasOwnProperty(propKey)) {
                var value = props[propKey];
                if (null != value) {
                    if (registrationNameDependencies.hasOwnProperty(propKey)) "function" !== typeof value && warnForInvalidEventListener(propKey, value);
                    else if (!0 !== props.suppressHydrationWarning) switch(propKey){
                        case "children":
                            "string" !== typeof value && "number" !== typeof value || warnForPropDifference("children", domElement.textContent, value, serverDifferences);
                            continue;
                        case "suppressContentEditableWarning":
                        case "suppressHydrationWarning":
                        case "defaultValue":
                        case "defaultChecked":
                        case "innerHTML":
                        case "ref":
                            continue;
                        case "dangerouslySetInnerHTML":
                            attributes = domElement.innerHTML;
                            value = value ? value.__html : void 0;
                            null != value && (value = normalizeHTML(domElement, value), warnForPropDifference(propKey, attributes, value, serverDifferences));
                            continue;
                        case "style":
                            extraAttributes.delete(propKey);
                            diffHydratedStyles(domElement, value, serverDifferences);
                            continue;
                        case "offsetParent":
                        case "offsetTop":
                        case "offsetLeft":
                        case "offsetWidth":
                        case "offsetHeight":
                        case "isContentEditable":
                        case "outerText":
                        case "outerHTML":
                            extraAttributes.delete(propKey.toLowerCase());
                            console.error("Assignment to read-only property will result in a no-op: `%s`", propKey);
                            continue;
                        case "className":
                            extraAttributes.delete("class");
                            attributes = getValueForAttributeOnCustomComponent(domElement, "class", value);
                            warnForPropDifference("className", attributes, value, serverDifferences);
                            continue;
                        default:
                            hostContext.context === HostContextNamespaceNone && "svg" !== tag && "math" !== tag ? extraAttributes.delete(propKey.toLowerCase()) : extraAttributes.delete(propKey), attributes = getValueForAttributeOnCustomComponent(domElement, propKey, value), warnForPropDifference(propKey, attributes, value, serverDifferences);
                    }
                }
            }
        } else for(value in props)if (props.hasOwnProperty(value) && (propKey = props[value], null != propKey)) {
            if (registrationNameDependencies.hasOwnProperty(value)) "function" !== typeof propKey && warnForInvalidEventListener(value, propKey);
            else if (!0 !== props.suppressHydrationWarning) switch(value){
                case "children":
                    "string" !== typeof propKey && "number" !== typeof propKey || warnForPropDifference("children", domElement.textContent, propKey, serverDifferences);
                    continue;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                case "value":
                case "checked":
                case "selected":
                case "defaultValue":
                case "defaultChecked":
                case "innerHTML":
                case "ref":
                    continue;
                case "dangerouslySetInnerHTML":
                    attributes = domElement.innerHTML;
                    propKey = propKey ? propKey.__html : void 0;
                    null != propKey && (propKey = normalizeHTML(domElement, propKey), attributes !== propKey && (serverDifferences[value] = {
                        __html: attributes
                    }));
                    continue;
                case "className":
                    hydrateAttribute(domElement, value, "class", propKey, extraAttributes, serverDifferences);
                    continue;
                case "tabIndex":
                    hydrateAttribute(domElement, value, "tabindex", propKey, extraAttributes, serverDifferences);
                    continue;
                case "style":
                    extraAttributes.delete(value);
                    diffHydratedStyles(domElement, propKey, serverDifferences);
                    continue;
                case "multiple":
                    extraAttributes.delete(value);
                    warnForPropDifference(value, domElement.multiple, propKey, serverDifferences);
                    continue;
                case "muted":
                    extraAttributes.delete(value);
                    warnForPropDifference(value, domElement.muted, propKey, serverDifferences);
                    continue;
                case "autoFocus":
                    extraAttributes.delete("autofocus");
                    warnForPropDifference(value, domElement.autofocus, propKey, serverDifferences);
                    continue;
                case "data":
                    if ("object" !== tag) {
                        extraAttributes.delete(value);
                        attributes = domElement.getAttribute("data");
                        warnForPropDifference(value, attributes, propKey, serverDifferences);
                        continue;
                    }
                case "src":
                case "href":
                    if (!("" !== propKey || "a" === tag && "href" === value || "object" === tag && "data" === value)) {
                        "src" === value ? console.error('An empty string ("") was passed to the %s attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to %s instead of an empty string.', value, value) : console.error('An empty string ("") was passed to the %s attribute. To fix this, either do not render the element at all or pass null to %s instead of an empty string.', value, value);
                        continue;
                    }
                    hydrateSanitizedAttribute(domElement, value, value, propKey, extraAttributes, serverDifferences);
                    continue;
                case "action":
                case "formAction":
                    attributes = domElement.getAttribute(value);
                    if ("function" === typeof propKey) {
                        extraAttributes.delete(value.toLowerCase());
                        "formAction" === value ? (extraAttributes.delete("name"), extraAttributes.delete("formenctype"), extraAttributes.delete("formmethod"), extraAttributes.delete("formtarget")) : (extraAttributes.delete("enctype"), extraAttributes.delete("method"), extraAttributes.delete("target"));
                        continue;
                    } else if (attributes === EXPECTED_FORM_ACTION_URL) {
                        extraAttributes.delete(value.toLowerCase());
                        warnForPropDifference(value, "function", propKey, serverDifferences);
                        continue;
                    }
                    hydrateSanitizedAttribute(domElement, value, value.toLowerCase(), propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkHref":
                    hydrateSanitizedAttribute(domElement, value, "xlink:href", propKey, extraAttributes, serverDifferences);
                    continue;
                case "contentEditable":
                    hydrateBooleanishAttribute(domElement, value, "contenteditable", propKey, extraAttributes, serverDifferences);
                    continue;
                case "spellCheck":
                    hydrateBooleanishAttribute(domElement, value, "spellcheck", propKey, extraAttributes, serverDifferences);
                    continue;
                case "draggable":
                case "autoReverse":
                case "externalResourcesRequired":
                case "focusable":
                case "preserveAlpha":
                    hydrateBooleanishAttribute(domElement, value, value, propKey, extraAttributes, serverDifferences);
                    continue;
                case "allowFullScreen":
                case "async":
                case "autoPlay":
                case "controls":
                case "default":
                case "defer":
                case "disabled":
                case "disablePictureInPicture":
                case "disableRemotePlayback":
                case "formNoValidate":
                case "hidden":
                case "loop":
                case "noModule":
                case "noValidate":
                case "open":
                case "playsInline":
                case "readOnly":
                case "required":
                case "reversed":
                case "scoped":
                case "seamless":
                case "itemScope":
                    hydrateBooleanAttribute(domElement, value, value.toLowerCase(), propKey, extraAttributes, serverDifferences);
                    continue;
                case "capture":
                case "download":
                    a: {
                        i = domElement;
                        var attributeName = attributes = value, serverDifferences$jscomp$0 = serverDifferences;
                        extraAttributes.delete(attributeName);
                        i = i.getAttribute(attributeName);
                        if (null === i) switch(typeof propKey){
                            case "undefined":
                            case "function":
                            case "symbol":
                                break a;
                            default:
                                if (!1 === propKey) break a;
                        }
                        else if (null != propKey) switch(typeof propKey){
                            case "function":
                            case "symbol":
                                break;
                            case "boolean":
                                if (!0 === propKey && "" === i) break a;
                                break;
                            default:
                                if (checkAttributeStringCoercion(propKey, attributes), i === "" + propKey) break a;
                        }
                        warnForPropDifference(attributes, i, propKey, serverDifferences$jscomp$0);
                    }
                    continue;
                case "cols":
                case "rows":
                case "size":
                case "span":
                    a: {
                        i = domElement;
                        attributeName = attributes = value;
                        serverDifferences$jscomp$0 = serverDifferences;
                        extraAttributes.delete(attributeName);
                        i = i.getAttribute(attributeName);
                        if (null === i) switch(typeof propKey){
                            case "undefined":
                            case "function":
                            case "symbol":
                            case "boolean":
                                break a;
                            default:
                                if (isNaN(propKey) || 1 > propKey) break a;
                        }
                        else if (null != propKey) switch(typeof propKey){
                            case "function":
                            case "symbol":
                            case "boolean":
                                break;
                            default:
                                if (!(isNaN(propKey) || 1 > propKey) && (checkAttributeStringCoercion(propKey, attributes), i === "" + propKey)) break a;
                        }
                        warnForPropDifference(attributes, i, propKey, serverDifferences$jscomp$0);
                    }
                    continue;
                case "rowSpan":
                    hydrateNumericAttribute(domElement, value, "rowspan", propKey, extraAttributes, serverDifferences);
                    continue;
                case "start":
                    hydrateNumericAttribute(domElement, value, value, propKey, extraAttributes, serverDifferences);
                    continue;
                case "xHeight":
                    hydrateAttribute(domElement, value, "x-height", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkActuate":
                    hydrateAttribute(domElement, value, "xlink:actuate", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkArcrole":
                    hydrateAttribute(domElement, value, "xlink:arcrole", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkRole":
                    hydrateAttribute(domElement, value, "xlink:role", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkShow":
                    hydrateAttribute(domElement, value, "xlink:show", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkTitle":
                    hydrateAttribute(domElement, value, "xlink:title", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkType":
                    hydrateAttribute(domElement, value, "xlink:type", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xmlBase":
                    hydrateAttribute(domElement, value, "xml:base", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xmlLang":
                    hydrateAttribute(domElement, value, "xml:lang", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xmlSpace":
                    hydrateAttribute(domElement, value, "xml:space", propKey, extraAttributes, serverDifferences);
                    continue;
                case "inert":
                    "" !== propKey || didWarnForNewBooleanPropsWithEmptyValue[value] || (didWarnForNewBooleanPropsWithEmptyValue[value] = !0, console.error("Received an empty string for a boolean attribute `%s`. This will treat the attribute as if it were false. Either pass `false` to silence this warning, or pass `true` if you used an empty string in earlier versions of React to indicate this attribute is true.", value));
                    hydrateBooleanAttribute(domElement, value, value, propKey, extraAttributes, serverDifferences);
                    continue;
                default:
                    if (!(2 < value.length) || "o" !== value[0] && "O" !== value[0] || "n" !== value[1] && "N" !== value[1]) {
                        i = getAttributeAlias(value);
                        attributes = !1;
                        hostContext.context === HostContextNamespaceNone && "svg" !== tag && "math" !== tag ? extraAttributes.delete(i.toLowerCase()) : (attributeName = value.toLowerCase(), attributeName = possibleStandardNames.hasOwnProperty(attributeName) ? possibleStandardNames[attributeName] || null : null, null !== attributeName && attributeName !== value && (attributes = !0, extraAttributes.delete(attributeName)), extraAttributes.delete(i));
                        a: if (attributeName = domElement, serverDifferences$jscomp$0 = i, i = propKey, isAttributeNameSafe(serverDifferences$jscomp$0)) {
                            if (attributeName.hasAttribute(serverDifferences$jscomp$0)) attributeName = attributeName.getAttribute(serverDifferences$jscomp$0), checkAttributeStringCoercion(i, serverDifferences$jscomp$0), i = attributeName === "" + i ? i : attributeName;
                            else {
                                switch(typeof i){
                                    case "function":
                                    case "symbol":
                                        break a;
                                    case "boolean":
                                        if (attributeName = serverDifferences$jscomp$0.toLowerCase().slice(0, 5), "data-" !== attributeName && "aria-" !== attributeName) break a;
                                }
                                i = void 0 === i ? void 0 : null;
                            }
                        } else i = void 0;
                        attributes || warnForPropDifference(value, i, propKey, serverDifferences);
                    }
            }
        }
        0 < extraAttributes.size && !0 !== props.suppressHydrationWarning && warnForExtraAttributes(domElement, extraAttributes, serverDifferences);
        return 0 === Object.keys(serverDifferences).length ? null : serverDifferences;
    }
    function propNamesListJoin(list, combinator) {
        switch(list.length){
            case 0:
                return "";
            case 1:
                return list[0];
            case 2:
                return list[0] + " " + combinator + " " + list[1];
            default:
                return list.slice(0, -1).join(", ") + ", " + combinator + " " + list[list.length - 1];
        }
    }
    function getOwnerDocumentFromRootContainer(rootContainerElement) {
        return 9 === rootContainerElement.nodeType ? rootContainerElement : rootContainerElement.ownerDocument;
    }
    function getOwnHostContext(namespaceURI) {
        switch(namespaceURI){
            case SVG_NAMESPACE:
                return HostContextNamespaceSvg;
            case MATH_NAMESPACE:
                return HostContextNamespaceMath;
            default:
                return HostContextNamespaceNone;
        }
    }
    function getChildHostContextProd(parentNamespace, type) {
        if (parentNamespace === HostContextNamespaceNone) switch(type){
            case "svg":
                return HostContextNamespaceSvg;
            case "math":
                return HostContextNamespaceMath;
            default:
                return HostContextNamespaceNone;
        }
        return parentNamespace === HostContextNamespaceSvg && "foreignObject" === type ? HostContextNamespaceNone : parentNamespace;
    }
    function shouldSetTextContent(type, props) {
        return "textarea" === type || "noscript" === type || "string" === typeof props.children || "number" === typeof props.children || "bigint" === typeof props.children || "object" === typeof props.dangerouslySetInnerHTML && null !== props.dangerouslySetInnerHTML && null != props.dangerouslySetInnerHTML.__html;
    }
    function shouldAttemptEagerTransition() {
        var event = window.event;
        if (event && "popstate" === event.type) {
            if (event === currentPopstateTransitionEvent) return !1;
            currentPopstateTransitionEvent = event;
            return !0;
        }
        currentPopstateTransitionEvent = null;
        return !1;
    }
    function handleErrorInNextTick(error) {
        setTimeout(function() {
            throw error;
        });
    }
    function commitMount(domElement, type, newProps) {
        switch(type){
            case "button":
            case "input":
            case "select":
            case "textarea":
                newProps.autoFocus && domElement.focus();
                break;
            case "img":
                newProps.src ? domElement.src = newProps.src : newProps.srcSet && (domElement.srcset = newProps.srcSet);
        }
    }
    function commitUpdate(domElement, type, oldProps, newProps) {
        updateProperties(domElement, type, oldProps, newProps);
        domElement[internalPropsKey] = newProps;
    }
    function resetTextContent(domElement) {
        setTextContent(domElement, "");
    }
    function commitTextUpdate(textInstance, oldText, newText) {
        textInstance.nodeValue = newText;
    }
    function isSingletonScope(type) {
        return "head" === type;
    }
    function removeChild(parentInstance, child) {
        parentInstance.removeChild(child);
    }
    function removeChildFromContainer(container, child) {
        (9 === container.nodeType ? container.body : "HTML" === container.nodeName ? container.ownerDocument.body : container).removeChild(child);
    }
    function clearSuspenseBoundary(parentInstance, suspenseInstance) {
        var node = suspenseInstance, possiblePreambleContribution = 0, depth = 0;
        do {
            var nextNode = node.nextSibling;
            parentInstance.removeChild(node);
            if (nextNode && 8 === nextNode.nodeType) {
                if (node = nextNode.data, node === SUSPENSE_END_DATA) {
                    if (0 < possiblePreambleContribution && 8 > possiblePreambleContribution) {
                        node = possiblePreambleContribution;
                        var ownerDocument = parentInstance.ownerDocument;
                        node & PREAMBLE_CONTRIBUTION_HTML && releaseSingletonInstance(ownerDocument.documentElement);
                        node & PREAMBLE_CONTRIBUTION_BODY && releaseSingletonInstance(ownerDocument.body);
                        if (node & PREAMBLE_CONTRIBUTION_HEAD) for(node = ownerDocument.head, releaseSingletonInstance(node), ownerDocument = node.firstChild; ownerDocument;){
                            var nextNode$jscomp$0 = ownerDocument.nextSibling, nodeName = ownerDocument.nodeName;
                            ownerDocument[internalHoistableMarker] || "SCRIPT" === nodeName || "STYLE" === nodeName || "LINK" === nodeName && "stylesheet" === ownerDocument.rel.toLowerCase() || node.removeChild(ownerDocument);
                            ownerDocument = nextNode$jscomp$0;
                        }
                    }
                    if (0 === depth) {
                        parentInstance.removeChild(nextNode);
                        retryIfBlockedOn(suspenseInstance);
                        return;
                    }
                    depth--;
                } else node === SUSPENSE_START_DATA || node === SUSPENSE_PENDING_START_DATA || node === SUSPENSE_FALLBACK_START_DATA ? depth++ : possiblePreambleContribution = node.charCodeAt(0) - 48;
            } else possiblePreambleContribution = 0;
            node = nextNode;
        }while (node);
        retryIfBlockedOn(suspenseInstance);
    }
    function hideInstance(instance) {
        instance = instance.style;
        "function" === typeof instance.setProperty ? instance.setProperty("display", "none", "important") : instance.display = "none";
    }
    function hideTextInstance(textInstance) {
        textInstance.nodeValue = "";
    }
    function unhideInstance(instance, props) {
        props = props[STYLE];
        props = void 0 !== props && null !== props && props.hasOwnProperty("display") ? props.display : null;
        instance.style.display = null == props || "boolean" === typeof props ? "" : ("" + props).trim();
    }
    function unhideTextInstance(textInstance, text) {
        textInstance.nodeValue = text;
    }
    function clearContainerSparingly(container) {
        var nextNode = container.firstChild;
        nextNode && 10 === nextNode.nodeType && (nextNode = nextNode.nextSibling);
        for(; nextNode;){
            var node = nextNode;
            nextNode = nextNode.nextSibling;
            switch(node.nodeName){
                case "HTML":
                case "HEAD":
                case "BODY":
                    clearContainerSparingly(node);
                    detachDeletedInstance(node);
                    continue;
                case "SCRIPT":
                case "STYLE":
                    continue;
                case "LINK":
                    if ("stylesheet" === node.rel.toLowerCase()) continue;
            }
            container.removeChild(node);
        }
    }
    function canHydrateInstance(instance, type, props, inRootOrSingleton) {
        for(; 1 === instance.nodeType;){
            var anyProps = props;
            if (instance.nodeName.toLowerCase() !== type.toLowerCase()) {
                if (!inRootOrSingleton && ("INPUT" !== instance.nodeName || "hidden" !== instance.type)) break;
            } else if (!inRootOrSingleton) {
                if ("input" === type && "hidden" === instance.type) {
                    checkAttributeStringCoercion(anyProps.name, "name");
                    var name = null == anyProps.name ? null : "" + anyProps.name;
                    if ("hidden" === anyProps.type && instance.getAttribute("name") === name) return instance;
                } else return instance;
            } else if (!instance[internalHoistableMarker]) switch(type){
                case "meta":
                    if (!instance.hasAttribute("itemprop")) break;
                    return instance;
                case "link":
                    name = instance.getAttribute("rel");
                    if ("stylesheet" === name && instance.hasAttribute("data-precedence")) break;
                    else if (name !== anyProps.rel || instance.getAttribute("href") !== (null == anyProps.href || "" === anyProps.href ? null : anyProps.href) || instance.getAttribute("crossorigin") !== (null == anyProps.crossOrigin ? null : anyProps.crossOrigin) || instance.getAttribute("title") !== (null == anyProps.title ? null : anyProps.title)) break;
                    return instance;
                case "style":
                    if (instance.hasAttribute("data-precedence")) break;
                    return instance;
                case "script":
                    name = instance.getAttribute("src");
                    if ((name !== (null == anyProps.src ? null : anyProps.src) || instance.getAttribute("type") !== (null == anyProps.type ? null : anyProps.type) || instance.getAttribute("crossorigin") !== (null == anyProps.crossOrigin ? null : anyProps.crossOrigin)) && name && instance.hasAttribute("async") && !instance.hasAttribute("itemprop")) break;
                    return instance;
                default:
                    return instance;
            }
            instance = getNextHydratable(instance.nextSibling);
            if (null === instance) break;
        }
        return null;
    }
    function canHydrateTextInstance(instance, text, inRootOrSingleton) {
        if ("" === text) return null;
        for(; 3 !== instance.nodeType;){
            if ((1 !== instance.nodeType || "INPUT" !== instance.nodeName || "hidden" !== instance.type) && !inRootOrSingleton) return null;
            instance = getNextHydratable(instance.nextSibling);
            if (null === instance) return null;
        }
        return instance;
    }
    function isSuspenseInstanceFallback(instance) {
        return instance.data === SUSPENSE_FALLBACK_START_DATA || instance.data === SUSPENSE_PENDING_START_DATA && instance.ownerDocument.readyState === DOCUMENT_READY_STATE_COMPLETE;
    }
    function registerSuspenseInstanceRetry(instance, callback) {
        var ownerDocument = instance.ownerDocument;
        if (instance.data !== SUSPENSE_PENDING_START_DATA || ownerDocument.readyState === DOCUMENT_READY_STATE_COMPLETE) callback();
        else {
            var listener = function() {
                callback();
                ownerDocument.removeEventListener("DOMContentLoaded", listener);
            };
            ownerDocument.addEventListener("DOMContentLoaded", listener);
            instance._reactRetry = listener;
        }
    }
    function getNextHydratable(node) {
        for(; null != node; node = node.nextSibling){
            var nodeType = node.nodeType;
            if (1 === nodeType || 3 === nodeType) break;
            if (8 === nodeType) {
                nodeType = node.data;
                if (nodeType === SUSPENSE_START_DATA || nodeType === SUSPENSE_FALLBACK_START_DATA || nodeType === SUSPENSE_PENDING_START_DATA || nodeType === FORM_STATE_IS_MATCHING || nodeType === FORM_STATE_IS_NOT_MATCHING) break;
                if (nodeType === SUSPENSE_END_DATA) return null;
            }
        }
        return node;
    }
    function describeHydratableInstanceForDevWarnings(instance) {
        if (1 === instance.nodeType) {
            for(var JSCompiler_temp_const = instance.nodeName.toLowerCase(), serverDifferences = {}, attributes = instance.attributes, i = 0; i < attributes.length; i++){
                var attr = attributes[i];
                serverDifferences[getPropNameFromAttributeName(attr.name)] = "style" === attr.name.toLowerCase() ? getStylesObjectFromElement(instance) : attr.value;
            }
            return {
                type: JSCompiler_temp_const,
                props: serverDifferences
            };
        }
        return 8 === instance.nodeType ? {
            type: "Suspense",
            props: {}
        } : instance.nodeValue;
    }
    function diffHydratedTextForDevWarnings(textInstance, text, parentProps) {
        return null === parentProps || !0 !== parentProps[SUPPRESS_HYDRATION_WARNING] ? (textInstance.nodeValue === text ? textInstance = null : (text = normalizeMarkupForTextOrAttribute(text), textInstance = normalizeMarkupForTextOrAttribute(textInstance.nodeValue) === text ? null : textInstance.nodeValue), textInstance) : null;
    }
    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
        suspenseInstance = suspenseInstance.nextSibling;
        for(var depth = 0; suspenseInstance;){
            if (8 === suspenseInstance.nodeType) {
                var data = suspenseInstance.data;
                if (data === SUSPENSE_END_DATA) {
                    if (0 === depth) return getNextHydratable(suspenseInstance.nextSibling);
                    depth--;
                } else data !== SUSPENSE_START_DATA && data !== SUSPENSE_FALLBACK_START_DATA && data !== SUSPENSE_PENDING_START_DATA || depth++;
            }
            suspenseInstance = suspenseInstance.nextSibling;
        }
        return null;
    }
    function getParentSuspenseInstance(targetInstance) {
        targetInstance = targetInstance.previousSibling;
        for(var depth = 0; targetInstance;){
            if (8 === targetInstance.nodeType) {
                var data = targetInstance.data;
                if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                    if (0 === depth) return targetInstance;
                    depth--;
                } else data === SUSPENSE_END_DATA && depth++;
            }
            targetInstance = targetInstance.previousSibling;
        }
        return null;
    }
    function commitHydratedContainer(container) {
        retryIfBlockedOn(container);
    }
    function commitHydratedSuspenseInstance(suspenseInstance) {
        retryIfBlockedOn(suspenseInstance);
    }
    function resolveSingletonInstance(type, props, rootContainerInstance, hostContext, validateDOMNestingDev) {
        validateDOMNestingDev && validateDOMNesting(type, hostContext.ancestorInfo);
        props = getOwnerDocumentFromRootContainer(rootContainerInstance);
        switch(type){
            case "html":
                type = props.documentElement;
                if (!type) throw Error("React expected an <html> element (document.documentElement) to exist in the Document but one was not found. React never removes the documentElement for any Document it renders into so the cause is likely in some other script running on this page.");
                return type;
            case "head":
                type = props.head;
                if (!type) throw Error("React expected a <head> element (document.head) to exist in the Document but one was not found. React never removes the head for any Document it renders into so the cause is likely in some other script running on this page.");
                return type;
            case "body":
                type = props.body;
                if (!type) throw Error("React expected a <body> element (document.body) to exist in the Document but one was not found. React never removes the body for any Document it renders into so the cause is likely in some other script running on this page.");
                return type;
            default:
                throw Error("resolveSingletonInstance was called with an element type that is not supported. This is a bug in React.");
        }
    }
    function acquireSingletonInstance(type, props, instance, internalInstanceHandle) {
        if (!instance[internalContainerInstanceKey] && getInstanceFromNode(instance)) {
            var tagName = instance.tagName.toLowerCase();
            console.error("You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first.", tagName, tagName, tagName);
        }
        switch(type){
            case "html":
            case "head":
            case "body":
                break;
            default:
                console.error("acquireSingletonInstance was called with an element type that is not supported. This is a bug in React.");
        }
        for(tagName = instance.attributes; tagName.length;)instance.removeAttributeNode(tagName[0]);
        setInitialProperties(instance, type, props);
        instance[internalInstanceKey] = internalInstanceHandle;
        instance[internalPropsKey] = props;
    }
    function releaseSingletonInstance(instance) {
        for(var attributes = instance.attributes; attributes.length;)instance.removeAttributeNode(attributes[0]);
        detachDeletedInstance(instance);
    }
    function getHoistableRoot(container) {
        return "function" === typeof container.getRootNode ? container.getRootNode() : 9 === container.nodeType ? container : container.ownerDocument;
    }
    function preconnectAs(rel, href, crossOrigin) {
        var ownerDocument = globalDocument;
        if (ownerDocument && "string" === typeof href && href) {
            var limitedEscapedHref = escapeSelectorAttributeValueInsideDoubleQuotes(href);
            limitedEscapedHref = 'link[rel="' + rel + '"][href="' + limitedEscapedHref + '"]';
            "string" === typeof crossOrigin && (limitedEscapedHref += '[crossorigin="' + crossOrigin + '"]');
            preconnectsSet.has(limitedEscapedHref) || (preconnectsSet.add(limitedEscapedHref), rel = {
                rel: rel,
                crossOrigin: crossOrigin,
                href: href
            }, null === ownerDocument.querySelector(limitedEscapedHref) && (href = ownerDocument.createElement("link"), setInitialProperties(href, "link", rel), markNodeAsHoistable(href), ownerDocument.head.appendChild(href)));
        }
    }
    function getResource(type, currentProps, pendingProps, currentResource) {
        var resourceRoot = (resourceRoot = rootInstanceStackCursor.current) ? getHoistableRoot(resourceRoot) : null;
        if (!resourceRoot) throw Error('"resourceRoot" was expected to exist. This is a bug in React.');
        switch(type){
            case "meta":
            case "title":
                return null;
            case "style":
                return "string" === typeof pendingProps.precedence && "string" === typeof pendingProps.href ? (pendingProps = getStyleKey(pendingProps.href), currentProps = getResourcesFromRoot(resourceRoot).hoistableStyles, currentResource = currentProps.get(pendingProps), currentResource || (currentResource = {
                    type: "style",
                    instance: null,
                    count: 0,
                    state: null
                }, currentProps.set(pendingProps, currentResource)), currentResource) : {
                    type: "void",
                    instance: null,
                    count: 0,
                    state: null
                };
            case "link":
                if ("stylesheet" === pendingProps.rel && "string" === typeof pendingProps.href && "string" === typeof pendingProps.precedence) {
                    type = getStyleKey(pendingProps.href);
                    var _styles = getResourcesFromRoot(resourceRoot).hoistableStyles, _resource = _styles.get(type);
                    if (!_resource && (resourceRoot = resourceRoot.ownerDocument || resourceRoot, _resource = {
                        type: "stylesheet",
                        instance: null,
                        count: 0,
                        state: {
                            loading: NotLoaded,
                            preload: null
                        }
                    }, _styles.set(type, _resource), (_styles = resourceRoot.querySelector(getStylesheetSelectorFromKey(type))) && !_styles._p && (_resource.instance = _styles, _resource.state.loading = Loaded | Inserted), !preloadPropsMap.has(type))) {
                        var preloadProps = {
                            rel: "preload",
                            as: "style",
                            href: pendingProps.href,
                            crossOrigin: pendingProps.crossOrigin,
                            integrity: pendingProps.integrity,
                            media: pendingProps.media,
                            hrefLang: pendingProps.hrefLang,
                            referrerPolicy: pendingProps.referrerPolicy
                        };
                        preloadPropsMap.set(type, preloadProps);
                        _styles || preloadStylesheet(resourceRoot, type, preloadProps, _resource.state);
                    }
                    if (currentProps && null === currentResource) throw pendingProps = "\n\n  - " + describeLinkForResourceErrorDEV(currentProps) + "\n  + " + describeLinkForResourceErrorDEV(pendingProps), Error("Expected <link> not to update to be updated to a stylesheet with precedence. Check the `rel`, `href`, and `precedence` props of this component. Alternatively, check whether two different <link> components render in the same slot or share the same key." + pendingProps);
                    return _resource;
                }
                if (currentProps && null !== currentResource) throw pendingProps = "\n\n  - " + describeLinkForResourceErrorDEV(currentProps) + "\n  + " + describeLinkForResourceErrorDEV(pendingProps), Error("Expected stylesheet with precedence to not be updated to a different kind of <link>. Check the `rel`, `href`, and `precedence` props of this component. Alternatively, check whether two different <link> components render in the same slot or share the same key." + pendingProps);
                return null;
            case "script":
                return currentProps = pendingProps.async, pendingProps = pendingProps.src, "string" === typeof pendingProps && currentProps && "function" !== typeof currentProps && "symbol" !== typeof currentProps ? (pendingProps = getScriptKey(pendingProps), currentProps = getResourcesFromRoot(resourceRoot).hoistableScripts, currentResource = currentProps.get(pendingProps), currentResource || (currentResource = {
                    type: "script",
                    instance: null,
                    count: 0,
                    state: null
                }, currentProps.set(pendingProps, currentResource)), currentResource) : {
                    type: "void",
                    instance: null,
                    count: 0,
                    state: null
                };
            default:
                throw Error('getResource encountered a type it did not expect: "' + type + '". this is a bug in React.');
        }
    }
    function describeLinkForResourceErrorDEV(props) {
        var describedProps = 0, description = "<link";
        "string" === typeof props.rel ? (describedProps++, description += ' rel="' + props.rel + '"') : hasOwnProperty.call(props, "rel") && (describedProps++, description += ' rel="' + (null === props.rel ? "null" : "invalid type " + typeof props.rel) + '"');
        "string" === typeof props.href ? (describedProps++, description += ' href="' + props.href + '"') : hasOwnProperty.call(props, "href") && (describedProps++, description += ' href="' + (null === props.href ? "null" : "invalid type " + typeof props.href) + '"');
        "string" === typeof props.precedence ? (describedProps++, description += ' precedence="' + props.precedence + '"') : hasOwnProperty.call(props, "precedence") && (describedProps++, description += " precedence={" + (null === props.precedence ? "null" : "invalid type " + typeof props.precedence) + "}");
        Object.getOwnPropertyNames(props).length > describedProps && (description += " ...");
        return description + " />";
    }
    function getStyleKey(href) {
        return 'href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"';
    }
    function getStylesheetSelectorFromKey(key) {
        return 'link[rel="stylesheet"][' + key + "]";
    }
    function stylesheetPropsFromRawProps(rawProps) {
        return assign({}, rawProps, {
            "data-precedence": rawProps.precedence,
            precedence: null
        });
    }
    function preloadStylesheet(ownerDocument, key, preloadProps, state) {
        ownerDocument.querySelector('link[rel="preload"][as="style"][' + key + "]") ? state.loading = Loaded : (key = ownerDocument.createElement("link"), state.preload = key, key.addEventListener("load", function() {
            return state.loading |= Loaded;
        }), key.addEventListener("error", function() {
            return state.loading |= Errored;
        }), setInitialProperties(key, "link", preloadProps), markNodeAsHoistable(key), ownerDocument.head.appendChild(key));
    }
    function getScriptKey(src) {
        return '[src="' + escapeSelectorAttributeValueInsideDoubleQuotes(src) + '"]';
    }
    function getScriptSelectorFromKey(key) {
        return "script[async]" + key;
    }
    function acquireResource(hoistableRoot, resource, props) {
        resource.count++;
        if (null === resource.instance) switch(resource.type){
            case "style":
                var instance = hoistableRoot.querySelector('style[data-href~="' + escapeSelectorAttributeValueInsideDoubleQuotes(props.href) + '"]');
                if (instance) return resource.instance = instance, markNodeAsHoistable(instance), instance;
                var styleProps = assign({}, props, {
                    "data-href": props.href,
                    "data-precedence": props.precedence,
                    href: null,
                    precedence: null
                });
                instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement("style");
                markNodeAsHoistable(instance);
                setInitialProperties(instance, "style", styleProps);
                insertStylesheet(instance, props.precedence, hoistableRoot);
                return resource.instance = instance;
            case "stylesheet":
                styleProps = getStyleKey(props.href);
                var _instance = hoistableRoot.querySelector(getStylesheetSelectorFromKey(styleProps));
                if (_instance) return resource.state.loading |= Inserted, resource.instance = _instance, markNodeAsHoistable(_instance), _instance;
                instance = stylesheetPropsFromRawProps(props);
                (styleProps = preloadPropsMap.get(styleProps)) && adoptPreloadPropsForStylesheet(instance, styleProps);
                _instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement("link");
                markNodeAsHoistable(_instance);
                var linkInstance = _instance;
                linkInstance._p = new Promise(function(resolve, reject) {
                    linkInstance.onload = resolve;
                    linkInstance.onerror = reject;
                });
                setInitialProperties(_instance, "link", instance);
                resource.state.loading |= Inserted;
                insertStylesheet(_instance, props.precedence, hoistableRoot);
                return resource.instance = _instance;
            case "script":
                _instance = getScriptKey(props.src);
                if (styleProps = hoistableRoot.querySelector(getScriptSelectorFromKey(_instance))) return resource.instance = styleProps, markNodeAsHoistable(styleProps), styleProps;
                instance = props;
                if (styleProps = preloadPropsMap.get(_instance)) instance = assign({}, props), adoptPreloadPropsForScript(instance, styleProps);
                hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
                styleProps = hoistableRoot.createElement("script");
                markNodeAsHoistable(styleProps);
                setInitialProperties(styleProps, "link", instance);
                hoistableRoot.head.appendChild(styleProps);
                return resource.instance = styleProps;
            case "void":
                return null;
            default:
                throw Error('acquireResource encountered a resource type it did not expect: "' + resource.type + '". this is a bug in React.');
        }
        else "stylesheet" === resource.type && (resource.state.loading & Inserted) === NotLoaded && (instance = resource.instance, resource.state.loading |= Inserted, insertStylesheet(instance, props.precedence, hoistableRoot));
        return resource.instance;
    }
    function insertStylesheet(instance, precedence, root) {
        for(var nodes = root.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'), last = nodes.length ? nodes[nodes.length - 1] : null, prior = last, i = 0; i < nodes.length; i++){
            var node = nodes[i];
            if (node.dataset.precedence === precedence) prior = node;
            else if (prior !== last) break;
        }
        prior ? prior.parentNode.insertBefore(instance, prior.nextSibling) : (precedence = 9 === root.nodeType ? root.head : root, precedence.insertBefore(instance, precedence.firstChild));
    }
    function adoptPreloadPropsForStylesheet(stylesheetProps, preloadProps) {
        null == stylesheetProps.crossOrigin && (stylesheetProps.crossOrigin = preloadProps.crossOrigin);
        null == stylesheetProps.referrerPolicy && (stylesheetProps.referrerPolicy = preloadProps.referrerPolicy);
        null == stylesheetProps.title && (stylesheetProps.title = preloadProps.title);
    }
    function adoptPreloadPropsForScript(scriptProps, preloadProps) {
        null == scriptProps.crossOrigin && (scriptProps.crossOrigin = preloadProps.crossOrigin);
        null == scriptProps.referrerPolicy && (scriptProps.referrerPolicy = preloadProps.referrerPolicy);
        null == scriptProps.integrity && (scriptProps.integrity = preloadProps.integrity);
    }
    function getHydratableHoistableCache(type, keyAttribute, ownerDocument) {
        if (null === tagCaches) {
            var cache = new Map();
            var caches = tagCaches = new Map();
            caches.set(ownerDocument, cache);
        } else caches = tagCaches, cache = caches.get(ownerDocument), cache || (cache = new Map(), caches.set(ownerDocument, cache));
        if (cache.has(type)) return cache;
        cache.set(type, null);
        ownerDocument = ownerDocument.getElementsByTagName(type);
        for(caches = 0; caches < ownerDocument.length; caches++){
            var node = ownerDocument[caches];
            if (!(node[internalHoistableMarker] || node[internalInstanceKey] || "link" === type && "stylesheet" === node.getAttribute("rel")) && node.namespaceURI !== SVG_NAMESPACE) {
                var nodeKey = node.getAttribute(keyAttribute) || "";
                nodeKey = type + nodeKey;
                var existing = cache.get(nodeKey);
                existing ? existing.push(node) : cache.set(nodeKey, [
                    node
                ]);
            }
        }
        return cache;
    }
    function mountHoistable(hoistableRoot, type, instance) {
        hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
        hoistableRoot.head.insertBefore(instance, "title" === type ? hoistableRoot.querySelector("head > title") : null);
    }
    function isHostHoistableType(type, props, hostContext) {
        var outsideHostContainerContext = !hostContext.ancestorInfo.containerTagInScope;
        if (hostContext.context === HostContextNamespaceSvg || null != props.itemProp) return !outsideHostContainerContext || null == props.itemProp || "meta" !== type && "title" !== type && "style" !== type && "link" !== type && "script" !== type || console.error("Cannot render a <%s> outside the main document if it has an `itemProp` prop. `itemProp` suggests the tag belongs to an `itemScope` which can appear anywhere in the DOM. If you were intending for React to hoist this <%s> remove the `itemProp` prop. Otherwise, try moving this tag into the <head> or <body> of the Document.", type, type), !1;
        switch(type){
            case "meta":
            case "title":
                return !0;
            case "style":
                if ("string" !== typeof props.precedence || "string" !== typeof props.href || "" === props.href) {
                    outsideHostContainerContext && console.error('Cannot render a <style> outside the main document without knowing its precedence and a unique href key. React can hoist and deduplicate <style> tags if you provide a `precedence` prop along with an `href` prop that does not conflict with the `href` values used in any other hoisted <style> or <link rel="stylesheet" ...> tags.  Note that hoisting <style> tags is considered an advanced feature that most will not use directly. Consider moving the <style> tag to the <head> or consider adding a `precedence="default"` and `href="some unique resource identifier"`.');
                    break;
                }
                return !0;
            case "link":
                if ("string" !== typeof props.rel || "string" !== typeof props.href || "" === props.href || props.onLoad || props.onError) {
                    if ("stylesheet" === props.rel && "string" === typeof props.precedence) {
                        type = props.href;
                        var onError = props.onError, disabled = props.disabled;
                        hostContext = [];
                        props.onLoad && hostContext.push("`onLoad`");
                        onError && hostContext.push("`onError`");
                        null != disabled && hostContext.push("`disabled`");
                        onError = propNamesListJoin(hostContext, "and");
                        onError += 1 === hostContext.length ? " prop" : " props";
                        disabled = 1 === hostContext.length ? "an " + onError : "the " + onError;
                        hostContext.length && console.error('React encountered a <link rel="stylesheet" href="%s" ... /> with a `precedence` prop that also included %s. The presence of loading and error handlers indicates an intent to manage the stylesheet loading state from your from your Component code and React will not hoist or deduplicate this stylesheet. If your intent was to have React hoist and deduplciate this stylesheet using the `precedence` prop remove the %s, otherwise remove the `precedence` prop.', type, disabled, onError);
                    }
                    outsideHostContainerContext && ("string" !== typeof props.rel || "string" !== typeof props.href || "" === props.href ? console.error("Cannot render a <link> outside the main document without a `rel` and `href` prop. Try adding a `rel` and/or `href` prop to this <link> or moving the link into the <head> tag") : (props.onError || props.onLoad) && console.error("Cannot render a <link> with onLoad or onError listeners outside the main document. Try removing onLoad={...} and onError={...} or moving it into the root <head> tag or somewhere in the <body>."));
                    break;
                }
                switch(props.rel){
                    case "stylesheet":
                        return type = props.precedence, props = props.disabled, "string" !== typeof type && outsideHostContainerContext && console.error('Cannot render a <link rel="stylesheet" /> outside the main document without knowing its precedence. Consider adding precedence="default" or moving it into the root <head> tag.'), "string" === typeof type && null == props;
                    default:
                        return !0;
                }
            case "script":
                type = props.async && "function" !== typeof props.async && "symbol" !== typeof props.async;
                if (!type || props.onLoad || props.onError || !props.src || "string" !== typeof props.src) {
                    outsideHostContainerContext && (type ? props.onLoad || props.onError ? console.error("Cannot render a <script> with onLoad or onError listeners outside the main document. Try removing onLoad={...} and onError={...} or moving it into the root <head> tag or somewhere in the <body>.") : console.error("Cannot render a <script> outside the main document without `async={true}` and a non-empty `src` prop. Ensure there is a valid `src` and either make the script async or move it into the root <head> tag or somewhere in the <body>.") : console.error('Cannot render a sync or defer <script> outside the main document without knowing its order. Try adding async="" or moving it into the root <head> tag.'));
                    break;
                }
                return !0;
            case "noscript":
            case "template":
                outsideHostContainerContext && console.error("Cannot render <%s> outside the main document. Try moving it into the root <head> tag.", type);
        }
        return !1;
    }
    function preloadResource(resource) {
        return "stylesheet" === resource.type && (resource.state.loading & Settled) === NotLoaded ? !1 : !0;
    }
    function noop() {}
    function suspendResource(hoistableRoot, resource, props) {
        if (null === suspendedState) throw Error("Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug.");
        var state = suspendedState;
        if ("stylesheet" === resource.type && ("string" !== typeof props.media || !1 !== matchMedia(props.media).matches) && (resource.state.loading & Inserted) === NotLoaded) {
            if (null === resource.instance) {
                var key = getStyleKey(props.href), instance = hoistableRoot.querySelector(getStylesheetSelectorFromKey(key));
                if (instance) {
                    hoistableRoot = instance._p;
                    null !== hoistableRoot && "object" === typeof hoistableRoot && "function" === typeof hoistableRoot.then && (state.count++, state = onUnsuspend.bind(state), hoistableRoot.then(state, state));
                    resource.state.loading |= Inserted;
                    resource.instance = instance;
                    markNodeAsHoistable(instance);
                    return;
                }
                instance = hoistableRoot.ownerDocument || hoistableRoot;
                props = stylesheetPropsFromRawProps(props);
                (key = preloadPropsMap.get(key)) && adoptPreloadPropsForStylesheet(props, key);
                instance = instance.createElement("link");
                markNodeAsHoistable(instance);
                var linkInstance = instance;
                linkInstance._p = new Promise(function(resolve, reject) {
                    linkInstance.onload = resolve;
                    linkInstance.onerror = reject;
                });
                setInitialProperties(instance, "link", props);
                resource.instance = instance;
            }
            null === state.stylesheets && (state.stylesheets = new Map());
            state.stylesheets.set(resource, hoistableRoot);
            (hoistableRoot = resource.state.preload) && (resource.state.loading & Settled) === NotLoaded && (state.count++, resource = onUnsuspend.bind(state), hoistableRoot.addEventListener("load", resource), hoistableRoot.addEventListener("error", resource));
        }
    }
    function waitForCommitToBeReady() {
        if (null === suspendedState) throw Error("Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug.");
        var state = suspendedState;
        state.stylesheets && 0 === state.count && insertSuspendedStylesheets(state, state.stylesheets);
        return 0 < state.count ? function(commit) {
            var stylesheetTimer = setTimeout(function() {
                state.stylesheets && insertSuspendedStylesheets(state, state.stylesheets);
                if (state.unsuspend) {
                    var unsuspend = state.unsuspend;
                    state.unsuspend = null;
                    unsuspend();
                }
            }, 6e4);
            state.unsuspend = commit;
            return function() {
                state.unsuspend = null;
                clearTimeout(stylesheetTimer);
            };
        } : null;
    }
    function onUnsuspend() {
        this.count--;
        if (0 === this.count) {
            if (this.stylesheets) insertSuspendedStylesheets(this, this.stylesheets);
            else if (this.unsuspend) {
                var unsuspend = this.unsuspend;
                this.unsuspend = null;
                unsuspend();
            }
        }
    }
    function insertSuspendedStylesheets(state, resources) {
        state.stylesheets = null;
        null !== state.unsuspend && (state.count++, precedencesByRoot = new Map(), resources.forEach(insertStylesheetIntoRoot, state), precedencesByRoot = null, onUnsuspend.call(state));
    }
    function insertStylesheetIntoRoot(root, resource) {
        if (!(resource.state.loading & Inserted)) {
            var precedences = precedencesByRoot.get(root);
            if (precedences) var last = precedences.get(LAST_PRECEDENCE);
            else {
                precedences = new Map();
                precedencesByRoot.set(root, precedences);
                for(var nodes = root.querySelectorAll("link[data-precedence],style[data-precedence]"), i = 0; i < nodes.length; i++){
                    var node = nodes[i];
                    if ("LINK" === node.nodeName || "not all" !== node.getAttribute("media")) precedences.set(node.dataset.precedence, node), last = node;
                }
                last && precedences.set(LAST_PRECEDENCE, last);
            }
            nodes = resource.instance;
            node = nodes.getAttribute("data-precedence");
            i = precedences.get(node) || last;
            i === last && precedences.set(LAST_PRECEDENCE, nodes);
            precedences.set(node, nodes);
            this.count++;
            last = onUnsuspend.bind(this);
            nodes.addEventListener("load", last);
            nodes.addEventListener("error", last);
            i ? i.parentNode.insertBefore(nodes, i.nextSibling) : (root = 9 === root.nodeType ? root.head : root, root.insertBefore(nodes, root.firstChild));
            resource.state.loading |= Inserted;
        }
    }
    function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, formState) {
        this.tag = 1;
        this.containerInfo = containerInfo;
        this.pingCache = this.current = this.pendingChildren = null;
        this.timeoutHandle = noTimeout;
        this.callbackNode = this.next = this.pendingContext = this.context = this.cancelPendingCommit = null;
        this.callbackPriority = 0;
        this.expirationTimes = createLaneMap(-1);
        this.entangledLanes = this.shellSuspendCounter = this.errorRecoveryDisabledLanes = this.expiredLanes = this.warmLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
        this.entanglements = createLaneMap(0);
        this.hiddenUpdates = createLaneMap(null);
        this.identifierPrefix = identifierPrefix;
        this.onUncaughtError = onUncaughtError;
        this.onCaughtError = onCaughtError;
        this.onRecoverableError = onRecoverableError;
        this.pooledCache = null;
        this.pooledCacheLanes = 0;
        this.formState = formState;
        this.incompleteTransitions = new Map();
        this.passiveEffectDuration = this.effectDuration = -0;
        this.memoizedUpdaters = new Set();
        containerInfo = this.pendingUpdatersLaneMap = [];
        for(tag = 0; 31 > tag; tag++)containerInfo.push(new Set());
        this._debugRootType = hydrate ? "hydrateRoot()" : "createRoot()";
    }
    function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, transitionCallbacks, formState) {
        containerInfo = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, formState);
        tag = ConcurrentMode;
        !0 === isStrictMode && (tag |= StrictLegacyMode | StrictEffectsMode);
        isDevToolsPresent && (tag |= ProfileMode);
        isStrictMode = createFiber(3, null, null, tag);
        containerInfo.current = isStrictMode;
        isStrictMode.stateNode = containerInfo;
        tag = createCache();
        retainCache(tag);
        containerInfo.pooledCache = tag;
        retainCache(tag);
        isStrictMode.memoizedState = {
            element: initialChildren,
            isDehydrated: hydrate,
            cache: tag
        };
        initializeUpdateQueue(isStrictMode);
        return containerInfo;
    }
    function getContextForSubtree(parentComponent) {
        if (!parentComponent) return emptyContextObject;
        parentComponent = emptyContextObject;
        return parentComponent;
    }
    function updateContainerImpl(rootFiber, lane, element, container, parentComponent, callback) {
        if (injectedHook && "function" === typeof injectedHook.onScheduleFiberRoot) try {
            injectedHook.onScheduleFiberRoot(rendererID, container, element);
        } catch (err) {
            hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
        }
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markRenderScheduled && injectedProfilingHooks.markRenderScheduled(lane);
        parentComponent = getContextForSubtree(parentComponent);
        null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
        isRendering && null !== current && !didWarnAboutNestedUpdates && (didWarnAboutNestedUpdates = !0, console.error("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentNameFromFiber(current) || "Unknown"));
        container = createUpdate(lane);
        container.payload = {
            element: element
        };
        callback = void 0 === callback ? null : callback;
        null !== callback && ("function" !== typeof callback && console.error("Expected the last optional `callback` argument to be a function. Instead received: %s.", callback), container.callback = callback);
        element = enqueueUpdate(rootFiber, container, lane);
        null !== element && (scheduleUpdateOnFiber(element, rootFiber, lane), entangleTransitions(element, rootFiber, lane));
    }
    function markRetryLaneImpl(fiber, retryLane) {
        fiber = fiber.memoizedState;
        if (null !== fiber && null !== fiber.dehydrated) {
            var a = fiber.retryLane;
            fiber.retryLane = 0 !== a && a < retryLane ? a : retryLane;
        }
    }
    function markRetryLaneIfNotHydrated(fiber, retryLane) {
        markRetryLaneImpl(fiber, retryLane);
        (fiber = fiber.alternate) && markRetryLaneImpl(fiber, retryLane);
    }
    function attemptContinuousHydration(fiber) {
        if (13 === fiber.tag) {
            var root = enqueueConcurrentRenderForLane(fiber, 67108864);
            null !== root && scheduleUpdateOnFiber(root, fiber, 67108864);
            markRetryLaneIfNotHydrated(fiber, 67108864);
        }
    }
    function getCurrentFiberForDevTools() {
        return current;
    }
    function getLaneLabelMap() {
        for(var map = new Map(), lane = 1, index = 0; 31 > index; index++){
            var label = getLabelForLane(lane);
            map.set(lane, label);
            lane *= 2;
        }
        return map;
    }
    function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var prevTransition = ReactSharedInternals.T;
        ReactSharedInternals.T = null;
        var previousPriority = ReactDOMSharedInternals.p;
        try {
            ReactDOMSharedInternals.p = DiscreteEventPriority, dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = prevTransition;
        }
    }
    function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var prevTransition = ReactSharedInternals.T;
        ReactSharedInternals.T = null;
        var previousPriority = ReactDOMSharedInternals.p;
        try {
            ReactDOMSharedInternals.p = ContinuousEventPriority, dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = prevTransition;
        }
    }
    function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (_enabled) {
            var blockedOn = findInstanceBlockingEvent(nativeEvent);
            if (null === blockedOn) dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer), clearIfContinuousEvent(domEventName, nativeEvent);
            else if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) nativeEvent.stopPropagation();
            else if (clearIfContinuousEvent(domEventName, nativeEvent), eventSystemFlags & 4 && -1 < discreteReplayableEvents.indexOf(domEventName)) {
                for(; null !== blockedOn;){
                    var fiber = getInstanceFromNode(blockedOn);
                    if (null !== fiber) switch(fiber.tag){
                        case 3:
                            fiber = fiber.stateNode;
                            if (fiber.current.memoizedState.isDehydrated) {
                                var lanes = getHighestPriorityLanes(fiber.pendingLanes);
                                if (0 !== lanes) {
                                    var root = fiber;
                                    root.pendingLanes |= 2;
                                    for(root.entangledLanes |= 2; lanes;){
                                        var lane = 1 << 31 - clz32(lanes);
                                        root.entanglements[1] |= lane;
                                        lanes &= ~lane;
                                    }
                                    ensureRootIsScheduled(fiber);
                                    (executionContext & (RenderContext | CommitContext)) === NoContext && (workInProgressRootRenderTargetTime = now$1() + RENDER_TIMEOUT_MS, flushSyncWorkAcrossRoots_impl(0, !1));
                                }
                            }
                            break;
                        case 13:
                            root = enqueueConcurrentRenderForLane(fiber, 2), null !== root && scheduleUpdateOnFiber(root, fiber, 2), flushSyncWork$1(), markRetryLaneIfNotHydrated(fiber, 2);
                    }
                    fiber = findInstanceBlockingEvent(nativeEvent);
                    null === fiber && dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
                    if (fiber === blockedOn) break;
                    blockedOn = fiber;
                }
                null !== blockedOn && nativeEvent.stopPropagation();
            } else dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
        }
    }
    function findInstanceBlockingEvent(nativeEvent) {
        nativeEvent = getEventTarget(nativeEvent);
        return findInstanceBlockingTarget(nativeEvent);
    }
    function findInstanceBlockingTarget(targetNode) {
        return_targetInst = null;
        targetNode = getClosestInstanceFromNode(targetNode);
        if (null !== targetNode) {
            var nearestMounted = getNearestMountedFiber(targetNode);
            if (null === nearestMounted) targetNode = null;
            else {
                var tag = nearestMounted.tag;
                if (13 === tag) {
                    targetNode = getSuspenseInstanceFromFiber(nearestMounted);
                    if (null !== targetNode) return targetNode;
                    targetNode = null;
                } else if (3 === tag) {
                    if (nearestMounted.stateNode.current.memoizedState.isDehydrated) return 3 === nearestMounted.tag ? nearestMounted.stateNode.containerInfo : null;
                    targetNode = null;
                } else nearestMounted !== targetNode && (targetNode = null);
            }
        }
        return_targetInst = targetNode;
        return null;
    }
    function getEventPriority(domEventName) {
        switch(domEventName){
            case "beforetoggle":
            case "cancel":
            case "click":
            case "close":
            case "contextmenu":
            case "copy":
            case "cut":
            case "auxclick":
            case "dblclick":
            case "dragend":
            case "dragstart":
            case "drop":
            case "focusin":
            case "focusout":
            case "input":
            case "invalid":
            case "keydown":
            case "keypress":
            case "keyup":
            case "mousedown":
            case "mouseup":
            case "paste":
            case "pause":
            case "play":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
            case "ratechange":
            case "reset":
            case "resize":
            case "seeked":
            case "submit":
            case "toggle":
            case "touchcancel":
            case "touchend":
            case "touchstart":
            case "volumechange":
            case "change":
            case "selectionchange":
            case "textInput":
            case "compositionstart":
            case "compositionend":
            case "compositionupdate":
            case "beforeblur":
            case "afterblur":
            case "beforeinput":
            case "blur":
            case "fullscreenchange":
            case "focus":
            case "hashchange":
            case "popstate":
            case "select":
            case "selectstart":
                return DiscreteEventPriority;
            case "drag":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "mousemove":
            case "mouseout":
            case "mouseover":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "scroll":
            case "touchmove":
            case "wheel":
            case "mouseenter":
            case "mouseleave":
            case "pointerenter":
            case "pointerleave":
                return ContinuousEventPriority;
            case "message":
                switch(getCurrentPriorityLevel()){
                    case ImmediatePriority:
                        return DiscreteEventPriority;
                    case UserBlockingPriority:
                        return ContinuousEventPriority;
                    case NormalPriority$1:
                    case LowPriority:
                        return DefaultEventPriority;
                    case IdlePriority:
                        return IdleEventPriority;
                    default:
                        return DefaultEventPriority;
                }
            default:
                return DefaultEventPriority;
        }
    }
    function clearIfContinuousEvent(domEventName, nativeEvent) {
        switch(domEventName){
            case "focusin":
            case "focusout":
                queuedFocus = null;
                break;
            case "dragenter":
            case "dragleave":
                queuedDrag = null;
                break;
            case "mouseover":
            case "mouseout":
                queuedMouse = null;
                break;
            case "pointerover":
            case "pointerout":
                queuedPointers.delete(nativeEvent.pointerId);
                break;
            case "gotpointercapture":
            case "lostpointercapture":
                queuedPointerCaptures.delete(nativeEvent.pointerId);
        }
    }
    function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (null === existingQueuedEvent || existingQueuedEvent.nativeEvent !== nativeEvent) return existingQueuedEvent = {
            blockedOn: blockedOn,
            domEventName: domEventName,
            eventSystemFlags: eventSystemFlags,
            nativeEvent: nativeEvent,
            targetContainers: [
                targetContainer
            ]
        }, null !== blockedOn && (blockedOn = getInstanceFromNode(blockedOn), null !== blockedOn && attemptContinuousHydration(blockedOn)), existingQueuedEvent;
        existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
        blockedOn = existingQueuedEvent.targetContainers;
        null !== targetContainer && -1 === blockedOn.indexOf(targetContainer) && blockedOn.push(targetContainer);
        return existingQueuedEvent;
    }
    function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        switch(domEventName){
            case "focusin":
                return queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent), !0;
            case "dragenter":
                return queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent), !0;
            case "mouseover":
                return queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent), !0;
            case "pointerover":
                var pointerId = nativeEvent.pointerId;
                queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent));
                return !0;
            case "gotpointercapture":
                return pointerId = nativeEvent.pointerId, queuedPointerCaptures.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)), !0;
        }
        return !1;
    }
    function attemptExplicitHydrationTarget(queuedTarget) {
        var targetInst = getClosestInstanceFromNode(queuedTarget.target);
        if (null !== targetInst) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (null !== nearestMounted) {
                if (targetInst = nearestMounted.tag, 13 === targetInst) {
                    if (targetInst = getSuspenseInstanceFromFiber(nearestMounted), null !== targetInst) {
                        queuedTarget.blockedOn = targetInst;
                        runWithPriority(queuedTarget.priority, function() {
                            if (13 === nearestMounted.tag) {
                                var lane = requestUpdateLane(nearestMounted);
                                lane = getBumpedLaneForHydrationByLane(lane);
                                var root = enqueueConcurrentRenderForLane(nearestMounted, lane);
                                null !== root && scheduleUpdateOnFiber(root, nearestMounted, lane);
                                markRetryLaneIfNotHydrated(nearestMounted, lane);
                            }
                        });
                        return;
                    }
                } else if (3 === targetInst && nearestMounted.stateNode.current.memoizedState.isDehydrated) {
                    queuedTarget.blockedOn = 3 === nearestMounted.tag ? nearestMounted.stateNode.containerInfo : null;
                    return;
                }
            }
        }
        queuedTarget.blockedOn = null;
    }
    function attemptReplayContinuousQueuedEvent(queuedEvent) {
        if (null !== queuedEvent.blockedOn) return !1;
        for(var targetContainers = queuedEvent.targetContainers; 0 < targetContainers.length;){
            var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.nativeEvent);
            if (null === nextBlockedOn) {
                nextBlockedOn = queuedEvent.nativeEvent;
                var nativeEventClone = new nextBlockedOn.constructor(nextBlockedOn.type, nextBlockedOn), event = nativeEventClone;
                null !== currentReplayingEvent && console.error("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.");
                currentReplayingEvent = event;
                nextBlockedOn.target.dispatchEvent(nativeEventClone);
                null === currentReplayingEvent && console.error("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.");
                currentReplayingEvent = null;
            } else return targetContainers = getInstanceFromNode(nextBlockedOn), null !== targetContainers && attemptContinuousHydration(targetContainers), queuedEvent.blockedOn = nextBlockedOn, !1;
            targetContainers.shift();
        }
        return !0;
    }
    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
        attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);
    }
    function replayUnblockedEvents() {
        hasScheduledReplayAttempt = !1;
        null !== queuedFocus && attemptReplayContinuousQueuedEvent(queuedFocus) && (queuedFocus = null);
        null !== queuedDrag && attemptReplayContinuousQueuedEvent(queuedDrag) && (queuedDrag = null);
        null !== queuedMouse && attemptReplayContinuousQueuedEvent(queuedMouse) && (queuedMouse = null);
        queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
        queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
    }
    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
        queuedEvent.blockedOn === unblocked && (queuedEvent.blockedOn = null, hasScheduledReplayAttempt || (hasScheduledReplayAttempt = !0, Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents)));
    }
    function scheduleReplayQueueIfNeeded(formReplayingQueue) {
        lastScheduledReplayQueue !== formReplayingQueue && (lastScheduledReplayQueue = formReplayingQueue, Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, function() {
            lastScheduledReplayQueue === formReplayingQueue && (lastScheduledReplayQueue = null);
            for(var i = 0; i < formReplayingQueue.length; i += 3){
                var form = formReplayingQueue[i], submitterOrAction = formReplayingQueue[i + 1], formData = formReplayingQueue[i + 2];
                if ("function" !== typeof submitterOrAction) {
                    if (null === findInstanceBlockingTarget(submitterOrAction || form)) continue;
                    else break;
                }
                var formInst = getInstanceFromNode(form);
                null !== formInst && (formReplayingQueue.splice(i, 3), i -= 3, form = {
                    pending: !0,
                    data: formData,
                    method: form.method,
                    action: submitterOrAction
                }, Object.freeze(form), startHostTransition(formInst, form, submitterOrAction, formData));
            }
        }));
    }
    function retryIfBlockedOn(unblocked) {
        function unblock(queuedEvent) {
            return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
        }
        null !== queuedFocus && scheduleCallbackIfUnblocked(queuedFocus, unblocked);
        null !== queuedDrag && scheduleCallbackIfUnblocked(queuedDrag, unblocked);
        null !== queuedMouse && scheduleCallbackIfUnblocked(queuedMouse, unblocked);
        queuedPointers.forEach(unblock);
        queuedPointerCaptures.forEach(unblock);
        for(var i = 0; i < queuedExplicitHydrationTargets.length; i++){
            var queuedTarget = queuedExplicitHydrationTargets[i];
            queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);
        }
        for(; 0 < queuedExplicitHydrationTargets.length && (i = queuedExplicitHydrationTargets[0], null === i.blockedOn);)attemptExplicitHydrationTarget(i), null === i.blockedOn && queuedExplicitHydrationTargets.shift();
        i = (unblocked.ownerDocument || unblocked).$$reactFormReplay;
        if (null != i) for(queuedTarget = 0; queuedTarget < i.length; queuedTarget += 3){
            var form = i[queuedTarget], submitterOrAction = i[queuedTarget + 1], formProps = form[internalPropsKey] || null;
            if ("function" === typeof submitterOrAction) formProps || scheduleReplayQueueIfNeeded(i);
            else if (formProps) {
                var action = null;
                if (submitterOrAction && submitterOrAction.hasAttribute("formAction")) {
                    if (form = submitterOrAction, formProps = submitterOrAction[internalPropsKey] || null) action = formProps.formAction;
                    else {
                        if (null !== findInstanceBlockingTarget(form)) continue;
                    }
                } else action = formProps.action;
                "function" === typeof action ? i[queuedTarget + 1] = action : (i.splice(queuedTarget, 3), queuedTarget -= 3);
                scheduleReplayQueueIfNeeded(i);
            }
        }
    }
    function ReactDOMRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    function ReactDOMHydrationRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    function warnIfReactDOMContainerInDEV(container) {
        container[internalContainerInstanceKey] && (container._reactRootContainer ? console.error("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.") : console.error("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it."));
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var Scheduler = require("c31f9b99c1e288cf"), React = require("c4c4bc2113e5c77f"), ReactDOM = require("772d609564cfd8f6"), assign = Object.assign, REACT_LEGACY_ELEMENT_TYPE = Symbol.for("react.element"), REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler"), REACT_PROVIDER_TYPE = Symbol.for("react.provider"), REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy");
    Symbol.for("react.scope");
    var REACT_ACTIVITY_TYPE = Symbol.for("react.activity");
    Symbol.for("react.legacy_hidden");
    Symbol.for("react.tracing_marker");
    var REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel");
    Symbol.for("react.view_transition");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator, REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), isArrayImpl = Array.isArray, ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, ReactDOMSharedInternals = ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, NotPending = Object.freeze({
        pending: !1,
        data: null,
        method: null,
        action: null
    }), valueStack = [];
    var fiberStack = [];
    var index$jscomp$0 = -1, contextStackCursor = createCursor(null), contextFiberStackCursor = createCursor(null), rootInstanceStackCursor = createCursor(null), hostTransitionProviderCursor = createCursor(null), hasOwnProperty = Object.prototype.hasOwnProperty, scheduleCallback$3 = Scheduler.unstable_scheduleCallback, cancelCallback$1 = Scheduler.unstable_cancelCallback, shouldYield = Scheduler.unstable_shouldYield, requestPaint = Scheduler.unstable_requestPaint, now$1 = Scheduler.unstable_now, getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel, ImmediatePriority = Scheduler.unstable_ImmediatePriority, UserBlockingPriority = Scheduler.unstable_UserBlockingPriority, NormalPriority$1 = Scheduler.unstable_NormalPriority, LowPriority = Scheduler.unstable_LowPriority, IdlePriority = Scheduler.unstable_IdlePriority, log$1 = Scheduler.log, unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue, rendererID = null, injectedHook = null, injectedProfilingHooks = null, hasLoggedError = !1, isDevToolsPresent = "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__, clz32 = Math.clz32 ? Math.clz32 : clz32Fallback, log = Math.log, LN2 = Math.LN2, nextTransitionLane = 256, nextRetryLane = 4194304, DiscreteEventPriority = 2, ContinuousEventPriority = 8, DefaultEventPriority = 32, IdleEventPriority = 268435456, randomKey = Math.random().toString(36).slice(2), internalInstanceKey = "__reactFiber$" + randomKey, internalPropsKey = "__reactProps$" + randomKey, internalContainerInstanceKey = "__reactContainer$" + randomKey, internalEventHandlersKey = "__reactEvents$" + randomKey, internalEventHandlerListenersKey = "__reactListeners$" + randomKey, internalEventHandlesSetKey = "__reactHandles$" + randomKey, internalRootNodeResourcesKey = "__reactResources$" + randomKey, internalHoistableMarker = "__reactMarker$" + randomKey, allNativeEvents = new Set(), registrationNameDependencies = {}, possibleRegistrationNames = {}, hasReadOnlyValue = {
        button: !0,
        checkbox: !0,
        image: !0,
        hidden: !0,
        radio: !0,
        reset: !0,
        submit: !0
    }, VALID_ATTRIBUTE_NAME_REGEX = RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), illegalAttributeNameCache = {}, validatedAttributeNameCache = {}, disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
    disabledLog.__reactDisabledLog = !0;
    var prefix, suffix, reentry = !1;
    var componentFrameCache = new ("function" === typeof WeakMap ? WeakMap : Map)();
    var current = null, isRendering = !1, escapeSelectorAttributeValueInsideDoubleQuotesRegex = /[\n"\\]/g, didWarnValueDefaultValue$1 = !1, didWarnCheckedDefaultChecked = !1, didWarnSelectedSetOnOption = !1, didWarnInvalidChild = !1, didWarnInvalidInnerHTML = !1;
    var didWarnValueDefaultValue = !1;
    var valuePropNames = [
        "value",
        "defaultValue"
    ], didWarnValDefaultVal = !1, needsEscaping = /["'&<>\n\t]|^\s|\s$/, specialTags = "address applet area article aside base basefont bgsound blockquote body br button caption center col colgroup dd details dir div dl dt embed fieldset figcaption figure footer form frame frameset h1 h2 h3 h4 h5 h6 head header hgroup hr html iframe img input isindex li link listing main marquee menu menuitem meta nav noembed noframes noscript object ol p param plaintext pre script section select source style summary table tbody td template textarea tfoot th thead title tr track ul wbr xmp".split(" "), inScopeTags = "applet caption html table td th marquee object template foreignObject desc title".split(" "), buttonScopeTags = inScopeTags.concat([
        "button"
    ]), impliedEndTags = "dd dt li option optgroup p rp rt".split(" "), emptyAncestorInfoDev = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null,
        containerTagInScope: null,
        implicitRootScope: !1
    }, didWarn = {}, shorthandToLonghand = {
        animation: "animationDelay animationDirection animationDuration animationFillMode animationIterationCount animationName animationPlayState animationTimingFunction".split(" "),
        background: "backgroundAttachment backgroundClip backgroundColor backgroundImage backgroundOrigin backgroundPositionX backgroundPositionY backgroundRepeat backgroundSize".split(" "),
        backgroundPosition: [
            "backgroundPositionX",
            "backgroundPositionY"
        ],
        border: "borderBottomColor borderBottomStyle borderBottomWidth borderImageOutset borderImageRepeat borderImageSlice borderImageSource borderImageWidth borderLeftColor borderLeftStyle borderLeftWidth borderRightColor borderRightStyle borderRightWidth borderTopColor borderTopStyle borderTopWidth".split(" "),
        borderBlockEnd: [
            "borderBlockEndColor",
            "borderBlockEndStyle",
            "borderBlockEndWidth"
        ],
        borderBlockStart: [
            "borderBlockStartColor",
            "borderBlockStartStyle",
            "borderBlockStartWidth"
        ],
        borderBottom: [
            "borderBottomColor",
            "borderBottomStyle",
            "borderBottomWidth"
        ],
        borderColor: [
            "borderBottomColor",
            "borderLeftColor",
            "borderRightColor",
            "borderTopColor"
        ],
        borderImage: [
            "borderImageOutset",
            "borderImageRepeat",
            "borderImageSlice",
            "borderImageSource",
            "borderImageWidth"
        ],
        borderInlineEnd: [
            "borderInlineEndColor",
            "borderInlineEndStyle",
            "borderInlineEndWidth"
        ],
        borderInlineStart: [
            "borderInlineStartColor",
            "borderInlineStartStyle",
            "borderInlineStartWidth"
        ],
        borderLeft: [
            "borderLeftColor",
            "borderLeftStyle",
            "borderLeftWidth"
        ],
        borderRadius: [
            "borderBottomLeftRadius",
            "borderBottomRightRadius",
            "borderTopLeftRadius",
            "borderTopRightRadius"
        ],
        borderRight: [
            "borderRightColor",
            "borderRightStyle",
            "borderRightWidth"
        ],
        borderStyle: [
            "borderBottomStyle",
            "borderLeftStyle",
            "borderRightStyle",
            "borderTopStyle"
        ],
        borderTop: [
            "borderTopColor",
            "borderTopStyle",
            "borderTopWidth"
        ],
        borderWidth: [
            "borderBottomWidth",
            "borderLeftWidth",
            "borderRightWidth",
            "borderTopWidth"
        ],
        columnRule: [
            "columnRuleColor",
            "columnRuleStyle",
            "columnRuleWidth"
        ],
        columns: [
            "columnCount",
            "columnWidth"
        ],
        flex: [
            "flexBasis",
            "flexGrow",
            "flexShrink"
        ],
        flexFlow: [
            "flexDirection",
            "flexWrap"
        ],
        font: "fontFamily fontFeatureSettings fontKerning fontLanguageOverride fontSize fontSizeAdjust fontStretch fontStyle fontVariant fontVariantAlternates fontVariantCaps fontVariantEastAsian fontVariantLigatures fontVariantNumeric fontVariantPosition fontWeight lineHeight".split(" "),
        fontVariant: "fontVariantAlternates fontVariantCaps fontVariantEastAsian fontVariantLigatures fontVariantNumeric fontVariantPosition".split(" "),
        gap: [
            "columnGap",
            "rowGap"
        ],
        grid: "gridAutoColumns gridAutoFlow gridAutoRows gridTemplateAreas gridTemplateColumns gridTemplateRows".split(" "),
        gridArea: [
            "gridColumnEnd",
            "gridColumnStart",
            "gridRowEnd",
            "gridRowStart"
        ],
        gridColumn: [
            "gridColumnEnd",
            "gridColumnStart"
        ],
        gridColumnGap: [
            "columnGap"
        ],
        gridGap: [
            "columnGap",
            "rowGap"
        ],
        gridRow: [
            "gridRowEnd",
            "gridRowStart"
        ],
        gridRowGap: [
            "rowGap"
        ],
        gridTemplate: [
            "gridTemplateAreas",
            "gridTemplateColumns",
            "gridTemplateRows"
        ],
        listStyle: [
            "listStyleImage",
            "listStylePosition",
            "listStyleType"
        ],
        margin: [
            "marginBottom",
            "marginLeft",
            "marginRight",
            "marginTop"
        ],
        marker: [
            "markerEnd",
            "markerMid",
            "markerStart"
        ],
        mask: "maskClip maskComposite maskImage maskMode maskOrigin maskPositionX maskPositionY maskRepeat maskSize".split(" "),
        maskPosition: [
            "maskPositionX",
            "maskPositionY"
        ],
        outline: [
            "outlineColor",
            "outlineStyle",
            "outlineWidth"
        ],
        overflow: [
            "overflowX",
            "overflowY"
        ],
        padding: [
            "paddingBottom",
            "paddingLeft",
            "paddingRight",
            "paddingTop"
        ],
        placeContent: [
            "alignContent",
            "justifyContent"
        ],
        placeItems: [
            "alignItems",
            "justifyItems"
        ],
        placeSelf: [
            "alignSelf",
            "justifySelf"
        ],
        textDecoration: [
            "textDecorationColor",
            "textDecorationLine",
            "textDecorationStyle"
        ],
        textEmphasis: [
            "textEmphasisColor",
            "textEmphasisStyle"
        ],
        transition: [
            "transitionDelay",
            "transitionDuration",
            "transitionProperty",
            "transitionTimingFunction"
        ],
        wordWrap: [
            "overflowWrap"
        ]
    }, uppercasePattern = /([A-Z])/g, msPattern$1 = /^ms-/, badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/, msPattern = /^-ms-/, hyphenPattern = /-(.)/g, badStyleValueWithSemicolonPattern = /;\s*$/, warnedStyleNames = {}, warnedStyleValues = {}, warnedForNaNValue = !1, warnedForInfinityValue = !1, unitlessNumbers = new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" ")), MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML", SVG_NAMESPACE = "http://www.w3.org/2000/svg", aliases = new Map([
        [
            "acceptCharset",
            "accept-charset"
        ],
        [
            "htmlFor",
            "for"
        ],
        [
            "httpEquiv",
            "http-equiv"
        ],
        [
            "crossOrigin",
            "crossorigin"
        ],
        [
            "accentHeight",
            "accent-height"
        ],
        [
            "alignmentBaseline",
            "alignment-baseline"
        ],
        [
            "arabicForm",
            "arabic-form"
        ],
        [
            "baselineShift",
            "baseline-shift"
        ],
        [
            "capHeight",
            "cap-height"
        ],
        [
            "clipPath",
            "clip-path"
        ],
        [
            "clipRule",
            "clip-rule"
        ],
        [
            "colorInterpolation",
            "color-interpolation"
        ],
        [
            "colorInterpolationFilters",
            "color-interpolation-filters"
        ],
        [
            "colorProfile",
            "color-profile"
        ],
        [
            "colorRendering",
            "color-rendering"
        ],
        [
            "dominantBaseline",
            "dominant-baseline"
        ],
        [
            "enableBackground",
            "enable-background"
        ],
        [
            "fillOpacity",
            "fill-opacity"
        ],
        [
            "fillRule",
            "fill-rule"
        ],
        [
            "floodColor",
            "flood-color"
        ],
        [
            "floodOpacity",
            "flood-opacity"
        ],
        [
            "fontFamily",
            "font-family"
        ],
        [
            "fontSize",
            "font-size"
        ],
        [
            "fontSizeAdjust",
            "font-size-adjust"
        ],
        [
            "fontStretch",
            "font-stretch"
        ],
        [
            "fontStyle",
            "font-style"
        ],
        [
            "fontVariant",
            "font-variant"
        ],
        [
            "fontWeight",
            "font-weight"
        ],
        [
            "glyphName",
            "glyph-name"
        ],
        [
            "glyphOrientationHorizontal",
            "glyph-orientation-horizontal"
        ],
        [
            "glyphOrientationVertical",
            "glyph-orientation-vertical"
        ],
        [
            "horizAdvX",
            "horiz-adv-x"
        ],
        [
            "horizOriginX",
            "horiz-origin-x"
        ],
        [
            "imageRendering",
            "image-rendering"
        ],
        [
            "letterSpacing",
            "letter-spacing"
        ],
        [
            "lightingColor",
            "lighting-color"
        ],
        [
            "markerEnd",
            "marker-end"
        ],
        [
            "markerMid",
            "marker-mid"
        ],
        [
            "markerStart",
            "marker-start"
        ],
        [
            "overlinePosition",
            "overline-position"
        ],
        [
            "overlineThickness",
            "overline-thickness"
        ],
        [
            "paintOrder",
            "paint-order"
        ],
        [
            "panose-1",
            "panose-1"
        ],
        [
            "pointerEvents",
            "pointer-events"
        ],
        [
            "renderingIntent",
            "rendering-intent"
        ],
        [
            "shapeRendering",
            "shape-rendering"
        ],
        [
            "stopColor",
            "stop-color"
        ],
        [
            "stopOpacity",
            "stop-opacity"
        ],
        [
            "strikethroughPosition",
            "strikethrough-position"
        ],
        [
            "strikethroughThickness",
            "strikethrough-thickness"
        ],
        [
            "strokeDasharray",
            "stroke-dasharray"
        ],
        [
            "strokeDashoffset",
            "stroke-dashoffset"
        ],
        [
            "strokeLinecap",
            "stroke-linecap"
        ],
        [
            "strokeLinejoin",
            "stroke-linejoin"
        ],
        [
            "strokeMiterlimit",
            "stroke-miterlimit"
        ],
        [
            "strokeOpacity",
            "stroke-opacity"
        ],
        [
            "strokeWidth",
            "stroke-width"
        ],
        [
            "textAnchor",
            "text-anchor"
        ],
        [
            "textDecoration",
            "text-decoration"
        ],
        [
            "textRendering",
            "text-rendering"
        ],
        [
            "transformOrigin",
            "transform-origin"
        ],
        [
            "underlinePosition",
            "underline-position"
        ],
        [
            "underlineThickness",
            "underline-thickness"
        ],
        [
            "unicodeBidi",
            "unicode-bidi"
        ],
        [
            "unicodeRange",
            "unicode-range"
        ],
        [
            "unitsPerEm",
            "units-per-em"
        ],
        [
            "vAlphabetic",
            "v-alphabetic"
        ],
        [
            "vHanging",
            "v-hanging"
        ],
        [
            "vIdeographic",
            "v-ideographic"
        ],
        [
            "vMathematical",
            "v-mathematical"
        ],
        [
            "vectorEffect",
            "vector-effect"
        ],
        [
            "vertAdvY",
            "vert-adv-y"
        ],
        [
            "vertOriginX",
            "vert-origin-x"
        ],
        [
            "vertOriginY",
            "vert-origin-y"
        ],
        [
            "wordSpacing",
            "word-spacing"
        ],
        [
            "writingMode",
            "writing-mode"
        ],
        [
            "xmlnsXlink",
            "xmlns:xlink"
        ],
        [
            "xHeight",
            "x-height"
        ]
    ]), possibleStandardNames = {
        accept: "accept",
        acceptcharset: "acceptCharset",
        "accept-charset": "acceptCharset",
        accesskey: "accessKey",
        action: "action",
        allowfullscreen: "allowFullScreen",
        alt: "alt",
        as: "as",
        async: "async",
        autocapitalize: "autoCapitalize",
        autocomplete: "autoComplete",
        autocorrect: "autoCorrect",
        autofocus: "autoFocus",
        autoplay: "autoPlay",
        autosave: "autoSave",
        capture: "capture",
        cellpadding: "cellPadding",
        cellspacing: "cellSpacing",
        challenge: "challenge",
        charset: "charSet",
        checked: "checked",
        children: "children",
        cite: "cite",
        class: "className",
        classid: "classID",
        classname: "className",
        cols: "cols",
        colspan: "colSpan",
        content: "content",
        contenteditable: "contentEditable",
        contextmenu: "contextMenu",
        controls: "controls",
        controlslist: "controlsList",
        coords: "coords",
        crossorigin: "crossOrigin",
        dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
        data: "data",
        datetime: "dateTime",
        default: "default",
        defaultchecked: "defaultChecked",
        defaultvalue: "defaultValue",
        defer: "defer",
        dir: "dir",
        disabled: "disabled",
        disablepictureinpicture: "disablePictureInPicture",
        disableremoteplayback: "disableRemotePlayback",
        download: "download",
        draggable: "draggable",
        enctype: "encType",
        enterkeyhint: "enterKeyHint",
        fetchpriority: "fetchPriority",
        for: "htmlFor",
        form: "form",
        formmethod: "formMethod",
        formaction: "formAction",
        formenctype: "formEncType",
        formnovalidate: "formNoValidate",
        formtarget: "formTarget",
        frameborder: "frameBorder",
        headers: "headers",
        height: "height",
        hidden: "hidden",
        high: "high",
        href: "href",
        hreflang: "hrefLang",
        htmlfor: "htmlFor",
        httpequiv: "httpEquiv",
        "http-equiv": "httpEquiv",
        icon: "icon",
        id: "id",
        imagesizes: "imageSizes",
        imagesrcset: "imageSrcSet",
        inert: "inert",
        innerhtml: "innerHTML",
        inputmode: "inputMode",
        integrity: "integrity",
        is: "is",
        itemid: "itemID",
        itemprop: "itemProp",
        itemref: "itemRef",
        itemscope: "itemScope",
        itemtype: "itemType",
        keyparams: "keyParams",
        keytype: "keyType",
        kind: "kind",
        label: "label",
        lang: "lang",
        list: "list",
        loop: "loop",
        low: "low",
        manifest: "manifest",
        marginwidth: "marginWidth",
        marginheight: "marginHeight",
        max: "max",
        maxlength: "maxLength",
        media: "media",
        mediagroup: "mediaGroup",
        method: "method",
        min: "min",
        minlength: "minLength",
        multiple: "multiple",
        muted: "muted",
        name: "name",
        nomodule: "noModule",
        nonce: "nonce",
        novalidate: "noValidate",
        open: "open",
        optimum: "optimum",
        pattern: "pattern",
        placeholder: "placeholder",
        playsinline: "playsInline",
        poster: "poster",
        preload: "preload",
        profile: "profile",
        radiogroup: "radioGroup",
        readonly: "readOnly",
        referrerpolicy: "referrerPolicy",
        rel: "rel",
        required: "required",
        reversed: "reversed",
        role: "role",
        rows: "rows",
        rowspan: "rowSpan",
        sandbox: "sandbox",
        scope: "scope",
        scoped: "scoped",
        scrolling: "scrolling",
        seamless: "seamless",
        selected: "selected",
        shape: "shape",
        size: "size",
        sizes: "sizes",
        span: "span",
        spellcheck: "spellCheck",
        src: "src",
        srcdoc: "srcDoc",
        srclang: "srcLang",
        srcset: "srcSet",
        start: "start",
        step: "step",
        style: "style",
        summary: "summary",
        tabindex: "tabIndex",
        target: "target",
        title: "title",
        type: "type",
        usemap: "useMap",
        value: "value",
        width: "width",
        wmode: "wmode",
        wrap: "wrap",
        about: "about",
        accentheight: "accentHeight",
        "accent-height": "accentHeight",
        accumulate: "accumulate",
        additive: "additive",
        alignmentbaseline: "alignmentBaseline",
        "alignment-baseline": "alignmentBaseline",
        allowreorder: "allowReorder",
        alphabetic: "alphabetic",
        amplitude: "amplitude",
        arabicform: "arabicForm",
        "arabic-form": "arabicForm",
        ascent: "ascent",
        attributename: "attributeName",
        attributetype: "attributeType",
        autoreverse: "autoReverse",
        azimuth: "azimuth",
        basefrequency: "baseFrequency",
        baselineshift: "baselineShift",
        "baseline-shift": "baselineShift",
        baseprofile: "baseProfile",
        bbox: "bbox",
        begin: "begin",
        bias: "bias",
        by: "by",
        calcmode: "calcMode",
        capheight: "capHeight",
        "cap-height": "capHeight",
        clip: "clip",
        clippath: "clipPath",
        "clip-path": "clipPath",
        clippathunits: "clipPathUnits",
        cliprule: "clipRule",
        "clip-rule": "clipRule",
        color: "color",
        colorinterpolation: "colorInterpolation",
        "color-interpolation": "colorInterpolation",
        colorinterpolationfilters: "colorInterpolationFilters",
        "color-interpolation-filters": "colorInterpolationFilters",
        colorprofile: "colorProfile",
        "color-profile": "colorProfile",
        colorrendering: "colorRendering",
        "color-rendering": "colorRendering",
        contentscripttype: "contentScriptType",
        contentstyletype: "contentStyleType",
        cursor: "cursor",
        cx: "cx",
        cy: "cy",
        d: "d",
        datatype: "datatype",
        decelerate: "decelerate",
        descent: "descent",
        diffuseconstant: "diffuseConstant",
        direction: "direction",
        display: "display",
        divisor: "divisor",
        dominantbaseline: "dominantBaseline",
        "dominant-baseline": "dominantBaseline",
        dur: "dur",
        dx: "dx",
        dy: "dy",
        edgemode: "edgeMode",
        elevation: "elevation",
        enablebackground: "enableBackground",
        "enable-background": "enableBackground",
        end: "end",
        exponent: "exponent",
        externalresourcesrequired: "externalResourcesRequired",
        fill: "fill",
        fillopacity: "fillOpacity",
        "fill-opacity": "fillOpacity",
        fillrule: "fillRule",
        "fill-rule": "fillRule",
        filter: "filter",
        filterres: "filterRes",
        filterunits: "filterUnits",
        floodopacity: "floodOpacity",
        "flood-opacity": "floodOpacity",
        floodcolor: "floodColor",
        "flood-color": "floodColor",
        focusable: "focusable",
        fontfamily: "fontFamily",
        "font-family": "fontFamily",
        fontsize: "fontSize",
        "font-size": "fontSize",
        fontsizeadjust: "fontSizeAdjust",
        "font-size-adjust": "fontSizeAdjust",
        fontstretch: "fontStretch",
        "font-stretch": "fontStretch",
        fontstyle: "fontStyle",
        "font-style": "fontStyle",
        fontvariant: "fontVariant",
        "font-variant": "fontVariant",
        fontweight: "fontWeight",
        "font-weight": "fontWeight",
        format: "format",
        from: "from",
        fx: "fx",
        fy: "fy",
        g1: "g1",
        g2: "g2",
        glyphname: "glyphName",
        "glyph-name": "glyphName",
        glyphorientationhorizontal: "glyphOrientationHorizontal",
        "glyph-orientation-horizontal": "glyphOrientationHorizontal",
        glyphorientationvertical: "glyphOrientationVertical",
        "glyph-orientation-vertical": "glyphOrientationVertical",
        glyphref: "glyphRef",
        gradienttransform: "gradientTransform",
        gradientunits: "gradientUnits",
        hanging: "hanging",
        horizadvx: "horizAdvX",
        "horiz-adv-x": "horizAdvX",
        horizoriginx: "horizOriginX",
        "horiz-origin-x": "horizOriginX",
        ideographic: "ideographic",
        imagerendering: "imageRendering",
        "image-rendering": "imageRendering",
        in2: "in2",
        in: "in",
        inlist: "inlist",
        intercept: "intercept",
        k1: "k1",
        k2: "k2",
        k3: "k3",
        k4: "k4",
        k: "k",
        kernelmatrix: "kernelMatrix",
        kernelunitlength: "kernelUnitLength",
        kerning: "kerning",
        keypoints: "keyPoints",
        keysplines: "keySplines",
        keytimes: "keyTimes",
        lengthadjust: "lengthAdjust",
        letterspacing: "letterSpacing",
        "letter-spacing": "letterSpacing",
        lightingcolor: "lightingColor",
        "lighting-color": "lightingColor",
        limitingconeangle: "limitingConeAngle",
        local: "local",
        markerend: "markerEnd",
        "marker-end": "markerEnd",
        markerheight: "markerHeight",
        markermid: "markerMid",
        "marker-mid": "markerMid",
        markerstart: "markerStart",
        "marker-start": "markerStart",
        markerunits: "markerUnits",
        markerwidth: "markerWidth",
        mask: "mask",
        maskcontentunits: "maskContentUnits",
        maskunits: "maskUnits",
        mathematical: "mathematical",
        mode: "mode",
        numoctaves: "numOctaves",
        offset: "offset",
        opacity: "opacity",
        operator: "operator",
        order: "order",
        orient: "orient",
        orientation: "orientation",
        origin: "origin",
        overflow: "overflow",
        overlineposition: "overlinePosition",
        "overline-position": "overlinePosition",
        overlinethickness: "overlineThickness",
        "overline-thickness": "overlineThickness",
        paintorder: "paintOrder",
        "paint-order": "paintOrder",
        panose1: "panose1",
        "panose-1": "panose1",
        pathlength: "pathLength",
        patterncontentunits: "patternContentUnits",
        patterntransform: "patternTransform",
        patternunits: "patternUnits",
        pointerevents: "pointerEvents",
        "pointer-events": "pointerEvents",
        points: "points",
        pointsatx: "pointsAtX",
        pointsaty: "pointsAtY",
        pointsatz: "pointsAtZ",
        popover: "popover",
        popovertarget: "popoverTarget",
        popovertargetaction: "popoverTargetAction",
        prefix: "prefix",
        preservealpha: "preserveAlpha",
        preserveaspectratio: "preserveAspectRatio",
        primitiveunits: "primitiveUnits",
        property: "property",
        r: "r",
        radius: "radius",
        refx: "refX",
        refy: "refY",
        renderingintent: "renderingIntent",
        "rendering-intent": "renderingIntent",
        repeatcount: "repeatCount",
        repeatdur: "repeatDur",
        requiredextensions: "requiredExtensions",
        requiredfeatures: "requiredFeatures",
        resource: "resource",
        restart: "restart",
        result: "result",
        results: "results",
        rotate: "rotate",
        rx: "rx",
        ry: "ry",
        scale: "scale",
        security: "security",
        seed: "seed",
        shaperendering: "shapeRendering",
        "shape-rendering": "shapeRendering",
        slope: "slope",
        spacing: "spacing",
        specularconstant: "specularConstant",
        specularexponent: "specularExponent",
        speed: "speed",
        spreadmethod: "spreadMethod",
        startoffset: "startOffset",
        stddeviation: "stdDeviation",
        stemh: "stemh",
        stemv: "stemv",
        stitchtiles: "stitchTiles",
        stopcolor: "stopColor",
        "stop-color": "stopColor",
        stopopacity: "stopOpacity",
        "stop-opacity": "stopOpacity",
        strikethroughposition: "strikethroughPosition",
        "strikethrough-position": "strikethroughPosition",
        strikethroughthickness: "strikethroughThickness",
        "strikethrough-thickness": "strikethroughThickness",
        string: "string",
        stroke: "stroke",
        strokedasharray: "strokeDasharray",
        "stroke-dasharray": "strokeDasharray",
        strokedashoffset: "strokeDashoffset",
        "stroke-dashoffset": "strokeDashoffset",
        strokelinecap: "strokeLinecap",
        "stroke-linecap": "strokeLinecap",
        strokelinejoin: "strokeLinejoin",
        "stroke-linejoin": "strokeLinejoin",
        strokemiterlimit: "strokeMiterlimit",
        "stroke-miterlimit": "strokeMiterlimit",
        strokewidth: "strokeWidth",
        "stroke-width": "strokeWidth",
        strokeopacity: "strokeOpacity",
        "stroke-opacity": "strokeOpacity",
        suppresscontenteditablewarning: "suppressContentEditableWarning",
        suppresshydrationwarning: "suppressHydrationWarning",
        surfacescale: "surfaceScale",
        systemlanguage: "systemLanguage",
        tablevalues: "tableValues",
        targetx: "targetX",
        targety: "targetY",
        textanchor: "textAnchor",
        "text-anchor": "textAnchor",
        textdecoration: "textDecoration",
        "text-decoration": "textDecoration",
        textlength: "textLength",
        textrendering: "textRendering",
        "text-rendering": "textRendering",
        to: "to",
        transform: "transform",
        transformorigin: "transformOrigin",
        "transform-origin": "transformOrigin",
        typeof: "typeof",
        u1: "u1",
        u2: "u2",
        underlineposition: "underlinePosition",
        "underline-position": "underlinePosition",
        underlinethickness: "underlineThickness",
        "underline-thickness": "underlineThickness",
        unicode: "unicode",
        unicodebidi: "unicodeBidi",
        "unicode-bidi": "unicodeBidi",
        unicoderange: "unicodeRange",
        "unicode-range": "unicodeRange",
        unitsperem: "unitsPerEm",
        "units-per-em": "unitsPerEm",
        unselectable: "unselectable",
        valphabetic: "vAlphabetic",
        "v-alphabetic": "vAlphabetic",
        values: "values",
        vectoreffect: "vectorEffect",
        "vector-effect": "vectorEffect",
        version: "version",
        vertadvy: "vertAdvY",
        "vert-adv-y": "vertAdvY",
        vertoriginx: "vertOriginX",
        "vert-origin-x": "vertOriginX",
        vertoriginy: "vertOriginY",
        "vert-origin-y": "vertOriginY",
        vhanging: "vHanging",
        "v-hanging": "vHanging",
        videographic: "vIdeographic",
        "v-ideographic": "vIdeographic",
        viewbox: "viewBox",
        viewtarget: "viewTarget",
        visibility: "visibility",
        vmathematical: "vMathematical",
        "v-mathematical": "vMathematical",
        vocab: "vocab",
        widths: "widths",
        wordspacing: "wordSpacing",
        "word-spacing": "wordSpacing",
        writingmode: "writingMode",
        "writing-mode": "writingMode",
        x1: "x1",
        x2: "x2",
        x: "x",
        xchannelselector: "xChannelSelector",
        xheight: "xHeight",
        "x-height": "xHeight",
        xlinkactuate: "xlinkActuate",
        "xlink:actuate": "xlinkActuate",
        xlinkarcrole: "xlinkArcrole",
        "xlink:arcrole": "xlinkArcrole",
        xlinkhref: "xlinkHref",
        "xlink:href": "xlinkHref",
        xlinkrole: "xlinkRole",
        "xlink:role": "xlinkRole",
        xlinkshow: "xlinkShow",
        "xlink:show": "xlinkShow",
        xlinktitle: "xlinkTitle",
        "xlink:title": "xlinkTitle",
        xlinktype: "xlinkType",
        "xlink:type": "xlinkType",
        xmlbase: "xmlBase",
        "xml:base": "xmlBase",
        xmllang: "xmlLang",
        "xml:lang": "xmlLang",
        xmlns: "xmlns",
        "xml:space": "xmlSpace",
        xmlnsxlink: "xmlnsXlink",
        "xmlns:xlink": "xmlnsXlink",
        xmlspace: "xmlSpace",
        y1: "y1",
        y2: "y2",
        y: "y",
        ychannelselector: "yChannelSelector",
        z: "z",
        zoomandpan: "zoomAndPan"
    }, ariaProperties = {
        "aria-current": 0,
        "aria-description": 0,
        "aria-details": 0,
        "aria-disabled": 0,
        "aria-hidden": 0,
        "aria-invalid": 0,
        "aria-keyshortcuts": 0,
        "aria-label": 0,
        "aria-roledescription": 0,
        "aria-autocomplete": 0,
        "aria-checked": 0,
        "aria-expanded": 0,
        "aria-haspopup": 0,
        "aria-level": 0,
        "aria-modal": 0,
        "aria-multiline": 0,
        "aria-multiselectable": 0,
        "aria-orientation": 0,
        "aria-placeholder": 0,
        "aria-pressed": 0,
        "aria-readonly": 0,
        "aria-required": 0,
        "aria-selected": 0,
        "aria-sort": 0,
        "aria-valuemax": 0,
        "aria-valuemin": 0,
        "aria-valuenow": 0,
        "aria-valuetext": 0,
        "aria-atomic": 0,
        "aria-busy": 0,
        "aria-live": 0,
        "aria-relevant": 0,
        "aria-dropeffect": 0,
        "aria-grabbed": 0,
        "aria-activedescendant": 0,
        "aria-colcount": 0,
        "aria-colindex": 0,
        "aria-colspan": 0,
        "aria-controls": 0,
        "aria-describedby": 0,
        "aria-errormessage": 0,
        "aria-flowto": 0,
        "aria-labelledby": 0,
        "aria-owns": 0,
        "aria-posinset": 0,
        "aria-rowcount": 0,
        "aria-rowindex": 0,
        "aria-rowspan": 0,
        "aria-setsize": 0
    }, warnedProperties$1 = {}, rARIA$1 = RegExp("^(aria)-[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), rARIACamel$1 = RegExp("^(aria)[A-Z][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), didWarnValueNull = !1, warnedProperties = {}, EVENT_NAME_REGEX = /^on./, INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/, rARIA = RegExp("^(aria)-[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), rARIACamel = RegExp("^(aria)[A-Z][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i, currentReplayingEvent = null, restoreTarget = null, restoreQueue = null, isInsideEventHandler = !1, canUseDOM = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), passiveBrowserEventsSupported = !1;
    if (canUseDOM) try {
        var options$jscomp$0 = {};
        Object.defineProperty(options$jscomp$0, "passive", {
            get: function() {
                passiveBrowserEventsSupported = !0;
            }
        });
        window.addEventListener("test", options$jscomp$0, options$jscomp$0);
        window.removeEventListener("test", options$jscomp$0, options$jscomp$0);
    } catch (e) {
        passiveBrowserEventsSupported = !1;
    }
    var root = null, startText = null, fallbackText = null, EventInterface = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function(event) {
            return event.timeStamp || Date.now();
        },
        defaultPrevented: 0,
        isTrusted: 0
    }, SyntheticEvent = createSyntheticEvent(EventInterface), UIEventInterface = assign({}, EventInterface, {
        view: 0,
        detail: 0
    }), SyntheticUIEvent = createSyntheticEvent(UIEventInterface), lastMovementX, lastMovementY, lastMouseEvent, MouseEventInterface = assign({}, UIEventInterface, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: getEventModifierState,
        button: 0,
        buttons: 0,
        relatedTarget: function(event) {
            return void 0 === event.relatedTarget ? event.fromElement === event.srcElement ? event.toElement : event.fromElement : event.relatedTarget;
        },
        movementX: function(event) {
            if ("movementX" in event) return event.movementX;
            event !== lastMouseEvent && (lastMouseEvent && "mousemove" === event.type ? (lastMovementX = event.screenX - lastMouseEvent.screenX, lastMovementY = event.screenY - lastMouseEvent.screenY) : lastMovementY = lastMovementX = 0, lastMouseEvent = event);
            return lastMovementX;
        },
        movementY: function(event) {
            return "movementY" in event ? event.movementY : lastMovementY;
        }
    }), SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface), DragEventInterface = assign({}, MouseEventInterface, {
        dataTransfer: 0
    }), SyntheticDragEvent = createSyntheticEvent(DragEventInterface), FocusEventInterface = assign({}, UIEventInterface, {
        relatedTarget: 0
    }), SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface), AnimationEventInterface = assign({}, EventInterface, {
        animationName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    }), SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface), ClipboardEventInterface = assign({}, EventInterface, {
        clipboardData: function(event) {
            return "clipboardData" in event ? event.clipboardData : window.clipboardData;
        }
    }), SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface), CompositionEventInterface = assign({}, EventInterface, {
        data: 0
    }), SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface), SyntheticInputEvent = SyntheticCompositionEvent, normalizeKey = {
        Esc: "Escape",
        Spacebar: " ",
        Left: "ArrowLeft",
        Up: "ArrowUp",
        Right: "ArrowRight",
        Down: "ArrowDown",
        Del: "Delete",
        Win: "OS",
        Menu: "ContextMenu",
        Apps: "ContextMenu",
        Scroll: "ScrollLock",
        MozPrintableKey: "Unidentified"
    }, translateToKey = {
        8: "Backspace",
        9: "Tab",
        12: "Clear",
        13: "Enter",
        16: "Shift",
        17: "Control",
        18: "Alt",
        19: "Pause",
        20: "CapsLock",
        27: "Escape",
        32: " ",
        33: "PageUp",
        34: "PageDown",
        35: "End",
        36: "Home",
        37: "ArrowLeft",
        38: "ArrowUp",
        39: "ArrowRight",
        40: "ArrowDown",
        45: "Insert",
        46: "Delete",
        112: "F1",
        113: "F2",
        114: "F3",
        115: "F4",
        116: "F5",
        117: "F6",
        118: "F7",
        119: "F8",
        120: "F9",
        121: "F10",
        122: "F11",
        123: "F12",
        144: "NumLock",
        145: "ScrollLock",
        224: "Meta"
    }, modifierKeyToProp = {
        Alt: "altKey",
        Control: "ctrlKey",
        Meta: "metaKey",
        Shift: "shiftKey"
    }, KeyboardEventInterface = assign({}, UIEventInterface, {
        key: function(nativeEvent) {
            if (nativeEvent.key) {
                var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
                if ("Unidentified" !== key) return key;
            }
            return "keypress" === nativeEvent.type ? (nativeEvent = getEventCharCode(nativeEvent), 13 === nativeEvent ? "Enter" : String.fromCharCode(nativeEvent)) : "keydown" === nativeEvent.type || "keyup" === nativeEvent.type ? translateToKey[nativeEvent.keyCode] || "Unidentified" : "";
        },
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: getEventModifierState,
        charCode: function(event) {
            return "keypress" === event.type ? getEventCharCode(event) : 0;
        },
        keyCode: function(event) {
            return "keydown" === event.type || "keyup" === event.type ? event.keyCode : 0;
        },
        which: function(event) {
            return "keypress" === event.type ? getEventCharCode(event) : "keydown" === event.type || "keyup" === event.type ? event.keyCode : 0;
        }
    }), SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface), PointerEventInterface = assign({}, MouseEventInterface, {
        pointerId: 0,
        width: 0,
        height: 0,
        pressure: 0,
        tangentialPressure: 0,
        tiltX: 0,
        tiltY: 0,
        twist: 0,
        pointerType: 0,
        isPrimary: 0
    }), SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface), TouchEventInterface = assign({}, UIEventInterface, {
        touches: 0,
        targetTouches: 0,
        changedTouches: 0,
        altKey: 0,
        metaKey: 0,
        ctrlKey: 0,
        shiftKey: 0,
        getModifierState: getEventModifierState
    }), SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface), TransitionEventInterface = assign({}, EventInterface, {
        propertyName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    }), SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface), WheelEventInterface = assign({}, MouseEventInterface, {
        deltaX: function(event) {
            return "deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
        },
        deltaY: function(event) {
            return "deltaY" in event ? event.deltaY : "wheelDeltaY" in event ? -event.wheelDeltaY : "wheelDelta" in event ? -event.wheelDelta : 0;
        },
        deltaZ: 0,
        deltaMode: 0
    }), SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface), ToggleEventInterface = assign({}, EventInterface, {
        newState: 0,
        oldState: 0
    }), SyntheticToggleEvent = createSyntheticEvent(ToggleEventInterface), END_KEYCODES = [
        9,
        13,
        27,
        32
    ], START_KEYCODE = 229, canUseCompositionEvent = canUseDOM && "CompositionEvent" in window, documentMode = null;
    canUseDOM && "documentMode" in document && (documentMode = document.documentMode);
    var canUseTextInputEvent = canUseDOM && "TextEvent" in window && !documentMode, useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && 8 < documentMode && 11 >= documentMode), SPACEBAR_CODE = 32, SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE), hasSpaceKeypress = !1, isComposing = !1, supportedInputTypes = {
        color: !0,
        date: !0,
        datetime: !0,
        "datetime-local": !0,
        email: !0,
        month: !0,
        number: !0,
        password: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0
    }, activeElement$1 = null, activeElementInst$1 = null, isInputEventSupported = !1;
    canUseDOM && (isInputEventSupported = isEventSupported("input") && (!document.documentMode || 9 < document.documentMode));
    var objectIs = "function" === typeof Object.is ? Object.is : is, skipSelectionChangeEvent = canUseDOM && "documentMode" in document && 11 >= document.documentMode, activeElement = null, activeElementInst = null, lastSelection = null, mouseDown = !1, vendorPrefixes = {
        animationend: makePrefixMap("Animation", "AnimationEnd"),
        animationiteration: makePrefixMap("Animation", "AnimationIteration"),
        animationstart: makePrefixMap("Animation", "AnimationStart"),
        transitionrun: makePrefixMap("Transition", "TransitionRun"),
        transitionstart: makePrefixMap("Transition", "TransitionStart"),
        transitioncancel: makePrefixMap("Transition", "TransitionCancel"),
        transitionend: makePrefixMap("Transition", "TransitionEnd")
    }, prefixedEventNames = {}, style = {};
    canUseDOM && (style = document.createElement("div").style, "AnimationEvent" in window || (delete vendorPrefixes.animationend.animation, delete vendorPrefixes.animationiteration.animation, delete vendorPrefixes.animationstart.animation), "TransitionEvent" in window || delete vendorPrefixes.transitionend.transition);
    var ANIMATION_END = getVendorPrefixedEventName("animationend"), ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration"), ANIMATION_START = getVendorPrefixedEventName("animationstart"), TRANSITION_RUN = getVendorPrefixedEventName("transitionrun"), TRANSITION_START = getVendorPrefixedEventName("transitionstart"), TRANSITION_CANCEL = getVendorPrefixedEventName("transitioncancel"), TRANSITION_END = getVendorPrefixedEventName("transitionend"), topLevelEventsToReactNames = new Map(), simpleEventPluginEvents = "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
    simpleEventPluginEvents.push("scrollEnd");
    var CapturedStacks = new WeakMap(), OffscreenVisible = 1, OffscreenPassiveEffectsConnected = 2, concurrentQueues = [], concurrentQueuesIndex = 0, concurrentlyUpdatedLanes = 0, emptyContextObject = {};
    Object.freeze(emptyContextObject);
    var resolveFamily = null, failedBoundaries = null, NoMode = 0, ConcurrentMode = 1, ProfileMode = 2, StrictLegacyMode = 8, StrictEffectsMode = 16, NoStrictPassiveEffectsMode = 64;
    var hasBadMapPolyfill = !1;
    try {
        var nonExtensibleObject = Object.preventExtensions({});
        new Map([
            [
                nonExtensibleObject,
                null
            ]
        ]);
        new Set([
            nonExtensibleObject
        ]);
    } catch (e$3) {
        hasBadMapPolyfill = !0;
    }
    var forkStack = [], forkStackIndex = 0, treeForkProvider = null, treeForkCount = 0, idStack = [], idStackIndex = 0, treeContextProvider = null, treeContextId = 1, treeContextOverflow = "", hydrationParentFiber = null, nextHydratableInstance = null, isHydrating = !1, didSuspendOrErrorDEV = !1, hydrationDiffRootDEV = null, hydrationErrors = null, rootOrSingletonContext = !1, HydrationMismatchException = Error("Hydration Mismatch Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."), lastResetTime = 0;
    if ("object" === typeof performance && "function" === typeof performance.now) {
        var localPerformance = performance;
        var getCurrentTime = function() {
            return localPerformance.now();
        };
    } else {
        var localDate = Date;
        getCurrentTime = function() {
            return localDate.now();
        };
    }
    var valueCursor = createCursor(null);
    var rendererCursorDEV = createCursor(null);
    var rendererSigil = {};
    var currentlyRenderingFiber$1 = null, lastContextDependency = null, isDisallowedContextReadInDEV = !1, AbortControllerLocal = "undefined" !== typeof AbortController ? AbortController : function() {
        var listeners = [], signal = this.signal = {
            aborted: !1,
            addEventListener: function(type, listener) {
                listeners.push(listener);
            }
        };
        this.abort = function() {
            signal.aborted = !0;
            listeners.forEach(function(listener) {
                return listener();
            });
        };
    }, scheduleCallback$2 = Scheduler.unstable_scheduleCallback, NormalPriority = Scheduler.unstable_NormalPriority, CacheContext = {
        $$typeof: REACT_CONTEXT_TYPE,
        Consumer: null,
        Provider: null,
        _currentValue: null,
        _currentValue2: null,
        _threadCount: 0,
        _currentRenderer: null,
        _currentRenderer2: null
    }, now = Scheduler.unstable_now, renderStartTime = -0, commitStartTime = -0, profilerStartTime = -1.1, profilerEffectDuration = -0, currentUpdateIsNested = !1, nestedUpdateScheduled = !1, currentEntangledListeners = null, currentEntangledPendingCount = 0, currentEntangledLane = 0, currentEntangledActionThenable = null, prevOnStartTransitionFinish = ReactSharedInternals.S;
    ReactSharedInternals.S = function(transition, returnValue) {
        "object" === typeof returnValue && null !== returnValue && "function" === typeof returnValue.then && entangleAsyncAction(transition, returnValue);
        null !== prevOnStartTransitionFinish && prevOnStartTransitionFinish(transition, returnValue);
    };
    var resumedCache = createCursor(null), ReactStrictModeWarnings = {
        recordUnsafeLifecycleWarnings: function() {},
        flushPendingUnsafeLifecycleWarnings: function() {},
        recordLegacyContextWarning: function() {},
        flushLegacyContextWarning: function() {},
        discardPendingWarnings: function() {}
    }, pendingComponentWillMountWarnings = [], pendingUNSAFE_ComponentWillMountWarnings = [], pendingComponentWillReceivePropsWarnings = [], pendingUNSAFE_ComponentWillReceivePropsWarnings = [], pendingComponentWillUpdateWarnings = [], pendingUNSAFE_ComponentWillUpdateWarnings = [], didWarnAboutUnsafeLifecycles = new Set();
    ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
        didWarnAboutUnsafeLifecycles.has(fiber.type) || ("function" === typeof instance.componentWillMount && !0 !== instance.componentWillMount.__suppressDeprecationWarning && pendingComponentWillMountWarnings.push(fiber), fiber.mode & StrictLegacyMode && "function" === typeof instance.UNSAFE_componentWillMount && pendingUNSAFE_ComponentWillMountWarnings.push(fiber), "function" === typeof instance.componentWillReceiveProps && !0 !== instance.componentWillReceiveProps.__suppressDeprecationWarning && pendingComponentWillReceivePropsWarnings.push(fiber), fiber.mode & StrictLegacyMode && "function" === typeof instance.UNSAFE_componentWillReceiveProps && pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber), "function" === typeof instance.componentWillUpdate && !0 !== instance.componentWillUpdate.__suppressDeprecationWarning && pendingComponentWillUpdateWarnings.push(fiber), fiber.mode & StrictLegacyMode && "function" === typeof instance.UNSAFE_componentWillUpdate && pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber));
    };
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
        var componentWillMountUniqueNames = new Set();
        0 < pendingComponentWillMountWarnings.length && (pendingComponentWillMountWarnings.forEach(function(fiber) {
            componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingComponentWillMountWarnings = []);
        var UNSAFE_componentWillMountUniqueNames = new Set();
        0 < pendingUNSAFE_ComponentWillMountWarnings.length && (pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
            UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingUNSAFE_ComponentWillMountWarnings = []);
        var componentWillReceivePropsUniqueNames = new Set();
        0 < pendingComponentWillReceivePropsWarnings.length && (pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
            componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingComponentWillReceivePropsWarnings = []);
        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();
        0 < pendingUNSAFE_ComponentWillReceivePropsWarnings.length && (pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
            UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingUNSAFE_ComponentWillReceivePropsWarnings = []);
        var componentWillUpdateUniqueNames = new Set();
        0 < pendingComponentWillUpdateWarnings.length && (pendingComponentWillUpdateWarnings.forEach(function(fiber) {
            componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingComponentWillUpdateWarnings = []);
        var UNSAFE_componentWillUpdateUniqueNames = new Set();
        0 < pendingUNSAFE_ComponentWillUpdateWarnings.length && (pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
            UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingUNSAFE_ComponentWillUpdateWarnings = []);
        if (0 < UNSAFE_componentWillMountUniqueNames.size) {
            var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
            console.error("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
        }
        0 < UNSAFE_componentWillReceivePropsUniqueNames.size && (sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames), console.error("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n\nPlease update the following components: %s", sortedNames));
        0 < UNSAFE_componentWillUpdateUniqueNames.size && (sortedNames = setToSortedString(UNSAFE_componentWillUpdateUniqueNames), console.error("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", sortedNames));
        0 < componentWillMountUniqueNames.size && (sortedNames = setToSortedString(componentWillMountUniqueNames), console.warn("componentWillMount has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", sortedNames));
        0 < componentWillReceivePropsUniqueNames.size && (sortedNames = setToSortedString(componentWillReceivePropsUniqueNames), console.warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", sortedNames));
        0 < componentWillUpdateUniqueNames.size && (sortedNames = setToSortedString(componentWillUpdateUniqueNames), console.warn("componentWillUpdate has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", sortedNames));
    };
    var pendingLegacyContextWarning = new Map(), didWarnAboutLegacyContext = new Set();
    ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
        var strictRoot = null;
        for(var node = fiber; null !== node;)node.mode & StrictLegacyMode && (strictRoot = node), node = node.return;
        null === strictRoot ? console.error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.") : !didWarnAboutLegacyContext.has(fiber.type) && (node = pendingLegacyContextWarning.get(strictRoot), null != fiber.type.contextTypes || null != fiber.type.childContextTypes || null !== instance && "function" === typeof instance.getChildContext) && (void 0 === node && (node = [], pendingLegacyContextWarning.set(strictRoot, node)), node.push(fiber));
    };
    ReactStrictModeWarnings.flushLegacyContextWarning = function() {
        pendingLegacyContextWarning.forEach(function(fiberArray) {
            if (0 !== fiberArray.length) {
                var firstFiber = fiberArray[0], uniqueNames = new Set();
                fiberArray.forEach(function(fiber) {
                    uniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                    didWarnAboutLegacyContext.add(fiber.type);
                });
                var sortedNames = setToSortedString(uniqueNames);
                runWithFiberInDEV(firstFiber, function() {
                    console.error("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://react.dev/link/legacy-context", sortedNames);
                });
            }
        });
    };
    ReactStrictModeWarnings.discardPendingWarnings = function() {
        pendingComponentWillMountWarnings = [];
        pendingUNSAFE_ComponentWillMountWarnings = [];
        pendingComponentWillReceivePropsWarnings = [];
        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        pendingComponentWillUpdateWarnings = [];
        pendingUNSAFE_ComponentWillUpdateWarnings = [];
        pendingLegacyContextWarning = new Map();
    };
    var SuspenseException = Error("Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`."), SuspenseyCommitException = Error("Suspense Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."), SuspenseActionException = Error("Suspense Exception: This is not a real error! It's an implementation detail of `useActionState` to interrupt the current render. You must either rethrow it immediately, or move the `useActionState` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary."), noopSuspenseyCommitThenable = {
        then: function() {
            console.error('Internal React error: A listener was unexpectedly attached to a "noop" thenable. This is a bug in React. Please file an issue.');
        }
    }, suspendedThenable = null, needsToResetSuspendedThenableDEV = !1, NoFlags = 0, HasEffect = 1, Insertion = 2, Layout = 4, Passive = 8, UpdateState = 0, ReplaceState = 1, ForceUpdate = 2, CaptureUpdate = 3, hasForceUpdate = !1;
    var didWarnUpdateInsideUpdate = !1;
    var currentlyProcessingQueue = null;
    var didReadFromEntangledAsyncAction = !1, currentTreeHiddenStackCursor = createCursor(null), prevEntangledRenderLanesCursor = createCursor(0), didWarnUncachedGetSnapshot;
    var didWarnAboutMismatchedHooksForComponent = new Set();
    var didWarnAboutUseWrappedInTryCatch = new Set();
    var didWarnAboutAsyncClientComponent = new Set();
    var didWarnAboutUseFormState = new Set();
    var renderLanes = 0, currentlyRenderingFiber = null, currentHook = null, workInProgressHook = null, didScheduleRenderPhaseUpdate = !1, didScheduleRenderPhaseUpdateDuringThisPass = !1, shouldDoubleInvokeUserFnsInHooksDEV = !1, localIdCounter = 0, thenableIndexCounter$1 = 0, thenableState$1 = null, globalClientIdCounter = 0, RE_RENDER_LIMIT = 25, currentHookNameInDev = null, hookTypesDev = null, hookTypesUpdateIndexDev = -1, ignorePreviousDependencies = !1, ContextOnlyDispatcher = {
        readContext: readContext,
        use: use,
        useCallback: throwInvalidHookError,
        useContext: throwInvalidHookError,
        useEffect: throwInvalidHookError,
        useImperativeHandle: throwInvalidHookError,
        useLayoutEffect: throwInvalidHookError,
        useInsertionEffect: throwInvalidHookError,
        useMemo: throwInvalidHookError,
        useReducer: throwInvalidHookError,
        useRef: throwInvalidHookError,
        useState: throwInvalidHookError,
        useDebugValue: throwInvalidHookError,
        useDeferredValue: throwInvalidHookError,
        useTransition: throwInvalidHookError,
        useSyncExternalStore: throwInvalidHookError,
        useId: throwInvalidHookError,
        useHostTransitionStatus: throwInvalidHookError,
        useFormState: throwInvalidHookError,
        useActionState: throwInvalidHookError,
        useOptimistic: throwInvalidHookError,
        useMemoCache: throwInvalidHookError,
        useCacheRefresh: throwInvalidHookError
    }, HooksDispatcherOnMountInDEV = null, HooksDispatcherOnMountWithHookTypesInDEV = null, HooksDispatcherOnUpdateInDEV = null, HooksDispatcherOnRerenderInDEV = null, InvalidNestedHooksDispatcherOnMountInDEV = null, InvalidNestedHooksDispatcherOnUpdateInDEV = null, InvalidNestedHooksDispatcherOnRerenderInDEV = null;
    HooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        use: use,
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(createDeps);
            return mountEffect(create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            mountEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            mountHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            mountHookTypesDev();
            return mountDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            mountHookTypesDev();
            return mountTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            mountHookTypesDev();
            return mountId();
        },
        useFormState: function(action, initialState) {
            currentHookNameInDev = "useFormState";
            mountHookTypesDev();
            warnOnUseFormStateInDev();
            return mountActionState(action, initialState);
        },
        useActionState: function(action, initialState) {
            currentHookNameInDev = "useActionState";
            mountHookTypesDev();
            return mountActionState(action, initialState);
        },
        useOptimistic: function(passthrough) {
            currentHookNameInDev = "useOptimistic";
            mountHookTypesDev();
            return mountOptimistic(passthrough);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useMemoCache: useMemoCache,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            mountHookTypesDev();
            return mountRefresh();
        }
    };
    HooksDispatcherOnMountWithHookTypesInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        use: use,
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            return mountEffect(create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            mountEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return mountDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return mountTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return mountId();
        },
        useActionState: function(action, initialState) {
            currentHookNameInDev = "useActionState";
            updateHookTypesDev();
            return mountActionState(action, initialState);
        },
        useFormState: function(action, initialState) {
            currentHookNameInDev = "useFormState";
            updateHookTypesDev();
            warnOnUseFormStateInDev();
            return mountActionState(action, initialState);
        },
        useOptimistic: function(passthrough) {
            currentHookNameInDev = "useOptimistic";
            updateHookTypesDev();
            return mountOptimistic(passthrough);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useMemoCache: useMemoCache,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return mountRefresh();
        }
    };
    HooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        use: use,
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            updateEffectImpl(2048, Passive, create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return updateEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return updateEffectImpl(4, Layout, create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function() {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useState: function() {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(basicStateReducer);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return updateDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return updateTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useFormState: function(action) {
            currentHookNameInDev = "useFormState";
            updateHookTypesDev();
            warnOnUseFormStateInDev();
            return updateActionState(action);
        },
        useActionState: function(action) {
            currentHookNameInDev = "useActionState";
            updateHookTypesDev();
            return updateActionState(action);
        },
        useOptimistic: function(passthrough, reducer) {
            currentHookNameInDev = "useOptimistic";
            updateHookTypesDev();
            return updateOptimistic(passthrough, reducer);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useMemoCache: useMemoCache,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        }
    };
    HooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        use: use,
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            updateEffectImpl(2048, Passive, create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return updateEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return updateEffectImpl(4, Layout, create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function() {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useState: function() {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderReducer(basicStateReducer);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return rerenderDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return rerenderTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useFormState: function(action) {
            currentHookNameInDev = "useFormState";
            updateHookTypesDev();
            warnOnUseFormStateInDev();
            return rerenderActionState(action);
        },
        useActionState: function(action) {
            currentHookNameInDev = "useActionState";
            updateHookTypesDev();
            return rerenderActionState(action);
        },
        useOptimistic: function(passthrough, reducer) {
            currentHookNameInDev = "useOptimistic";
            updateHookTypesDev();
            return rerenderOptimistic(passthrough, reducer);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useMemoCache: useMemoCache,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        }
    };
    InvalidNestedHooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        use: function(usable) {
            warnInvalidHookAccess();
            return use(usable);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountEffect(create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            mountEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            mountHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountId();
        },
        useFormState: function(action, initialState) {
            currentHookNameInDev = "useFormState";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountActionState(action, initialState);
        },
        useActionState: function(action, initialState) {
            currentHookNameInDev = "useActionState";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountActionState(action, initialState);
        },
        useOptimistic: function(passthrough) {
            currentHookNameInDev = "useOptimistic";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountOptimistic(passthrough);
        },
        useMemoCache: function(size) {
            warnInvalidHookAccess();
            return useMemoCache(size);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            mountHookTypesDev();
            return mountRefresh();
        }
    };
    InvalidNestedHooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        use: function(usable) {
            warnInvalidHookAccess();
            return use(usable);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            updateEffectImpl(2048, Passive, create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffectImpl(4, Layout, create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function() {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useState: function() {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(basicStateReducer);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useFormState: function(action) {
            currentHookNameInDev = "useFormState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateActionState(action);
        },
        useActionState: function(action) {
            currentHookNameInDev = "useActionState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateActionState(action);
        },
        useOptimistic: function(passthrough, reducer) {
            currentHookNameInDev = "useOptimistic";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateOptimistic(passthrough, reducer);
        },
        useMemoCache: function(size) {
            warnInvalidHookAccess();
            return useMemoCache(size);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        }
    };
    InvalidNestedHooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        use: function(usable) {
            warnInvalidHookAccess();
            return use(usable);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            updateEffectImpl(2048, Passive, create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffectImpl(4, Layout, create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function() {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useState: function() {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderReducer(basicStateReducer);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useFormState: function(action) {
            currentHookNameInDev = "useFormState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderActionState(action);
        },
        useActionState: function(action) {
            currentHookNameInDev = "useActionState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderActionState(action);
        },
        useOptimistic: function(passthrough, reducer) {
            currentHookNameInDev = "useOptimistic";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderOptimistic(passthrough, reducer);
        },
        useMemoCache: function(size) {
            warnInvalidHookAccess();
            return useMemoCache(size);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        }
    };
    var callComponent = {
        "react-stack-bottom-frame": function(Component, props, secondArg) {
            var wasRendering = isRendering;
            isRendering = !0;
            try {
                return Component(props, secondArg);
            } finally{
                isRendering = wasRendering;
            }
        }
    }, callComponentInDEV = callComponent["react-stack-bottom-frame"].bind(callComponent), callRender = {
        "react-stack-bottom-frame": function(instance) {
            var wasRendering = isRendering;
            isRendering = !0;
            try {
                return instance.render();
            } finally{
                isRendering = wasRendering;
            }
        }
    }, callRenderInDEV = callRender["react-stack-bottom-frame"].bind(callRender), callComponentDidMount = {
        "react-stack-bottom-frame": function(finishedWork, instance) {
            try {
                instance.componentDidMount();
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
        }
    }, callComponentDidMountInDEV = callComponentDidMount["react-stack-bottom-frame"].bind(callComponentDidMount), callComponentDidUpdate = {
        "react-stack-bottom-frame": function(finishedWork, instance, prevProps, prevState, snapshot) {
            try {
                instance.componentDidUpdate(prevProps, prevState, snapshot);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
        }
    }, callComponentDidUpdateInDEV = callComponentDidUpdate["react-stack-bottom-frame"].bind(callComponentDidUpdate), callComponentDidCatch = {
        "react-stack-bottom-frame": function(instance, errorInfo) {
            var stack = errorInfo.stack;
            instance.componentDidCatch(errorInfo.value, {
                componentStack: null !== stack ? stack : ""
            });
        }
    }, callComponentDidCatchInDEV = callComponentDidCatch["react-stack-bottom-frame"].bind(callComponentDidCatch), callComponentWillUnmount = {
        "react-stack-bottom-frame": function(current, nearestMountedAncestor, instance) {
            try {
                instance.componentWillUnmount();
            } catch (error) {
                captureCommitPhaseError(current, nearestMountedAncestor, error);
            }
        }
    }, callComponentWillUnmountInDEV = callComponentWillUnmount["react-stack-bottom-frame"].bind(callComponentWillUnmount), callCreate = {
        "react-stack-bottom-frame": function(effect) {
            null != effect.resourceKind && console.error("Expected only SimpleEffects when enableUseEffectCRUDOverload is disabled, got %s", effect.resourceKind);
            var create = effect.create;
            effect = effect.inst;
            create = create();
            return effect.destroy = create;
        }
    }, callCreateInDEV = callCreate["react-stack-bottom-frame"].bind(callCreate), callDestroy = {
        "react-stack-bottom-frame": function(current, nearestMountedAncestor, destroy) {
            try {
                destroy();
            } catch (error) {
                captureCommitPhaseError(current, nearestMountedAncestor, error);
            }
        }
    }, callDestroyInDEV = callDestroy["react-stack-bottom-frame"].bind(callDestroy), callLazyInit = {
        "react-stack-bottom-frame": function(lazy) {
            var init = lazy._init;
            return init(lazy._payload);
        }
    }, callLazyInitInDEV = callLazyInit["react-stack-bottom-frame"].bind(callLazyInit), thenableState = null, thenableIndexCounter = 0, currentDebugInfo = null, didWarnAboutMaps;
    var didWarnAboutGenerators = didWarnAboutMaps = !1;
    var ownerHasKeyUseWarning = {};
    var ownerHasFunctionTypeWarning = {};
    var ownerHasSymbolTypeWarning = {};
    warnForMissingKey = function(returnFiber, workInProgress, child) {
        if (null !== child && "object" === typeof child && child._store && (!child._store.validated && null == child.key || 2 === child._store.validated)) {
            if ("object" !== typeof child._store) throw Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
            child._store.validated = 1;
            var componentName = getComponentNameFromFiber(returnFiber), componentKey = componentName || "null";
            if (!ownerHasKeyUseWarning[componentKey]) {
                ownerHasKeyUseWarning[componentKey] = !0;
                child = child._owner;
                returnFiber = returnFiber._debugOwner;
                var currentComponentErrorInfo = "";
                returnFiber && "number" === typeof returnFiber.tag && (componentKey = getComponentNameFromFiber(returnFiber)) && (currentComponentErrorInfo = "\n\nCheck the render method of `" + componentKey + "`.");
                currentComponentErrorInfo || componentName && (currentComponentErrorInfo = "\n\nCheck the top-level render call using <" + componentName + ">.");
                var childOwnerAppendix = "";
                null != child && returnFiber !== child && (componentName = null, "number" === typeof child.tag ? componentName = getComponentNameFromFiber(child) : "string" === typeof child.name && (componentName = child.name), componentName && (childOwnerAppendix = " It was passed a child from " + componentName + "."));
                runWithFiberInDEV(workInProgress, function() {
                    console.error('Each child in a list should have a unique "key" prop.%s%s See https://react.dev/link/warning-keys for more information.', currentComponentErrorInfo, childOwnerAppendix);
                });
            }
        }
    };
    var reconcileChildFibers = createChildReconciler(!0), mountChildFibers = createChildReconciler(!1), suspenseHandlerStackCursor = createCursor(null), shellBoundary = null, SubtreeSuspenseContextMask = 1, ForceSuspenseFallback = 2, suspenseStackCursor = createCursor(0), fakeInternalInstance = {};
    var didWarnAboutStateAssignmentForComponent = new Set();
    var didWarnAboutUninitializedState = new Set();
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
    var didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
    var didWarnAboutDirectlyAssigningPropsToState = new Set();
    var didWarnAboutUndefinedDerivedState = new Set();
    var didWarnAboutContextTypes$1 = new Set();
    var didWarnAboutChildContextTypes = new Set();
    var didWarnAboutInvalidateContextType = new Set();
    var didWarnOnInvalidCallback = new Set();
    Object.freeze(fakeInternalInstance);
    var classComponentUpdater = {
        enqueueSetState: function(inst, payload, callback) {
            inst = inst._reactInternals;
            var lane = requestUpdateLane(inst), update = createUpdate(lane);
            update.payload = payload;
            void 0 !== callback && null !== callback && (warnOnInvalidCallback(callback), update.callback = callback);
            payload = enqueueUpdate(inst, update, lane);
            null !== payload && (scheduleUpdateOnFiber(payload, inst, lane), entangleTransitions(payload, inst, lane));
            markStateUpdateScheduled(inst, lane);
        },
        enqueueReplaceState: function(inst, payload, callback) {
            inst = inst._reactInternals;
            var lane = requestUpdateLane(inst), update = createUpdate(lane);
            update.tag = ReplaceState;
            update.payload = payload;
            void 0 !== callback && null !== callback && (warnOnInvalidCallback(callback), update.callback = callback);
            payload = enqueueUpdate(inst, update, lane);
            null !== payload && (scheduleUpdateOnFiber(payload, inst, lane), entangleTransitions(payload, inst, lane));
            markStateUpdateScheduled(inst, lane);
        },
        enqueueForceUpdate: function(inst, callback) {
            inst = inst._reactInternals;
            var lane = requestUpdateLane(inst), update = createUpdate(lane);
            update.tag = ForceUpdate;
            void 0 !== callback && null !== callback && (warnOnInvalidCallback(callback), update.callback = callback);
            callback = enqueueUpdate(inst, update, lane);
            null !== callback && (scheduleUpdateOnFiber(callback, inst, lane), entangleTransitions(callback, inst, lane));
            null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markForceUpdateScheduled && injectedProfilingHooks.markForceUpdateScheduled(inst, lane);
        }
    }, reportGlobalError = "function" === typeof reportError ? reportError : function(error) {
        if ("object" === typeof window && "function" === typeof window.ErrorEvent) {
            var event = new window.ErrorEvent("error", {
                bubbles: !0,
                cancelable: !0,
                message: "object" === typeof error && null !== error && "string" === typeof error.message ? String(error.message) : String(error),
                error: error
            });
            if (!window.dispatchEvent(event)) return;
        }
        console.error(error);
    }, componentName = null, errorBoundaryName = null, SelectiveHydrationException = Error("This is not a real error. It's an implementation detail of React's selective hydration feature. If this leaks into userspace, it's a bug in React. Please file an issue."), didReceiveUpdate = !1;
    var didWarnAboutBadClass = {};
    var didWarnAboutContextTypeOnFunctionComponent = {};
    var didWarnAboutContextTypes = {};
    var didWarnAboutGetDerivedStateOnFunctionComponent = {};
    var didWarnAboutReassigningProps = !1;
    var didWarnAboutRevealOrder = {};
    var didWarnAboutTailOptions = {};
    var SUSPENDED_MARKER = {
        dehydrated: null,
        treeContext: null,
        retryLane: 0,
        hydrationErrors: null
    }, hasWarnedAboutUsingNoValuePropOnContextProvider = !1, didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    var offscreenSubtreeIsHidden = !1, offscreenSubtreeWasHidden = !1, needsFormReset = !1, PossiblyWeakSet = "function" === typeof WeakSet ? WeakSet : Set, nextEffect = null, inProgressLanes = null, inProgressRoot = null, hostParent = null, hostParentIsContainer = !1, currentHoistableRoot = null, suspenseyCommitFlag = 8192, DefaultAsyncDispatcher = {
        getCacheForType: function(resourceType) {
            var cache = readContext(CacheContext), cacheForType = cache.data.get(resourceType);
            void 0 === cacheForType && (cacheForType = resourceType(), cache.data.set(resourceType, cacheForType));
            return cacheForType;
        },
        getOwner: function() {
            return current;
        }
    };
    if ("function" === typeof Symbol && Symbol.for) {
        var symbolFor = Symbol.for;
        symbolFor("selector.component");
        symbolFor("selector.has_pseudo_class");
        symbolFor("selector.role");
        symbolFor("selector.test_id");
        symbolFor("selector.text");
    }
    var commitHooks = [], PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map, NoContext = 0, RenderContext = 2, CommitContext = 4, RootInProgress = 0, RootFatalErrored = 1, RootErrored = 2, RootSuspended = 3, RootSuspendedWithDelay = 4, RootSuspendedAtTheShell = 6, RootCompleted = 5, executionContext = NoContext, workInProgressRoot = null, workInProgress = null, workInProgressRootRenderLanes = 0, NotSuspended = 0, SuspendedOnError = 1, SuspendedOnData = 2, SuspendedOnImmediate = 3, SuspendedOnInstance = 4, SuspendedOnInstanceAndReadyToContinue = 5, SuspendedOnDeprecatedThrowPromise = 6, SuspendedAndReadyToContinue = 7, SuspendedOnHydration = 8, SuspendedOnAction = 9, workInProgressSuspendedReason = NotSuspended, workInProgressThrownValue = null, workInProgressRootDidSkipSuspendedSiblings = !1, workInProgressRootIsPrerendering = !1, workInProgressRootDidAttachPingListener = !1, entangledRenderLanes = 0, workInProgressRootExitStatus = RootInProgress, workInProgressRootSkippedLanes = 0, workInProgressRootInterleavedUpdatedLanes = 0, workInProgressRootPingedLanes = 0, workInProgressDeferredLane = 0, workInProgressSuspendedRetryLanes = 0, workInProgressRootConcurrentErrors = null, workInProgressRootRecoverableErrors = null, workInProgressRootDidIncludeRecursiveRenderUpdate = !1, globalMostRecentFallbackTime = 0, FALLBACK_THROTTLE_MS = 300, workInProgressRootRenderTargetTime = Infinity, RENDER_TIMEOUT_MS = 500, workInProgressTransitions = null, legacyErrorBoundariesThatAlreadyFailed = null, IMMEDIATE_COMMIT = 0, SUSPENDED_COMMIT = 1, THROTTLED_COMMIT = 2, NO_PENDING_EFFECTS = 0, PENDING_MUTATION_PHASE = 1, PENDING_LAYOUT_PHASE = 2, PENDING_AFTER_MUTATION_PHASE = 3, PENDING_SPAWNED_WORK = 4, PENDING_PASSIVE_PHASE = 5, pendingEffectsStatus = 0, pendingEffectsRoot = null, pendingFinishedWork = null, pendingEffectsLanes = 0, pendingEffectsRemainingLanes = 0, pendingPassiveTransitions = null, pendingRecoverableErrors = null, NESTED_UPDATE_LIMIT = 50, nestedUpdateCount = 0, rootWithNestedUpdates = null, isFlushingPassiveEffects = !1, didScheduleUpdateDuringPassiveEffects = !1, NESTED_PASSIVE_UPDATE_LIMIT = 50, nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = null, isRunningInsertionEffect = !1, didWarnStateUpdateForNotYetMountedComponent = null, didWarnAboutUpdateInRender = !1;
    var didWarnAboutUpdateInRenderForAnotherComponent = new Set();
    var fakeActCallbackNode$1 = {}, firstScheduledRoot = null, lastScheduledRoot = null, didScheduleMicrotask = !1, didScheduleMicrotask_act = !1, mightHavePendingSyncWork = !1, isFlushingWork = !1, currentEventTransitionLane = 0, fakeActCallbackNode = {};
    (function() {
        for(var i = 0; i < simpleEventPluginEvents.length; i++){
            var eventName = simpleEventPluginEvents[i], domEventName = eventName.toLowerCase();
            eventName = eventName[0].toUpperCase() + eventName.slice(1);
            registerSimpleEvent(domEventName, "on" + eventName);
        }
        registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
        registerSimpleEvent(ANIMATION_ITERATION, "onAnimationIteration");
        registerSimpleEvent(ANIMATION_START, "onAnimationStart");
        registerSimpleEvent("dblclick", "onDoubleClick");
        registerSimpleEvent("focusin", "onFocus");
        registerSimpleEvent("focusout", "onBlur");
        registerSimpleEvent(TRANSITION_RUN, "onTransitionRun");
        registerSimpleEvent(TRANSITION_START, "onTransitionStart");
        registerSimpleEvent(TRANSITION_CANCEL, "onTransitionCancel");
        registerSimpleEvent(TRANSITION_END, "onTransitionEnd");
    })();
    registerDirectEvent("onMouseEnter", [
        "mouseout",
        "mouseover"
    ]);
    registerDirectEvent("onMouseLeave", [
        "mouseout",
        "mouseover"
    ]);
    registerDirectEvent("onPointerEnter", [
        "pointerout",
        "pointerover"
    ]);
    registerDirectEvent("onPointerLeave", [
        "pointerout",
        "pointerover"
    ]);
    registerTwoPhaseEvent("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
    registerTwoPhaseEvent("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
    registerTwoPhaseEvent("onBeforeInput", [
        "compositionend",
        "keypress",
        "textInput",
        "paste"
    ]);
    registerTwoPhaseEvent("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
    registerTwoPhaseEvent("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
    registerTwoPhaseEvent("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
    var mediaEventTypes = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), nonDelegatedEvents = new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(mediaEventTypes)), listeningMarker = "_reactListening" + Math.random().toString(36).slice(2), didWarnControlledToUncontrolled = !1, didWarnUncontrolledToControlled = !1, didWarnFormActionType = !1, didWarnFormActionName = !1, didWarnFormActionTarget = !1, didWarnFormActionMethod = !1, didWarnPopoverTargetObject = !1;
    var didWarnForNewBooleanPropsWithEmptyValue = {};
    var NORMALIZE_NEWLINES_REGEX = /\r\n?/g, NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g, xlinkNamespace = "http://www.w3.org/1999/xlink", xmlNamespace = "http://www.w3.org/XML/1998/namespace", EXPECTED_FORM_ACTION_URL = "javascript:throw new Error('React form unexpectedly submitted.')", SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning", SUSPENSE_START_DATA = "$", SUSPENSE_END_DATA = "/$", SUSPENSE_PENDING_START_DATA = "$?", SUSPENSE_FALLBACK_START_DATA = "$!", PREAMBLE_CONTRIBUTION_HTML = 1, PREAMBLE_CONTRIBUTION_BODY = 2, PREAMBLE_CONTRIBUTION_HEAD = 4, FORM_STATE_IS_MATCHING = "F!", FORM_STATE_IS_NOT_MATCHING = "F", DOCUMENT_READY_STATE_COMPLETE = "complete", STYLE = "style", HostContextNamespaceNone = 0, HostContextNamespaceSvg = 1, HostContextNamespaceMath = 2, eventsEnabled = null, selectionInformation = null, warnedUnknownTags = {
        dialog: !0,
        webview: !0
    }, currentPopstateTransitionEvent = null, scheduleTimeout = "function" === typeof setTimeout ? setTimeout : void 0, cancelTimeout = "function" === typeof clearTimeout ? clearTimeout : void 0, noTimeout = -1, localPromise = "function" === typeof Promise ? Promise : void 0, scheduleMicrotask = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof localPromise ? function(callback) {
        return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
    } : scheduleTimeout, previousHydratableOnEnteringScopedSingleton = null, NotLoaded = 0, Loaded = 1, Errored = 2, Settled = 3, Inserted = 4, preloadPropsMap = new Map(), preconnectsSet = new Set(), previousDispatcher = ReactDOMSharedInternals.d;
    ReactDOMSharedInternals.d = {
        f: function() {
            var previousWasRendering = previousDispatcher.f(), wasRendering = flushSyncWork$1();
            return previousWasRendering || wasRendering;
        },
        r: function(form) {
            var formInst = getInstanceFromNode(form);
            null !== formInst && 5 === formInst.tag && "form" === formInst.type ? requestFormReset$1(formInst) : previousDispatcher.r(form);
        },
        D: function(href) {
            previousDispatcher.D(href);
            preconnectAs("dns-prefetch", href, null);
        },
        C: function(href, crossOrigin) {
            previousDispatcher.C(href, crossOrigin);
            preconnectAs("preconnect", href, crossOrigin);
        },
        L: function(href, as, options) {
            previousDispatcher.L(href, as, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && href && as) {
                var preloadSelector = 'link[rel="preload"][as="' + escapeSelectorAttributeValueInsideDoubleQuotes(as) + '"]';
                "image" === as ? options && options.imageSrcSet ? (preloadSelector += '[imagesrcset="' + escapeSelectorAttributeValueInsideDoubleQuotes(options.imageSrcSet) + '"]', "string" === typeof options.imageSizes && (preloadSelector += '[imagesizes="' + escapeSelectorAttributeValueInsideDoubleQuotes(options.imageSizes) + '"]')) : preloadSelector += '[href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"]' : preloadSelector += '[href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"]';
                var key = preloadSelector;
                switch(as){
                    case "style":
                        key = getStyleKey(href);
                        break;
                    case "script":
                        key = getScriptKey(href);
                }
                preloadPropsMap.has(key) || (href = assign({
                    rel: "preload",
                    href: "image" === as && options && options.imageSrcSet ? void 0 : href,
                    as: as
                }, options), preloadPropsMap.set(key, href), null !== ownerDocument.querySelector(preloadSelector) || "style" === as && ownerDocument.querySelector(getStylesheetSelectorFromKey(key)) || "script" === as && ownerDocument.querySelector(getScriptSelectorFromKey(key)) || (as = ownerDocument.createElement("link"), setInitialProperties(as, "link", href), markNodeAsHoistable(as), ownerDocument.head.appendChild(as)));
            }
        },
        m: function(href, options) {
            previousDispatcher.m(href, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && href) {
                var as = options && "string" === typeof options.as ? options.as : "script", preloadSelector = 'link[rel="modulepreload"][as="' + escapeSelectorAttributeValueInsideDoubleQuotes(as) + '"][href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"]', key = preloadSelector;
                switch(as){
                    case "audioworklet":
                    case "paintworklet":
                    case "serviceworker":
                    case "sharedworker":
                    case "worker":
                    case "script":
                        key = getScriptKey(href);
                }
                if (!preloadPropsMap.has(key) && (href = assign({
                    rel: "modulepreload",
                    href: href
                }, options), preloadPropsMap.set(key, href), null === ownerDocument.querySelector(preloadSelector))) {
                    switch(as){
                        case "audioworklet":
                        case "paintworklet":
                        case "serviceworker":
                        case "sharedworker":
                        case "worker":
                        case "script":
                            if (ownerDocument.querySelector(getScriptSelectorFromKey(key))) return;
                    }
                    as = ownerDocument.createElement("link");
                    setInitialProperties(as, "link", href);
                    markNodeAsHoistable(as);
                    ownerDocument.head.appendChild(as);
                }
            }
        },
        X: function(src, options) {
            previousDispatcher.X(src, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && src) {
                var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts, key = getScriptKey(src), resource = scripts.get(key);
                resource || (resource = ownerDocument.querySelector(getScriptSelectorFromKey(key)), resource || (src = assign({
                    src: src,
                    async: !0
                }, options), (options = preloadPropsMap.get(key)) && adoptPreloadPropsForScript(src, options), resource = ownerDocument.createElement("script"), markNodeAsHoistable(resource), setInitialProperties(resource, "link", src), ownerDocument.head.appendChild(resource)), resource = {
                    type: "script",
                    instance: resource,
                    count: 1,
                    state: null
                }, scripts.set(key, resource));
            }
        },
        S: function(href, precedence, options) {
            previousDispatcher.S(href, precedence, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && href) {
                var styles = getResourcesFromRoot(ownerDocument).hoistableStyles, key = getStyleKey(href);
                precedence = precedence || "default";
                var resource = styles.get(key);
                if (!resource) {
                    var state = {
                        loading: NotLoaded,
                        preload: null
                    };
                    if (resource = ownerDocument.querySelector(getStylesheetSelectorFromKey(key))) state.loading = Loaded | Inserted;
                    else {
                        href = assign({
                            rel: "stylesheet",
                            href: href,
                            "data-precedence": precedence
                        }, options);
                        (options = preloadPropsMap.get(key)) && adoptPreloadPropsForStylesheet(href, options);
                        var link = resource = ownerDocument.createElement("link");
                        markNodeAsHoistable(link);
                        setInitialProperties(link, "link", href);
                        link._p = new Promise(function(resolve, reject) {
                            link.onload = resolve;
                            link.onerror = reject;
                        });
                        link.addEventListener("load", function() {
                            state.loading |= Loaded;
                        });
                        link.addEventListener("error", function() {
                            state.loading |= Errored;
                        });
                        state.loading |= Inserted;
                        insertStylesheet(resource, precedence, ownerDocument);
                    }
                    resource = {
                        type: "stylesheet",
                        instance: resource,
                        count: 1,
                        state: state
                    };
                    styles.set(key, resource);
                }
            }
        },
        M: function(src, options) {
            previousDispatcher.M(src, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && src) {
                var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts, key = getScriptKey(src), resource = scripts.get(key);
                resource || (resource = ownerDocument.querySelector(getScriptSelectorFromKey(key)), resource || (src = assign({
                    src: src,
                    async: !0,
                    type: "module"
                }, options), (options = preloadPropsMap.get(key)) && adoptPreloadPropsForScript(src, options), resource = ownerDocument.createElement("script"), markNodeAsHoistable(resource), setInitialProperties(resource, "link", src), ownerDocument.head.appendChild(resource)), resource = {
                    type: "script",
                    instance: resource,
                    count: 1,
                    state: null
                }, scripts.set(key, resource));
            }
        }
    };
    var globalDocument = "undefined" === typeof document ? null : document, tagCaches = null, suspendedState = null, LAST_PRECEDENCE = null, precedencesByRoot = null, NotPendingTransition = NotPending, HostTransitionContext = {
        $$typeof: REACT_CONTEXT_TYPE,
        Provider: null,
        Consumer: null,
        _currentValue: NotPendingTransition,
        _currentValue2: NotPendingTransition,
        _threadCount: 0
    }, badgeFormat = "%c%s%c ", badgeStyle = "background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px", resetStyle = "", pad = " ", bind = Function.prototype.bind;
    var didWarnAboutNestedUpdates = !1;
    var overrideHookState = null, overrideHookStateDeletePath = null, overrideHookStateRenamePath = null, overrideProps = null, overridePropsDeletePath = null, overridePropsRenamePath = null, scheduleUpdate = null, setErrorHandler = null, setSuspenseHandler = null;
    overrideHookState = function(fiber, id, path, value) {
        id = findHook(fiber, id);
        null !== id && (path = copyWithSetImpl(id.memoizedState, path, 0, value), id.memoizedState = path, id.baseState = path, fiber.memoizedProps = assign({}, fiber.memoizedProps), path = enqueueConcurrentRenderForLane(fiber, 2), null !== path && scheduleUpdateOnFiber(path, fiber, 2));
    };
    overrideHookStateDeletePath = function(fiber, id, path) {
        id = findHook(fiber, id);
        null !== id && (path = copyWithDeleteImpl(id.memoizedState, path, 0), id.memoizedState = path, id.baseState = path, fiber.memoizedProps = assign({}, fiber.memoizedProps), path = enqueueConcurrentRenderForLane(fiber, 2), null !== path && scheduleUpdateOnFiber(path, fiber, 2));
    };
    overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
        id = findHook(fiber, id);
        null !== id && (oldPath = copyWithRename(id.memoizedState, oldPath, newPath), id.memoizedState = oldPath, id.baseState = oldPath, fiber.memoizedProps = assign({}, fiber.memoizedProps), oldPath = enqueueConcurrentRenderForLane(fiber, 2), null !== oldPath && scheduleUpdateOnFiber(oldPath, fiber, 2));
    };
    overrideProps = function(fiber, path, value) {
        fiber.pendingProps = copyWithSetImpl(fiber.memoizedProps, path, 0, value);
        fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
        path = enqueueConcurrentRenderForLane(fiber, 2);
        null !== path && scheduleUpdateOnFiber(path, fiber, 2);
    };
    overridePropsDeletePath = function(fiber, path) {
        fiber.pendingProps = copyWithDeleteImpl(fiber.memoizedProps, path, 0);
        fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
        path = enqueueConcurrentRenderForLane(fiber, 2);
        null !== path && scheduleUpdateOnFiber(path, fiber, 2);
    };
    overridePropsRenamePath = function(fiber, oldPath, newPath) {
        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
        fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
        oldPath = enqueueConcurrentRenderForLane(fiber, 2);
        null !== oldPath && scheduleUpdateOnFiber(oldPath, fiber, 2);
    };
    scheduleUpdate = function(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, 2);
        null !== root && scheduleUpdateOnFiber(root, fiber, 2);
    };
    setErrorHandler = function(newShouldErrorImpl) {
        shouldErrorImpl = newShouldErrorImpl;
    };
    setSuspenseHandler = function(newShouldSuspendImpl) {
        shouldSuspendImpl = newShouldSuspendImpl;
    };
    var _enabled = !0, return_targetInst = null, hasScheduledReplayAttempt = !1, queuedFocus = null, queuedDrag = null, queuedMouse = null, queuedPointers = new Map(), queuedPointerCaptures = new Map(), queuedExplicitHydrationTargets = [], discreteReplayableEvents = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" "), lastScheduledReplayQueue = null;
    ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(children) {
        var root = this._internalRoot;
        if (null === root) throw Error("Cannot update an unmounted root.");
        var args = arguments;
        "function" === typeof args[1] ? console.error("does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().") : isValidContainer(args[1]) ? console.error("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.") : "undefined" !== typeof args[1] && console.error("You passed a second argument to root.render(...) but it only accepts one argument.");
        args = children;
        var current = root.current, lane = requestUpdateLane(current);
        updateContainerImpl(current, lane, args, root, null, null);
    };
    ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function() {
        var args = arguments;
        "function" === typeof args[0] && console.error("does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        args = this._internalRoot;
        if (null !== args) {
            this._internalRoot = null;
            var container = args.containerInfo;
            (executionContext & (RenderContext | CommitContext)) !== NoContext && console.error("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.");
            updateContainerImpl(args.current, 2, null, args, null, null);
            flushSyncWork$1();
            container[internalContainerInstanceKey] = null;
        }
    };
    ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function(target) {
        if (target) {
            var updatePriority = resolveUpdatePriority();
            target = {
                blockedOn: null,
                target: target,
                priority: updatePriority
            };
            for(var i = 0; i < queuedExplicitHydrationTargets.length && 0 !== updatePriority && updatePriority < queuedExplicitHydrationTargets[i].priority; i++);
            queuedExplicitHydrationTargets.splice(i, 0, target);
            0 === i && attemptExplicitHydrationTarget(target);
        }
    };
    (function() {
        var isomorphicReactPackageVersion = React.version;
        if ("19.1.0" !== isomorphicReactPackageVersion) throw Error('Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' + (isomorphicReactPackageVersion + "\n  - react-dom:  19.1.0\nLearn more: https://react.dev/warnings/version-mismatch"));
    })();
    "function" === typeof Map && null != Map.prototype && "function" === typeof Map.prototype.forEach && "function" === typeof Set && null != Set.prototype && "function" === typeof Set.prototype.clear && "function" === typeof Set.prototype.forEach || console.error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://react.dev/link/react-polyfills");
    ReactDOMSharedInternals.findDOMNode = function(componentOrElement) {
        var fiber = componentOrElement._reactInternals;
        if (void 0 === fiber) {
            if ("function" === typeof componentOrElement.render) throw Error("Unable to find node on an unmounted component.");
            componentOrElement = Object.keys(componentOrElement).join(",");
            throw Error("Argument appears to not be a ReactComponent. Keys: " + componentOrElement);
        }
        componentOrElement = findCurrentFiberUsingSlowPath(fiber);
        componentOrElement = null !== componentOrElement ? findCurrentHostFiberImpl(componentOrElement) : null;
        componentOrElement = null === componentOrElement ? null : componentOrElement.stateNode;
        return componentOrElement;
    };
    if (!function() {
        var internals = {
            bundleType: 1,
            version: "19.1.0",
            rendererPackageName: "react-dom",
            currentDispatcherRef: ReactSharedInternals,
            reconcilerVersion: "19.1.0"
        };
        internals.overrideHookState = overrideHookState;
        internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
        internals.overrideHookStateRenamePath = overrideHookStateRenamePath;
        internals.overrideProps = overrideProps;
        internals.overridePropsDeletePath = overridePropsDeletePath;
        internals.overridePropsRenamePath = overridePropsRenamePath;
        internals.scheduleUpdate = scheduleUpdate;
        internals.setErrorHandler = setErrorHandler;
        internals.setSuspenseHandler = setSuspenseHandler;
        internals.scheduleRefresh = scheduleRefresh;
        internals.scheduleRoot = scheduleRoot;
        internals.setRefreshHandler = setRefreshHandler;
        internals.getCurrentFiber = getCurrentFiberForDevTools;
        internals.getLaneLabelMap = getLaneLabelMap;
        internals.injectProfilingHooks = injectProfilingHooks;
        return injectInternals(internals);
    }() && canUseDOM && window.top === window.self && (-1 < navigator.userAgent.indexOf("Chrome") && -1 === navigator.userAgent.indexOf("Edge") || -1 < navigator.userAgent.indexOf("Firefox"))) {
        var protocol = window.location.protocol;
        /^(https?|file):$/.test(protocol) && console.info("%cDownload the React DevTools for a better development experience: https://react.dev/link/react-devtools" + ("file:" === protocol ? "\nYou might need to use a local HTTP server (instead of file://): https://react.dev/link/react-devtools-faq" : ""), "font-weight:bold");
    }
    exports.createRoot = function(container, options) {
        if (!isValidContainer(container)) throw Error("Target container is not a DOM element.");
        warnIfReactDOMContainerInDEV(container);
        var isStrictMode = !1, identifierPrefix = "", onUncaughtError = defaultOnUncaughtError, onCaughtError = defaultOnCaughtError, onRecoverableError = defaultOnRecoverableError, transitionCallbacks = null;
        null !== options && void 0 !== options && (options.hydrate ? console.warn("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.") : "object" === typeof options && null !== options && options.$$typeof === REACT_ELEMENT_TYPE && console.error("You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);"), !0 === options.unstable_strictMode && (isStrictMode = !0), void 0 !== options.identifierPrefix && (identifierPrefix = options.identifierPrefix), void 0 !== options.onUncaughtError && (onUncaughtError = options.onUncaughtError), void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError), void 0 !== options.onRecoverableError && (onRecoverableError = options.onRecoverableError), void 0 !== options.unstable_transitionCallbacks && (transitionCallbacks = options.unstable_transitionCallbacks));
        options = createFiberRoot(container, 1, !1, null, null, isStrictMode, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, transitionCallbacks, null);
        container[internalContainerInstanceKey] = options.current;
        listenToAllSupportedEvents(container);
        return new ReactDOMRoot(options);
    };
    exports.hydrateRoot = function(container, initialChildren, options) {
        if (!isValidContainer(container)) throw Error("Target container is not a DOM element.");
        warnIfReactDOMContainerInDEV(container);
        void 0 === initialChildren && console.error("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
        var isStrictMode = !1, identifierPrefix = "", onUncaughtError = defaultOnUncaughtError, onCaughtError = defaultOnCaughtError, onRecoverableError = defaultOnRecoverableError, transitionCallbacks = null, formState = null;
        null !== options && void 0 !== options && (!0 === options.unstable_strictMode && (isStrictMode = !0), void 0 !== options.identifierPrefix && (identifierPrefix = options.identifierPrefix), void 0 !== options.onUncaughtError && (onUncaughtError = options.onUncaughtError), void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError), void 0 !== options.onRecoverableError && (onRecoverableError = options.onRecoverableError), void 0 !== options.unstable_transitionCallbacks && (transitionCallbacks = options.unstable_transitionCallbacks), void 0 !== options.formState && (formState = options.formState));
        initialChildren = createFiberRoot(container, 1, !0, initialChildren, null != options ? options : null, isStrictMode, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, transitionCallbacks, formState);
        initialChildren.context = getContextForSubtree(null);
        options = initialChildren.current;
        isStrictMode = requestUpdateLane(options);
        isStrictMode = getBumpedLaneForHydrationByLane(isStrictMode);
        identifierPrefix = createUpdate(isStrictMode);
        identifierPrefix.callback = null;
        enqueueUpdate(options, identifierPrefix, isStrictMode);
        options = isStrictMode;
        initialChildren.current.lanes = options;
        markRootUpdated$1(initialChildren, options);
        ensureRootIsScheduled(initialChildren);
        container[internalContainerInstanceKey] = initialChildren.current;
        listenToAllSupportedEvents(container);
        return new ReactDOMHydrationRoot(initialChildren);
    };
    exports.version = "19.1.0";
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{"c31f9b99c1e288cf":"4OQ2m","c4c4bc2113e5c77f":"jMk1U","772d609564cfd8f6":"i4X7T"}],"4OQ2m":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("ef03b89c8fe2794e");

},{"ef03b89c8fe2794e":"j5hep"}],"j5hep":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function performWorkUntilDeadline() {
        needsPaint = !1;
        if (isMessageLoopRunning) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasMoreWork = !0;
            try {
                a: {
                    isHostCallbackScheduled = !1;
                    isHostTimeoutScheduled && (isHostTimeoutScheduled = !1, localClearTimeout(taskTimeoutID), taskTimeoutID = -1);
                    isPerformingWork = !0;
                    var previousPriorityLevel = currentPriorityLevel;
                    try {
                        b: {
                            advanceTimers(currentTime);
                            for(currentTask = peek(taskQueue); null !== currentTask && !(currentTask.expirationTime > currentTime && shouldYieldToHost());){
                                var callback = currentTask.callback;
                                if ("function" === typeof callback) {
                                    currentTask.callback = null;
                                    currentPriorityLevel = currentTask.priorityLevel;
                                    var continuationCallback = callback(currentTask.expirationTime <= currentTime);
                                    currentTime = exports.unstable_now();
                                    if ("function" === typeof continuationCallback) {
                                        currentTask.callback = continuationCallback;
                                        advanceTimers(currentTime);
                                        hasMoreWork = !0;
                                        break b;
                                    }
                                    currentTask === peek(taskQueue) && pop(taskQueue);
                                    advanceTimers(currentTime);
                                } else pop(taskQueue);
                                currentTask = peek(taskQueue);
                            }
                            if (null !== currentTask) hasMoreWork = !0;
                            else {
                                var firstTimer = peek(timerQueue);
                                null !== firstTimer && requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
                                hasMoreWork = !1;
                            }
                        }
                        break a;
                    } finally{
                        currentTask = null, currentPriorityLevel = previousPriorityLevel, isPerformingWork = !1;
                    }
                    hasMoreWork = void 0;
                }
            } finally{
                hasMoreWork ? schedulePerformWorkUntilDeadline() : isMessageLoopRunning = !1;
            }
        }
    }
    function push(heap, node) {
        var index = heap.length;
        heap.push(node);
        a: for(; 0 < index;){
            var parentIndex = index - 1 >>> 1, parent = heap[parentIndex];
            if (0 < compare(parent, node)) heap[parentIndex] = node, heap[index] = parent, index = parentIndex;
            else break a;
        }
    }
    function peek(heap) {
        return 0 === heap.length ? null : heap[0];
    }
    function pop(heap) {
        if (0 === heap.length) return null;
        var first = heap[0], last = heap.pop();
        if (last !== first) {
            heap[0] = last;
            a: for(var index = 0, length = heap.length, halfLength = length >>> 1; index < halfLength;){
                var leftIndex = 2 * (index + 1) - 1, left = heap[leftIndex], rightIndex = leftIndex + 1, right = heap[rightIndex];
                if (0 > compare(left, last)) rightIndex < length && 0 > compare(right, left) ? (heap[index] = right, heap[rightIndex] = last, index = rightIndex) : (heap[index] = left, heap[leftIndex] = last, index = leftIndex);
                else if (rightIndex < length && 0 > compare(right, last)) heap[index] = right, heap[rightIndex] = last, index = rightIndex;
                else break a;
            }
        }
        return first;
    }
    function compare(a, b) {
        var diff = a.sortIndex - b.sortIndex;
        return 0 !== diff ? diff : a.id - b.id;
    }
    function advanceTimers(currentTime) {
        for(var timer = peek(timerQueue); null !== timer;){
            if (null === timer.callback) pop(timerQueue);
            else if (timer.startTime <= currentTime) pop(timerQueue), timer.sortIndex = timer.expirationTime, push(taskQueue, timer);
            else break;
            timer = peek(timerQueue);
        }
    }
    function handleTimeout(currentTime) {
        isHostTimeoutScheduled = !1;
        advanceTimers(currentTime);
        if (!isHostCallbackScheduled) {
            if (null !== peek(taskQueue)) isHostCallbackScheduled = !0, isMessageLoopRunning || (isMessageLoopRunning = !0, schedulePerformWorkUntilDeadline());
            else {
                var firstTimer = peek(timerQueue);
                null !== firstTimer && requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
        }
    }
    function shouldYieldToHost() {
        return needsPaint ? !0 : exports.unstable_now() - startTime < frameInterval ? !1 : !0;
    }
    function requestHostTimeout(callback, ms) {
        taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
        }, ms);
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    exports.unstable_now = void 0;
    if ("object" === typeof performance && "function" === typeof performance.now) {
        var localPerformance = performance;
        exports.unstable_now = function() {
            return localPerformance.now();
        };
    } else {
        var localDate = Date, initialTime = localDate.now();
        exports.unstable_now = function() {
            return localDate.now() - initialTime;
        };
    }
    var taskQueue = [], timerQueue = [], taskIdCounter = 1, currentTask = null, currentPriorityLevel = 3, isPerformingWork = !1, isHostCallbackScheduled = !1, isHostTimeoutScheduled = !1, needsPaint = !1, localSetTimeout = "function" === typeof setTimeout ? setTimeout : null, localClearTimeout = "function" === typeof clearTimeout ? clearTimeout : null, localSetImmediate = "undefined" !== typeof setImmediate ? setImmediate : null, isMessageLoopRunning = !1, taskTimeoutID = -1, frameInterval = 5, startTime = -1;
    if ("function" === typeof localSetImmediate) var schedulePerformWorkUntilDeadline = function() {
        localSetImmediate(performWorkUntilDeadline);
    };
    else if ("undefined" !== typeof MessageChannel) {
        var channel = new MessageChannel(), port = channel.port2;
        channel.port1.onmessage = performWorkUntilDeadline;
        schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
        };
    } else schedulePerformWorkUntilDeadline = function() {
        localSetTimeout(performWorkUntilDeadline, 0);
    };
    exports.unstable_IdlePriority = 5;
    exports.unstable_ImmediatePriority = 1;
    exports.unstable_LowPriority = 4;
    exports.unstable_NormalPriority = 3;
    exports.unstable_Profiling = null;
    exports.unstable_UserBlockingPriority = 2;
    exports.unstable_cancelCallback = function(task) {
        task.callback = null;
    };
    exports.unstable_forceFrameRate = function(fps) {
        0 > fps || 125 < fps ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5;
    };
    exports.unstable_getCurrentPriorityLevel = function() {
        return currentPriorityLevel;
    };
    exports.unstable_next = function(eventHandler) {
        switch(currentPriorityLevel){
            case 1:
            case 2:
            case 3:
                var priorityLevel = 3;
                break;
            default:
                priorityLevel = currentPriorityLevel;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    };
    exports.unstable_requestPaint = function() {
        needsPaint = !0;
    };
    exports.unstable_runWithPriority = function(priorityLevel, eventHandler) {
        switch(priorityLevel){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                priorityLevel = 3;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    };
    exports.unstable_scheduleCallback = function(priorityLevel, callback, options) {
        var currentTime = exports.unstable_now();
        "object" === typeof options && null !== options ? (options = options.delay, options = "number" === typeof options && 0 < options ? currentTime + options : currentTime) : options = currentTime;
        switch(priorityLevel){
            case 1:
                var timeout = -1;
                break;
            case 2:
                timeout = 250;
                break;
            case 5:
                timeout = 1073741823;
                break;
            case 4:
                timeout = 1e4;
                break;
            default:
                timeout = 5e3;
        }
        timeout = options + timeout;
        priorityLevel = {
            id: taskIdCounter++,
            callback: callback,
            priorityLevel: priorityLevel,
            startTime: options,
            expirationTime: timeout,
            sortIndex: -1
        };
        options > currentTime ? (priorityLevel.sortIndex = options, push(timerQueue, priorityLevel), null === peek(taskQueue) && priorityLevel === peek(timerQueue) && (isHostTimeoutScheduled ? (localClearTimeout(taskTimeoutID), taskTimeoutID = -1) : isHostTimeoutScheduled = !0, requestHostTimeout(handleTimeout, options - currentTime))) : (priorityLevel.sortIndex = timeout, push(taskQueue, priorityLevel), isHostCallbackScheduled || isPerformingWork || (isHostCallbackScheduled = !0, isMessageLoopRunning || (isMessageLoopRunning = !0, schedulePerformWorkUntilDeadline())));
        return priorityLevel;
    };
    exports.unstable_shouldYield = shouldYieldToHost;
    exports.unstable_wrapCallback = function(callback) {
        var parentPriorityLevel = currentPriorityLevel;
        return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
                return callback.apply(this, arguments);
            } finally{
                currentPriorityLevel = previousPriorityLevel;
            }
        };
    };
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{}],"erbdh":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getElementById", ()=>getElementById);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Nullable/index.js");
var _indexJs2 = require("../Effect/index.js");
var map = /* #__PURE__ */ _indexJs.map(_indexJs2.functorEffect);
var getElementById = function(eid) {
    var $2 = map(_indexJs1.toMaybe);
    var $3 = _foreignJs["_getElementById"](eid);
    return function($4) {
        return $2($3($4));
    };
};

},{"./foreign.js":"l99VM","../Data.Functor/index.js":"j9NCu","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"l99VM":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_getElementById", ()=>_getElementById);
function _getElementById(id) {
    return function(node) {
        return function() {
            return node.getElementById(id);
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3BP8C":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "window", ()=>(0, _foreignJs.window));
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Web.HTML.Common/index.js");
var _indexJs1 = require("../Web.HTML.HTMLAnchorElement/index.js");
var _indexJs2 = require("../Web.HTML.HTMLAreaElement/index.js");
var _indexJs3 = require("../Web.HTML.HTMLAudioElement/index.js");
var _indexJs4 = require("../Web.HTML.HTMLBRElement/index.js");
var _indexJs5 = require("../Web.HTML.HTMLBaseElement/index.js");
var _indexJs6 = require("../Web.HTML.HTMLBodyElement/index.js");
var _indexJs7 = require("../Web.HTML.HTMLButtonElement/index.js");
var _indexJs8 = require("../Web.HTML.HTMLCanvasElement/index.js");
var _indexJs9 = require("../Web.HTML.HTMLDListElement/index.js");
var _indexJs10 = require("../Web.HTML.HTMLDataElement/index.js");
var _indexJs11 = require("../Web.HTML.HTMLDataListElement/index.js");
var _indexJs12 = require("../Web.HTML.HTMLDivElement/index.js");
var _indexJs13 = require("../Web.HTML.HTMLDocument/index.js");
var _indexJs14 = require("../Web.HTML.HTMLElement/index.js");
var _indexJs15 = require("../Web.HTML.HTMLEmbedElement/index.js");
var _indexJs16 = require("../Web.HTML.HTMLFieldSetElement/index.js");
var _indexJs17 = require("../Web.HTML.HTMLFormElement/index.js");
var _indexJs18 = require("../Web.HTML.HTMLHRElement/index.js");
var _indexJs19 = require("../Web.HTML.HTMLHeadElement/index.js");
var _indexJs20 = require("../Web.HTML.HTMLHeadingElement/index.js");
var _indexJs21 = require("../Web.HTML.HTMLIFrameElement/index.js");
var _indexJs22 = require("../Web.HTML.HTMLImageElement/index.js");
var _indexJs23 = require("../Web.HTML.HTMLInputElement/index.js");
var _indexJs24 = require("../Web.HTML.HTMLKeygenElement/index.js");
var _indexJs25 = require("../Web.HTML.HTMLLIElement/index.js");
var _indexJs26 = require("../Web.HTML.HTMLLabelElement/index.js");
var _indexJs27 = require("../Web.HTML.HTMLLegendElement/index.js");
var _indexJs28 = require("../Web.HTML.HTMLLinkElement/index.js");
var _indexJs29 = require("../Web.HTML.HTMLMapElement/index.js");
var _indexJs30 = require("../Web.HTML.HTMLMediaElement/index.js");
var _indexJs31 = require("../Web.HTML.HTMLMetaElement/index.js");
var _indexJs32 = require("../Web.HTML.HTMLMeterElement/index.js");
var _indexJs33 = require("../Web.HTML.HTMLModElement/index.js");
var _indexJs34 = require("../Web.HTML.HTMLOListElement/index.js");
var _indexJs35 = require("../Web.HTML.HTMLObjectElement/index.js");
var _indexJs36 = require("../Web.HTML.HTMLOptGroupElement/index.js");
var _indexJs37 = require("../Web.HTML.HTMLOptionElement/index.js");
var _indexJs38 = require("../Web.HTML.HTMLOutputElement/index.js");
var _indexJs39 = require("../Web.HTML.HTMLParagraphElement/index.js");
var _indexJs40 = require("../Web.HTML.HTMLParamElement/index.js");
var _indexJs41 = require("../Web.HTML.HTMLPreElement/index.js");
var _indexJs42 = require("../Web.HTML.HTMLProgressElement/index.js");
var _indexJs43 = require("../Web.HTML.HTMLQuoteElement/index.js");
var _indexJs44 = require("../Web.HTML.HTMLScriptElement/index.js");
var _indexJs45 = require("../Web.HTML.HTMLSelectElement/index.js");
var _indexJs46 = require("../Web.HTML.HTMLSourceElement/index.js");
var _indexJs47 = require("../Web.HTML.HTMLSpanElement/index.js");
var _indexJs48 = require("../Web.HTML.HTMLStyleElement/index.js");
var _indexJs49 = require("../Web.HTML.HTMLTableCaptionElement/index.js");
var _indexJs50 = require("../Web.HTML.HTMLTableCellElement/index.js");
var _indexJs51 = require("../Web.HTML.HTMLTableColElement/index.js");
var _indexJs52 = require("../Web.HTML.HTMLTableDataCellElement/index.js");
var _indexJs53 = require("../Web.HTML.HTMLTableElement/index.js");
var _indexJs54 = require("../Web.HTML.HTMLTableHeaderCellElement/index.js");
var _indexJs55 = require("../Web.HTML.HTMLTableRowElement/index.js");
var _indexJs56 = require("../Web.HTML.HTMLTableSectionElement/index.js");
var _indexJs57 = require("../Web.HTML.HTMLTemplateElement/index.js");
var _indexJs58 = require("../Web.HTML.HTMLTextAreaElement/index.js");
var _indexJs59 = require("../Web.HTML.HTMLTimeElement/index.js");
var _indexJs60 = require("../Web.HTML.HTMLTitleElement/index.js");
var _indexJs61 = require("../Web.HTML.HTMLTrackElement/index.js");
var _indexJs62 = require("../Web.HTML.HTMLUListElement/index.js");
var _indexJs63 = require("../Web.HTML.HTMLVideoElement/index.js");
var _indexJs64 = require("../Web.HTML.History/index.js");
var _indexJs65 = require("../Web.HTML.Location/index.js");
var _indexJs66 = require("../Web.HTML.Navigator/index.js");
var _indexJs67 = require("../Web.HTML.Window/index.js");

},{"./foreign.js":"glj4T","../Web.HTML.Common/index.js":"5Bvkb","../Web.HTML.HTMLAnchorElement/index.js":"9nDQv","../Web.HTML.HTMLAreaElement/index.js":"5F0Lj","../Web.HTML.HTMLAudioElement/index.js":"6amy6","../Web.HTML.HTMLBRElement/index.js":"5Xxai","../Web.HTML.HTMLBaseElement/index.js":"aXXjx","../Web.HTML.HTMLBodyElement/index.js":"5jSmE","../Web.HTML.HTMLButtonElement/index.js":"diBEr","../Web.HTML.HTMLCanvasElement/index.js":"2D5jk","../Web.HTML.HTMLDListElement/index.js":"gGeUZ","../Web.HTML.HTMLDataElement/index.js":"7TI9X","../Web.HTML.HTMLDataListElement/index.js":"L3vxI","../Web.HTML.HTMLDivElement/index.js":"avWqv","../Web.HTML.HTMLDocument/index.js":"gRKYp","../Web.HTML.HTMLElement/index.js":"fr09G","../Web.HTML.HTMLEmbedElement/index.js":"gA2md","../Web.HTML.HTMLFieldSetElement/index.js":"a71je","../Web.HTML.HTMLFormElement/index.js":"g1eHF","../Web.HTML.HTMLHRElement/index.js":"K68eV","../Web.HTML.HTMLHeadElement/index.js":"jCuQG","../Web.HTML.HTMLHeadingElement/index.js":"pmS6T","../Web.HTML.HTMLIFrameElement/index.js":"iaF1J","../Web.HTML.HTMLImageElement/index.js":"aUMyw","../Web.HTML.HTMLInputElement/index.js":"YodCO","../Web.HTML.HTMLKeygenElement/index.js":"6UiWF","../Web.HTML.HTMLLIElement/index.js":"1tszT","../Web.HTML.HTMLLabelElement/index.js":"97UHB","../Web.HTML.HTMLLegendElement/index.js":"hJsYq","../Web.HTML.HTMLLinkElement/index.js":"9e17G","../Web.HTML.HTMLMapElement/index.js":"6QMR3","../Web.HTML.HTMLMediaElement/index.js":"2Zr7g","../Web.HTML.HTMLMetaElement/index.js":"2F0uX","../Web.HTML.HTMLMeterElement/index.js":"3iBgC","../Web.HTML.HTMLModElement/index.js":"lhDKP","../Web.HTML.HTMLOListElement/index.js":"3XjDj","../Web.HTML.HTMLObjectElement/index.js":"3EKFV","../Web.HTML.HTMLOptGroupElement/index.js":"8EHTn","../Web.HTML.HTMLOptionElement/index.js":"dGVZ2","../Web.HTML.HTMLOutputElement/index.js":"8m3pe","../Web.HTML.HTMLParagraphElement/index.js":"jO62l","../Web.HTML.HTMLParamElement/index.js":"78U7A","../Web.HTML.HTMLPreElement/index.js":"7X1uu","../Web.HTML.HTMLProgressElement/index.js":"5pUr8","../Web.HTML.HTMLQuoteElement/index.js":"elfIr","../Web.HTML.HTMLScriptElement/index.js":"h7NEM","../Web.HTML.HTMLSelectElement/index.js":"6CiSR","../Web.HTML.HTMLSourceElement/index.js":"8LDDl","../Web.HTML.HTMLSpanElement/index.js":"liiy2","../Web.HTML.HTMLStyleElement/index.js":"9kDVk","../Web.HTML.HTMLTableCaptionElement/index.js":"9D10a","../Web.HTML.HTMLTableCellElement/index.js":"5AZY9","../Web.HTML.HTMLTableColElement/index.js":"16T7N","../Web.HTML.HTMLTableDataCellElement/index.js":"bhMJr","../Web.HTML.HTMLTableElement/index.js":"eljCd","../Web.HTML.HTMLTableHeaderCellElement/index.js":"8zYT9","../Web.HTML.HTMLTableRowElement/index.js":"q4Ebc","../Web.HTML.HTMLTableSectionElement/index.js":"6nzBi","../Web.HTML.HTMLTemplateElement/index.js":"eyX86","../Web.HTML.HTMLTextAreaElement/index.js":"9OikO","../Web.HTML.HTMLTimeElement/index.js":"hF3Xf","../Web.HTML.HTMLTitleElement/index.js":"5Cb0S","../Web.HTML.HTMLTrackElement/index.js":"3Eh0H","../Web.HTML.HTMLUListElement/index.js":"bI2XE","../Web.HTML.HTMLVideoElement/index.js":"ktlWY","../Web.HTML.History/index.js":"c8ZiO","../Web.HTML.Location/index.js":"fvayZ","../Web.HTML.Navigator/index.js":"2CcJu","../Web.HTML.Window/index.js":"e88Om","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"glj4T":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "window", ()=>windowImpl);
const windowImpl = function() {
    return window;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5Bvkb":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PropName", ()=>PropName);
parcelHelpers.export(exports, "AttrName", ()=>AttrName);
parcelHelpers.export(exports, "ClassName", ()=>ClassName);
parcelHelpers.export(exports, "newtypePropName", ()=>newtypePropName);
parcelHelpers.export(exports, "eqPropName", ()=>eqPropName);
parcelHelpers.export(exports, "ordPropName", ()=>ordPropName);
parcelHelpers.export(exports, "newtypeAttrName", ()=>newtypeAttrName);
parcelHelpers.export(exports, "eqAttrName", ()=>eqAttrName);
parcelHelpers.export(exports, "ordAttrName", ()=>ordAttrName);
parcelHelpers.export(exports, "newtypeClassName", ()=>newtypeClassName);
parcelHelpers.export(exports, "eqClassName", ()=>eqClassName);
parcelHelpers.export(exports, "ordClassName", ()=>ordClassName);
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Ord/index.js");
var PropName = function(x) {
    return x;
};
var ClassName = function(x) {
    return x;
};
var AttrName = function(x) {
    return x;
};
var ordPropName = _indexJs1.ordString;
var ordClassName = _indexJs1.ordString;
var ordAttrName = _indexJs1.ordString;
var newtypePropName = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeClassName = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeAttrName = {
    Coercible0: function() {
        return undefined;
    }
};
var eqPropName = _indexJs.eqString;
var eqClassName = _indexJs.eqString;
var eqAttrName = _indexJs.eqString;

},{"../Data.Eq/index.js":"j3zMn","../Data.Ord/index.js":"luB7W","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9nDQv":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "target", ()=>(0, _foreignJs.target));
parcelHelpers.export(exports, "setTarget", ()=>(0, _foreignJs.setTarget));
parcelHelpers.export(exports, "download", ()=>(0, _foreignJs.download));
parcelHelpers.export(exports, "setDownload", ()=>(0, _foreignJs.setDownload));
parcelHelpers.export(exports, "rel", ()=>(0, _foreignJs.rel));
parcelHelpers.export(exports, "setRel", ()=>(0, _foreignJs.setRel));
parcelHelpers.export(exports, "rev", ()=>(0, _foreignJs.rev));
parcelHelpers.export(exports, "setRev", ()=>(0, _foreignJs.setRev));
parcelHelpers.export(exports, "relList", ()=>(0, _foreignJs.relList));
parcelHelpers.export(exports, "hreflang", ()=>(0, _foreignJs.hreflang));
parcelHelpers.export(exports, "setHreflang", ()=>(0, _foreignJs.setHreflang));
parcelHelpers.export(exports, "type_", ()=>(0, _foreignJs.type_));
parcelHelpers.export(exports, "setType", ()=>(0, _foreignJs.setType));
parcelHelpers.export(exports, "text", ()=>(0, _foreignJs.text));
parcelHelpers.export(exports, "setText", ()=>(0, _foreignJs.setText));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "toHTMLHyperlinkElementUtils", ()=>toHTMLHyperlinkElementUtils);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLHyperlinkElementUtils = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAnchorElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAnchorElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAnchorElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAnchorElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAnchorElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAnchorElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAnchorElement");

},{"./foreign.js":"js8i7","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"js8i7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "target", ()=>target);
parcelHelpers.export(exports, "setTarget", ()=>setTarget);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "download", ()=>download);
parcelHelpers.export(exports, "setDownload", ()=>setDownload);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "rel", ()=>rel);
parcelHelpers.export(exports, "setRel", ()=>setRel);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "rev", ()=>rev);
parcelHelpers.export(exports, "setRev", ()=>setRev);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "relList", ()=>relList);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "hreflang", ()=>hreflang);
parcelHelpers.export(exports, "setHreflang", ()=>setHreflang);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "type_", ()=>type_);
parcelHelpers.export(exports, "setType", ()=>setType);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "text", ()=>text);
parcelHelpers.export(exports, "setText", ()=>setText);
function target(a) {
    return function() {
        return a.target;
    };
}
function setTarget(target) {
    return function(a) {
        return function() {
            a.target = target;
        };
    };
}
function download(a) {
    return function() {
        return a.download;
    };
}
function setDownload(download) {
    return function(a) {
        return function() {
            a.download = download;
        };
    };
}
function rel(a) {
    return function() {
        return a.rel;
    };
}
function setRel(rel) {
    return function(a) {
        return function() {
            a.rel = rel;
        };
    };
}
function rev(a) {
    return function() {
        return a.rev;
    };
}
function setRev(rev) {
    return function(a) {
        return function() {
            a.rev = rev;
        };
    };
}
function relList(a) {
    return function() {
        return a.relList;
    };
}
function hreflang(a) {
    return function() {
        return a.hreflang;
    };
}
function setHreflang(hreflang) {
    return function(a) {
        return function() {
            a.hreflang = hreflang;
        };
    };
}
function type_(a) {
    return function() {
        return a.type;
    };
}
function setType(type) {
    return function(a) {
        return function() {
            a.type = type;
        };
    };
}
function text(a) {
    return function() {
        return a.text;
    };
}
function setText(text) {
    return function(a) {
        return function() {
            a.text = text;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7WRHl":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafeReadProtoTagged", ()=>unsafeReadProtoTagged);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Maybe/index.js");
var unsafeReadProtoTagged = function(name) {
    return function(value) {
        return _foreignJs["_unsafeReadProtoTagged"](_indexJs.Nothing.value, _indexJs.Just.create, name, value);
    };
};

},{"./foreign.js":"fj2Zh","../Data.Maybe/index.js":"ff6lw","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fj2Zh":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_unsafeReadProtoTagged", ()=>_unsafeReadProtoTagged);
function _unsafeReadProtoTagged(nothing, just, name, value) {
    if (typeof window !== "undefined") {
        var ty = window[name];
        if (ty != null && value instanceof ty) return just(value);
    }
    var obj = value;
    while(obj != null){
        var proto = Object.getPrototypeOf(obj);
        var constructorName = proto.constructor.name;
        if (constructorName === name) return just(value);
        else if (constructorName === "Object") return nothing;
        obj = proto;
    }
    return nothing;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5F0Lj":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "alt", ()=>(0, _foreignJs.alt));
parcelHelpers.export(exports, "setAlt", ()=>(0, _foreignJs.setAlt));
parcelHelpers.export(exports, "coords", ()=>(0, _foreignJs.coords));
parcelHelpers.export(exports, "setCoords", ()=>(0, _foreignJs.setCoords));
parcelHelpers.export(exports, "shape", ()=>(0, _foreignJs.shape));
parcelHelpers.export(exports, "setShape", ()=>(0, _foreignJs.setShape));
parcelHelpers.export(exports, "target", ()=>(0, _foreignJs.target));
parcelHelpers.export(exports, "setTarget", ()=>(0, _foreignJs.setTarget));
parcelHelpers.export(exports, "download", ()=>(0, _foreignJs.download));
parcelHelpers.export(exports, "setDownload", ()=>(0, _foreignJs.setDownload));
parcelHelpers.export(exports, "rel", ()=>(0, _foreignJs.rel));
parcelHelpers.export(exports, "setRel", ()=>(0, _foreignJs.setRel));
parcelHelpers.export(exports, "relList", ()=>(0, _foreignJs.relList));
parcelHelpers.export(exports, "hreflang", ()=>(0, _foreignJs.hreflang));
parcelHelpers.export(exports, "setHreflang", ()=>(0, _foreignJs.setHreflang));
parcelHelpers.export(exports, "type_", ()=>(0, _foreignJs.type_));
parcelHelpers.export(exports, "setType", ()=>(0, _foreignJs.setType));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAreaElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAreaElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAreaElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAreaElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAreaElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAreaElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAreaElement");

},{"./foreign.js":"lHhC5","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lHhC5":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "alt", ()=>alt);
parcelHelpers.export(exports, "setAlt", ()=>setAlt);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "coords", ()=>coords);
parcelHelpers.export(exports, "setCoords", ()=>setCoords);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "shape", ()=>shape);
parcelHelpers.export(exports, "setShape", ()=>setShape);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "target", ()=>target);
parcelHelpers.export(exports, "setTarget", ()=>setTarget);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "download", ()=>download);
parcelHelpers.export(exports, "setDownload", ()=>setDownload);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "rel", ()=>rel);
parcelHelpers.export(exports, "setRel", ()=>setRel);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "relList", ()=>relList);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "hreflang", ()=>hreflang);
parcelHelpers.export(exports, "setHreflang", ()=>setHreflang);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "type_", ()=>type_);
parcelHelpers.export(exports, "setType", ()=>setType);
function alt(area) {
    return function() {
        return area.alt;
    };
}
function setAlt(alt) {
    return function(area) {
        return function() {
            area.alt = alt;
        };
    };
}
function coords(area) {
    return function() {
        return area.coords;
    };
}
function setCoords(coords) {
    return function(area) {
        return function() {
            area.coords = coords;
        };
    };
}
function shape(area) {
    return function() {
        return area.shape;
    };
}
function setShape(shape) {
    return function(area) {
        return function() {
            area.shape = shape;
        };
    };
}
function target(area) {
    return function() {
        return area.target;
    };
}
function setTarget(target) {
    return function(area) {
        return function() {
            area.target = target;
        };
    };
}
function download(area) {
    return function() {
        return area.download;
    };
}
function setDownload(download) {
    return function(area) {
        return function() {
            area.download = download;
        };
    };
}
function rel(area) {
    return function() {
        return area.rel;
    };
}
function setRel(rel) {
    return function(area) {
        return function() {
            area.rel = rel;
        };
    };
}
function relList(area) {
    return function() {
        return area.relList;
    };
}
function hreflang(area) {
    return function() {
        return area.hreflang;
    };
}
function setHreflang(hreflang) {
    return function(area) {
        return function() {
            area.hreflang = hreflang;
        };
    };
}
function type_(area) {
    return function() {
        return area.type;
    };
}
function setType(type) {
    return function(area) {
        return function() {
            area.type = type;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6amy6":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "create", ()=>(0, _foreignJs.create));
parcelHelpers.export(exports, "fromHTMLMediaElement", ()=>fromHTMLMediaElement);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLMediaElement", ()=>toHTMLMediaElement);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "create$prime", ()=>create$prime);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLMediaElement = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAudioElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAudioElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAudioElement");
var fromHTMLMediaElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAudioElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAudioElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAudioElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAudioElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLAudioElement");
var create$prime = _foreignJs.createWithURL;

},{"./foreign.js":"540rS","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"540rS":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "create", ()=>create);
parcelHelpers.export(exports, "createWithURL", ()=>createWithURL);
function create() {
    return new Audio();
}
function createWithURL(url) {
    return function() {
        return new Audio(url);
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5Xxai":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBRElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBRElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBRElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBRElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBRElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBRElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBRElement");

},{"../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aXXjx":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "href", ()=>(0, _foreignJs.href));
parcelHelpers.export(exports, "setHref", ()=>(0, _foreignJs.setHref));
parcelHelpers.export(exports, "target", ()=>(0, _foreignJs.target));
parcelHelpers.export(exports, "setTarget", ()=>(0, _foreignJs.setTarget));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBaseElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBaseElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBaseElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBaseElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBaseElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBaseElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBaseElement");

},{"./foreign.js":"fiaXy","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fiaXy":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "href", ()=>href);
parcelHelpers.export(exports, "setHref", ()=>setHref);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "target", ()=>target);
parcelHelpers.export(exports, "setTarget", ()=>setTarget);
function href(base) {
    return function() {
        return base.href;
    };
}
function setHref(href) {
    return function(base) {
        return function() {
            base.href = href;
        };
    };
}
function target(base) {
    return function() {
        return base.target;
    };
}
function setTarget(target) {
    return function(base) {
        return function() {
            base.target = target;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5jSmE":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBodyElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBodyElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBodyElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBodyElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBodyElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBodyElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLBodyElement");

},{"../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"diBEr":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "autofocus", ()=>(0, _foreignJs.autofocus));
parcelHelpers.export(exports, "setAutofocus", ()=>(0, _foreignJs.setAutofocus));
parcelHelpers.export(exports, "disabled", ()=>(0, _foreignJs.disabled));
parcelHelpers.export(exports, "setDisabled", ()=>(0, _foreignJs.setDisabled));
parcelHelpers.export(exports, "formAction", ()=>(0, _foreignJs.formAction));
parcelHelpers.export(exports, "setFormAction", ()=>(0, _foreignJs.setFormAction));
parcelHelpers.export(exports, "formEnctype", ()=>(0, _foreignJs.formEnctype));
parcelHelpers.export(exports, "setFormEnctype", ()=>(0, _foreignJs.setFormEnctype));
parcelHelpers.export(exports, "formMethod", ()=>(0, _foreignJs.formMethod));
parcelHelpers.export(exports, "setFormMethod", ()=>(0, _foreignJs.setFormMethod));
parcelHelpers.export(exports, "formNoValidate", ()=>(0, _foreignJs.formNoValidate));
parcelHelpers.export(exports, "setFormNoValidate", ()=>(0, _foreignJs.setFormNoValidate));
parcelHelpers.export(exports, "formTarget", ()=>(0, _foreignJs.formTarget));
parcelHelpers.export(exports, "setFormTarget", ()=>(0, _foreignJs.setFormTarget));
parcelHelpers.export(exports, "name", ()=>(0, _foreignJs.name));
parcelHelpers.export(exports, "setName", ()=>(0, _foreignJs.setName));
parcelHelpers.export(exports, "type_", ()=>(0, _foreignJs.type_));
parcelHelpers.export(exports, "setType", ()=>(0, _foreignJs.setType));
parcelHelpers.export(exports, "value", ()=>(0, _foreignJs.value));
parcelHelpers.export(exports, "setValue", ()=>(0, _foreignJs.setValue));
parcelHelpers.export(exports, "willValidate", ()=>(0, _foreignJs.willValidate));
parcelHelpers.export(exports, "validity", ()=>(0, _foreignJs.validity));
parcelHelpers.export(exports, "validationMessage", ()=>(0, _foreignJs.validationMessage));
parcelHelpers.export(exports, "checkValidity", ()=>(0, _foreignJs.checkValidity));
parcelHelpers.export(exports, "reportValidity", ()=>(0, _foreignJs.reportValidity));
parcelHelpers.export(exports, "setCustomValidity", ()=>(0, _foreignJs.setCustomValidity));
parcelHelpers.export(exports, "labels", ()=>(0, _foreignJs.labels));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "form", ()=>form);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Nullable/index.js");
var _indexJs2 = require("../Effect/index.js");
var _indexJs3 = require("../Unsafe.Coerce/index.js");
var _indexJs4 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs3.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs3.unsafeCoerce;
var toNode = _indexJs3.unsafeCoerce;
var toHTMLElement = _indexJs3.unsafeCoerce;
var toEventTarget = _indexJs3.unsafeCoerce;
var toElement = _indexJs3.unsafeCoerce;
var toChildNode = _indexJs3.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLButtonElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLButtonElement");
var fromNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLButtonElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLButtonElement");
var fromEventTarget = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLButtonElement");
var fromElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLButtonElement");
var fromChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLButtonElement");
var form = /* #__PURE__ */ function() {
    var $2 = _indexJs.map(_indexJs2.functorEffect)(_indexJs1.toMaybe);
    return function($3) {
        return $2(_foreignJs["_form"]($3));
    };
}();

},{"./foreign.js":"6nQqn","../Data.Functor/index.js":"j9NCu","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6nQqn":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "autofocus", ()=>autofocus);
parcelHelpers.export(exports, "setAutofocus", ()=>setAutofocus);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "disabled", ()=>disabled);
parcelHelpers.export(exports, "setDisabled", ()=>setDisabled);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_form", ()=>_form);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "formAction", ()=>formAction);
parcelHelpers.export(exports, "setFormAction", ()=>setFormAction);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "formEnctype", ()=>formEnctype);
parcelHelpers.export(exports, "setFormEnctype", ()=>setFormEnctype);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "formMethod", ()=>formMethod);
parcelHelpers.export(exports, "setFormMethod", ()=>setFormMethod);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "formNoValidate", ()=>formNoValidate);
parcelHelpers.export(exports, "setFormNoValidate", ()=>setFormNoValidate);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "formTarget", ()=>formTarget);
parcelHelpers.export(exports, "setFormTarget", ()=>setFormTarget);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "name", ()=>name);
parcelHelpers.export(exports, "setName", ()=>setName);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "type_", ()=>type_);
parcelHelpers.export(exports, "setType", ()=>setType);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "value", ()=>value);
parcelHelpers.export(exports, "setValue", ()=>setValue);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "willValidate", ()=>willValidate);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "validity", ()=>validity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "validationMessage", ()=>validationMessage);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "checkValidity", ()=>checkValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "reportValidity", ()=>reportValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "setCustomValidity", ()=>setCustomValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "labels", ()=>labels);
function autofocus(button) {
    return function() {
        return button.autofocus;
    };
}
function setAutofocus(autofocus) {
    return function(button) {
        return function() {
            button.autofocus = autofocus;
        };
    };
}
function disabled(button) {
    return function() {
        return button.disabled;
    };
}
function setDisabled(disabled) {
    return function(button) {
        return function() {
            button.disabled = disabled;
        };
    };
}
function _form(button) {
    return function() {
        return button.form;
    };
}
function formAction(button) {
    return function() {
        return button.formAction;
    };
}
function setFormAction(formAction) {
    return function(button) {
        return function() {
            button.formAction = formAction;
        };
    };
}
function formEnctype(button) {
    return function() {
        return button.formEnctype;
    };
}
function setFormEnctype(formEnctype) {
    return function(button) {
        return function() {
            button.formEnctype = formEnctype;
        };
    };
}
function formMethod(button) {
    return function() {
        return button.formMethod;
    };
}
function setFormMethod(formMethod) {
    return function(button) {
        return function() {
            button.formMethod = formMethod;
        };
    };
}
function formNoValidate(button) {
    return function() {
        return button.formNoValidate;
    };
}
function setFormNoValidate(formNoValidate) {
    return function(button) {
        return function() {
            button.formNoValidate = formNoValidate;
        };
    };
}
function formTarget(button) {
    return function() {
        return button.formTarget;
    };
}
function setFormTarget(formTarget) {
    return function(button) {
        return function() {
            button.formTarget = formTarget;
        };
    };
}
function name(button) {
    return function() {
        return button.name;
    };
}
function setName(name) {
    return function(button) {
        return function() {
            button.name = name;
        };
    };
}
function type_(button) {
    return function() {
        return button.type;
    };
}
function setType(type) {
    return function(button) {
        return function() {
            button.type = type;
        };
    };
}
function value(button) {
    return function() {
        return button.value;
    };
}
function setValue(value) {
    return function(button) {
        return function() {
            button.value = value;
        };
    };
}
function willValidate(button) {
    return function() {
        return button.willValidate;
    };
}
function validity(button) {
    return function() {
        return button.validity;
    };
}
function validationMessage(button) {
    return function() {
        return button.validationMessage;
    };
}
function checkValidity(button) {
    return function() {
        return button.checkValidity();
    };
}
function reportValidity(button) {
    return function() {
        return button.reportValidity();
    };
}
function setCustomValidity(value) {
    return function(button) {
        return function() {
            button.setCustomValidity(value);
        };
    };
}
function labels(button) {
    return function() {
        return button.labels;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2D5jk":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "width", ()=>(0, _foreignJs.width));
parcelHelpers.export(exports, "setWidth", ()=>(0, _foreignJs.setWidth));
parcelHelpers.export(exports, "height", ()=>(0, _foreignJs.height));
parcelHelpers.export(exports, "setHeight", ()=>(0, _foreignJs.setHeight));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLCanvasElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLCanvasElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLCanvasElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLCanvasElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLCanvasElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLCanvasElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLCanvasElement");

},{"./foreign.js":"clt1T","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"clt1T":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "width", ()=>width);
parcelHelpers.export(exports, "setWidth", ()=>setWidth);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "height", ()=>height);
parcelHelpers.export(exports, "setHeight", ()=>setHeight);
function width(canvas) {
    return function() {
        return canvas.width;
    };
}
function setWidth(width) {
    return function(canvas) {
        return function() {
            canvas.width = width;
        };
    };
}
function height(canvas) {
    return function() {
        return canvas.height;
    };
}
function setHeight(height) {
    return function(canvas) {
        return function() {
            canvas.height = height;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gGeUZ":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDListElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDListElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDListElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDListElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDListElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDListElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDListElement");

},{"../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7TI9X":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "value", ()=>(0, _foreignJs.value));
parcelHelpers.export(exports, "setValue", ()=>(0, _foreignJs.setValue));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDataElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDataElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDataElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDataElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDataElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDataElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDataElement");

},{"./foreign.js":"4DR5P","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4DR5P":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "value", ()=>value);
parcelHelpers.export(exports, "setValue", ()=>setValue);
function value(data) {
    return function() {
        return data.value;
    };
}
function setValue(value) {
    return function(data) {
        return function() {
            data.value = value;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"L3vxI":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "options", ()=>(0, _foreignJs.options));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDataListElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDataListElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDataListElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDataListElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDataListElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDataListElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDataListElement");

},{"./foreign.js":"okzO0","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"okzO0":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "options", ()=>options);
function options(dle) {
    return function() {
        return dle.options;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"avWqv":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDivElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDivElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDivElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDivElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDivElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDivElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLDivElement");

},{"../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gRKYp":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromDocument", ()=>fromDocument);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromNonElementParentNode", ()=>fromNonElementParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toDocument", ()=>toDocument);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toNonElementParentNode", ()=>toNonElementParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "documentElement", ()=>documentElement);
parcelHelpers.export(exports, "head", ()=>head);
parcelHelpers.export(exports, "body", ()=>body);
parcelHelpers.export(exports, "readyState", ()=>readyState);
parcelHelpers.export(exports, "visibilityState", ()=>visibilityState);
parcelHelpers.export(exports, "activeElement", ()=>activeElement);
parcelHelpers.export(exports, "currentScript", ()=>currentScript);
parcelHelpers.export(exports, "referrer", ()=>referrer);
parcelHelpers.export(exports, "title", ()=>title);
parcelHelpers.export(exports, "setTitle", ()=>setTitle);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Maybe/index.js");
var _indexJs2 = require("../Data.Nullable/index.js");
var _indexJs3 = require("../Effect/index.js");
var _indexJs4 = require("../Unsafe.Coerce/index.js");
var _indexJs5 = require("../Web.HTML.HTMLDocument.ReadyState/index.js");
var _indexJs6 = require("../Web.HTML.HTMLDocument.VisibilityState/index.js");
var _indexJs7 = require("../Web.Internal.FFI/index.js");
var map = /* #__PURE__ */ _indexJs.map(_indexJs3.functorEffect);
var visibilityState = function(doc) {
    return map(function() {
        var $2 = _indexJs1.fromMaybe(_indexJs6.Visible.value);
        return function($3) {
            return $2(_indexJs6.parse($3));
        };
    }())(function() {
        return _foreignJs["_visibilityState"](doc);
    });
};
var toParentNode = _indexJs4.unsafeCoerce;
var toNonElementParentNode = _indexJs4.unsafeCoerce;
var toNode = _indexJs4.unsafeCoerce;
var toEventTarget = _indexJs4.unsafeCoerce;
var toDocument = _indexJs4.unsafeCoerce;
var title = function(doc) {
    return function() {
        return _foreignJs["_title"](doc);
    };
};
var setTitle = function(newTitle) {
    return function(doc) {
        return function() {
            return _foreignJs["_setTitle"](newTitle, doc);
        };
    };
};
var referrer = function(doc) {
    return function() {
        return _foreignJs["_referrer"](doc);
    };
};
var readyState = function(doc) {
    return map(function() {
        var $4 = _indexJs1.fromMaybe(_indexJs5.Loading.value);
        return function($5) {
            return $4(_indexJs5.parse($5));
        };
    }())(function() {
        return _foreignJs["_readyState"](doc);
    });
};
var head = function(doc) {
    return map(_indexJs2.toMaybe)(function() {
        return _foreignJs["_head"](doc);
    });
};
var fromParentNode = /* #__PURE__ */ _indexJs7.unsafeReadProtoTagged("HTMLDocument");
var fromNonElementParentNode = /* #__PURE__ */ _indexJs7.unsafeReadProtoTagged("HTMLDocument");
var fromNode = /* #__PURE__ */ _indexJs7.unsafeReadProtoTagged("HTMLDocument");
var fromEventTarget = /* #__PURE__ */ _indexJs7.unsafeReadProtoTagged("HTMLDocument");
var fromDocument = /* #__PURE__ */ _indexJs7.unsafeReadProtoTagged("HTMLDocument");
var documentElement = function(doc) {
    return map(_indexJs2.toMaybe)(function() {
        return _foreignJs["_documentElement"](doc);
    });
};
var currentScript = function(doc) {
    return map(_indexJs2.toMaybe)(function() {
        return _foreignJs["_currentScript"](doc);
    });
};
var body = function(doc) {
    return map(_indexJs2.toMaybe)(function() {
        return _foreignJs["_body"](doc);
    });
};
var activeElement = function(doc) {
    return map(_indexJs2.toMaybe)(function() {
        return _foreignJs["_activeElement"](doc);
    });
};

},{"./foreign.js":"4e7QQ","../Data.Functor/index.js":"j9NCu","../Data.Maybe/index.js":"ff6lw","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.HTML.HTMLDocument.ReadyState/index.js":"eqA2S","../Web.HTML.HTMLDocument.VisibilityState/index.js":"eXScW","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4e7QQ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_documentElement", ()=>_documentElement);
parcelHelpers.export(exports, "_head", ()=>_head);
parcelHelpers.export(exports, "_body", ()=>_body);
parcelHelpers.export(exports, "_readyState", ()=>_readyState);
parcelHelpers.export(exports, "_visibilityState", ()=>_visibilityState);
parcelHelpers.export(exports, "_activeElement", ()=>_activeElement);
parcelHelpers.export(exports, "_currentScript", ()=>_currentScript);
parcelHelpers.export(exports, "_referrer", ()=>_referrer);
parcelHelpers.export(exports, "_title", ()=>_title);
parcelHelpers.export(exports, "_setTitle", ()=>_setTitle);
function _documentElement(doc) {
    return doc.documentElement;
}
function _head(doc) {
    return doc.head;
}
function _body(doc) {
    return doc.body;
}
function _readyState(doc) {
    return doc.readyState;
}
function _visibilityState(doc) {
    return doc.readyState;
}
function _activeElement(doc) {
    return doc.activeElement;
}
function _currentScript(doc) {
    return doc.currentScript;
}
function _referrer(doc) {
    return doc.referrer;
}
function _title(doc) {
    return doc.title;
}
function _setTitle(title, doc) {
    doc.title = title;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eqA2S":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Loading", ()=>Loading);
parcelHelpers.export(exports, "Interactive", ()=>Interactive);
parcelHelpers.export(exports, "Complete", ()=>Complete);
parcelHelpers.export(exports, "print", ()=>print);
parcelHelpers.export(exports, "parse", ()=>parse);
parcelHelpers.export(exports, "eqReadyState", ()=>eqReadyState);
parcelHelpers.export(exports, "ordReadyState", ()=>ordReadyState);
parcelHelpers.export(exports, "showReadyState", ()=>showReadyState);
var _indexJs = require("../Data.Maybe/index.js");
var _indexJs1 = require("../Data.Ordering/index.js");
var Loading = /* #__PURE__ */ function() {
    function Loading() {}
    Loading.value = new Loading();
    return Loading;
}();
var Interactive = /* #__PURE__ */ function() {
    function Interactive() {}
    Interactive.value = new Interactive();
    return Interactive;
}();
var Complete = /* #__PURE__ */ function() {
    function Complete() {}
    Complete.value = new Complete();
    return Complete;
}();
var showReadyState = {
    show: function(v) {
        if (v instanceof Loading) return "Loading";
        if (v instanceof Interactive) return "Interactive";
        if (v instanceof Complete) return "Complete";
        throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 16, column 10 - line 19, column 27): " + [
            v.constructor.name
        ]);
    }
};
var print = function(v) {
    if (v instanceof Loading) return "loading";
    if (v instanceof Interactive) return "interactive";
    if (v instanceof Complete) return "complete";
    throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 22, column 9 - line 25, column 25): " + [
        v.constructor.name
    ]);
};
var parse = function(v) {
    if (v === "loading") return new _indexJs.Just(Loading.value);
    if (v === "interactive") return new _indexJs.Just(Interactive.value);
    if (v === "complete") return new _indexJs.Just(Complete.value);
    return _indexJs.Nothing.value;
};
var eqReadyState = {
    eq: function(x) {
        return function(y) {
            if (x instanceof Loading && y instanceof Loading) return true;
            if (x instanceof Interactive && y instanceof Interactive) return true;
            if (x instanceof Complete && y instanceof Complete) return true;
            return false;
        };
    }
};
var ordReadyState = {
    compare: function(x) {
        return function(y) {
            if (x instanceof Loading && y instanceof Loading) return _indexJs1.EQ.value;
            if (x instanceof Loading) return _indexJs1.LT.value;
            if (y instanceof Loading) return _indexJs1.GT.value;
            if (x instanceof Interactive && y instanceof Interactive) return _indexJs1.EQ.value;
            if (x instanceof Interactive) return _indexJs1.LT.value;
            if (y instanceof Interactive) return _indexJs1.GT.value;
            if (x instanceof Complete && y instanceof Complete) return _indexJs1.EQ.value;
            throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 0, column 0 - line 0, column 0): " + [
                x.constructor.name,
                y.constructor.name
            ]);
        };
    },
    Eq0: function() {
        return eqReadyState;
    }
};

},{"../Data.Maybe/index.js":"ff6lw","../Data.Ordering/index.js":"2NvYx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eXScW":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Visible", ()=>Visible);
parcelHelpers.export(exports, "Hidden", ()=>Hidden);
parcelHelpers.export(exports, "print", ()=>print);
parcelHelpers.export(exports, "parse", ()=>parse);
parcelHelpers.export(exports, "eqVisibilityState", ()=>eqVisibilityState);
parcelHelpers.export(exports, "ordVisibilityState", ()=>ordVisibilityState);
parcelHelpers.export(exports, "showVisibilityState", ()=>showVisibilityState);
var _indexJs = require("../Data.Maybe/index.js");
var _indexJs1 = require("../Data.Ordering/index.js");
var Visible = /* #__PURE__ */ function() {
    function Visible() {}
    Visible.value = new Visible();
    return Visible;
}();
var Hidden = /* #__PURE__ */ function() {
    function Hidden() {}
    Hidden.value = new Hidden();
    return Hidden;
}();
var showVisibilityState = {
    show: function(v) {
        if (v instanceof Visible) return "Visible";
        if (v instanceof Hidden) return "Hidden";
        throw new Error("Failed pattern match at Web.HTML.HTMLDocument.VisibilityState (line 15, column 10 - line 17, column 23): " + [
            v.constructor.name
        ]);
    }
};
var print = function(v) {
    if (v instanceof Visible) return "visible";
    if (v instanceof Hidden) return "hidden";
    throw new Error("Failed pattern match at Web.HTML.HTMLDocument.VisibilityState (line 20, column 9 - line 22, column 21): " + [
        v.constructor.name
    ]);
};
var parse = function(v) {
    if (v === "visible") return new _indexJs.Just(Visible.value);
    if (v === "hidden") return new _indexJs.Just(Hidden.value);
    return _indexJs.Nothing.value;
};
var eqVisibilityState = {
    eq: function(x) {
        return function(y) {
            if (x instanceof Visible && y instanceof Visible) return true;
            if (x instanceof Hidden && y instanceof Hidden) return true;
            return false;
        };
    }
};
var ordVisibilityState = {
    compare: function(x) {
        return function(y) {
            if (x instanceof Visible && y instanceof Visible) return _indexJs1.EQ.value;
            if (x instanceof Visible) return _indexJs1.LT.value;
            if (y instanceof Visible) return _indexJs1.GT.value;
            if (x instanceof Hidden && y instanceof Hidden) return _indexJs1.EQ.value;
            throw new Error("Failed pattern match at Web.HTML.HTMLDocument.VisibilityState (line 0, column 0 - line 0, column 0): " + [
                x.constructor.name,
                y.constructor.name
            ]);
        };
    },
    Eq0: function() {
        return eqVisibilityState;
    }
};

},{"../Data.Maybe/index.js":"ff6lw","../Data.Ordering/index.js":"2NvYx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fr09G":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "title", ()=>(0, _foreignJs.title));
parcelHelpers.export(exports, "setTitle", ()=>(0, _foreignJs.setTitle));
parcelHelpers.export(exports, "lang", ()=>(0, _foreignJs.lang));
parcelHelpers.export(exports, "setLang", ()=>(0, _foreignJs.setLang));
parcelHelpers.export(exports, "dir", ()=>(0, _foreignJs.dir));
parcelHelpers.export(exports, "setDir", ()=>(0, _foreignJs.setDir));
parcelHelpers.export(exports, "hidden", ()=>(0, _foreignJs.hidden));
parcelHelpers.export(exports, "setHidden", ()=>(0, _foreignJs.setHidden));
parcelHelpers.export(exports, "tabIndex", ()=>(0, _foreignJs.tabIndex));
parcelHelpers.export(exports, "setTabIndex", ()=>(0, _foreignJs.setTabIndex));
parcelHelpers.export(exports, "draggable", ()=>(0, _foreignJs.draggable));
parcelHelpers.export(exports, "setDraggable", ()=>(0, _foreignJs.setDraggable));
parcelHelpers.export(exports, "contentEditable", ()=>(0, _foreignJs.contentEditable));
parcelHelpers.export(exports, "setContentEditable", ()=>(0, _foreignJs.setContentEditable));
parcelHelpers.export(exports, "isContentEditable", ()=>(0, _foreignJs.isContentEditable));
parcelHelpers.export(exports, "spellcheck", ()=>(0, _foreignJs.spellcheck));
parcelHelpers.export(exports, "setSpellcheck", ()=>(0, _foreignJs.setSpellcheck));
parcelHelpers.export(exports, "click", ()=>(0, _foreignJs.click));
parcelHelpers.export(exports, "focus", ()=>(0, _foreignJs.focus));
parcelHelpers.export(exports, "blur", ()=>(0, _foreignJs.blur));
parcelHelpers.export(exports, "offsetTop", ()=>(0, _foreignJs.offsetTop));
parcelHelpers.export(exports, "offsetLeft", ()=>(0, _foreignJs.offsetLeft));
parcelHelpers.export(exports, "offsetWidth", ()=>(0, _foreignJs.offsetWidth));
parcelHelpers.export(exports, "offsetHeight", ()=>(0, _foreignJs.offsetHeight));
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "offsetParent", ()=>offsetParent);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Maybe/index.js");
var _indexJs2 = require("../Data.Nullable/index.js");
var _indexJs3 = require("../Effect/index.js");
var _indexJs4 = require("../Unsafe.Coerce/index.js");
var toParentNode = _indexJs4.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs4.unsafeCoerce;
var toNode = _indexJs4.unsafeCoerce;
var toEventTarget = _indexJs4.unsafeCoerce;
var toElement = _indexJs4.unsafeCoerce;
var toChildNode = _indexJs4.unsafeCoerce;
var offsetParent = /* #__PURE__ */ function() {
    var $2 = _indexJs.map(_indexJs3.functorEffect)(_indexJs2.toMaybe);
    return function($3) {
        return $2(_foreignJs["_offsetParent"]($3));
    };
}();
var fromParentNode = function(x) {
    return _foreignJs["_read"](_indexJs1.Nothing.value, _indexJs1.Just.create, x);
};
var fromNonDocumentTypeChildNode = function(x) {
    return _foreignJs["_read"](_indexJs1.Nothing.value, _indexJs1.Just.create, x);
};
var fromNode = function(x) {
    return _foreignJs["_read"](_indexJs1.Nothing.value, _indexJs1.Just.create, x);
};
var fromEventTarget = function(x) {
    return _foreignJs["_read"](_indexJs1.Nothing.value, _indexJs1.Just.create, x);
};
var fromElement = function(x) {
    return _foreignJs["_read"](_indexJs1.Nothing.value, _indexJs1.Just.create, x);
};
var fromChildNode = function(x) {
    return _foreignJs["_read"](_indexJs1.Nothing.value, _indexJs1.Just.create, x);
};

},{"./foreign.js":"cshlj","../Data.Functor/index.js":"j9NCu","../Data.Maybe/index.js":"ff6lw","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cshlj":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_read", ()=>_read);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "title", ()=>title);
parcelHelpers.export(exports, "setTitle", ()=>setTitle);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "lang", ()=>lang);
parcelHelpers.export(exports, "setLang", ()=>setLang);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "dir", ()=>dir);
parcelHelpers.export(exports, "setDir", ()=>setDir);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "hidden", ()=>hidden);
parcelHelpers.export(exports, "setHidden", ()=>setHidden);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "tabIndex", ()=>tabIndex);
parcelHelpers.export(exports, "setTabIndex", ()=>setTabIndex);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "draggable", ()=>draggable);
parcelHelpers.export(exports, "setDraggable", ()=>setDraggable);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "contentEditable", ()=>contentEditable);
parcelHelpers.export(exports, "setContentEditable", ()=>setContentEditable);
parcelHelpers.export(exports, "isContentEditable", ()=>isContentEditable);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "spellcheck", ()=>spellcheck);
parcelHelpers.export(exports, "setSpellcheck", ()=>setSpellcheck);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "click", ()=>click);
parcelHelpers.export(exports, "focus", ()=>focus);
parcelHelpers.export(exports, "blur", ()=>blur);
// - CSSOM ---------------------------------------------------------------------
parcelHelpers.export(exports, "_offsetParent", ()=>_offsetParent);
parcelHelpers.export(exports, "offsetTop", ()=>offsetTop);
parcelHelpers.export(exports, "offsetLeft", ()=>offsetLeft);
parcelHelpers.export(exports, "offsetWidth", ()=>offsetWidth);
parcelHelpers.export(exports, "offsetHeight", ()=>offsetHeight);
function _read(nothing, just, value) {
    var tag = Object.prototype.toString.call(value);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) return just(value);
    else return nothing;
}
function title(elt) {
    return function() {
        return elt.title;
    };
}
function setTitle(title) {
    return function(elt) {
        return function() {
            elt.title = title;
        };
    };
}
function lang(elt) {
    return function() {
        return elt.lang;
    };
}
function setLang(lang) {
    return function(elt) {
        return function() {
            elt.lang = lang;
        };
    };
}
function dir(elt) {
    return function() {
        return elt.dir;
    };
}
function setDir(dir) {
    return function(elt) {
        return function() {
            elt.dir = dir;
        };
    };
}
function hidden(elt) {
    return function() {
        return elt.hidden;
    };
}
function setHidden(hidden) {
    return function(elt) {
        return function() {
            elt.hidden = hidden;
        };
    };
}
function tabIndex(elt) {
    return function() {
        return elt.tabIndex;
    };
}
function setTabIndex(tabIndex) {
    return function(elt) {
        return function() {
            elt.tabIndex = tabIndex;
        };
    };
}
function draggable(elt) {
    return function() {
        return elt.draggable;
    };
}
function setDraggable(draggable) {
    return function(elt) {
        return function() {
            elt.draggable = draggable;
        };
    };
}
function contentEditable(elt) {
    return function() {
        return elt.contentEditable;
    };
}
function setContentEditable(contentEditable) {
    return function(elt) {
        return function() {
            elt.contentEditable = contentEditable;
        };
    };
}
function isContentEditable(elt) {
    return function() {
        return elt.isContentEditable;
    };
}
function spellcheck(elt) {
    return function() {
        return elt.spellcheck;
    };
}
function setSpellcheck(spellcheck) {
    return function(elt) {
        return function() {
            elt.spellcheck = spellcheck;
        };
    };
}
function click(elt) {
    return function() {
        return elt.click();
    };
}
function focus(elt) {
    return function() {
        return elt.focus();
    };
}
function blur(elt) {
    return function() {
        return elt.blur();
    };
}
function _offsetParent(el) {
    return function() {
        return el.offsetParent;
    };
}
function offsetTop(el) {
    return function() {
        return el.offsetTop;
    };
}
function offsetLeft(el) {
    return function() {
        return el.offsetLeft;
    };
}
function offsetWidth(el) {
    return function() {
        return el.offsetWidth;
    };
}
function offsetHeight(el) {
    return function() {
        return el.offsetHeight;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gA2md":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "src", ()=>(0, _foreignJs.src));
parcelHelpers.export(exports, "setSrc", ()=>(0, _foreignJs.setSrc));
parcelHelpers.export(exports, "type_", ()=>(0, _foreignJs.type_));
parcelHelpers.export(exports, "setType", ()=>(0, _foreignJs.setType));
parcelHelpers.export(exports, "width", ()=>(0, _foreignJs.width));
parcelHelpers.export(exports, "setWidth", ()=>(0, _foreignJs.setWidth));
parcelHelpers.export(exports, "height", ()=>(0, _foreignJs.height));
parcelHelpers.export(exports, "setHeight", ()=>(0, _foreignJs.setHeight));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLEmbedElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLEmbedElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLEmbedElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLEmbedElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLEmbedElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLEmbedElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLEmbedElement");

},{"./foreign.js":"kYKVa","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kYKVa":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "src", ()=>src);
parcelHelpers.export(exports, "setSrc", ()=>setSrc);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "type_", ()=>type_);
parcelHelpers.export(exports, "setType", ()=>setType);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "width", ()=>width);
parcelHelpers.export(exports, "setWidth", ()=>setWidth);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "height", ()=>height);
parcelHelpers.export(exports, "setHeight", ()=>setHeight);
function src(embed) {
    return function() {
        return embed.src;
    };
}
function setSrc(src) {
    return function(embed) {
        return function() {
            embed.src = src;
        };
    };
}
function type_(embed) {
    return function() {
        return embed.type;
    };
}
function setType(type) {
    return function(embed) {
        return function() {
            embed.type = type;
        };
    };
}
function width(embed) {
    return function() {
        return embed.width;
    };
}
function setWidth(width) {
    return function(embed) {
        return function() {
            embed.width = width;
        };
    };
}
function height(embed) {
    return function() {
        return embed.height;
    };
}
function setHeight(height) {
    return function(embed) {
        return function() {
            embed.height = height;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"a71je":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "disabled", ()=>(0, _foreignJs.disabled));
parcelHelpers.export(exports, "setDisabled", ()=>(0, _foreignJs.setDisabled));
parcelHelpers.export(exports, "name", ()=>(0, _foreignJs.name));
parcelHelpers.export(exports, "setName", ()=>(0, _foreignJs.setName));
parcelHelpers.export(exports, "type_", ()=>(0, _foreignJs.type_));
parcelHelpers.export(exports, "setType", ()=>(0, _foreignJs.setType));
parcelHelpers.export(exports, "willValidate", ()=>(0, _foreignJs.willValidate));
parcelHelpers.export(exports, "validity", ()=>(0, _foreignJs.validity));
parcelHelpers.export(exports, "validationMessage", ()=>(0, _foreignJs.validationMessage));
parcelHelpers.export(exports, "checkValidity", ()=>(0, _foreignJs.checkValidity));
parcelHelpers.export(exports, "reportValidity", ()=>(0, _foreignJs.reportValidity));
parcelHelpers.export(exports, "setCustomValidity", ()=>(0, _foreignJs.setCustomValidity));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "form", ()=>form);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Nullable/index.js");
var _indexJs2 = require("../Effect/index.js");
var _indexJs3 = require("../Unsafe.Coerce/index.js");
var _indexJs4 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs3.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs3.unsafeCoerce;
var toNode = _indexJs3.unsafeCoerce;
var toHTMLElement = _indexJs3.unsafeCoerce;
var toEventTarget = _indexJs3.unsafeCoerce;
var toElement = _indexJs3.unsafeCoerce;
var toChildNode = _indexJs3.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromEventTarget = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLFieldSetElement");
var form = /* #__PURE__ */ function() {
    var $2 = _indexJs.map(_indexJs2.functorEffect)(_indexJs1.toMaybe);
    return function($3) {
        return $2(_foreignJs["_form"]($3));
    };
}();

},{"./foreign.js":"KxIRB","../Data.Functor/index.js":"j9NCu","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"KxIRB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "disabled", ()=>disabled);
parcelHelpers.export(exports, "setDisabled", ()=>setDisabled);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_form", ()=>_form);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "name", ()=>name);
parcelHelpers.export(exports, "setName", ()=>setName);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "type_", ()=>type_);
parcelHelpers.export(exports, "setType", ()=>setType);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "willValidate", ()=>willValidate);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "validity", ()=>validity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "validationMessage", ()=>validationMessage);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "checkValidity", ()=>checkValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "reportValidity", ()=>reportValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "setCustomValidity", ()=>setCustomValidity);
function disabled(fieldset) {
    return function() {
        return fieldset.disabled;
    };
}
function setDisabled(disabled) {
    return function(fieldset) {
        return function() {
            fieldset.disabled = disabled;
        };
    };
}
function _form(fieldset) {
    return function() {
        return fieldset.form;
    };
}
function name(fieldset) {
    return function() {
        return fieldset.name;
    };
}
function setName(name) {
    return function(fieldset) {
        return function() {
            fieldset.name = name;
        };
    };
}
function type_(fieldset) {
    return function() {
        return fieldset.type;
    };
}
function setType(type) {
    return function(fieldset) {
        return function() {
            fieldset.type = type;
        };
    };
}
function willValidate(fieldset) {
    return function() {
        return fieldset.willValidate;
    };
}
function validity(fieldset) {
    return function() {
        return fieldset.validity;
    };
}
function validationMessage(fieldset) {
    return function() {
        return fieldset.validationMessage;
    };
}
function checkValidity(fieldset) {
    return function() {
        return fieldset.checkValidity();
    };
}
function reportValidity(fieldset) {
    return function() {
        return fieldset.reportValidity();
    };
}
function setCustomValidity(value) {
    return function(fieldset) {
        return function() {
            fieldset.setCustomValidity(value);
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"g1eHF":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "acceptCharset", ()=>(0, _foreignJs.acceptCharset));
parcelHelpers.export(exports, "setAcceptCharset", ()=>(0, _foreignJs.setAcceptCharset));
parcelHelpers.export(exports, "action", ()=>(0, _foreignJs.action));
parcelHelpers.export(exports, "setAction", ()=>(0, _foreignJs.setAction));
parcelHelpers.export(exports, "autocomplete", ()=>(0, _foreignJs.autocomplete));
parcelHelpers.export(exports, "setAutocomplete", ()=>(0, _foreignJs.setAutocomplete));
parcelHelpers.export(exports, "enctype", ()=>(0, _foreignJs.enctype));
parcelHelpers.export(exports, "setEnctype", ()=>(0, _foreignJs.setEnctype));
parcelHelpers.export(exports, "encoding", ()=>(0, _foreignJs.encoding));
parcelHelpers.export(exports, "setEncoding", ()=>(0, _foreignJs.setEncoding));
parcelHelpers.export(exports, "method", ()=>(0, _foreignJs.method));
parcelHelpers.export(exports, "setMethod", ()=>(0, _foreignJs.setMethod));
parcelHelpers.export(exports, "name", ()=>(0, _foreignJs.name));
parcelHelpers.export(exports, "setName", ()=>(0, _foreignJs.setName));
parcelHelpers.export(exports, "noValidate", ()=>(0, _foreignJs.noValidate));
parcelHelpers.export(exports, "setNoValidate", ()=>(0, _foreignJs.setNoValidate));
parcelHelpers.export(exports, "target", ()=>(0, _foreignJs.target));
parcelHelpers.export(exports, "setTarget", ()=>(0, _foreignJs.setTarget));
parcelHelpers.export(exports, "length", ()=>(0, _foreignJs.length));
parcelHelpers.export(exports, "submit", ()=>(0, _foreignJs.submit));
parcelHelpers.export(exports, "reset", ()=>(0, _foreignJs.reset));
parcelHelpers.export(exports, "checkValidity", ()=>(0, _foreignJs.checkValidity));
parcelHelpers.export(exports, "reportValidity", ()=>(0, _foreignJs.reportValidity));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLFormElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLFormElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLFormElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLFormElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLFormElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLFormElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLFormElement");

},{"./foreign.js":"89fJk","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"89fJk":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "acceptCharset", ()=>acceptCharset);
parcelHelpers.export(exports, "setAcceptCharset", ()=>setAcceptCharset);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "action", ()=>action);
parcelHelpers.export(exports, "setAction", ()=>setAction);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "autocomplete", ()=>autocomplete);
parcelHelpers.export(exports, "setAutocomplete", ()=>setAutocomplete);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "enctype", ()=>enctype);
parcelHelpers.export(exports, "setEnctype", ()=>setEnctype);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "encoding", ()=>encoding);
parcelHelpers.export(exports, "setEncoding", ()=>setEncoding);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "method", ()=>method);
parcelHelpers.export(exports, "setMethod", ()=>setMethod);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "name", ()=>name);
parcelHelpers.export(exports, "setName", ()=>setName);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "noValidate", ()=>noValidate);
parcelHelpers.export(exports, "setNoValidate", ()=>setNoValidate);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "target", ()=>target);
parcelHelpers.export(exports, "setTarget", ()=>setTarget);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "length", ()=>length);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "submit", ()=>submit);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "reset", ()=>reset);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "checkValidity", ()=>checkValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "reportValidity", ()=>reportValidity);
function acceptCharset(form) {
    return function() {
        return form.acceptCharset;
    };
}
function setAcceptCharset(acceptCharset) {
    return function(form) {
        return function() {
            form.acceptCharset = acceptCharset;
        };
    };
}
function action(form) {
    return function() {
        return form.action;
    };
}
function setAction(action) {
    return function(form) {
        return function() {
            form.action = action;
        };
    };
}
function autocomplete(form) {
    return function() {
        return form.autocomplete;
    };
}
function setAutocomplete(autocomplete) {
    return function(form) {
        return function() {
            form.autocomplete = autocomplete;
        };
    };
}
function enctype(form) {
    return function() {
        return form.enctype;
    };
}
function setEnctype(enctype) {
    return function(form) {
        return function() {
            form.enctype = enctype;
        };
    };
}
function encoding(form) {
    return function() {
        return form.encoding;
    };
}
function setEncoding(encoding) {
    return function(form) {
        return function() {
            form.encoding = encoding;
        };
    };
}
function method(form) {
    return function() {
        return form.method;
    };
}
function setMethod(method) {
    return function(form) {
        return function() {
            form.method = method;
        };
    };
}
function name(form) {
    return function() {
        return form.name;
    };
}
function setName(name) {
    return function(form) {
        return function() {
            form.name = name;
        };
    };
}
function noValidate(form) {
    return function() {
        return form.noValidate;
    };
}
function setNoValidate(noValidate) {
    return function(form) {
        return function() {
            form.noValidate = noValidate;
        };
    };
}
function target(form) {
    return function() {
        return form.target;
    };
}
function setTarget(target) {
    return function(form) {
        return function() {
            form.target = target;
        };
    };
}
function length(form) {
    return function() {
        return form.length;
    };
}
function submit(form) {
    return function() {
        form.submit();
    };
}
function reset(form) {
    return function() {
        form.reset();
    };
}
function checkValidity(form) {
    return function() {
        return form.checkValidity();
    };
}
function reportValidity(form) {
    return function() {
        return form.reportValidity();
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"K68eV":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHRElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHRElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHRElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHRElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHRElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHRElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHRElement");

},{"../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jCuQG":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHeadElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHeadElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHeadElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHeadElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHeadElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHeadElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHeadElement");

},{"../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"pmS6T":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHeadingElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHeadingElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHeadingElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHeadingElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHeadingElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHeadingElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLHeadingElement");

},{"../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iaF1J":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "src", ()=>(0, _foreignJs.src));
parcelHelpers.export(exports, "setSrc", ()=>(0, _foreignJs.setSrc));
parcelHelpers.export(exports, "srcdoc", ()=>(0, _foreignJs.srcdoc));
parcelHelpers.export(exports, "setSrcdoc", ()=>(0, _foreignJs.setSrcdoc));
parcelHelpers.export(exports, "name", ()=>(0, _foreignJs.name));
parcelHelpers.export(exports, "setName", ()=>(0, _foreignJs.setName));
parcelHelpers.export(exports, "width", ()=>(0, _foreignJs.width));
parcelHelpers.export(exports, "setWidth", ()=>(0, _foreignJs.setWidth));
parcelHelpers.export(exports, "height", ()=>(0, _foreignJs.height));
parcelHelpers.export(exports, "setHeight", ()=>(0, _foreignJs.setHeight));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "contentDocument", ()=>contentDocument);
parcelHelpers.export(exports, "contentWindow", ()=>contentWindow);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Nullable/index.js");
var _indexJs2 = require("../Effect/index.js");
var _indexJs3 = require("../Unsafe.Coerce/index.js");
var _indexJs4 = require("../Web.Internal.FFI/index.js");
var map = /* #__PURE__ */ _indexJs.map(_indexJs2.functorEffect);
var toParentNode = _indexJs3.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs3.unsafeCoerce;
var toNode = _indexJs3.unsafeCoerce;
var toHTMLElement = _indexJs3.unsafeCoerce;
var toEventTarget = _indexJs3.unsafeCoerce;
var toElement = _indexJs3.unsafeCoerce;
var toChildNode = _indexJs3.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLIFrameElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLIFrameElement");
var fromNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLIFrameElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLIFrameElement");
var fromEventTarget = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLIFrameElement");
var fromElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLIFrameElement");
var fromChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLIFrameElement");
var contentWindow = /* #__PURE__ */ function() {
    var $2 = map(_indexJs1.toMaybe);
    return function($3) {
        return $2(_foreignJs["_contentWindow"]($3));
    };
}();
var contentDocument = /* #__PURE__ */ function() {
    var $4 = map(_indexJs1.toMaybe);
    return function($5) {
        return $4(_foreignJs["_contentDocument"]($5));
    };
}();

},{"./foreign.js":"5cHZY","../Data.Functor/index.js":"j9NCu","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5cHZY":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "src", ()=>src);
parcelHelpers.export(exports, "setSrc", ()=>setSrc);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "srcdoc", ()=>srcdoc);
parcelHelpers.export(exports, "setSrcdoc", ()=>setSrcdoc);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "name", ()=>name);
parcelHelpers.export(exports, "setName", ()=>setName);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "width", ()=>width);
parcelHelpers.export(exports, "setWidth", ()=>setWidth);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "height", ()=>height);
parcelHelpers.export(exports, "setHeight", ()=>setHeight);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_contentDocument", ()=>_contentDocument);
parcelHelpers.export(exports, "_contentWindow", ()=>_contentWindow);
function src(iframe) {
    return function() {
        return iframe.src;
    };
}
function setSrc(src) {
    return function(iframe) {
        return function() {
            iframe.src = src;
        };
    };
}
function srcdoc(iframe) {
    return function() {
        return iframe.srcdoc;
    };
}
function setSrcdoc(srcdoc) {
    return function(iframe) {
        return function() {
            iframe.srcdoc = srcdoc;
        };
    };
}
function name(iframe) {
    return function() {
        return iframe.name;
    };
}
function setName(name) {
    return function(iframe) {
        return function() {
            iframe.name = name;
        };
    };
}
function width(iframe) {
    return function() {
        return iframe.width;
    };
}
function setWidth(width) {
    return function(iframe) {
        return function() {
            iframe.width = width;
        };
    };
}
function height(iframe) {
    return function() {
        return iframe.height;
    };
}
function setHeight(height) {
    return function(iframe) {
        return function() {
            iframe.height = height;
        };
    };
}
function _contentDocument(iframe) {
    return function() {
        return iframe.contentDocument;
    };
}
function _contentWindow(iframe) {
    return function() {
        return iframe.contentWindow;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aUMyw":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "create", ()=>(0, _foreignJs.create));
parcelHelpers.export(exports, "alt", ()=>(0, _foreignJs.alt));
parcelHelpers.export(exports, "setAlt", ()=>(0, _foreignJs.setAlt));
parcelHelpers.export(exports, "src", ()=>(0, _foreignJs.src));
parcelHelpers.export(exports, "setSrc", ()=>(0, _foreignJs.setSrc));
parcelHelpers.export(exports, "srcset", ()=>(0, _foreignJs.srcset));
parcelHelpers.export(exports, "setSrcset", ()=>(0, _foreignJs.setSrcset));
parcelHelpers.export(exports, "currentSrc", ()=>(0, _foreignJs.currentSrc));
parcelHelpers.export(exports, "sizes", ()=>(0, _foreignJs.sizes));
parcelHelpers.export(exports, "setSizes", ()=>(0, _foreignJs.setSizes));
parcelHelpers.export(exports, "useMap", ()=>(0, _foreignJs.useMap));
parcelHelpers.export(exports, "setUseMap", ()=>(0, _foreignJs.setUseMap));
parcelHelpers.export(exports, "isMap", ()=>(0, _foreignJs.isMap));
parcelHelpers.export(exports, "setIsMap", ()=>(0, _foreignJs.setIsMap));
parcelHelpers.export(exports, "width", ()=>(0, _foreignJs.width));
parcelHelpers.export(exports, "setWidth", ()=>(0, _foreignJs.setWidth));
parcelHelpers.export(exports, "height", ()=>(0, _foreignJs.height));
parcelHelpers.export(exports, "setHeight", ()=>(0, _foreignJs.setHeight));
parcelHelpers.export(exports, "naturalWidth", ()=>(0, _foreignJs.naturalWidth));
parcelHelpers.export(exports, "naturalHeight", ()=>(0, _foreignJs.naturalHeight));
parcelHelpers.export(exports, "referrerPolicy", ()=>(0, _foreignJs.referrerPolicy));
parcelHelpers.export(exports, "setReferrerPolicy", ()=>(0, _foreignJs.setReferrerPolicy));
parcelHelpers.export(exports, "complete", ()=>(0, _foreignJs.complete));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "create$prime", ()=>create$prime);
parcelHelpers.export(exports, "crossOrigin", ()=>crossOrigin);
parcelHelpers.export(exports, "setCrossOrigin", ()=>setCrossOrigin);
parcelHelpers.export(exports, "decoding", ()=>decoding);
parcelHelpers.export(exports, "setDecoding", ()=>setDecoding);
parcelHelpers.export(exports, "loading", ()=>loading);
parcelHelpers.export(exports, "setLoading", ()=>setLoading);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Bind/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var _indexJs2 = require("../Data.Maybe/index.js");
var _indexJs3 = require("../Data.Nullable/index.js");
var _indexJs4 = require("../Effect/index.js");
var _indexJs5 = require("../Effect.Uncurried/index.js");
var _indexJs6 = require("../Unsafe.Coerce/index.js");
var _indexJs7 = require("../Web.HTML.HTMLImageElement.CORSMode/index.js");
var _indexJs8 = require("../Web.HTML.HTMLImageElement.DecodingHint/index.js");
var _indexJs9 = require("../Web.HTML.HTMLImageElement.Laziness/index.js");
var _indexJs10 = require("../Web.Internal.FFI/index.js");
var map = /* #__PURE__ */ _indexJs1.map(_indexJs4.functorEffect);
var toParentNode = _indexJs6.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs6.unsafeCoerce;
var toNode = _indexJs6.unsafeCoerce;
var toHTMLElement = _indexJs6.unsafeCoerce;
var toEventTarget = _indexJs6.unsafeCoerce;
var toElement = _indexJs6.unsafeCoerce;
var toChildNode = _indexJs6.unsafeCoerce;
var setLoading = function(laziness) {
    return _indexJs5.runEffectFn2(_foreignJs["_setLoading"])(_indexJs9.print(laziness));
};
var setDecoding = function(hint) {
    return _indexJs5.runEffectFn2(_foreignJs["_setDecoding"])(_indexJs8.print(hint));
};
var setCrossOrigin = function(mode) {
    return _indexJs5.runEffectFn2(_foreignJs["_setCrossOrigin"])(_indexJs7.print(mode));
};
var loading = /* #__PURE__ */ function() {
    var $3 = map(function() {
        var $6 = _indexJs2.fromMaybe(_indexJs9.Eager.value);
        return function($7) {
            return $6(_indexJs9.parse($7));
        };
    }());
    var $4 = _indexJs5.runEffectFn1(_foreignJs["_loading"]);
    return function($5) {
        return $3($4($5));
    };
}();
var fromParentNode = /* #__PURE__ */ _indexJs10.unsafeReadProtoTagged("HTMLImageElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs10.unsafeReadProtoTagged("HTMLImageElement");
var fromNode = /* #__PURE__ */ _indexJs10.unsafeReadProtoTagged("HTMLImageElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs10.unsafeReadProtoTagged("HTMLImageElement");
var fromEventTarget = /* #__PURE__ */ _indexJs10.unsafeReadProtoTagged("HTMLImageElement");
var fromElement = /* #__PURE__ */ _indexJs10.unsafeReadProtoTagged("HTMLImageElement");
var fromChildNode = /* #__PURE__ */ _indexJs10.unsafeReadProtoTagged("HTMLImageElement");
var decoding = /* #__PURE__ */ function() {
    var $8 = map(function() {
        var $11 = _indexJs2.fromMaybe(_indexJs8.Auto.value);
        return function($12) {
            return $11(_indexJs8.parse($12));
        };
    }());
    var $9 = _indexJs5.runEffectFn1(_foreignJs["_decoding"]);
    return function($10) {
        return $8($9($10));
    };
}();
var crossOrigin = /* #__PURE__ */ function() {
    var $13 = map(_indexJs.composeKleisliFlipped(_indexJs2.bindMaybe)(_indexJs7.parse)(_indexJs3.toMaybe));
    var $14 = _indexJs5.runEffectFn1(_foreignJs["_crossOrigin"]);
    return function($15) {
        return $13($14($15));
    };
}();
var create$prime = _foreignJs.createWithDimensions;

},{"./foreign.js":"b37sV","../Control.Bind/index.js":"3yoUR","../Data.Functor/index.js":"j9NCu","../Data.Maybe/index.js":"ff6lw","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","../Effect.Uncurried/index.js":"4HWc2","../Unsafe.Coerce/index.js":"kRX7u","../Web.HTML.HTMLImageElement.CORSMode/index.js":"evZIz","../Web.HTML.HTMLImageElement.DecodingHint/index.js":"1Tyua","../Web.HTML.HTMLImageElement.Laziness/index.js":"fmqW8","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b37sV":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "create", ()=>create);
parcelHelpers.export(exports, "createWithDimensions", ()=>createWithDimensions);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "alt", ()=>alt);
parcelHelpers.export(exports, "setAlt", ()=>setAlt);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "src", ()=>src);
parcelHelpers.export(exports, "setSrc", ()=>setSrc);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "srcset", ()=>srcset);
parcelHelpers.export(exports, "setSrcset", ()=>setSrcset);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "sizes", ()=>sizes);
parcelHelpers.export(exports, "setSizes", ()=>setSizes);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "currentSrc", ()=>currentSrc);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_crossOrigin", ()=>_crossOrigin);
parcelHelpers.export(exports, "_setCrossOrigin", ()=>_setCrossOrigin);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "useMap", ()=>useMap);
parcelHelpers.export(exports, "setUseMap", ()=>setUseMap);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "isMap", ()=>isMap);
parcelHelpers.export(exports, "setIsMap", ()=>setIsMap);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "width", ()=>width);
parcelHelpers.export(exports, "setWidth", ()=>setWidth);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "height", ()=>height);
parcelHelpers.export(exports, "setHeight", ()=>setHeight);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "naturalWidth", ()=>naturalWidth);
parcelHelpers.export(exports, "naturalHeight", ()=>naturalHeight);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "referrerPolicy", ()=>referrerPolicy);
parcelHelpers.export(exports, "setReferrerPolicy", ()=>setReferrerPolicy);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_decoding", ()=>_decoding);
parcelHelpers.export(exports, "_setDecoding", ()=>_setDecoding);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_loading", ()=>_loading);
parcelHelpers.export(exports, "_setLoading", ()=>_setLoading);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "complete", ()=>complete);
function create() {
    return new Image();
}
function createWithDimensions(width) {
    return function(height) {
        return function() {
            return new Image(width, height);
        };
    };
}
function alt(image) {
    return function() {
        return image.alt;
    };
}
function setAlt(alt) {
    return function(image) {
        return function() {
            image.alt = alt;
        };
    };
}
function src(image) {
    return function() {
        return image.src;
    };
}
function setSrc(src) {
    return function(image) {
        return function() {
            image.src = src;
        };
    };
}
function srcset(image) {
    return function() {
        return image.srcset;
    };
}
function setSrcset(srcset) {
    return function(image) {
        return function() {
            image.srcset = srcset;
        };
    };
}
function sizes(image) {
    return function() {
        return image.sizes;
    };
}
function setSizes(sizes) {
    return function(image) {
        return function() {
            image.sizes = sizes;
        };
    };
}
function currentSrc(image) {
    return function() {
        return image.currentSrc;
    };
}
function _crossOrigin(image) {
    return image.crossOrigin;
}
function _setCrossOrigin(crossOrigin, image) {
    image.crossOrigin = crossOrigin;
}
function useMap(image) {
    return function() {
        return image.useMap;
    };
}
function setUseMap(useMap) {
    return function(image) {
        return function() {
            image.useMap = useMap;
        };
    };
}
function isMap(image) {
    return function() {
        return image.isMap;
    };
}
function setIsMap(isMap) {
    return function(image) {
        return function() {
            image.isMap = isMap;
        };
    };
}
function width(image) {
    return function() {
        return image.width;
    };
}
function setWidth(width) {
    return function(image) {
        return function() {
            image.width = width;
        };
    };
}
function height(image) {
    return function() {
        return image.height;
    };
}
function setHeight(height) {
    return function(image) {
        return function() {
            image.height = height;
        };
    };
}
function naturalWidth(image) {
    return function() {
        return image.naturalWidth;
    };
}
function naturalHeight(image) {
    return function() {
        return image.naturalHeight;
    };
}
function referrerPolicy(image) {
    return function() {
        return image.referrerPolicy;
    };
}
function setReferrerPolicy(referrerPolicy) {
    return function(image) {
        return function() {
            image.referrerPolicy = referrerPolicy;
        };
    };
}
function _decoding(image) {
    return image.decoding;
}
function _setDecoding(decoding, image) {
    image.decoding = decoding;
}
function _loading(image) {
    return image.loading;
}
function _setLoading(loading, image) {
    image.loading = loading;
}
function complete(image) {
    return function() {
        return image.complete;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"evZIz":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Anonymous", ()=>Anonymous);
parcelHelpers.export(exports, "UseCredentials", ()=>UseCredentials);
parcelHelpers.export(exports, "parse", ()=>parse);
parcelHelpers.export(exports, "print", ()=>print);
parcelHelpers.export(exports, "eqCORSMode", ()=>eqCORSMode);
parcelHelpers.export(exports, "ordCORSMode", ()=>ordCORSMode);
parcelHelpers.export(exports, "showDecodingHint", ()=>showDecodingHint);
var _indexJs = require("../Data.Maybe/index.js");
var _indexJs1 = require("../Data.Ordering/index.js");
var Anonymous = /* #__PURE__ */ function() {
    function Anonymous() {}
    Anonymous.value = new Anonymous();
    return Anonymous;
}();
var UseCredentials = /* #__PURE__ */ function() {
    function UseCredentials() {}
    UseCredentials.value = new UseCredentials();
    return UseCredentials;
}();
var showDecodingHint = {
    show: function(v) {
        if (v instanceof Anonymous) return "Anonymous";
        if (v instanceof UseCredentials) return "UseCredentials";
        throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.CORSMode (line 18, column 10 - line 20, column 39): " + [
            v.constructor.name
        ]);
    }
};
var print = function(v) {
    if (v instanceof Anonymous) return "anonymous";
    if (v instanceof UseCredentials) return "use-credentials";
    throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.CORSMode (line 30, column 9 - line 32, column 38): " + [
        v.constructor.name
    ]);
};
var parse = function(v) {
    if (v === "") return new _indexJs.Just(Anonymous.value);
    if (v === "anonymous") return new _indexJs.Just(Anonymous.value);
    if (v === "use-credentials") return new _indexJs.Just(UseCredentials.value);
    return _indexJs.Nothing.value;
};
var eqCORSMode = {
    eq: function(x) {
        return function(y) {
            if (x instanceof Anonymous && y instanceof Anonymous) return true;
            if (x instanceof UseCredentials && y instanceof UseCredentials) return true;
            return false;
        };
    }
};
var ordCORSMode = {
    compare: function(x) {
        return function(y) {
            if (x instanceof Anonymous && y instanceof Anonymous) return _indexJs1.EQ.value;
            if (x instanceof Anonymous) return _indexJs1.LT.value;
            if (y instanceof Anonymous) return _indexJs1.GT.value;
            if (x instanceof UseCredentials && y instanceof UseCredentials) return _indexJs1.EQ.value;
            throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.CORSMode (line 0, column 0 - line 0, column 0): " + [
                x.constructor.name,
                y.constructor.name
            ]);
        };
    },
    Eq0: function() {
        return eqCORSMode;
    }
};

},{"../Data.Maybe/index.js":"ff6lw","../Data.Ordering/index.js":"2NvYx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1Tyua":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Sync", ()=>Sync);
parcelHelpers.export(exports, "Async", ()=>Async);
parcelHelpers.export(exports, "Auto", ()=>Auto);
parcelHelpers.export(exports, "parse", ()=>parse);
parcelHelpers.export(exports, "print", ()=>print);
parcelHelpers.export(exports, "eqDecodingHint", ()=>eqDecodingHint);
parcelHelpers.export(exports, "ordDecodingHint", ()=>ordDecodingHint);
parcelHelpers.export(exports, "showDecodingHint", ()=>showDecodingHint);
var _indexJs = require("../Data.Maybe/index.js");
var _indexJs1 = require("../Data.Ordering/index.js");
var Sync = /* #__PURE__ */ function() {
    function Sync() {}
    Sync.value = new Sync();
    return Sync;
}();
var Async = /* #__PURE__ */ function() {
    function Async() {}
    Async.value = new Async();
    return Async;
}();
var Auto = /* #__PURE__ */ function() {
    function Auto() {}
    Auto.value = new Auto();
    return Auto;
}();
var showDecodingHint = {
    show: function(v) {
        if (v instanceof Sync) return "Sync";
        if (v instanceof Async) return "Async";
        if (v instanceof Auto) return "Auto";
        throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.DecodingHint (line 19, column 10 - line 22, column 19): " + [
            v.constructor.name
        ]);
    }
};
var print = function(v) {
    if (v instanceof Sync) return "sync";
    if (v instanceof Async) return "async";
    if (v instanceof Auto) return "auto";
    throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.DecodingHint (line 33, column 9 - line 36, column 17): " + [
        v.constructor.name
    ]);
};
var parse = function(v) {
    if (v === "") return new _indexJs.Just(Auto.value);
    if (v === "sync") return new _indexJs.Just(Sync.value);
    if (v === "async") return new _indexJs.Just(Async.value);
    if (v === "auto") return new _indexJs.Just(Auto.value);
    return _indexJs.Nothing.value;
};
var eqDecodingHint = {
    eq: function(x) {
        return function(y) {
            if (x instanceof Sync && y instanceof Sync) return true;
            if (x instanceof Async && y instanceof Async) return true;
            if (x instanceof Auto && y instanceof Auto) return true;
            return false;
        };
    }
};
var ordDecodingHint = {
    compare: function(x) {
        return function(y) {
            if (x instanceof Sync && y instanceof Sync) return _indexJs1.EQ.value;
            if (x instanceof Sync) return _indexJs1.LT.value;
            if (y instanceof Sync) return _indexJs1.GT.value;
            if (x instanceof Async && y instanceof Async) return _indexJs1.EQ.value;
            if (x instanceof Async) return _indexJs1.LT.value;
            if (y instanceof Async) return _indexJs1.GT.value;
            if (x instanceof Auto && y instanceof Auto) return _indexJs1.EQ.value;
            throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.DecodingHint (line 0, column 0 - line 0, column 0): " + [
                x.constructor.name,
                y.constructor.name
            ]);
        };
    },
    Eq0: function() {
        return eqDecodingHint;
    }
};

},{"../Data.Maybe/index.js":"ff6lw","../Data.Ordering/index.js":"2NvYx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fmqW8":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Eager", ()=>Eager);
parcelHelpers.export(exports, "Lazy", ()=>Lazy);
parcelHelpers.export(exports, "parse", ()=>parse);
parcelHelpers.export(exports, "print", ()=>print);
parcelHelpers.export(exports, "eqDecodingHint", ()=>eqDecodingHint);
parcelHelpers.export(exports, "ordDecodingHint", ()=>ordDecodingHint);
parcelHelpers.export(exports, "showDecodingHint", ()=>showDecodingHint);
var _indexJs = require("../Data.Maybe/index.js");
var _indexJs1 = require("../Data.Ordering/index.js");
var Eager = /* #__PURE__ */ function() {
    function Eager() {}
    Eager.value = new Eager();
    return Eager;
}();
var Lazy = /* #__PURE__ */ function() {
    function Lazy() {}
    Lazy.value = new Lazy();
    return Lazy;
}();
var showDecodingHint = {
    show: function(v) {
        if (v instanceof Eager) return "Eager";
        if (v instanceof Lazy) return "Lazy";
        throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.Laziness (line 18, column 10 - line 20, column 19): " + [
            v.constructor.name
        ]);
    }
};
var print = function(v) {
    if (v instanceof Eager) return "eager";
    if (v instanceof Lazy) return "lazy";
    throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.Laziness (line 30, column 9 - line 32, column 17): " + [
        v.constructor.name
    ]);
};
var parse = function(v) {
    if (v === "") return new _indexJs.Just(Eager.value);
    if (v === "eager") return new _indexJs.Just(Eager.value);
    if (v === "lazy") return new _indexJs.Just(Lazy.value);
    return _indexJs.Nothing.value;
};
var eqDecodingHint = {
    eq: function(x) {
        return function(y) {
            if (x instanceof Eager && y instanceof Eager) return true;
            if (x instanceof Lazy && y instanceof Lazy) return true;
            return false;
        };
    }
};
var ordDecodingHint = {
    compare: function(x) {
        return function(y) {
            if (x instanceof Eager && y instanceof Eager) return _indexJs1.EQ.value;
            if (x instanceof Eager) return _indexJs1.LT.value;
            if (y instanceof Eager) return _indexJs1.GT.value;
            if (x instanceof Lazy && y instanceof Lazy) return _indexJs1.EQ.value;
            throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.Laziness (line 0, column 0 - line 0, column 0): " + [
                x.constructor.name,
                y.constructor.name
            ]);
        };
    },
    Eq0: function() {
        return eqDecodingHint;
    }
};

},{"../Data.Maybe/index.js":"ff6lw","../Data.Ordering/index.js":"2NvYx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"YodCO":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "accept", ()=>(0, _foreignJs.accept));
parcelHelpers.export(exports, "setAccept", ()=>(0, _foreignJs.setAccept));
parcelHelpers.export(exports, "alt", ()=>(0, _foreignJs.alt));
parcelHelpers.export(exports, "setAlt", ()=>(0, _foreignJs.setAlt));
parcelHelpers.export(exports, "autocomplete", ()=>(0, _foreignJs.autocomplete));
parcelHelpers.export(exports, "setAutocomplete", ()=>(0, _foreignJs.setAutocomplete));
parcelHelpers.export(exports, "autofocus", ()=>(0, _foreignJs.autofocus));
parcelHelpers.export(exports, "setAutofocus", ()=>(0, _foreignJs.setAutofocus));
parcelHelpers.export(exports, "defaultChecked", ()=>(0, _foreignJs.defaultChecked));
parcelHelpers.export(exports, "setDefaultChecked", ()=>(0, _foreignJs.setDefaultChecked));
parcelHelpers.export(exports, "checked", ()=>(0, _foreignJs.checked));
parcelHelpers.export(exports, "setChecked", ()=>(0, _foreignJs.setChecked));
parcelHelpers.export(exports, "dirName", ()=>(0, _foreignJs.dirName));
parcelHelpers.export(exports, "setDirName", ()=>(0, _foreignJs.setDirName));
parcelHelpers.export(exports, "disabled", ()=>(0, _foreignJs.disabled));
parcelHelpers.export(exports, "setDisabled", ()=>(0, _foreignJs.setDisabled));
parcelHelpers.export(exports, "formAction", ()=>(0, _foreignJs.formAction));
parcelHelpers.export(exports, "setFormAction", ()=>(0, _foreignJs.setFormAction));
parcelHelpers.export(exports, "formEnctype", ()=>(0, _foreignJs.formEnctype));
parcelHelpers.export(exports, "setFormEnctype", ()=>(0, _foreignJs.setFormEnctype));
parcelHelpers.export(exports, "formMethod", ()=>(0, _foreignJs.formMethod));
parcelHelpers.export(exports, "setFormMethod", ()=>(0, _foreignJs.setFormMethod));
parcelHelpers.export(exports, "formNoValidate", ()=>(0, _foreignJs.formNoValidate));
parcelHelpers.export(exports, "setFormNoValidate", ()=>(0, _foreignJs.setFormNoValidate));
parcelHelpers.export(exports, "formTarget", ()=>(0, _foreignJs.formTarget));
parcelHelpers.export(exports, "setFormTarget", ()=>(0, _foreignJs.setFormTarget));
parcelHelpers.export(exports, "height", ()=>(0, _foreignJs.height));
parcelHelpers.export(exports, "setHeight", ()=>(0, _foreignJs.setHeight));
parcelHelpers.export(exports, "indeterminate", ()=>(0, _foreignJs.indeterminate));
parcelHelpers.export(exports, "setIndeterminate", ()=>(0, _foreignJs.setIndeterminate));
parcelHelpers.export(exports, "max", ()=>(0, _foreignJs.max));
parcelHelpers.export(exports, "setMax", ()=>(0, _foreignJs.setMax));
parcelHelpers.export(exports, "maxLength", ()=>(0, _foreignJs.maxLength));
parcelHelpers.export(exports, "setMaxLength", ()=>(0, _foreignJs.setMaxLength));
parcelHelpers.export(exports, "min", ()=>(0, _foreignJs.min));
parcelHelpers.export(exports, "setMin", ()=>(0, _foreignJs.setMin));
parcelHelpers.export(exports, "minLength", ()=>(0, _foreignJs.minLength));
parcelHelpers.export(exports, "setMinLength", ()=>(0, _foreignJs.setMinLength));
parcelHelpers.export(exports, "multiple", ()=>(0, _foreignJs.multiple));
parcelHelpers.export(exports, "setMultiple", ()=>(0, _foreignJs.setMultiple));
parcelHelpers.export(exports, "name", ()=>(0, _foreignJs.name));
parcelHelpers.export(exports, "setName", ()=>(0, _foreignJs.setName));
parcelHelpers.export(exports, "pattern", ()=>(0, _foreignJs.pattern));
parcelHelpers.export(exports, "setPattern", ()=>(0, _foreignJs.setPattern));
parcelHelpers.export(exports, "placeholder", ()=>(0, _foreignJs.placeholder));
parcelHelpers.export(exports, "setPlaceholder", ()=>(0, _foreignJs.setPlaceholder));
parcelHelpers.export(exports, "readOnly", ()=>(0, _foreignJs.readOnly));
parcelHelpers.export(exports, "setReadOnly", ()=>(0, _foreignJs.setReadOnly));
parcelHelpers.export(exports, "required", ()=>(0, _foreignJs.required));
parcelHelpers.export(exports, "setRequired", ()=>(0, _foreignJs.setRequired));
parcelHelpers.export(exports, "size", ()=>(0, _foreignJs.size));
parcelHelpers.export(exports, "setSize", ()=>(0, _foreignJs.setSize));
parcelHelpers.export(exports, "src", ()=>(0, _foreignJs.src));
parcelHelpers.export(exports, "setSrc", ()=>(0, _foreignJs.setSrc));
parcelHelpers.export(exports, "step", ()=>(0, _foreignJs.step));
parcelHelpers.export(exports, "setStep", ()=>(0, _foreignJs.setStep));
parcelHelpers.export(exports, "type_", ()=>(0, _foreignJs.type_));
parcelHelpers.export(exports, "setType", ()=>(0, _foreignJs.setType));
parcelHelpers.export(exports, "defaultValue", ()=>(0, _foreignJs.defaultValue));
parcelHelpers.export(exports, "setDefaultValue", ()=>(0, _foreignJs.setDefaultValue));
parcelHelpers.export(exports, "value", ()=>(0, _foreignJs.value));
parcelHelpers.export(exports, "setValue", ()=>(0, _foreignJs.setValue));
parcelHelpers.export(exports, "valueAsDate", ()=>(0, _foreignJs.valueAsDate));
parcelHelpers.export(exports, "setValueAsDate", ()=>(0, _foreignJs.setValueAsDate));
parcelHelpers.export(exports, "valueAsNumber", ()=>(0, _foreignJs.valueAsNumber));
parcelHelpers.export(exports, "setValueAsNumber", ()=>(0, _foreignJs.setValueAsNumber));
parcelHelpers.export(exports, "width", ()=>(0, _foreignJs.width));
parcelHelpers.export(exports, "setWidth", ()=>(0, _foreignJs.setWidth));
parcelHelpers.export(exports, "willValidate", ()=>(0, _foreignJs.willValidate));
parcelHelpers.export(exports, "validity", ()=>(0, _foreignJs.validity));
parcelHelpers.export(exports, "validationMessage", ()=>(0, _foreignJs.validationMessage));
parcelHelpers.export(exports, "checkValidity", ()=>(0, _foreignJs.checkValidity));
parcelHelpers.export(exports, "reportValidity", ()=>(0, _foreignJs.reportValidity));
parcelHelpers.export(exports, "setCustomValidity", ()=>(0, _foreignJs.setCustomValidity));
parcelHelpers.export(exports, "labels", ()=>(0, _foreignJs.labels));
parcelHelpers.export(exports, "select", ()=>(0, _foreignJs.select));
parcelHelpers.export(exports, "selectionStart", ()=>(0, _foreignJs.selectionStart));
parcelHelpers.export(exports, "setSelectionStart", ()=>(0, _foreignJs.setSelectionStart));
parcelHelpers.export(exports, "selectionEnd", ()=>(0, _foreignJs.selectionEnd));
parcelHelpers.export(exports, "setSelectionEnd", ()=>(0, _foreignJs.setSelectionEnd));
parcelHelpers.export(exports, "selectionDirection", ()=>(0, _foreignJs.selectionDirection));
parcelHelpers.export(exports, "setSelectionDirection", ()=>(0, _foreignJs.setSelectionDirection));
parcelHelpers.export(exports, "setRangeText", ()=>(0, _foreignJs.setRangeText));
parcelHelpers.export(exports, "setSelectionRange", ()=>(0, _foreignJs.setSelectionRange));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "form", ()=>form);
parcelHelpers.export(exports, "files", ()=>files);
parcelHelpers.export(exports, "list", ()=>list);
parcelHelpers.export(exports, "stepUp", ()=>stepUp);
parcelHelpers.export(exports, "stepUp$prime", ()=>stepUp$prime);
parcelHelpers.export(exports, "stepDown", ()=>stepDown);
parcelHelpers.export(exports, "stepDown$prime", ()=>stepDown$prime);
parcelHelpers.export(exports, "setRangeText$prime", ()=>setRangeText$prime);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Nullable/index.js");
var _indexJs2 = require("../Effect/index.js");
var _indexJs3 = require("../Unsafe.Coerce/index.js");
var _indexJs4 = require("../Web.HTML.SelectionMode/index.js");
var _indexJs5 = require("../Web.Internal.FFI/index.js");
var map = /* #__PURE__ */ _indexJs.map(_indexJs2.functorEffect);
var toParentNode = _indexJs3.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs3.unsafeCoerce;
var toNode = _indexJs3.unsafeCoerce;
var toHTMLElement = _indexJs3.unsafeCoerce;
var toEventTarget = _indexJs3.unsafeCoerce;
var toElement = _indexJs3.unsafeCoerce;
var toChildNode = _indexJs3.unsafeCoerce;
var stepUp$prime = _foreignJs.stepUpBy;
var stepUp = /* #__PURE__ */ stepUp$prime(1);
var stepDown$prime = _foreignJs.stepDownBy;
var stepDown = /* #__PURE__ */ stepDown$prime(1);
var setRangeText$prime = function(rpl) {
    return function(s) {
        return function(e) {
            return function(mode) {
                return function(area) {
                    return function() {
                        return _foreignJs["_setRangeText"](rpl, s, e, _indexJs4.print(mode), area);
                    };
                };
            };
        };
    };
};
var list = /* #__PURE__ */ function() {
    var $2 = map(_indexJs1.toMaybe);
    return function($3) {
        return $2(_foreignJs["_list"]($3));
    };
}();
var fromParentNode = /* #__PURE__ */ _indexJs5.unsafeReadProtoTagged("HTMLInputElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs5.unsafeReadProtoTagged("HTMLInputElement");
var fromNode = /* #__PURE__ */ _indexJs5.unsafeReadProtoTagged("HTMLInputElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs5.unsafeReadProtoTagged("HTMLInputElement");
var fromEventTarget = /* #__PURE__ */ _indexJs5.unsafeReadProtoTagged("HTMLInputElement");
var fromElement = /* #__PURE__ */ _indexJs5.unsafeReadProtoTagged("HTMLInputElement");
var fromChildNode = /* #__PURE__ */ _indexJs5.unsafeReadProtoTagged("HTMLInputElement");
var form = /* #__PURE__ */ function() {
    var $4 = map(_indexJs1.toMaybe);
    return function($5) {
        return $4(_foreignJs["_form"]($5));
    };
}();
var files = /* #__PURE__ */ function() {
    var $6 = map(_indexJs1.toMaybe);
    return function($7) {
        return $6(_foreignJs["_files"]($7));
    };
}();

},{"./foreign.js":"6jx3T","../Data.Functor/index.js":"j9NCu","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.HTML.SelectionMode/index.js":"4IpJO","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6jx3T":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "accept", ()=>accept);
parcelHelpers.export(exports, "setAccept", ()=>setAccept);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "alt", ()=>alt);
parcelHelpers.export(exports, "setAlt", ()=>setAlt);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "autocomplete", ()=>autocomplete);
parcelHelpers.export(exports, "setAutocomplete", ()=>setAutocomplete);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "autofocus", ()=>autofocus);
parcelHelpers.export(exports, "setAutofocus", ()=>setAutofocus);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "defaultChecked", ()=>defaultChecked);
parcelHelpers.export(exports, "setDefaultChecked", ()=>setDefaultChecked);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "checked", ()=>checked);
parcelHelpers.export(exports, "setChecked", ()=>setChecked);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "dirName", ()=>dirName);
parcelHelpers.export(exports, "setDirName", ()=>setDirName);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "disabled", ()=>disabled);
parcelHelpers.export(exports, "setDisabled", ()=>setDisabled);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_form", ()=>_form);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_files", ()=>_files);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "formAction", ()=>formAction);
parcelHelpers.export(exports, "setFormAction", ()=>setFormAction);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "formEnctype", ()=>formEnctype);
parcelHelpers.export(exports, "setFormEnctype", ()=>setFormEnctype);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "formMethod", ()=>formMethod);
parcelHelpers.export(exports, "setFormMethod", ()=>setFormMethod);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "formNoValidate", ()=>formNoValidate);
parcelHelpers.export(exports, "setFormNoValidate", ()=>setFormNoValidate);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "formTarget", ()=>formTarget);
parcelHelpers.export(exports, "setFormTarget", ()=>setFormTarget);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "height", ()=>height);
parcelHelpers.export(exports, "setHeight", ()=>setHeight);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "indeterminate", ()=>indeterminate);
parcelHelpers.export(exports, "setIndeterminate", ()=>setIndeterminate);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_list", ()=>_list);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "max", ()=>max);
parcelHelpers.export(exports, "setMax", ()=>setMax);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "maxLength", ()=>maxLength);
parcelHelpers.export(exports, "setMaxLength", ()=>setMaxLength);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "min", ()=>min);
parcelHelpers.export(exports, "setMin", ()=>setMin);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "minLength", ()=>minLength);
parcelHelpers.export(exports, "setMinLength", ()=>setMinLength);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "multiple", ()=>multiple);
parcelHelpers.export(exports, "setMultiple", ()=>setMultiple);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "name", ()=>name);
parcelHelpers.export(exports, "setName", ()=>setName);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "pattern", ()=>pattern);
parcelHelpers.export(exports, "setPattern", ()=>setPattern);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "placeholder", ()=>placeholder);
parcelHelpers.export(exports, "setPlaceholder", ()=>setPlaceholder);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "readOnly", ()=>readOnly);
parcelHelpers.export(exports, "setReadOnly", ()=>setReadOnly);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "required", ()=>required);
parcelHelpers.export(exports, "setRequired", ()=>setRequired);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "size", ()=>size);
parcelHelpers.export(exports, "setSize", ()=>setSize);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "src", ()=>src);
parcelHelpers.export(exports, "setSrc", ()=>setSrc);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "step", ()=>step);
parcelHelpers.export(exports, "setStep", ()=>setStep);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "type_", ()=>type_);
parcelHelpers.export(exports, "setType", ()=>setType);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "defaultValue", ()=>defaultValue);
parcelHelpers.export(exports, "setDefaultValue", ()=>setDefaultValue);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "value", ()=>value);
parcelHelpers.export(exports, "setValue", ()=>setValue);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "valueAsDate", ()=>valueAsDate);
parcelHelpers.export(exports, "setValueAsDate", ()=>setValueAsDate);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "valueAsNumber", ()=>valueAsNumber);
parcelHelpers.export(exports, "setValueAsNumber", ()=>setValueAsNumber);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "width", ()=>width);
parcelHelpers.export(exports, "setWidth", ()=>setWidth);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "stepUpBy", ()=>stepUpBy);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "stepDownBy", ()=>stepDownBy);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "willValidate", ()=>willValidate);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "validity", ()=>validity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "validationMessage", ()=>validationMessage);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "checkValidity", ()=>checkValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "reportValidity", ()=>reportValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "setCustomValidity", ()=>setCustomValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "labels", ()=>labels);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "select", ()=>select);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "selectionStart", ()=>selectionStart);
parcelHelpers.export(exports, "setSelectionStart", ()=>setSelectionStart);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "selectionEnd", ()=>selectionEnd);
parcelHelpers.export(exports, "setSelectionEnd", ()=>setSelectionEnd);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "selectionDirection", ()=>selectionDirection);
parcelHelpers.export(exports, "setSelectionDirection", ()=>setSelectionDirection);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "setRangeText", ()=>setRangeText);
parcelHelpers.export(exports, "_setRangeText", ()=>_setRangeText);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "setSelectionRange", ()=>setSelectionRange);
function accept(input) {
    return function() {
        return input.accept;
    };
}
function setAccept(accept) {
    return function(input) {
        return function() {
            input.accept = accept;
        };
    };
}
function alt(input) {
    return function() {
        return input.alt;
    };
}
function setAlt(alt) {
    return function(input) {
        return function() {
            input.alt = alt;
        };
    };
}
function autocomplete(input) {
    return function() {
        return input.autocomplete;
    };
}
function setAutocomplete(autocomplete) {
    return function(input) {
        return function() {
            input.autocomplete = autocomplete;
        };
    };
}
function autofocus(input) {
    return function() {
        return input.autofocus;
    };
}
function setAutofocus(autofocus) {
    return function(input) {
        return function() {
            input.autofocus = autofocus;
        };
    };
}
function defaultChecked(input) {
    return function() {
        return input.defaultChecked;
    };
}
function setDefaultChecked(defaultChecked) {
    return function(input) {
        return function() {
            input.defaultChecked = defaultChecked;
        };
    };
}
function checked(input) {
    return function() {
        return input.checked;
    };
}
function setChecked(checked) {
    return function(input) {
        return function() {
            input.checked = checked;
        };
    };
}
function dirName(input) {
    return function() {
        return input.dirName;
    };
}
function setDirName(dirName) {
    return function(input) {
        return function() {
            input.dirName = dirName;
        };
    };
}
function disabled(input) {
    return function() {
        return input.disabled;
    };
}
function setDisabled(disabled) {
    return function(input) {
        return function() {
            input.disabled = disabled;
        };
    };
}
function _form(input) {
    return function() {
        return input.form;
    };
}
function _files(input) {
    return function() {
        return input.files;
    };
}
function formAction(input) {
    return function() {
        return input.formAction;
    };
}
function setFormAction(formAction) {
    return function(input) {
        return function() {
            input.formAction = formAction;
        };
    };
}
function formEnctype(input) {
    return function() {
        return input.formEnctype;
    };
}
function setFormEnctype(formEnctype) {
    return function(input) {
        return function() {
            input.formEnctype = formEnctype;
        };
    };
}
function formMethod(input) {
    return function() {
        return input.formMethod;
    };
}
function setFormMethod(formMethod) {
    return function(input) {
        return function() {
            input.formMethod = formMethod;
        };
    };
}
function formNoValidate(input) {
    return function() {
        return input.formNoValidate;
    };
}
function setFormNoValidate(formNoValidate) {
    return function(input) {
        return function() {
            input.formNoValidate = formNoValidate;
        };
    };
}
function formTarget(input) {
    return function() {
        return input.formTarget;
    };
}
function setFormTarget(formTarget) {
    return function(input) {
        return function() {
            input.formTarget = formTarget;
        };
    };
}
function height(input) {
    return function() {
        return input.height;
    };
}
function setHeight(height) {
    return function(input) {
        return function() {
            input.height = height;
        };
    };
}
function indeterminate(input) {
    return function() {
        return input.indeterminate;
    };
}
function setIndeterminate(indeterminate) {
    return function(input) {
        return function() {
            input.indeterminate = indeterminate;
        };
    };
}
function _list(input) {
    return function() {
        return input.list;
    };
}
function max(input) {
    return function() {
        return input.max;
    };
}
function setMax(max) {
    return function(input) {
        return function() {
            input.max = max;
        };
    };
}
function maxLength(input) {
    return function() {
        return input.maxLength;
    };
}
function setMaxLength(maxLength) {
    return function(input) {
        return function() {
            input.maxLength = maxLength;
        };
    };
}
function min(input) {
    return function() {
        return input.min;
    };
}
function setMin(min) {
    return function(input) {
        return function() {
            input.min = min;
        };
    };
}
function minLength(input) {
    return function() {
        return input.minLength;
    };
}
function setMinLength(minLength) {
    return function(input) {
        return function() {
            input.minLength = minLength;
        };
    };
}
function multiple(input) {
    return function() {
        return input.multiple;
    };
}
function setMultiple(multiple) {
    return function(input) {
        return function() {
            input.multiple = multiple;
        };
    };
}
function name(input) {
    return function() {
        return input.name;
    };
}
function setName(name) {
    return function(input) {
        return function() {
            input.name = name;
        };
    };
}
function pattern(input) {
    return function() {
        return input.pattern;
    };
}
function setPattern(pattern) {
    return function(input) {
        return function() {
            input.pattern = pattern;
        };
    };
}
function placeholder(input) {
    return function() {
        return input.placeholder;
    };
}
function setPlaceholder(placeholder) {
    return function(input) {
        return function() {
            input.placeholder = placeholder;
        };
    };
}
function readOnly(input) {
    return function() {
        return input.readOnly;
    };
}
function setReadOnly(readOnly) {
    return function(input) {
        return function() {
            input.readOnly = readOnly;
        };
    };
}
function required(input) {
    return function() {
        return input.required;
    };
}
function setRequired(required) {
    return function(input) {
        return function() {
            input.required = required;
        };
    };
}
function size(input) {
    return function() {
        return input.size;
    };
}
function setSize(size) {
    return function(input) {
        return function() {
            input.size = size;
        };
    };
}
function src(input) {
    return function() {
        return input.src;
    };
}
function setSrc(src) {
    return function(input) {
        return function() {
            input.src = src;
        };
    };
}
function step(input) {
    return function() {
        return input.step;
    };
}
function setStep(step) {
    return function(input) {
        return function() {
            input.step = step;
        };
    };
}
function type_(input) {
    return function() {
        return input.type;
    };
}
function setType(type) {
    return function(input) {
        return function() {
            input.type = type;
        };
    };
}
function defaultValue(input) {
    return function() {
        return input.defaultValue;
    };
}
function setDefaultValue(defaultValue) {
    return function(input) {
        return function() {
            input.defaultValue = defaultValue;
        };
    };
}
function value(input) {
    return function() {
        return input.value;
    };
}
function setValue(value) {
    return function(input) {
        return function() {
            input.value = value;
        };
    };
}
function valueAsDate(input) {
    return function() {
        return input.valueAsDate;
    };
}
function setValueAsDate(valueAsDate) {
    return function(input) {
        return function() {
            input.valueAsDate = valueAsDate;
        };
    };
}
function valueAsNumber(input) {
    return function() {
        return input.valueAsNumber;
    };
}
function setValueAsNumber(valueAsNumber) {
    return function(input) {
        return function() {
            input.valueAsNumber = valueAsNumber;
        };
    };
}
function width(input) {
    return function() {
        return input.width;
    };
}
function setWidth(width) {
    return function(input) {
        return function() {
            input.width = width;
        };
    };
}
function stepUpBy(n) {
    return function(input) {
        return function() {
            input.stepUp(n);
        };
    };
}
function stepDownBy(n) {
    return function(input) {
        return function() {
            input.stepDown(n);
        };
    };
}
function willValidate(input) {
    return function() {
        return input.willValidate;
    };
}
function validity(input) {
    return function() {
        return input.validity;
    };
}
function validationMessage(input) {
    return function() {
        return input.validationMessage;
    };
}
function checkValidity(input) {
    return function() {
        return input.checkValidity();
    };
}
function reportValidity(input) {
    return function() {
        return input.reportValidity();
    };
}
function setCustomValidity(value) {
    return function(input) {
        return function() {
            input.setCustomValidity(value);
        };
    };
}
function labels(input) {
    return function() {
        return input.labels;
    };
}
function select(input) {
    return function() {
        input.select();
    };
}
function selectionStart(input) {
    return function() {
        return input.selectionStart;
    };
}
function setSelectionStart(selectionStart) {
    return function(input) {
        return function() {
            input.selectionStart = selectionStart;
        };
    };
}
function selectionEnd(input) {
    return function() {
        return input.selectionEnd;
    };
}
function setSelectionEnd(selectionEnd) {
    return function(input) {
        return function() {
            input.selectionEnd = selectionEnd;
        };
    };
}
function selectionDirection(input) {
    return function() {
        return input.selectionDirection;
    };
}
function setSelectionDirection(selectionDirection) {
    return function(input) {
        return function() {
            input.selectionDirection = selectionDirection;
        };
    };
}
function setRangeText(replacement) {
    return function(input) {
        return function() {
            input.setRangeText(replacement);
        };
    };
}
function _setRangeText(replacement, start, end, selectionMode, textarea) {
    textarea.setRangeText(replacement, start, end, selectionMode);
}
function setSelectionRange(start) {
    return function(end) {
        return function(direction) {
            return function(input) {
                return function() {
                    input.setSelectionRange(start, end, direction, input);
                };
            };
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4IpJO":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Preserve", ()=>Preserve);
parcelHelpers.export(exports, "Select", ()=>Select);
parcelHelpers.export(exports, "Start", ()=>Start);
parcelHelpers.export(exports, "End", ()=>End);
parcelHelpers.export(exports, "parse", ()=>parse);
parcelHelpers.export(exports, "print", ()=>print);
parcelHelpers.export(exports, "eqSelectionMode", ()=>eqSelectionMode);
parcelHelpers.export(exports, "ordSelectionMode", ()=>ordSelectionMode);
parcelHelpers.export(exports, "showSelectionMode", ()=>showSelectionMode);
var _indexJs = require("../Data.Maybe/index.js");
var _indexJs1 = require("../Data.Ordering/index.js");
var Preserve = /* #__PURE__ */ function() {
    function Preserve() {}
    Preserve.value = new Preserve();
    return Preserve;
}();
var Select = /* #__PURE__ */ function() {
    function Select() {}
    Select.value = new Select();
    return Select;
}();
var Start = /* #__PURE__ */ function() {
    function Start() {}
    Start.value = new Start();
    return Start;
}();
var End = /* #__PURE__ */ function() {
    function End() {}
    End.value = new End();
    return End;
}();
var showSelectionMode = {
    show: function(v) {
        if (v instanceof Preserve) return "Preserve";
        if (v instanceof Select) return "Select";
        if (v instanceof Start) return "Start";
        if (v instanceof End) return "End";
        throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 17, column 10 - line 21, column 17): " + [
            v.constructor.name
        ]);
    }
};
var print = function(v) {
    if (v instanceof Preserve) return "preserve";
    if (v instanceof Select) return "select";
    if (v instanceof Start) return "start";
    if (v instanceof End) return "end";
    throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 32, column 9 - line 36, column 15): " + [
        v.constructor.name
    ]);
};
var parse = function(v) {
    if (v === "preserve") return new _indexJs.Just(Preserve.value);
    if (v === "select") return new _indexJs.Just(Select.value);
    if (v === "start") return new _indexJs.Just(Start.value);
    if (v === "end") return new _indexJs.Just(End.value);
    return _indexJs.Nothing.value;
};
var eqSelectionMode = {
    eq: function(x) {
        return function(y) {
            if (x instanceof Preserve && y instanceof Preserve) return true;
            if (x instanceof Select && y instanceof Select) return true;
            if (x instanceof Start && y instanceof Start) return true;
            if (x instanceof End && y instanceof End) return true;
            return false;
        };
    }
};
var ordSelectionMode = {
    compare: function(x) {
        return function(y) {
            if (x instanceof Preserve && y instanceof Preserve) return _indexJs1.EQ.value;
            if (x instanceof Preserve) return _indexJs1.LT.value;
            if (y instanceof Preserve) return _indexJs1.GT.value;
            if (x instanceof Select && y instanceof Select) return _indexJs1.EQ.value;
            if (x instanceof Select) return _indexJs1.LT.value;
            if (y instanceof Select) return _indexJs1.GT.value;
            if (x instanceof Start && y instanceof Start) return _indexJs1.EQ.value;
            if (x instanceof Start) return _indexJs1.LT.value;
            if (y instanceof Start) return _indexJs1.GT.value;
            if (x instanceof End && y instanceof End) return _indexJs1.EQ.value;
            throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 0, column 0 - line 0, column 0): " + [
                x.constructor.name,
                y.constructor.name
            ]);
        };
    },
    Eq0: function() {
        return eqSelectionMode;
    }
};

},{"../Data.Maybe/index.js":"ff6lw","../Data.Ordering/index.js":"2NvYx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6UiWF":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "autofocus", ()=>(0, _foreignJs.autofocus));
parcelHelpers.export(exports, "setAutofocus", ()=>(0, _foreignJs.setAutofocus));
parcelHelpers.export(exports, "challenge", ()=>(0, _foreignJs.challenge));
parcelHelpers.export(exports, "setChallenge", ()=>(0, _foreignJs.setChallenge));
parcelHelpers.export(exports, "disabled", ()=>(0, _foreignJs.disabled));
parcelHelpers.export(exports, "setDisabled", ()=>(0, _foreignJs.setDisabled));
parcelHelpers.export(exports, "keytype", ()=>(0, _foreignJs.keytype));
parcelHelpers.export(exports, "setKeytype", ()=>(0, _foreignJs.setKeytype));
parcelHelpers.export(exports, "name", ()=>(0, _foreignJs.name));
parcelHelpers.export(exports, "setName", ()=>(0, _foreignJs.setName));
parcelHelpers.export(exports, "type_", ()=>(0, _foreignJs.type_));
parcelHelpers.export(exports, "willValidate", ()=>(0, _foreignJs.willValidate));
parcelHelpers.export(exports, "validity", ()=>(0, _foreignJs.validity));
parcelHelpers.export(exports, "validationMessage", ()=>(0, _foreignJs.validationMessage));
parcelHelpers.export(exports, "checkValidity", ()=>(0, _foreignJs.checkValidity));
parcelHelpers.export(exports, "reportValidity", ()=>(0, _foreignJs.reportValidity));
parcelHelpers.export(exports, "setCustomValidity", ()=>(0, _foreignJs.setCustomValidity));
parcelHelpers.export(exports, "labels", ()=>(0, _foreignJs.labels));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "form", ()=>form);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Nullable/index.js");
var _indexJs2 = require("../Effect/index.js");
var _indexJs3 = require("../Unsafe.Coerce/index.js");
var _indexJs4 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs3.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs3.unsafeCoerce;
var toNode = _indexJs3.unsafeCoerce;
var toHTMLElement = _indexJs3.unsafeCoerce;
var toEventTarget = _indexJs3.unsafeCoerce;
var toElement = _indexJs3.unsafeCoerce;
var toChildNode = _indexJs3.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLKeygenElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLKeygenElement");
var fromNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLKeygenElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLKeygenElement");
var fromEventTarget = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLKeygenElement");
var fromElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLKeygenElement");
var fromChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLKeygenElement");
var form = /* #__PURE__ */ function() {
    var $2 = _indexJs.map(_indexJs2.functorEffect)(_indexJs1.toMaybe);
    return function($3) {
        return $2(_foreignJs["_form"]($3));
    };
}();

},{"./foreign.js":"iTW80","../Data.Functor/index.js":"j9NCu","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iTW80":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "autofocus", ()=>autofocus);
parcelHelpers.export(exports, "setAutofocus", ()=>setAutofocus);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "challenge", ()=>challenge);
parcelHelpers.export(exports, "setChallenge", ()=>setChallenge);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "disabled", ()=>disabled);
parcelHelpers.export(exports, "setDisabled", ()=>setDisabled);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_form", ()=>_form);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "keytype", ()=>keytype);
parcelHelpers.export(exports, "setKeytype", ()=>setKeytype);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "name", ()=>name);
parcelHelpers.export(exports, "setName", ()=>setName);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "type_", ()=>type_);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "willValidate", ()=>willValidate);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "validity", ()=>validity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "validationMessage", ()=>validationMessage);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "checkValidity", ()=>checkValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "reportValidity", ()=>reportValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "setCustomValidity", ()=>setCustomValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "labels", ()=>labels);
function autofocus(keygen) {
    return function() {
        return keygen.autofocus;
    };
}
function setAutofocus(autofocus) {
    return function(keygen) {
        return function() {
            keygen.autofocus = autofocus;
        };
    };
}
function challenge(keygen) {
    return function() {
        return keygen.challenge;
    };
}
function setChallenge(challenge) {
    return function(keygen) {
        return function() {
            keygen.challenge = challenge;
        };
    };
}
function disabled(keygen) {
    return function() {
        return keygen.disabled;
    };
}
function setDisabled(disabled) {
    return function(keygen) {
        return function() {
            keygen.disabled = disabled;
        };
    };
}
function _form(keygen) {
    return function() {
        return keygen.form;
    };
}
function keytype(keygen) {
    return function() {
        return keygen.keytype;
    };
}
function setKeytype(keytype) {
    return function(keygen) {
        return function() {
            keygen.keytype = keytype;
        };
    };
}
function name(keygen) {
    return function() {
        return keygen.name;
    };
}
function setName(name) {
    return function(keygen) {
        return function() {
            keygen.name = name;
        };
    };
}
function type_(keygen) {
    return function() {
        return keygen.type;
    };
}
function willValidate(keygen) {
    return function() {
        return keygen.willValidate;
    };
}
function validity(keygen) {
    return function() {
        return keygen.validity;
    };
}
function validationMessage(keygen) {
    return function() {
        return keygen.validationMessage;
    };
}
function checkValidity(keygen) {
    return function() {
        return keygen.checkValidity();
    };
}
function reportValidity(keygen) {
    return function() {
        return keygen.reportValidity();
    };
}
function setCustomValidity(value) {
    return function(keygen) {
        return function() {
            keygen.setCustomValidity(value);
        };
    };
}
function labels(keygen) {
    return function() {
        return keygen.labels;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1tszT":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "value", ()=>(0, _foreignJs.value));
parcelHelpers.export(exports, "setValue", ()=>(0, _foreignJs.setValue));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLLIElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLLIElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLLIElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLLIElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLLIElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLLIElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLLIElement");

},{"./foreign.js":"kRxTe","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kRxTe":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "value", ()=>value);
parcelHelpers.export(exports, "setValue", ()=>setValue);
function value(li) {
    return function() {
        return li.value;
    };
}
function setValue(value) {
    return function(li) {
        return function() {
            li.value = value;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"97UHB":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "htmlFor", ()=>(0, _foreignJs.htmlFor));
parcelHelpers.export(exports, "setHtmlFor", ()=>(0, _foreignJs.setHtmlFor));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "form", ()=>form);
parcelHelpers.export(exports, "control", ()=>control);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Nullable/index.js");
var _indexJs2 = require("../Effect/index.js");
var _indexJs3 = require("../Unsafe.Coerce/index.js");
var _indexJs4 = require("../Web.Internal.FFI/index.js");
var map = /* #__PURE__ */ _indexJs.map(_indexJs2.functorEffect);
var toParentNode = _indexJs3.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs3.unsafeCoerce;
var toNode = _indexJs3.unsafeCoerce;
var toHTMLElement = _indexJs3.unsafeCoerce;
var toEventTarget = _indexJs3.unsafeCoerce;
var toElement = _indexJs3.unsafeCoerce;
var toChildNode = _indexJs3.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLLabelElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLLabelElement");
var fromNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLLabelElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLLabelElement");
var fromEventTarget = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLLabelElement");
var fromElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLLabelElement");
var fromChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLLabelElement");
var form = /* #__PURE__ */ function() {
    var $2 = map(_indexJs1.toMaybe);
    return function($3) {
        return $2(_foreignJs["_form"]($3));
    };
}();
var control = /* #__PURE__ */ function() {
    var $4 = map(_indexJs1.toMaybe);
    return function($5) {
        return $4(_foreignJs["_control"]($5));
    };
}();

},{"./foreign.js":"eIvkX","../Data.Functor/index.js":"j9NCu","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eIvkX":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_form", ()=>_form);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "htmlFor", ()=>htmlFor);
parcelHelpers.export(exports, "setHtmlFor", ()=>setHtmlFor);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_control", ()=>_control);
function _form(label) {
    return function() {
        return label.form;
    };
}
function htmlFor(label) {
    return function() {
        return label.htmlFor;
    };
}
function setHtmlFor(htmlFor) {
    return function(label) {
        return function() {
            label.htmlFor = htmlFor;
        };
    };
}
function _control(label) {
    return function() {
        return label.control;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hJsYq":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "form", ()=>form);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Nullable/index.js");
var _indexJs2 = require("../Effect/index.js");
var _indexJs3 = require("../Unsafe.Coerce/index.js");
var _indexJs4 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs3.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs3.unsafeCoerce;
var toNode = _indexJs3.unsafeCoerce;
var toHTMLElement = _indexJs3.unsafeCoerce;
var toEventTarget = _indexJs3.unsafeCoerce;
var toElement = _indexJs3.unsafeCoerce;
var toChildNode = _indexJs3.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLLegendElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLLegendElement");
var fromNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLLegendElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLLegendElement");
var fromEventTarget = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLLegendElement");
var fromElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLLegendElement");
var fromChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLLegendElement");
var form = /* #__PURE__ */ function() {
    var $2 = _indexJs.map(_indexJs2.functorEffect)(_indexJs1.toMaybe);
    return function($3) {
        return $2(_foreignJs["_form"]($3));
    };
}();

},{"./foreign.js":"jK7HN","../Data.Functor/index.js":"j9NCu","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jK7HN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_form", ()=>_form);
function _form(le) {
    return function() {
        return le.form;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9e17G":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "disabled", ()=>(0, _foreignJs.disabled));
parcelHelpers.export(exports, "setDisabled", ()=>(0, _foreignJs.setDisabled));
parcelHelpers.export(exports, "href", ()=>(0, _foreignJs.href));
parcelHelpers.export(exports, "setHref", ()=>(0, _foreignJs.setHref));
parcelHelpers.export(exports, "crossOrigin", ()=>(0, _foreignJs.crossOrigin));
parcelHelpers.export(exports, "setCrossOrigin", ()=>(0, _foreignJs.setCrossOrigin));
parcelHelpers.export(exports, "rel", ()=>(0, _foreignJs.rel));
parcelHelpers.export(exports, "setRel", ()=>(0, _foreignJs.setRel));
parcelHelpers.export(exports, "rev", ()=>(0, _foreignJs.rev));
parcelHelpers.export(exports, "setRev", ()=>(0, _foreignJs.setRev));
parcelHelpers.export(exports, "relList", ()=>(0, _foreignJs.relList));
parcelHelpers.export(exports, "media", ()=>(0, _foreignJs.media));
parcelHelpers.export(exports, "setMedia", ()=>(0, _foreignJs.setMedia));
parcelHelpers.export(exports, "hreflang", ()=>(0, _foreignJs.hreflang));
parcelHelpers.export(exports, "setHreflang", ()=>(0, _foreignJs.setHreflang));
parcelHelpers.export(exports, "type_", ()=>(0, _foreignJs.type_));
parcelHelpers.export(exports, "setType", ()=>(0, _foreignJs.setType));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLLinkElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLLinkElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLLinkElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLLinkElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLLinkElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLLinkElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLLinkElement");

},{"./foreign.js":"5eJmS","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5eJmS":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "disabled", ()=>disabled);
parcelHelpers.export(exports, "setDisabled", ()=>setDisabled);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "href", ()=>href);
parcelHelpers.export(exports, "setHref", ()=>setHref);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "crossOrigin", ()=>crossOrigin);
parcelHelpers.export(exports, "setCrossOrigin", ()=>setCrossOrigin);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "rel", ()=>rel);
parcelHelpers.export(exports, "setRel", ()=>setRel);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "rev", ()=>rev);
parcelHelpers.export(exports, "setRev", ()=>setRev);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "relList", ()=>relList);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "media", ()=>media);
parcelHelpers.export(exports, "setMedia", ()=>setMedia);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "hreflang", ()=>hreflang);
parcelHelpers.export(exports, "setHreflang", ()=>setHreflang);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "type_", ()=>type_);
parcelHelpers.export(exports, "setType", ()=>setType);
function disabled(link) {
    return function() {
        return link.disabled;
    };
}
function setDisabled(disabled) {
    return function(link) {
        return function() {
            link.disabled = disabled;
        };
    };
}
function href(link) {
    return function() {
        return link.href;
    };
}
function setHref(href) {
    return function(link) {
        return function() {
            link.href = href;
        };
    };
}
function crossOrigin(link) {
    return function() {
        return link.crossOrigin;
    };
}
function setCrossOrigin(crossOrigin) {
    return function(link) {
        return function() {
            link.crossOrigin = crossOrigin;
        };
    };
}
function rel(link) {
    return function() {
        return link.rel;
    };
}
function setRel(rel) {
    return function(link) {
        return function() {
            link.rel = rel;
        };
    };
}
function rev(link) {
    return function() {
        return link.rev;
    };
}
function setRev(rev) {
    return function(link) {
        return function() {
            link.rev = rev;
        };
    };
}
function relList(link) {
    return function() {
        return link.relList;
    };
}
function media(link) {
    return function() {
        return link.media;
    };
}
function setMedia(media) {
    return function(link) {
        return function() {
            link.media = media;
        };
    };
}
function hreflang(link) {
    return function() {
        return link.hreflang;
    };
}
function setHreflang(hreflang) {
    return function(link) {
        return function() {
            link.hreflang = hreflang;
        };
    };
}
function type_(link) {
    return function() {
        return link.type;
    };
}
function setType(type) {
    return function(link) {
        return function() {
            link.type = type;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6QMR3":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "name", ()=>(0, _foreignJs.name));
parcelHelpers.export(exports, "setName", ()=>(0, _foreignJs.setName));
parcelHelpers.export(exports, "areas", ()=>(0, _foreignJs.areas));
parcelHelpers.export(exports, "images", ()=>(0, _foreignJs.images));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMapElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMapElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMapElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMapElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMapElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMapElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMapElement");

},{"./foreign.js":"ecKB4","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ecKB4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "name", ()=>name);
parcelHelpers.export(exports, "setName", ()=>setName);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "areas", ()=>areas);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "images", ()=>images);
function name(map) {
    return function() {
        return map.name;
    };
}
function setName(name) {
    return function(map) {
        return function() {
            map.name = name;
        };
    };
}
function areas(map) {
    return function() {
        return map.areas;
    };
}
function images(map) {
    return function() {
        return map.images;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2Zr7g":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "src", ()=>(0, _foreignJs.src));
parcelHelpers.export(exports, "setSrc", ()=>(0, _foreignJs.setSrc));
parcelHelpers.export(exports, "currentSrc", ()=>(0, _foreignJs.currentSrc));
parcelHelpers.export(exports, "crossOrigin", ()=>(0, _foreignJs.crossOrigin));
parcelHelpers.export(exports, "setCrossOrigin", ()=>(0, _foreignJs.setCrossOrigin));
parcelHelpers.export(exports, "preload", ()=>(0, _foreignJs.preload));
parcelHelpers.export(exports, "setPreload", ()=>(0, _foreignJs.setPreload));
parcelHelpers.export(exports, "load", ()=>(0, _foreignJs.load));
parcelHelpers.export(exports, "seeking", ()=>(0, _foreignJs.seeking));
parcelHelpers.export(exports, "currentTime", ()=>(0, _foreignJs.currentTime));
parcelHelpers.export(exports, "setCurrentTime", ()=>(0, _foreignJs.setCurrentTime));
parcelHelpers.export(exports, "duration", ()=>(0, _foreignJs.duration));
parcelHelpers.export(exports, "getStartDate", ()=>(0, _foreignJs.getStartDate));
parcelHelpers.export(exports, "paused", ()=>(0, _foreignJs.paused));
parcelHelpers.export(exports, "defaultPlaybackRate", ()=>(0, _foreignJs.defaultPlaybackRate));
parcelHelpers.export(exports, "setDefaultPlaybackRate", ()=>(0, _foreignJs.setDefaultPlaybackRate));
parcelHelpers.export(exports, "playbackRate", ()=>(0, _foreignJs.playbackRate));
parcelHelpers.export(exports, "setPlaybackRate", ()=>(0, _foreignJs.setPlaybackRate));
parcelHelpers.export(exports, "ended", ()=>(0, _foreignJs.ended));
parcelHelpers.export(exports, "autoplay", ()=>(0, _foreignJs.autoplay));
parcelHelpers.export(exports, "setAutoplay", ()=>(0, _foreignJs.setAutoplay));
parcelHelpers.export(exports, "loop", ()=>(0, _foreignJs.loop));
parcelHelpers.export(exports, "setLoop", ()=>(0, _foreignJs.setLoop));
parcelHelpers.export(exports, "play", ()=>(0, _foreignJs.play));
parcelHelpers.export(exports, "pause", ()=>(0, _foreignJs.pause));
parcelHelpers.export(exports, "mediaGroup", ()=>(0, _foreignJs.mediaGroup));
parcelHelpers.export(exports, "setMediaGroup", ()=>(0, _foreignJs.setMediaGroup));
parcelHelpers.export(exports, "controls", ()=>(0, _foreignJs.controls));
parcelHelpers.export(exports, "setControls", ()=>(0, _foreignJs.setControls));
parcelHelpers.export(exports, "volume", ()=>(0, _foreignJs.volume));
parcelHelpers.export(exports, "setVolume", ()=>(0, _foreignJs.setVolume));
parcelHelpers.export(exports, "muted", ()=>(0, _foreignJs.muted));
parcelHelpers.export(exports, "setMuted", ()=>(0, _foreignJs.setMuted));
parcelHelpers.export(exports, "defaultMuted", ()=>(0, _foreignJs.defaultMuted));
parcelHelpers.export(exports, "setDefaultMuted", ()=>(0, _foreignJs.setDefaultMuted));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "networkState", ()=>networkState);
parcelHelpers.export(exports, "canPlayType", ()=>canPlayType);
parcelHelpers.export(exports, "readyState", ()=>readyState);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Enum/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var _indexJs2 = require("../Data.Maybe/index.js");
var _indexJs3 = require("../Effect/index.js");
var _indexJs4 = require("../Unsafe.Coerce/index.js");
var _indexJs5 = require("../Web.HTML.HTMLMediaElement.CanPlayType/index.js");
var _indexJs6 = require("../Web.HTML.HTMLMediaElement.NetworkState/index.js");
var _indexJs7 = require("../Web.HTML.HTMLMediaElement.ReadyState/index.js");
var _indexJs8 = require("../Web.Internal.FFI/index.js");
var map = /* #__PURE__ */ _indexJs1.map(_indexJs3.functorEffect);
var toEnum = /* #__PURE__ */ _indexJs.toEnum(_indexJs7.boundedEnumReadyState);
var toEnum1 = /* #__PURE__ */ _indexJs.toEnum(_indexJs6.boundedEnumNetworkState);
var toParentNode = _indexJs4.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs4.unsafeCoerce;
var toNode = _indexJs4.unsafeCoerce;
var toHTMLElement = _indexJs4.unsafeCoerce;
var toEventTarget = _indexJs4.unsafeCoerce;
var toElement = _indexJs4.unsafeCoerce;
var toChildNode = _indexJs4.unsafeCoerce;
var readyState = function(el) {
    return map(function() {
        var $4 = _indexJs2.fromMaybe(_indexJs7.HaveNothing.value);
        return function($5) {
            return $4(toEnum($5));
        };
    }())(function() {
        return _foreignJs["_readyState"](el);
    });
};
var networkState = function(el) {
    return map(function() {
        var $6 = _indexJs2.fromMaybe(_indexJs6.Empty.value);
        return function($7) {
            return $6(toEnum1($7));
        };
    }())(function() {
        return _foreignJs["_networkState"](el);
    });
};
var fromParentNode = /* #__PURE__ */ _indexJs8.unsafeReadProtoTagged("HTMLMediaElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs8.unsafeReadProtoTagged("HTMLMediaElement");
var fromNode = /* #__PURE__ */ _indexJs8.unsafeReadProtoTagged("HTMLMediaElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs8.unsafeReadProtoTagged("HTMLMediaElement");
var fromEventTarget = /* #__PURE__ */ _indexJs8.unsafeReadProtoTagged("HTMLMediaElement");
var fromElement = /* #__PURE__ */ _indexJs8.unsafeReadProtoTagged("HTMLMediaElement");
var fromChildNode = /* #__PURE__ */ _indexJs8.unsafeReadProtoTagged("HTMLMediaElement");
var canPlayType = function(ty) {
    return function(el) {
        return map(function() {
            var $8 = _indexJs2.fromMaybe(_indexJs5.Unspecified.value);
            return function($9) {
                return $8(_indexJs5.parse($9));
            };
        }())(function() {
            return _foreignJs["_canPlayType"](ty, el);
        });
    };
};

},{"./foreign.js":"k2PiG","../Data.Enum/index.js":"8sa8v","../Data.Functor/index.js":"j9NCu","../Data.Maybe/index.js":"ff6lw","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.HTML.HTMLMediaElement.CanPlayType/index.js":"gH9dz","../Web.HTML.HTMLMediaElement.NetworkState/index.js":"dVnLq","../Web.HTML.HTMLMediaElement.ReadyState/index.js":"etmAf","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"k2PiG":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "src", ()=>src);
parcelHelpers.export(exports, "setSrc", ()=>setSrc);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "currentSrc", ()=>currentSrc);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "crossOrigin", ()=>crossOrigin);
parcelHelpers.export(exports, "setCrossOrigin", ()=>setCrossOrigin);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_networkState", ()=>_networkState);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "preload", ()=>preload);
parcelHelpers.export(exports, "setPreload", ()=>setPreload);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "load", ()=>load);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_canPlayType", ()=>_canPlayType);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_readyState", ()=>_readyState);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "seeking", ()=>seeking);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "currentTime", ()=>currentTime);
parcelHelpers.export(exports, "setCurrentTime", ()=>setCurrentTime);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "duration", ()=>duration);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "getStartDate", ()=>getStartDate);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "paused", ()=>paused);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "defaultPlaybackRate", ()=>defaultPlaybackRate);
parcelHelpers.export(exports, "setDefaultPlaybackRate", ()=>setDefaultPlaybackRate);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "playbackRate", ()=>playbackRate);
parcelHelpers.export(exports, "setPlaybackRate", ()=>setPlaybackRate);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "ended", ()=>ended);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "autoplay", ()=>autoplay);
parcelHelpers.export(exports, "setAutoplay", ()=>setAutoplay);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "loop", ()=>loop);
parcelHelpers.export(exports, "setLoop", ()=>setLoop);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "play", ()=>play);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "pause", ()=>pause);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "mediaGroup", ()=>mediaGroup);
parcelHelpers.export(exports, "setMediaGroup", ()=>setMediaGroup);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "controls", ()=>controls);
parcelHelpers.export(exports, "setControls", ()=>setControls);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "volume", ()=>volume);
parcelHelpers.export(exports, "setVolume", ()=>setVolume);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "muted", ()=>muted);
parcelHelpers.export(exports, "setMuted", ()=>setMuted);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "defaultMuted", ()=>defaultMuted);
parcelHelpers.export(exports, "setDefaultMuted", ()=>setDefaultMuted);
function src(media) {
    return function() {
        return media.src;
    };
}
function setSrc(src) {
    return function(media) {
        return function() {
            media.src = src;
        };
    };
}
function currentSrc(media) {
    return function() {
        return media.currentSrc;
    };
}
function crossOrigin(media) {
    return function() {
        return media.crossOrigin;
    };
}
function setCrossOrigin(crossOrigin) {
    return function(media) {
        return function() {
            media.crossOrigin = crossOrigin;
        };
    };
}
function _networkState(media) {
    return media.networkState;
}
function preload(media) {
    return function() {
        return media.preload;
    };
}
function setPreload(preload) {
    return function(media) {
        return function() {
            media.preload = preload;
        };
    };
}
function load(media) {
    return function() {
        return media.load();
    };
}
function _canPlayType(type, media) {
    return media.canPlayType(type);
}
function _readyState(media) {
    return media.readyState;
}
function seeking(media) {
    return function() {
        return media.seeking;
    };
}
function currentTime(media) {
    return function() {
        return media.currentTime;
    };
}
function setCurrentTime(currentTime) {
    return function(media) {
        return function() {
            media.currentTime = currentTime;
        };
    };
}
function duration(media) {
    return function() {
        return media.duration;
    };
}
function getStartDate(media) {
    return function() {
        return media.getStartDate();
    };
}
function paused(media) {
    return function() {
        return media.paused;
    };
}
function defaultPlaybackRate(media) {
    return function() {
        return media.defaultPlaybackRate;
    };
}
function setDefaultPlaybackRate(defaultPlaybackRate) {
    return function(media) {
        return function() {
            media.defaultPlaybackRate = defaultPlaybackRate;
        };
    };
}
function playbackRate(media) {
    return function() {
        return media.playbackRate;
    };
}
function setPlaybackRate(playbackRate) {
    return function(media) {
        return function() {
            media.playbackRate = playbackRate;
        };
    };
}
function ended(media) {
    return function() {
        return media.ended;
    };
}
function autoplay(media) {
    return function() {
        return media.autoplay;
    };
}
function setAutoplay(autoplay) {
    return function(media) {
        return function() {
            media.autoplay = autoplay;
        };
    };
}
function loop(media) {
    return function() {
        return media.loop;
    };
}
function setLoop(loop) {
    return function(media) {
        return function() {
            media.loop = loop;
        };
    };
}
function play(media) {
    return function() {
        media.play();
    };
}
function pause(media) {
    return function() {
        media.pause();
    };
}
function mediaGroup(media) {
    return function() {
        return media.mediaGroup;
    };
}
function setMediaGroup(mediaGroup) {
    return function(media) {
        return function() {
            media.mediaGroup = mediaGroup;
        };
    };
}
function controls(media) {
    return function() {
        return media.controls;
    };
}
function setControls(controls) {
    return function(media) {
        return function() {
            media.controls = controls;
        };
    };
}
function volume(media) {
    return function() {
        return media.volume;
    };
}
function setVolume(volume) {
    return function(media) {
        return function() {
            media.volume = volume;
        };
    };
}
function muted(media) {
    return function() {
        return media.muted;
    };
}
function setMuted(muted) {
    return function(media) {
        return function() {
            media.muted = muted;
        };
    };
}
function defaultMuted(media) {
    return function() {
        return media.defaultMuted;
    };
}
function setDefaultMuted(defaultMuted) {
    return function(media) {
        return function() {
            media.defaultMuted = defaultMuted;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8sa8v":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "succ", ()=>succ);
parcelHelpers.export(exports, "pred", ()=>pred);
parcelHelpers.export(exports, "cardinality", ()=>cardinality);
parcelHelpers.export(exports, "toEnum", ()=>toEnum);
parcelHelpers.export(exports, "fromEnum", ()=>fromEnum);
parcelHelpers.export(exports, "toEnumWithDefaults", ()=>toEnumWithDefaults);
parcelHelpers.export(exports, "Cardinality", ()=>Cardinality);
parcelHelpers.export(exports, "enumFromTo", ()=>enumFromTo);
parcelHelpers.export(exports, "enumFromThenTo", ()=>enumFromThenTo);
parcelHelpers.export(exports, "upFrom", ()=>upFrom);
parcelHelpers.export(exports, "upFromIncluding", ()=>upFromIncluding);
parcelHelpers.export(exports, "downFrom", ()=>downFrom);
parcelHelpers.export(exports, "downFromIncluding", ()=>downFromIncluding);
parcelHelpers.export(exports, "defaultSucc", ()=>defaultSucc);
parcelHelpers.export(exports, "defaultPred", ()=>defaultPred);
parcelHelpers.export(exports, "defaultCardinality", ()=>defaultCardinality);
parcelHelpers.export(exports, "defaultToEnum", ()=>defaultToEnum);
parcelHelpers.export(exports, "defaultFromEnum", ()=>defaultFromEnum);
parcelHelpers.export(exports, "enumBoolean", ()=>enumBoolean);
parcelHelpers.export(exports, "enumInt", ()=>enumInt);
parcelHelpers.export(exports, "enumChar", ()=>enumChar);
parcelHelpers.export(exports, "enumUnit", ()=>enumUnit);
parcelHelpers.export(exports, "enumOrdering", ()=>enumOrdering);
parcelHelpers.export(exports, "enumMaybe", ()=>enumMaybe);
parcelHelpers.export(exports, "enumEither", ()=>enumEither);
parcelHelpers.export(exports, "enumTuple", ()=>enumTuple);
parcelHelpers.export(exports, "boundedEnumBoolean", ()=>boundedEnumBoolean);
parcelHelpers.export(exports, "boundedEnumChar", ()=>boundedEnumChar);
parcelHelpers.export(exports, "boundedEnumUnit", ()=>boundedEnumUnit);
parcelHelpers.export(exports, "boundedEnumOrdering", ()=>boundedEnumOrdering);
parcelHelpers.export(exports, "newtypeCardinality", ()=>newtypeCardinality);
parcelHelpers.export(exports, "eqCardinality", ()=>eqCardinality);
parcelHelpers.export(exports, "ordCardinality", ()=>ordCardinality);
parcelHelpers.export(exports, "showCardinality", ()=>showCardinality);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Alternative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Bind/index.js");
var _indexJs3 = require("../Data.Boolean/index.js");
var _indexJs4 = require("../Data.Bounded/index.js");
var _indexJs5 = require("../Data.Either/index.js");
var _indexJs6 = require("../Data.Eq/index.js");
var _indexJs7 = require("../Data.Function/index.js");
var _indexJs8 = require("../Data.Functor/index.js");
var _indexJs9 = require("../Data.Maybe/index.js");
var _indexJs10 = require("../Data.Ord/index.js");
var _indexJs11 = require("../Data.Ordering/index.js");
var _indexJs12 = require("../Data.Show/index.js");
var _indexJs13 = require("../Data.Tuple/index.js");
var _indexJs14 = require("../Data.Unfoldable/index.js");
var _indexJs15 = require("../Data.Unfoldable1/index.js");
var _indexJs16 = require("../Data.Unit/index.js");
var apply = /* #__PURE__ */ _indexJs1.apply(_indexJs1.applyFn);
var show = /* #__PURE__ */ _indexJs12.show(_indexJs12.showInt);
var map = /* #__PURE__ */ _indexJs8.map(_indexJs9.functorMaybe);
var top = /* #__PURE__ */ _indexJs4.top(_indexJs4.boundedInt);
var bottom = /* #__PURE__ */ _indexJs4.bottom(_indexJs4.boundedInt);
var bind = /* #__PURE__ */ _indexJs2.bind(_indexJs9.bindMaybe);
var voidLeft = /* #__PURE__ */ _indexJs8.voidLeft(_indexJs9.functorMaybe);
var guard = /* #__PURE__ */ _indexJs.guard(_indexJs9.alternativeMaybe);
var fromJust = /* #__PURE__ */ _indexJs9.fromJust();
var bottom1 = /* #__PURE__ */ _indexJs4.bottom(_indexJs4.boundedChar);
var top1 = /* #__PURE__ */ _indexJs4.top(_indexJs4.boundedChar);
var Cardinality = function(x) {
    return x;
};
var toEnum = function(dict) {
    return dict.toEnum;
};
var succ = function(dict) {
    return dict.succ;
};
var upFromIncluding = function(dictEnum) {
    var succ1 = succ(dictEnum);
    return function(dictUnfoldable1) {
        return _indexJs15.unfoldr1(dictUnfoldable1)(apply(_indexJs13.Tuple.create)(succ1));
    };
};
var showCardinality = {
    show: function(v) {
        return "(Cardinality " + (show(v) + ")");
    }
};
var pred = function(dict) {
    return dict.pred;
};
var ordCardinality = _indexJs10.ordInt;
var newtypeCardinality = {
    Coercible0: function() {
        return undefined;
    }
};
var fromEnum = function(dict) {
    return dict.fromEnum;
};
var toEnumWithDefaults = function(dictBoundedEnum) {
    var toEnum1 = toEnum(dictBoundedEnum);
    var fromEnum1 = fromEnum(dictBoundedEnum);
    var bottom2 = _indexJs4.bottom(dictBoundedEnum.Bounded0());
    return function(low) {
        return function(high) {
            return function(x) {
                var v = toEnum1(x);
                if (v instanceof _indexJs9.Just) return v.value0;
                if (v instanceof _indexJs9.Nothing) {
                    var $140 = x < fromEnum1(bottom2);
                    if ($140) return low;
                    return high;
                }
                throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [
                    v.constructor.name
                ]);
            };
        };
    };
};
var eqCardinality = _indexJs6.eqInt;
var enumUnit = /* #__PURE__ */ function() {
    return {
        succ: _indexJs7["const"](_indexJs9.Nothing.value),
        pred: _indexJs7["const"](_indexJs9.Nothing.value),
        Ord0: function() {
            return _indexJs10.ordUnit;
        }
    };
}();
var enumTuple = function(dictEnum) {
    var succ1 = succ(dictEnum);
    var pred1 = pred(dictEnum);
    var ordTuple = _indexJs13.ordTuple(dictEnum.Ord0());
    return function(dictBoundedEnum) {
        var Bounded0 = dictBoundedEnum.Bounded0();
        var bottom2 = _indexJs4.bottom(Bounded0);
        var Enum1 = dictBoundedEnum.Enum1();
        var succ2 = succ(Enum1);
        var top2 = _indexJs4.top(Bounded0);
        var pred2 = pred(Enum1);
        var ordTuple1 = ordTuple(Enum1.Ord0());
        return {
            succ: function(v) {
                return _indexJs9.maybe(map(_indexJs7.flip(_indexJs13.Tuple.create)(bottom2))(succ1(v.value0)))(function() {
                    var $183 = _indexJs13.Tuple.create(v.value0);
                    return function($184) {
                        return _indexJs9.Just.create($183($184));
                    };
                }())(succ2(v.value1));
            },
            pred: function(v) {
                return _indexJs9.maybe(map(_indexJs7.flip(_indexJs13.Tuple.create)(top2))(pred1(v.value0)))(function() {
                    var $185 = _indexJs13.Tuple.create(v.value0);
                    return function($186) {
                        return _indexJs9.Just.create($185($186));
                    };
                }())(pred2(v.value1));
            },
            Ord0: function() {
                return ordTuple1;
            }
        };
    };
};
var enumOrdering = {
    succ: function(v) {
        if (v instanceof _indexJs11.LT) return new _indexJs9.Just(_indexJs11.EQ.value);
        if (v instanceof _indexJs11.EQ) return new _indexJs9.Just(_indexJs11.GT.value);
        if (v instanceof _indexJs11.GT) return _indexJs9.Nothing.value;
        throw new Error("Failed pattern match at Data.Enum (line 72, column 1 - line 78, column 20): " + [
            v.constructor.name
        ]);
    },
    pred: function(v) {
        if (v instanceof _indexJs11.LT) return _indexJs9.Nothing.value;
        if (v instanceof _indexJs11.EQ) return new _indexJs9.Just(_indexJs11.LT.value);
        if (v instanceof _indexJs11.GT) return new _indexJs9.Just(_indexJs11.EQ.value);
        throw new Error("Failed pattern match at Data.Enum (line 72, column 1 - line 78, column 20): " + [
            v.constructor.name
        ]);
    },
    Ord0: function() {
        return _indexJs10.ordOrdering;
    }
};
var enumMaybe = function(dictBoundedEnum) {
    var bottom2 = _indexJs4.bottom(dictBoundedEnum.Bounded0());
    var Enum1 = dictBoundedEnum.Enum1();
    var succ1 = succ(Enum1);
    var pred1 = pred(Enum1);
    var ordMaybe = _indexJs9.ordMaybe(Enum1.Ord0());
    return {
        succ: function(v) {
            if (v instanceof _indexJs9.Nothing) return new _indexJs9.Just(new _indexJs9.Just(bottom2));
            if (v instanceof _indexJs9.Just) return map(_indexJs9.Just.create)(succ1(v.value0));
            throw new Error("Failed pattern match at Data.Enum (line 80, column 1 - line 84, column 32): " + [
                v.constructor.name
            ]);
        },
        pred: function(v) {
            if (v instanceof _indexJs9.Nothing) return _indexJs9.Nothing.value;
            if (v instanceof _indexJs9.Just) return new _indexJs9.Just(pred1(v.value0));
            throw new Error("Failed pattern match at Data.Enum (line 80, column 1 - line 84, column 32): " + [
                v.constructor.name
            ]);
        },
        Ord0: function() {
            return ordMaybe;
        }
    };
};
var enumInt = {
    succ: function(n) {
        var $153 = n < top;
        if ($153) return new _indexJs9.Just(n + 1 | 0);
        return _indexJs9.Nothing.value;
    },
    pred: function(n) {
        var $154 = n > bottom;
        if ($154) return new _indexJs9.Just(n - 1 | 0);
        return _indexJs9.Nothing.value;
    },
    Ord0: function() {
        return _indexJs10.ordInt;
    }
};
var enumFromTo = function(dictEnum) {
    var Ord0 = dictEnum.Ord0();
    var eq1 = _indexJs6.eq(Ord0.Eq0());
    var lessThan1 = _indexJs10.lessThan(Ord0);
    var succ1 = succ(dictEnum);
    var lessThanOrEq1 = _indexJs10.lessThanOrEq(Ord0);
    var pred1 = pred(dictEnum);
    var greaterThanOrEq1 = _indexJs10.greaterThanOrEq(Ord0);
    return function(dictUnfoldable1) {
        var singleton = _indexJs15.singleton(dictUnfoldable1);
        var unfoldr1 = _indexJs15.unfoldr1(dictUnfoldable1);
        var go = function(step) {
            return function(op) {
                return function(to) {
                    return function(a) {
                        return new _indexJs13.Tuple(a, bind(step(a))(function(a$prime) {
                            return voidLeft(guard(op(a$prime)(to)))(a$prime);
                        }));
                    };
                };
            };
        };
        return function(v) {
            return function(v1) {
                if (eq1(v)(v1)) return singleton(v);
                if (lessThan1(v)(v1)) return unfoldr1(go(succ1)(lessThanOrEq1)(v1))(v);
                if (_indexJs3.otherwise) return unfoldr1(go(pred1)(greaterThanOrEq1)(v1))(v);
                throw new Error("Failed pattern match at Data.Enum (line 186, column 14 - line 190, column 51): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    };
};
var enumFromThenTo = function(dictUnfoldable) {
    var unfoldr = _indexJs14.unfoldr(dictUnfoldable);
    return function(dictFunctor) {
        var map1 = _indexJs8.map(dictFunctor);
        return function(dictBoundedEnum) {
            var fromEnum1 = fromEnum(dictBoundedEnum);
            var toEnum1 = toEnum(dictBoundedEnum);
            var go = function(step) {
                return function(to) {
                    return function(e) {
                        if (e <= to) return new _indexJs9.Just(new _indexJs13.Tuple(e, e + step | 0));
                        if (_indexJs3.otherwise) return _indexJs9.Nothing.value;
                        throw new Error("Failed pattern match at Data.Enum (line 217, column 5 - line 219, column 28): " + [
                            step.constructor.name,
                            to.constructor.name,
                            e.constructor.name
                        ]);
                    };
                };
            };
            return function(a) {
                return function(b) {
                    return function(c) {
                        var c$prime = fromEnum1(c);
                        var b$prime = fromEnum1(b);
                        var a$prime = fromEnum1(a);
                        return map1(function($187) {
                            return fromJust(toEnum1($187));
                        })(unfoldr(go(b$prime - a$prime | 0)(c$prime))(a$prime));
                    };
                };
            };
        };
    };
};
var enumEither = function(dictBoundedEnum) {
    var Enum1 = dictBoundedEnum.Enum1();
    var succ1 = succ(Enum1);
    var pred1 = pred(Enum1);
    var top2 = _indexJs4.top(dictBoundedEnum.Bounded0());
    var ordEither = _indexJs5.ordEither(Enum1.Ord0());
    return function(dictBoundedEnum1) {
        var bottom2 = _indexJs4.bottom(dictBoundedEnum1.Bounded0());
        var Enum11 = dictBoundedEnum1.Enum1();
        var succ2 = succ(Enum11);
        var pred2 = pred(Enum11);
        var ordEither1 = ordEither(Enum11.Ord0());
        return {
            succ: function(v) {
                if (v instanceof _indexJs5.Left) return _indexJs9.maybe(new _indexJs9.Just(new _indexJs5.Right(bottom2)))(function($188) {
                    return _indexJs9.Just.create(_indexJs5.Left.create($188));
                })(succ1(v.value0));
                if (v instanceof _indexJs5.Right) return _indexJs9.maybe(_indexJs9.Nothing.value)(function($189) {
                    return _indexJs9.Just.create(_indexJs5.Right.create($189));
                })(succ2(v.value0));
                throw new Error("Failed pattern match at Data.Enum (line 86, column 1 - line 90, column 69): " + [
                    v.constructor.name
                ]);
            },
            pred: function(v) {
                if (v instanceof _indexJs5.Left) return _indexJs9.maybe(_indexJs9.Nothing.value)(function($190) {
                    return _indexJs9.Just.create(_indexJs5.Left.create($190));
                })(pred1(v.value0));
                if (v instanceof _indexJs5.Right) return _indexJs9.maybe(new _indexJs9.Just(new _indexJs5.Left(top2)))(function($191) {
                    return _indexJs9.Just.create(_indexJs5.Right.create($191));
                })(pred2(v.value0));
                throw new Error("Failed pattern match at Data.Enum (line 86, column 1 - line 90, column 69): " + [
                    v.constructor.name
                ]);
            },
            Ord0: function() {
                return ordEither1;
            }
        };
    };
};
var enumBoolean = {
    succ: function(v) {
        if (!v) return new _indexJs9.Just(true);
        return _indexJs9.Nothing.value;
    },
    pred: function(v) {
        if (v) return new _indexJs9.Just(false);
        return _indexJs9.Nothing.value;
    },
    Ord0: function() {
        return _indexJs10.ordBoolean;
    }
};
var downFromIncluding = function(dictEnum) {
    var pred1 = pred(dictEnum);
    return function(dictUnfoldable1) {
        return _indexJs15.unfoldr1(dictUnfoldable1)(apply(_indexJs13.Tuple.create)(pred1));
    };
};
var diag = function(a) {
    return new _indexJs13.Tuple(a, a);
};
var downFrom = function(dictEnum) {
    var pred1 = pred(dictEnum);
    return function(dictUnfoldable) {
        return _indexJs14.unfoldr(dictUnfoldable)(function() {
            var $192 = map(diag);
            return function($193) {
                return $192(pred1($193));
            };
        }());
    };
};
var upFrom = function(dictEnum) {
    var succ1 = succ(dictEnum);
    return function(dictUnfoldable) {
        return _indexJs14.unfoldr(dictUnfoldable)(function() {
            var $194 = map(diag);
            return function($195) {
                return $194(succ1($195));
            };
        }());
    };
};
var defaultToEnum = function(dictBounded) {
    var bottom2 = _indexJs4.bottom(dictBounded);
    return function(dictEnum) {
        var succ1 = succ(dictEnum);
        return function(i$prime) {
            var go = function($copy_i) {
                return function($copy_x) {
                    var $tco_var_i = $copy_i;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(i, x) {
                        var $168 = i === 0;
                        if ($168) {
                            $tco_done = true;
                            return new _indexJs9.Just(x);
                        }
                        var v = succ1(x);
                        if (v instanceof _indexJs9.Just) {
                            $tco_var_i = i - 1 | 0;
                            $copy_x = v.value0;
                            return;
                        }
                        if (v instanceof _indexJs9.Nothing) {
                            $tco_done = true;
                            return _indexJs9.Nothing.value;
                        }
                        throw new Error("Failed pattern match at Data.Enum (line 296, column 12 - line 298, column 33): " + [
                            v.constructor.name
                        ]);
                    }
                    while(!$tco_done)$tco_result = $tco_loop($tco_var_i, $copy_x);
                    return $tco_result;
                };
            };
            var $171 = i$prime < 0;
            if ($171) return _indexJs9.Nothing.value;
            return go(i$prime)(bottom2);
        };
    };
};
var defaultSucc = function(toEnum$prime) {
    return function(fromEnum$prime) {
        return function(a) {
            return toEnum$prime(fromEnum$prime(a) + 1 | 0);
        };
    };
};
var defaultPred = function(toEnum$prime) {
    return function(fromEnum$prime) {
        return function(a) {
            return toEnum$prime(fromEnum$prime(a) - 1 | 0);
        };
    };
};
var defaultFromEnum = function(dictEnum) {
    var pred1 = pred(dictEnum);
    var go = function($copy_i) {
        return function($copy_x) {
            var $tco_var_i = $copy_i;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(i, x) {
                var v = pred1(x);
                if (v instanceof _indexJs9.Just) {
                    $tco_var_i = i + 1 | 0;
                    $copy_x = v.value0;
                    return;
                }
                if (v instanceof _indexJs9.Nothing) {
                    $tco_done = true;
                    return i;
                }
                throw new Error("Failed pattern match at Data.Enum (line 309, column 5 - line 311, column 19): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_i, $copy_x);
            return $tco_result;
        };
    };
    return go(0);
};
var defaultCardinality = function(dictBounded) {
    var bottom2 = _indexJs4.bottom(dictBounded);
    return function(dictEnum) {
        var succ1 = succ(dictEnum);
        var go = function($copy_i) {
            return function($copy_x) {
                var $tco_var_i = $copy_i;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(i, x) {
                    var v = succ1(x);
                    if (v instanceof _indexJs9.Just) {
                        $tco_var_i = i + 1 | 0;
                        $copy_x = v.value0;
                        return;
                    }
                    if (v instanceof _indexJs9.Nothing) {
                        $tco_done = true;
                        return i;
                    }
                    throw new Error("Failed pattern match at Data.Enum (line 276, column 5 - line 278, column 19): " + [
                        v.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_i, $copy_x);
                return $tco_result;
            };
        };
        return go(1)(bottom2);
    };
};
var charToEnum = function(v) {
    if (v >= _foreignJs.toCharCode(bottom1) && v <= _foreignJs.toCharCode(top1)) return new _indexJs9.Just(_foreignJs.fromCharCode(v));
    return _indexJs9.Nothing.value;
};
var enumChar = {
    succ: /* #__PURE__ */ defaultSucc(charToEnum)(_foreignJs.toCharCode),
    pred: /* #__PURE__ */ defaultPred(charToEnum)(_foreignJs.toCharCode),
    Ord0: function() {
        return _indexJs10.ordChar;
    }
};
var cardinality = function(dict) {
    return dict.cardinality;
};
var boundedEnumUnit = {
    cardinality: 1,
    toEnum: function(v) {
        if (v === 0) return new _indexJs9.Just(_indexJs16.unit);
        return _indexJs9.Nothing.value;
    },
    fromEnum: /* #__PURE__ */ _indexJs7["const"](0),
    Bounded0: function() {
        return _indexJs4.boundedUnit;
    },
    Enum1: function() {
        return enumUnit;
    }
};
var boundedEnumOrdering = {
    cardinality: 3,
    toEnum: function(v) {
        if (v === 0) return new _indexJs9.Just(_indexJs11.LT.value);
        if (v === 1) return new _indexJs9.Just(_indexJs11.EQ.value);
        if (v === 2) return new _indexJs9.Just(_indexJs11.GT.value);
        return _indexJs9.Nothing.value;
    },
    fromEnum: function(v) {
        if (v instanceof _indexJs11.LT) return 0;
        if (v instanceof _indexJs11.EQ) return 1;
        if (v instanceof _indexJs11.GT) return 2;
        throw new Error("Failed pattern match at Data.Enum (line 137, column 1 - line 145, column 18): " + [
            v.constructor.name
        ]);
    },
    Bounded0: function() {
        return _indexJs4.boundedOrdering;
    },
    Enum1: function() {
        return enumOrdering;
    }
};
var boundedEnumChar = /* #__PURE__ */ function() {
    return {
        cardinality: _foreignJs.toCharCode(top1) - _foreignJs.toCharCode(bottom1) | 0,
        toEnum: charToEnum,
        fromEnum: _foreignJs.toCharCode,
        Bounded0: function() {
            return _indexJs4.boundedChar;
        },
        Enum1: function() {
            return enumChar;
        }
    };
}();
var boundedEnumBoolean = {
    cardinality: 2,
    toEnum: function(v) {
        if (v === 0) return new _indexJs9.Just(false);
        if (v === 1) return new _indexJs9.Just(true);
        return _indexJs9.Nothing.value;
    },
    fromEnum: function(v) {
        if (!v) return 0;
        if (v) return 1;
        throw new Error("Failed pattern match at Data.Enum (line 118, column 1 - line 124, column 20): " + [
            v.constructor.name
        ]);
    },
    Bounded0: function() {
        return _indexJs4.boundedBoolean;
    },
    Enum1: function() {
        return enumBoolean;
    }
};

},{"./foreign.js":"7ecIt","../Control.Alternative/index.js":"lpMu9","../Control.Apply/index.js":"ggN4S","../Control.Bind/index.js":"3yoUR","../Data.Boolean/index.js":"spBQ3","../Data.Bounded/index.js":"j0YdY","../Data.Either/index.js":"9fzbY","../Data.Eq/index.js":"j3zMn","../Data.Function/index.js":"64uwb","../Data.Functor/index.js":"j9NCu","../Data.Maybe/index.js":"ff6lw","../Data.Ord/index.js":"luB7W","../Data.Ordering/index.js":"2NvYx","../Data.Show/index.js":"lQCRi","../Data.Tuple/index.js":"beFyY","../Data.Unfoldable/index.js":"6tRJa","../Data.Unfoldable1/index.js":"dTxmS","../Data.Unit/index.js":"fuCRN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7ecIt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "toCharCode", ()=>toCharCode);
parcelHelpers.export(exports, "fromCharCode", ()=>fromCharCode);
function toCharCode(c) {
    return c.charCodeAt(0);
}
function fromCharCode(c) {
    return String.fromCharCode(c);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lpMu9":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "alt", ()=>(0, _indexJs.alt));
parcelHelpers.export(exports, "liftA1", ()=>(0, _indexJs1.liftA1));
parcelHelpers.export(exports, "pure", ()=>(0, _indexJs1.pure));
parcelHelpers.export(exports, "unless", ()=>(0, _indexJs1.unless));
parcelHelpers.export(exports, "when", ()=>(0, _indexJs1.when));
parcelHelpers.export(exports, "apply", ()=>(0, _indexJs2.apply));
parcelHelpers.export(exports, "empty", ()=>(0, _indexJs3.empty));
parcelHelpers.export(exports, "map", ()=>(0, _indexJs4.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs4.void));
parcelHelpers.export(exports, "guard", ()=>guard);
parcelHelpers.export(exports, "alternativeArray", ()=>alternativeArray);
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Applicative/index.js");
var _indexJs2 = require("../Control.Apply/index.js");
var _indexJs3 = require("../Control.Plus/index.js");
var _indexJs4 = require("../Data.Functor/index.js");
var _indexJs5 = require("../Data.Unit/index.js");
var guard = function(dictAlternative) {
    var pure = _indexJs1.pure(dictAlternative.Applicative0());
    var empty = _indexJs3.empty(dictAlternative.Plus1());
    return function(v) {
        if (v) return pure(_indexJs5.unit);
        if (!v) return empty;
        throw new Error("Failed pattern match at Control.Alternative (line 48, column 1 - line 48, column 54): " + [
            v.constructor.name
        ]);
    };
};
var alternativeArray = {
    Applicative0: function() {
        return _indexJs1.applicativeArray;
    },
    Plus1: function() {
        return _indexJs3.plusArray;
    }
};

},{"../Control.Alt/index.js":"dcz8C","../Control.Applicative/index.js":"5JL6d","../Control.Apply/index.js":"ggN4S","../Control.Plus/index.js":"a6ULa","../Data.Functor/index.js":"j9NCu","../Data.Unit/index.js":"fuCRN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"a6ULa":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "alt", ()=>(0, _indexJs.alt));
parcelHelpers.export(exports, "map", ()=>(0, _indexJs1.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs1.void));
parcelHelpers.export(exports, "empty", ()=>empty);
parcelHelpers.export(exports, "plusArray", ()=>plusArray);
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var plusArray = {
    empty: [],
    Alt0: function() {
        return _indexJs.altArray;
    }
};
var empty = function(dict) {
    return dict.empty;
};

},{"../Control.Alt/index.js":"dcz8C","../Data.Functor/index.js":"j9NCu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6tRJa":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "iterateN", ()=>(0, _indexJs5.iterateN));
parcelHelpers.export(exports, "range", ()=>(0, _indexJs5.range));
parcelHelpers.export(exports, "replicate1", ()=>(0, _indexJs5.replicate1));
parcelHelpers.export(exports, "replicate1A", ()=>(0, _indexJs5.replicate1A));
parcelHelpers.export(exports, "singleton", ()=>(0, _indexJs5.singleton));
parcelHelpers.export(exports, "unfoldr1", ()=>(0, _indexJs5.unfoldr1));
parcelHelpers.export(exports, "unfoldr", ()=>unfoldr);
parcelHelpers.export(exports, "replicate", ()=>replicate);
parcelHelpers.export(exports, "replicateA", ()=>replicateA);
parcelHelpers.export(exports, "none", ()=>none);
parcelHelpers.export(exports, "fromMaybe", ()=>fromMaybe);
parcelHelpers.export(exports, "unfoldableArray", ()=>unfoldableArray);
parcelHelpers.export(exports, "unfoldableMaybe", ()=>unfoldableMaybe);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Function/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var _indexJs2 = require("../Data.Maybe/index.js");
var _indexJs3 = require("../Data.Traversable/index.js");
var _indexJs4 = require("../Data.Tuple/index.js");
var _indexJs5 = require("../Data.Unfoldable1/index.js");
var _indexJs6 = require("../Data.Unit/index.js");
var map = /* #__PURE__ */ _indexJs1.map(_indexJs2.functorMaybe);
var fromJust = /* #__PURE__ */ _indexJs2.fromJust();
var unfoldr = function(dict) {
    return dict.unfoldr;
};
var unfoldableMaybe = {
    unfoldr: function(f) {
        return function(b) {
            return map(_indexJs4.fst)(f(b));
        };
    },
    Unfoldable10: function() {
        return _indexJs5.unfoldable1Maybe;
    }
};
var unfoldableArray = {
    unfoldr: /* #__PURE__ */ _foreignJs.unfoldrArrayImpl(_indexJs2.isNothing)(fromJust)(_indexJs4.fst)(_indexJs4.snd),
    Unfoldable10: function() {
        return _indexJs5.unfoldable1Array;
    }
};
var replicate = function(dictUnfoldable) {
    var unfoldr1 = unfoldr(dictUnfoldable);
    return function(n) {
        return function(v) {
            var step = function(i) {
                var $17 = i <= 0;
                if ($17) return _indexJs2.Nothing.value;
                return new _indexJs2.Just(new _indexJs4.Tuple(v, i - 1 | 0));
            };
            return unfoldr1(step)(n);
        };
    };
};
var replicateA = function(dictApplicative) {
    return function(dictUnfoldable) {
        var replicate1 = replicate(dictUnfoldable);
        return function(dictTraversable) {
            var sequence = _indexJs3.sequence(dictTraversable)(dictApplicative);
            return function(n) {
                return function(m) {
                    return sequence(replicate1(n)(m));
                };
            };
        };
    };
};
var none = function(dictUnfoldable) {
    return unfoldr(dictUnfoldable)(_indexJs["const"](_indexJs2.Nothing.value))(_indexJs6.unit);
};
var fromMaybe = function(dictUnfoldable) {
    return unfoldr(dictUnfoldable)(function(b) {
        return map(_indexJs.flip(_indexJs4.Tuple.create)(_indexJs2.Nothing.value))(b);
    });
};

},{"./foreign.js":"5LWm5","../Data.Function/index.js":"64uwb","../Data.Functor/index.js":"j9NCu","../Data.Maybe/index.js":"ff6lw","../Data.Traversable/index.js":"7FOgx","../Data.Tuple/index.js":"beFyY","../Data.Unfoldable1/index.js":"dTxmS","../Data.Unit/index.js":"fuCRN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5LWm5":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unfoldrArrayImpl", ()=>unfoldrArrayImpl);
const unfoldrArrayImpl = function(isNothing) {
    return function(fromJust) {
        return function(fst) {
            return function(snd) {
                return function(f) {
                    return function(b) {
                        var result = [];
                        var value = b;
                        while(true){
                            var maybe = f(value);
                            if (isNothing(maybe)) return result;
                            var tuple = fromJust(maybe);
                            result.push(fst(tuple));
                            value = snd(tuple);
                        }
                    };
                };
            };
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7FOgx":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "all", ()=>(0, _indexJs5.all));
parcelHelpers.export(exports, "and", ()=>(0, _indexJs5.and));
parcelHelpers.export(exports, "any", ()=>(0, _indexJs5.any));
parcelHelpers.export(exports, "elem", ()=>(0, _indexJs5.elem));
parcelHelpers.export(exports, "find", ()=>(0, _indexJs5.find));
parcelHelpers.export(exports, "fold", ()=>(0, _indexJs5.fold));
parcelHelpers.export(exports, "foldMap", ()=>(0, _indexJs5.foldMap));
parcelHelpers.export(exports, "foldMapDefaultL", ()=>(0, _indexJs5.foldMapDefaultL));
parcelHelpers.export(exports, "foldMapDefaultR", ()=>(0, _indexJs5.foldMapDefaultR));
parcelHelpers.export(exports, "foldl", ()=>(0, _indexJs5.foldl));
parcelHelpers.export(exports, "foldlDefault", ()=>(0, _indexJs5.foldlDefault));
parcelHelpers.export(exports, "foldr", ()=>(0, _indexJs5.foldr));
parcelHelpers.export(exports, "foldrDefault", ()=>(0, _indexJs5.foldrDefault));
parcelHelpers.export(exports, "for_", ()=>(0, _indexJs5.for_));
parcelHelpers.export(exports, "intercalate", ()=>(0, _indexJs5.intercalate));
parcelHelpers.export(exports, "maximum", ()=>(0, _indexJs5.maximum));
parcelHelpers.export(exports, "maximumBy", ()=>(0, _indexJs5.maximumBy));
parcelHelpers.export(exports, "minimum", ()=>(0, _indexJs5.minimum));
parcelHelpers.export(exports, "minimumBy", ()=>(0, _indexJs5.minimumBy));
parcelHelpers.export(exports, "notElem", ()=>(0, _indexJs5.notElem));
parcelHelpers.export(exports, "oneOf", ()=>(0, _indexJs5.oneOf));
parcelHelpers.export(exports, "or", ()=>(0, _indexJs5.or));
parcelHelpers.export(exports, "sequence_", ()=>(0, _indexJs5.sequence_));
parcelHelpers.export(exports, "sum", ()=>(0, _indexJs5.sum));
parcelHelpers.export(exports, "traverse_", ()=>(0, _indexJs5.traverse_));
parcelHelpers.export(exports, "traverse", ()=>traverse);
parcelHelpers.export(exports, "sequence", ()=>sequence);
parcelHelpers.export(exports, "traverseDefault", ()=>traverseDefault);
parcelHelpers.export(exports, "sequenceDefault", ()=>sequenceDefault);
parcelHelpers.export(exports, "for", ()=>$$for);
parcelHelpers.export(exports, "scanl", ()=>scanl);
parcelHelpers.export(exports, "scanr", ()=>scanr);
parcelHelpers.export(exports, "mapAccumL", ()=>mapAccumL);
parcelHelpers.export(exports, "mapAccumR", ()=>mapAccumR);
parcelHelpers.export(exports, "traversableArray", ()=>traversableArray);
parcelHelpers.export(exports, "traversableMaybe", ()=>traversableMaybe);
parcelHelpers.export(exports, "traversableFirst", ()=>traversableFirst);
parcelHelpers.export(exports, "traversableLast", ()=>traversableLast);
parcelHelpers.export(exports, "traversableAdditive", ()=>traversableAdditive);
parcelHelpers.export(exports, "traversableDual", ()=>traversableDual);
parcelHelpers.export(exports, "traversableConj", ()=>traversableConj);
parcelHelpers.export(exports, "traversableDisj", ()=>traversableDisj);
parcelHelpers.export(exports, "traversableMultiplicative", ()=>traversableMultiplicative);
parcelHelpers.export(exports, "traversableEither", ()=>traversableEither);
parcelHelpers.export(exports, "traversableTuple", ()=>traversableTuple);
parcelHelpers.export(exports, "traversableIdentity", ()=>traversableIdentity);
parcelHelpers.export(exports, "traversableConst", ()=>traversableConst);
parcelHelpers.export(exports, "traversableProduct", ()=>traversableProduct);
parcelHelpers.export(exports, "traversableCoproduct", ()=>traversableCoproduct);
parcelHelpers.export(exports, "traversableCompose", ()=>traversableCompose);
parcelHelpers.export(exports, "traversableApp", ()=>traversableApp);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Category/index.js");
var _indexJs3 = require("../Data.Const/index.js");
var _indexJs4 = require("../Data.Either/index.js");
var _indexJs5 = require("../Data.Foldable/index.js");
var _indexJs6 = require("../Data.Functor/index.js");
var _indexJs7 = require("../Data.Functor.App/index.js");
var _indexJs8 = require("../Data.Functor.Compose/index.js");
var _indexJs9 = require("../Data.Functor.Coproduct/index.js");
var _indexJs10 = require("../Data.Functor.Product/index.js");
var _indexJs11 = require("../Data.Identity/index.js");
var _indexJs12 = require("../Data.Maybe/index.js");
var _indexJs13 = require("../Data.Maybe.First/index.js");
var _indexJs14 = require("../Data.Maybe.Last/index.js");
var _indexJs15 = require("../Data.Monoid.Additive/index.js");
var _indexJs16 = require("../Data.Monoid.Conj/index.js");
var _indexJs17 = require("../Data.Monoid.Disj/index.js");
var _indexJs18 = require("../Data.Monoid.Dual/index.js");
var _indexJs19 = require("../Data.Monoid.Multiplicative/index.js");
var _indexJs20 = require("../Data.Traversable.Accum/index.js");
var _indexJs21 = require("../Data.Traversable.Accum.Internal/index.js");
var _indexJs22 = require("../Data.Tuple/index.js");
var identity = /* #__PURE__ */ _indexJs2.identity(_indexJs2.categoryFn);
var traverse = function(dict) {
    return dict.traverse;
};
var traversableTuple = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs22.Tuple.create(v.value0))(f(v.value1));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return map(_indexJs22.Tuple.create(v.value0))(v.value1);
        };
    },
    Functor0: function() {
        return _indexJs22.functorTuple;
    },
    Foldable1: function() {
        return _indexJs5.foldableTuple;
    }
};
var traversableMultiplicative = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs19.Multiplicative)(f(v));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return map(_indexJs19.Multiplicative)(v);
        };
    },
    Functor0: function() {
        return _indexJs19.functorMultiplicative;
    },
    Foldable1: function() {
        return _indexJs5.foldableMultiplicative;
    }
};
var traversableMaybe = {
    traverse: function(dictApplicative) {
        var pure = _indexJs.pure(dictApplicative);
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return function(v1) {
                if (v1 instanceof _indexJs12.Nothing) return pure(_indexJs12.Nothing.value);
                if (v1 instanceof _indexJs12.Just) return map(_indexJs12.Just.create)(v(v1.value0));
                throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    },
    sequence: function(dictApplicative) {
        var pure = _indexJs.pure(dictApplicative);
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            if (v instanceof _indexJs12.Nothing) return pure(_indexJs12.Nothing.value);
            if (v instanceof _indexJs12.Just) return map(_indexJs12.Just.create)(v.value0);
            throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [
                v.constructor.name
            ]);
        };
    },
    Functor0: function() {
        return _indexJs12.functorMaybe;
    },
    Foldable1: function() {
        return _indexJs5.foldableMaybe;
    }
};
var traverse1 = /* #__PURE__ */ traverse(traversableMaybe);
var traversableIdentity = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs11.Identity)(f(v));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return map(_indexJs11.Identity)(v);
        };
    },
    Functor0: function() {
        return _indexJs11.functorIdentity;
    },
    Foldable1: function() {
        return _indexJs5.foldableIdentity;
    }
};
var traversableEither = {
    traverse: function(dictApplicative) {
        var pure = _indexJs.pure(dictApplicative);
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return function(v1) {
                if (v1 instanceof _indexJs4.Left) return pure(new _indexJs4.Left(v1.value0));
                if (v1 instanceof _indexJs4.Right) return map(_indexJs4.Right.create)(v(v1.value0));
                throw new Error("Failed pattern match at Data.Traversable (line 149, column 1 - line 153, column 36): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    },
    sequence: function(dictApplicative) {
        var pure = _indexJs.pure(dictApplicative);
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            if (v instanceof _indexJs4.Left) return pure(new _indexJs4.Left(v.value0));
            if (v instanceof _indexJs4.Right) return map(_indexJs4.Right.create)(v.value0);
            throw new Error("Failed pattern match at Data.Traversable (line 149, column 1 - line 153, column 36): " + [
                v.constructor.name
            ]);
        };
    },
    Functor0: function() {
        return _indexJs4.functorEither;
    },
    Foldable1: function() {
        return _indexJs5.foldableEither;
    }
};
var traversableDual = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs18.Dual)(f(v));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return map(_indexJs18.Dual)(v);
        };
    },
    Functor0: function() {
        return _indexJs18.functorDual;
    },
    Foldable1: function() {
        return _indexJs5.foldableDual;
    }
};
var traversableDisj = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs17.Disj)(f(v));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return map(_indexJs17.Disj)(v);
        };
    },
    Functor0: function() {
        return _indexJs17.functorDisj;
    },
    Foldable1: function() {
        return _indexJs5.foldableDisj;
    }
};
var traversableConst = {
    traverse: function(dictApplicative) {
        var pure = _indexJs.pure(dictApplicative);
        return function(v) {
            return function(v1) {
                return pure(v1);
            };
        };
    },
    sequence: function(dictApplicative) {
        var pure = _indexJs.pure(dictApplicative);
        return function(v) {
            return pure(v);
        };
    },
    Functor0: function() {
        return _indexJs3.functorConst;
    },
    Foldable1: function() {
        return _indexJs5.foldableConst;
    }
};
var traversableConj = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs16.Conj)(f(v));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return map(_indexJs16.Conj)(v);
        };
    },
    Functor0: function() {
        return _indexJs16.functorConj;
    },
    Foldable1: function() {
        return _indexJs5.foldableConj;
    }
};
var traversableCompose = function(dictTraversable) {
    var traverse2 = traverse(dictTraversable);
    var functorCompose = _indexJs8.functorCompose(dictTraversable.Functor0());
    var foldableCompose = _indexJs5.foldableCompose(dictTraversable.Foldable1());
    return function(dictTraversable1) {
        var traverse3 = traverse(dictTraversable1);
        var functorCompose1 = functorCompose(dictTraversable1.Functor0());
        var foldableCompose1 = foldableCompose(dictTraversable1.Foldable1());
        return {
            traverse: function(dictApplicative) {
                var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
                var traverse4 = traverse2(dictApplicative);
                var traverse5 = traverse3(dictApplicative);
                return function(f) {
                    return function(v) {
                        return map(_indexJs8.Compose)(traverse4(traverse5(f))(v));
                    };
                };
            },
            sequence: function(dictApplicative) {
                return traverse(traversableCompose(dictTraversable)(dictTraversable1))(dictApplicative)(identity);
            },
            Functor0: function() {
                return functorCompose1;
            },
            Foldable1: function() {
                return foldableCompose1;
            }
        };
    };
};
var traversableAdditive = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs15.Additive)(f(v));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return map(_indexJs15.Additive)(v);
        };
    },
    Functor0: function() {
        return _indexJs15.functorAdditive;
    },
    Foldable1: function() {
        return _indexJs5.foldableAdditive;
    }
};
var sequenceDefault = function(dictTraversable) {
    var traverse2 = traverse(dictTraversable);
    return function(dictApplicative) {
        return traverse2(dictApplicative)(identity);
    };
};
var traversableArray = {
    traverse: function(dictApplicative) {
        var Apply0 = dictApplicative.Apply0();
        return _foreignJs.traverseArrayImpl(_indexJs1.apply(Apply0))(_indexJs6.map(Apply0.Functor0()))(_indexJs.pure(dictApplicative));
    },
    sequence: function(dictApplicative) {
        return sequenceDefault(traversableArray)(dictApplicative);
    },
    Functor0: function() {
        return _indexJs6.functorArray;
    },
    Foldable1: function() {
        return _indexJs5.foldableArray;
    }
};
var sequence = function(dict) {
    return dict.sequence;
};
var sequence1 = /* #__PURE__ */ sequence(traversableMaybe);
var traversableApp = function(dictTraversable) {
    var traverse2 = traverse(dictTraversable);
    var sequence2 = sequence(dictTraversable);
    var functorApp = _indexJs7.functorApp(dictTraversable.Functor0());
    var foldableApp = _indexJs5.foldableApp(dictTraversable.Foldable1());
    return {
        traverse: function(dictApplicative) {
            var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
            var traverse3 = traverse2(dictApplicative);
            return function(f) {
                return function(v) {
                    return map(_indexJs7.App)(traverse3(f)(v));
                };
            };
        },
        sequence: function(dictApplicative) {
            var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
            var sequence3 = sequence2(dictApplicative);
            return function(v) {
                return map(_indexJs7.App)(sequence3(v));
            };
        },
        Functor0: function() {
            return functorApp;
        },
        Foldable1: function() {
            return foldableApp;
        }
    };
};
var traversableCoproduct = function(dictTraversable) {
    var traverse2 = traverse(dictTraversable);
    var sequence2 = sequence(dictTraversable);
    var functorCoproduct = _indexJs9.functorCoproduct(dictTraversable.Functor0());
    var foldableCoproduct = _indexJs5.foldableCoproduct(dictTraversable.Foldable1());
    return function(dictTraversable1) {
        var traverse3 = traverse(dictTraversable1);
        var sequence3 = sequence(dictTraversable1);
        var functorCoproduct1 = functorCoproduct(dictTraversable1.Functor0());
        var foldableCoproduct1 = foldableCoproduct(dictTraversable1.Foldable1());
        return {
            traverse: function(dictApplicative) {
                var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
                var traverse4 = traverse2(dictApplicative);
                var traverse5 = traverse3(dictApplicative);
                return function(f) {
                    return _indexJs9.coproduct(function() {
                        var $313 = map(function($316) {
                            return _indexJs9.Coproduct(_indexJs4.Left.create($316));
                        });
                        var $314 = traverse4(f);
                        return function($315) {
                            return $313($314($315));
                        };
                    }())(function() {
                        var $317 = map(function($320) {
                            return _indexJs9.Coproduct(_indexJs4.Right.create($320));
                        });
                        var $318 = traverse5(f);
                        return function($319) {
                            return $317($318($319));
                        };
                    }());
                };
            },
            sequence: function(dictApplicative) {
                var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
                return _indexJs9.coproduct(function() {
                    var $321 = map(function($324) {
                        return _indexJs9.Coproduct(_indexJs4.Left.create($324));
                    });
                    var $322 = sequence2(dictApplicative);
                    return function($323) {
                        return $321($322($323));
                    };
                }())(function() {
                    var $325 = map(function($328) {
                        return _indexJs9.Coproduct(_indexJs4.Right.create($328));
                    });
                    var $326 = sequence3(dictApplicative);
                    return function($327) {
                        return $325($326($327));
                    };
                }());
            },
            Functor0: function() {
                return functorCoproduct1;
            },
            Foldable1: function() {
                return foldableCoproduct1;
            }
        };
    };
};
var traversableFirst = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        var traverse2 = traverse1(dictApplicative);
        return function(f) {
            return function(v) {
                return map(_indexJs13.First)(traverse2(f)(v));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        var sequence2 = sequence1(dictApplicative);
        return function(v) {
            return map(_indexJs13.First)(sequence2(v));
        };
    },
    Functor0: function() {
        return _indexJs13.functorFirst;
    },
    Foldable1: function() {
        return _indexJs5.foldableFirst;
    }
};
var traversableLast = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        var traverse2 = traverse1(dictApplicative);
        return function(f) {
            return function(v) {
                return map(_indexJs14.Last)(traverse2(f)(v));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        var sequence2 = sequence1(dictApplicative);
        return function(v) {
            return map(_indexJs14.Last)(sequence2(v));
        };
    },
    Functor0: function() {
        return _indexJs14.functorLast;
    },
    Foldable1: function() {
        return _indexJs5.foldableLast;
    }
};
var traversableProduct = function(dictTraversable) {
    var traverse2 = traverse(dictTraversable);
    var sequence2 = sequence(dictTraversable);
    var functorProduct = _indexJs10.functorProduct(dictTraversable.Functor0());
    var foldableProduct = _indexJs5.foldableProduct(dictTraversable.Foldable1());
    return function(dictTraversable1) {
        var traverse3 = traverse(dictTraversable1);
        var sequence3 = sequence(dictTraversable1);
        var functorProduct1 = functorProduct(dictTraversable1.Functor0());
        var foldableProduct1 = foldableProduct(dictTraversable1.Foldable1());
        return {
            traverse: function(dictApplicative) {
                var lift2 = _indexJs1.lift2(dictApplicative.Apply0());
                var traverse4 = traverse2(dictApplicative);
                var traverse5 = traverse3(dictApplicative);
                return function(f) {
                    return function(v) {
                        return lift2(_indexJs10.product)(traverse4(f)(v.value0))(traverse5(f)(v.value1));
                    };
                };
            },
            sequence: function(dictApplicative) {
                var lift2 = _indexJs1.lift2(dictApplicative.Apply0());
                var sequence4 = sequence2(dictApplicative);
                var sequence5 = sequence3(dictApplicative);
                return function(v) {
                    return lift2(_indexJs10.product)(sequence4(v.value0))(sequence5(v.value1));
                };
            },
            Functor0: function() {
                return functorProduct1;
            },
            Foldable1: function() {
                return foldableProduct1;
            }
        };
    };
};
var traverseDefault = function(dictTraversable) {
    var sequence2 = sequence(dictTraversable);
    var map = _indexJs6.map(dictTraversable.Functor0());
    return function(dictApplicative) {
        var sequence3 = sequence2(dictApplicative);
        return function(f) {
            return function(ta) {
                return sequence3(map(f)(ta));
            };
        };
    };
};
var mapAccumR = function(dictTraversable) {
    var traverse2 = traverse(dictTraversable)(_indexJs21.applicativeStateR);
    return function(f) {
        return function(s0) {
            return function(xs) {
                return _indexJs21.stateR(traverse2(function(a) {
                    return function(s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanr = function(dictTraversable) {
    var mapAccumR1 = mapAccumR(dictTraversable);
    return function(f) {
        return function(b0) {
            return function(xs) {
                return mapAccumR1(function(b) {
                    return function(a) {
                        var b$prime = f(a)(b);
                        return {
                            accum: b$prime,
                            value: b$prime
                        };
                    };
                })(b0)(xs).value;
            };
        };
    };
};
var mapAccumL = function(dictTraversable) {
    var traverse2 = traverse(dictTraversable)(_indexJs21.applicativeStateL);
    return function(f) {
        return function(s0) {
            return function(xs) {
                return _indexJs21.stateL(traverse2(function(a) {
                    return function(s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanl = function(dictTraversable) {
    var mapAccumL1 = mapAccumL(dictTraversable);
    return function(f) {
        return function(b0) {
            return function(xs) {
                return mapAccumL1(function(b) {
                    return function(a) {
                        var b$prime = f(b)(a);
                        return {
                            accum: b$prime,
                            value: b$prime
                        };
                    };
                })(b0)(xs).value;
            };
        };
    };
};
var $$for = function(dictApplicative) {
    return function(dictTraversable) {
        var traverse2 = traverse(dictTraversable)(dictApplicative);
        return function(x) {
            return function(f) {
                return traverse2(f)(x);
            };
        };
    };
};

},{"./foreign.js":"77Tjl","../Control.Applicative/index.js":"5JL6d","../Control.Apply/index.js":"ggN4S","../Control.Category/index.js":"iWlWa","../Data.Const/index.js":"8U2CO","../Data.Either/index.js":"9fzbY","../Data.Foldable/index.js":"4O9wL","../Data.Functor/index.js":"j9NCu","../Data.Functor.App/index.js":"jS0Ca","../Data.Functor.Compose/index.js":"5KA6k","../Data.Functor.Coproduct/index.js":"6IbIY","../Data.Functor.Product/index.js":"9bIvs","../Data.Identity/index.js":"58mWv","../Data.Maybe/index.js":"ff6lw","../Data.Maybe.First/index.js":"fkx6r","../Data.Maybe.Last/index.js":"5mQDC","../Data.Monoid.Additive/index.js":"l27ha","../Data.Monoid.Conj/index.js":"aFX4c","../Data.Monoid.Disj/index.js":"1NZlY","../Data.Monoid.Dual/index.js":"elbNG","../Data.Monoid.Multiplicative/index.js":"3EBL8","../Data.Traversable.Accum/index.js":"7M1av","../Data.Traversable.Accum.Internal/index.js":"iWIPi","../Data.Tuple/index.js":"beFyY","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"77Tjl":[function(require,module,exports,__globalThis) {
// jshint maxparams: 3
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "traverseArrayImpl", ()=>traverseArrayImpl);
const traverseArrayImpl = function() {
    function array1(a) {
        return [
            a
        ];
    }
    function array2(a) {
        return function(b) {
            return [
                a,
                b
            ];
        };
    }
    function array3(a) {
        return function(b) {
            return function(c) {
                return [
                    a,
                    b,
                    c
                ];
            };
        };
    }
    function concat2(xs) {
        return function(ys) {
            return xs.concat(ys);
        };
    }
    return function(apply) {
        return function(map) {
            return function(pure) {
                return function(f) {
                    return function(array) {
                        function go(bot, top) {
                            switch(top - bot){
                                case 0:
                                    return pure([]);
                                case 1:
                                    return map(array1)(f(array[bot]));
                                case 2:
                                    return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                                case 3:
                                    return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                                default:
                                    // This slightly tricky pivot selection aims to produce two
                                    // even-length partitions where possible.
                                    var pivot = bot + Math.floor((top - bot) / 4) * 2;
                                    return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                            }
                        }
                        return go(0, array.length);
                    };
                };
            };
        };
    };
}();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8U2CO":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Const", ()=>Const);
parcelHelpers.export(exports, "newtypeConst", ()=>newtypeConst);
parcelHelpers.export(exports, "eqConst", ()=>eqConst);
parcelHelpers.export(exports, "eq1Const", ()=>eq1Const);
parcelHelpers.export(exports, "ordConst", ()=>ordConst);
parcelHelpers.export(exports, "ord1Const", ()=>ord1Const);
parcelHelpers.export(exports, "boundedConst", ()=>boundedConst);
parcelHelpers.export(exports, "showConst", ()=>showConst);
parcelHelpers.export(exports, "semigroupoidConst", ()=>semigroupoidConst);
parcelHelpers.export(exports, "semigroupConst", ()=>semigroupConst);
parcelHelpers.export(exports, "monoidConst", ()=>monoidConst);
parcelHelpers.export(exports, "semiringConst", ()=>semiringConst);
parcelHelpers.export(exports, "ringConst", ()=>ringConst);
parcelHelpers.export(exports, "euclideanRingConst", ()=>euclideanRingConst);
parcelHelpers.export(exports, "commutativeRingConst", ()=>commutativeRingConst);
parcelHelpers.export(exports, "heytingAlgebraConst", ()=>heytingAlgebraConst);
parcelHelpers.export(exports, "booleanAlgebraConst", ()=>booleanAlgebraConst);
parcelHelpers.export(exports, "functorConst", ()=>functorConst);
parcelHelpers.export(exports, "invariantConst", ()=>invariantConst);
parcelHelpers.export(exports, "applyConst", ()=>applyConst);
parcelHelpers.export(exports, "applicativeConst", ()=>applicativeConst);
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Functor.Invariant/index.js");
var _indexJs2 = require("../Data.Monoid/index.js");
var _indexJs3 = require("../Data.Ord/index.js");
var _indexJs4 = require("../Data.Semigroup/index.js");
var _indexJs5 = require("../Data.Show/index.js");
var Const = function(x) {
    return x;
};
var showConst = function(dictShow) {
    var show = _indexJs5.show(dictShow);
    return {
        show: function(v) {
            return "(Const " + (show(v) + ")");
        }
    };
};
var semiringConst = function(dictSemiring) {
    return dictSemiring;
};
var semigroupoidConst = {
    compose: function(v) {
        return function(v1) {
            return v1;
        };
    }
};
var semigroupConst = function(dictSemigroup) {
    return dictSemigroup;
};
var ringConst = function(dictRing) {
    return dictRing;
};
var ordConst = function(dictOrd) {
    return dictOrd;
};
var newtypeConst = {
    Coercible0: function() {
        return undefined;
    }
};
var monoidConst = function(dictMonoid) {
    return dictMonoid;
};
var heytingAlgebraConst = function(dictHeytingAlgebra) {
    return dictHeytingAlgebra;
};
var functorConst = {
    map: function(f) {
        return function(m) {
            return m;
        };
    }
};
var invariantConst = {
    imap: /* #__PURE__ */ _indexJs1.imapF(functorConst)
};
var euclideanRingConst = function(dictEuclideanRing) {
    return dictEuclideanRing;
};
var eqConst = function(dictEq) {
    return dictEq;
};
var eq1Const = function(dictEq) {
    var eq = _indexJs.eq(eqConst(dictEq));
    return {
        eq1: function(dictEq1) {
            return eq;
        }
    };
};
var ord1Const = function(dictOrd) {
    var compare = _indexJs3.compare(ordConst(dictOrd));
    var eq1Const1 = eq1Const(dictOrd.Eq0());
    return {
        compare1: function(dictOrd1) {
            return compare;
        },
        Eq10: function() {
            return eq1Const1;
        }
    };
};
var commutativeRingConst = function(dictCommutativeRing) {
    return dictCommutativeRing;
};
var boundedConst = function(dictBounded) {
    return dictBounded;
};
var booleanAlgebraConst = function(dictBooleanAlgebra) {
    return dictBooleanAlgebra;
};
var applyConst = function(dictSemigroup) {
    var append1 = _indexJs4.append(dictSemigroup);
    return {
        apply: function(v) {
            return function(v1) {
                return append1(v)(v1);
            };
        },
        Functor0: function() {
            return functorConst;
        }
    };
};
var applicativeConst = function(dictMonoid) {
    var mempty = _indexJs2.mempty(dictMonoid);
    var applyConst1 = applyConst(dictMonoid.Semigroup0());
    return {
        pure: function(v) {
            return mempty;
        },
        Apply0: function() {
            return applyConst1;
        }
    };
};

},{"../Data.Eq/index.js":"j3zMn","../Data.Functor.Invariant/index.js":"h8WwJ","../Data.Monoid/index.js":"6chRZ","../Data.Ord/index.js":"luB7W","../Data.Semigroup/index.js":"evJTv","../Data.Show/index.js":"lQCRi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4O9wL":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "foldr", ()=>foldr);
parcelHelpers.export(exports, "foldl", ()=>foldl);
parcelHelpers.export(exports, "foldMap", ()=>foldMap);
parcelHelpers.export(exports, "foldrDefault", ()=>foldrDefault);
parcelHelpers.export(exports, "foldlDefault", ()=>foldlDefault);
parcelHelpers.export(exports, "foldMapDefaultL", ()=>foldMapDefaultL);
parcelHelpers.export(exports, "foldMapDefaultR", ()=>foldMapDefaultR);
parcelHelpers.export(exports, "fold", ()=>fold);
parcelHelpers.export(exports, "foldM", ()=>foldM);
parcelHelpers.export(exports, "traverse_", ()=>traverse_);
parcelHelpers.export(exports, "for_", ()=>for_);
parcelHelpers.export(exports, "sequence_", ()=>sequence_);
parcelHelpers.export(exports, "oneOf", ()=>oneOf);
parcelHelpers.export(exports, "oneOfMap", ()=>oneOfMap);
parcelHelpers.export(exports, "intercalate", ()=>intercalate);
parcelHelpers.export(exports, "surroundMap", ()=>surroundMap);
parcelHelpers.export(exports, "surround", ()=>surround);
parcelHelpers.export(exports, "and", ()=>and);
parcelHelpers.export(exports, "or", ()=>or);
parcelHelpers.export(exports, "all", ()=>all);
parcelHelpers.export(exports, "any", ()=>any);
parcelHelpers.export(exports, "sum", ()=>sum);
parcelHelpers.export(exports, "product", ()=>product);
parcelHelpers.export(exports, "elem", ()=>elem);
parcelHelpers.export(exports, "notElem", ()=>notElem);
parcelHelpers.export(exports, "indexl", ()=>indexl);
parcelHelpers.export(exports, "indexr", ()=>indexr);
parcelHelpers.export(exports, "find", ()=>find);
parcelHelpers.export(exports, "findMap", ()=>findMap);
parcelHelpers.export(exports, "maximum", ()=>maximum);
parcelHelpers.export(exports, "maximumBy", ()=>maximumBy);
parcelHelpers.export(exports, "minimum", ()=>minimum);
parcelHelpers.export(exports, "minimumBy", ()=>minimumBy);
parcelHelpers.export(exports, "null", ()=>$$null);
parcelHelpers.export(exports, "length", ()=>length);
parcelHelpers.export(exports, "lookup", ()=>lookup);
parcelHelpers.export(exports, "foldableArray", ()=>foldableArray);
parcelHelpers.export(exports, "foldableMaybe", ()=>foldableMaybe);
parcelHelpers.export(exports, "foldableFirst", ()=>foldableFirst);
parcelHelpers.export(exports, "foldableLast", ()=>foldableLast);
parcelHelpers.export(exports, "foldableAdditive", ()=>foldableAdditive);
parcelHelpers.export(exports, "foldableDual", ()=>foldableDual);
parcelHelpers.export(exports, "foldableDisj", ()=>foldableDisj);
parcelHelpers.export(exports, "foldableConj", ()=>foldableConj);
parcelHelpers.export(exports, "foldableMultiplicative", ()=>foldableMultiplicative);
parcelHelpers.export(exports, "foldableEither", ()=>foldableEither);
parcelHelpers.export(exports, "foldableTuple", ()=>foldableTuple);
parcelHelpers.export(exports, "foldableIdentity", ()=>foldableIdentity);
parcelHelpers.export(exports, "foldableConst", ()=>foldableConst);
parcelHelpers.export(exports, "foldableProduct", ()=>foldableProduct);
parcelHelpers.export(exports, "foldableCoproduct", ()=>foldableCoproduct);
parcelHelpers.export(exports, "foldableCompose", ()=>foldableCompose);
parcelHelpers.export(exports, "foldableApp", ()=>foldableApp);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Applicative/index.js");
var _indexJs2 = require("../Control.Apply/index.js");
var _indexJs3 = require("../Control.Bind/index.js");
var _indexJs4 = require("../Control.Category/index.js");
var _indexJs5 = require("../Control.Plus/index.js");
var _indexJs6 = require("../Data.Either/index.js");
var _indexJs7 = require("../Data.Eq/index.js");
var _indexJs8 = require("../Data.Function/index.js");
var _indexJs9 = require("../Data.Functor.Coproduct/index.js");
var _indexJs10 = require("../Data.HeytingAlgebra/index.js");
var _indexJs11 = require("../Data.Maybe/index.js");
var _indexJs12 = require("../Data.Maybe.First/index.js");
var _indexJs13 = require("../Data.Monoid/index.js");
var _indexJs14 = require("../Data.Monoid.Conj/index.js");
var _indexJs15 = require("../Data.Monoid.Disj/index.js");
var _indexJs16 = require("../Data.Monoid.Dual/index.js");
var _indexJs17 = require("../Data.Monoid.Endo/index.js");
var _indexJs18 = require("../Data.Newtype/index.js");
var _indexJs19 = require("../Data.Ord/index.js");
var _indexJs20 = require("../Data.Ordering/index.js");
var _indexJs21 = require("../Data.Semigroup/index.js");
var _indexJs22 = require("../Data.Semiring/index.js");
var _indexJs23 = require("../Data.Unit/index.js");
var identity = /* #__PURE__ */ _indexJs4.identity(_indexJs4.categoryFn);
var eq1 = /* #__PURE__ */ _indexJs7.eq(_indexJs20.eqOrdering);
var unwrap = /* #__PURE__ */ _indexJs18.unwrap();
var monoidEndo = /* #__PURE__ */ _indexJs17.monoidEndo(_indexJs4.categoryFn);
var monoidDual = /* #__PURE__ */ _indexJs16.monoidDual(monoidEndo);
var alaF = /* #__PURE__ */ _indexJs18.alaF()()()();
var foldr = function(dict) {
    return dict.foldr;
};
var indexr = function(dictFoldable) {
    var foldr2 = foldr(dictFoldable);
    return function(idx) {
        var go = function(a) {
            return function(cursor) {
                if (cursor.elem instanceof _indexJs11.Just) return cursor;
                var $292 = cursor.pos === idx;
                if ($292) return {
                    elem: new _indexJs11.Just(a),
                    pos: cursor.pos
                };
                return {
                    pos: cursor.pos + 1 | 0,
                    elem: cursor.elem
                };
            };
        };
        var $451 = foldr2(go)({
            elem: _indexJs11.Nothing.value,
            pos: 0
        });
        return function($452) {
            return function(v) {
                return v.elem;
            }($451($452));
        };
    };
};
var $$null = function(dictFoldable) {
    return foldr(dictFoldable)(function(v) {
        return function(v1) {
            return false;
        };
    })(true);
};
var oneOf = function(dictFoldable) {
    var foldr2 = foldr(dictFoldable);
    return function(dictPlus) {
        return foldr2(_indexJs.alt(dictPlus.Alt0()))(_indexJs5.empty(dictPlus));
    };
};
var oneOfMap = function(dictFoldable) {
    var foldr2 = foldr(dictFoldable);
    return function(dictPlus) {
        var alt = _indexJs.alt(dictPlus.Alt0());
        var empty = _indexJs5.empty(dictPlus);
        return function(f) {
            return foldr2(function($453) {
                return alt(f($453));
            })(empty);
        };
    };
};
var traverse_ = function(dictApplicative) {
    var applySecond = _indexJs2.applySecond(dictApplicative.Apply0());
    var pure = _indexJs1.pure(dictApplicative);
    return function(dictFoldable) {
        var foldr2 = foldr(dictFoldable);
        return function(f) {
            return foldr2(function($454) {
                return applySecond(f($454));
            })(pure(_indexJs23.unit));
        };
    };
};
var for_ = function(dictApplicative) {
    var traverse_1 = traverse_(dictApplicative);
    return function(dictFoldable) {
        return _indexJs8.flip(traverse_1(dictFoldable));
    };
};
var sequence_ = function(dictApplicative) {
    var traverse_1 = traverse_(dictApplicative);
    return function(dictFoldable) {
        return traverse_1(dictFoldable)(identity);
    };
};
var foldl = function(dict) {
    return dict.foldl;
};
var indexl = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(idx) {
        var go = function(cursor) {
            return function(a) {
                if (cursor.elem instanceof _indexJs11.Just) return cursor;
                var $296 = cursor.pos === idx;
                if ($296) return {
                    elem: new _indexJs11.Just(a),
                    pos: cursor.pos
                };
                return {
                    pos: cursor.pos + 1 | 0,
                    elem: cursor.elem
                };
            };
        };
        var $455 = foldl2(go)({
            elem: _indexJs11.Nothing.value,
            pos: 0
        });
        return function($456) {
            return function(v) {
                return v.elem;
            }($455($456));
        };
    };
};
var intercalate = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(dictMonoid) {
        var append = _indexJs21.append(dictMonoid.Semigroup0());
        var mempty = _indexJs13.mempty(dictMonoid);
        return function(sep) {
            return function(xs) {
                var go = function(v) {
                    return function(v1) {
                        if (v.init) return {
                            init: false,
                            acc: v1
                        };
                        return {
                            init: false,
                            acc: append(v.acc)(append(sep)(v1))
                        };
                    };
                };
                return foldl2(go)({
                    init: true,
                    acc: mempty
                })(xs).acc;
            };
        };
    };
};
var length = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(dictSemiring) {
        var add1 = _indexJs22.add(dictSemiring);
        var one = _indexJs22.one(dictSemiring);
        return foldl2(function(c) {
            return function(v) {
                return add1(one)(c);
            };
        })(_indexJs22.zero(dictSemiring));
    };
};
var maximumBy = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(cmp) {
        var max$prime = function(v) {
            return function(v1) {
                if (v instanceof _indexJs11.Nothing) return new _indexJs11.Just(v1);
                if (v instanceof _indexJs11.Just) return new _indexJs11.Just(function() {
                    var $303 = eq1(cmp(v.value0)(v1))(_indexJs20.GT.value);
                    if ($303) return v.value0;
                    return v1;
                }());
                throw new Error("Failed pattern match at Data.Foldable (line 441, column 3 - line 441, column 27): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
        return foldl2(max$prime)(_indexJs11.Nothing.value);
    };
};
var maximum = function(dictOrd) {
    var compare = _indexJs19.compare(dictOrd);
    return function(dictFoldable) {
        return maximumBy(dictFoldable)(compare);
    };
};
var minimumBy = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(cmp) {
        var min$prime = function(v) {
            return function(v1) {
                if (v instanceof _indexJs11.Nothing) return new _indexJs11.Just(v1);
                if (v instanceof _indexJs11.Just) return new _indexJs11.Just(function() {
                    var $307 = eq1(cmp(v.value0)(v1))(_indexJs20.LT.value);
                    if ($307) return v.value0;
                    return v1;
                }());
                throw new Error("Failed pattern match at Data.Foldable (line 454, column 3 - line 454, column 27): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
        return foldl2(min$prime)(_indexJs11.Nothing.value);
    };
};
var minimum = function(dictOrd) {
    var compare = _indexJs19.compare(dictOrd);
    return function(dictFoldable) {
        return minimumBy(dictFoldable)(compare);
    };
};
var product = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(dictSemiring) {
        return foldl2(_indexJs22.mul(dictSemiring))(_indexJs22.one(dictSemiring));
    };
};
var sum = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(dictSemiring) {
        return foldl2(_indexJs22.add(dictSemiring))(_indexJs22.zero(dictSemiring));
    };
};
var foldableTuple = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return f(v.value1)(z);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return f(z)(v.value1);
            };
        };
    },
    foldMap: function(dictMonoid) {
        return function(f) {
            return function(v) {
                return f(v.value1);
            };
        };
    }
};
var foldableMultiplicative = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return f(v)(z);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return f(z)(v);
            };
        };
    },
    foldMap: function(dictMonoid) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    }
};
var foldableMaybe = {
    foldr: function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof _indexJs11.Nothing) return v1;
                if (v2 instanceof _indexJs11.Just) return v(v2.value0)(v1);
                throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    },
    foldl: function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof _indexJs11.Nothing) return v1;
                if (v2 instanceof _indexJs11.Just) return v(v1)(v2.value0);
                throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    },
    foldMap: function(dictMonoid) {
        var mempty = _indexJs13.mempty(dictMonoid);
        return function(v) {
            return function(v1) {
                if (v1 instanceof _indexJs11.Nothing) return mempty;
                if (v1 instanceof _indexJs11.Just) return v(v1.value0);
                throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    }
};
var foldr1 = /* #__PURE__ */ foldr(foldableMaybe);
var foldl1 = /* #__PURE__ */ foldl(foldableMaybe);
var foldableIdentity = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return f(v)(z);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return f(z)(v);
            };
        };
    },
    foldMap: function(dictMonoid) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    }
};
var foldableEither = {
    foldr: function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof _indexJs6.Left) return v1;
                if (v2 instanceof _indexJs6.Right) return v(v2.value0)(v1);
                throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    },
    foldl: function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof _indexJs6.Left) return v1;
                if (v2 instanceof _indexJs6.Right) return v(v1)(v2.value0);
                throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    },
    foldMap: function(dictMonoid) {
        var mempty = _indexJs13.mempty(dictMonoid);
        return function(v) {
            return function(v1) {
                if (v1 instanceof _indexJs6.Left) return mempty;
                if (v1 instanceof _indexJs6.Right) return v(v1.value0);
                throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    }
};
var foldableDual = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return f(v)(z);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return f(z)(v);
            };
        };
    },
    foldMap: function(dictMonoid) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    }
};
var foldableDisj = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return f(v)(z);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return f(z)(v);
            };
        };
    },
    foldMap: function(dictMonoid) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    }
};
var foldableConst = {
    foldr: function(v) {
        return function(z) {
            return function(v1) {
                return z;
            };
        };
    },
    foldl: function(v) {
        return function(z) {
            return function(v1) {
                return z;
            };
        };
    },
    foldMap: function(dictMonoid) {
        var mempty = _indexJs13.mempty(dictMonoid);
        return function(v) {
            return function(v1) {
                return mempty;
            };
        };
    }
};
var foldableConj = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return f(v)(z);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return f(z)(v);
            };
        };
    },
    foldMap: function(dictMonoid) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    }
};
var foldableAdditive = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return f(v)(z);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return f(z)(v);
            };
        };
    },
    foldMap: function(dictMonoid) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    }
};
var foldMapDefaultR = function(dictFoldable) {
    var foldr2 = foldr(dictFoldable);
    return function(dictMonoid) {
        var append = _indexJs21.append(dictMonoid.Semigroup0());
        var mempty = _indexJs13.mempty(dictMonoid);
        return function(f) {
            return foldr2(function(x) {
                return function(acc) {
                    return append(f(x))(acc);
                };
            })(mempty);
        };
    };
};
var foldableArray = {
    foldr: _foreignJs.foldrArray,
    foldl: _foreignJs.foldlArray,
    foldMap: function(dictMonoid) {
        return foldMapDefaultR(foldableArray)(dictMonoid);
    }
};
var foldMapDefaultL = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(dictMonoid) {
        var append = _indexJs21.append(dictMonoid.Semigroup0());
        var mempty = _indexJs13.mempty(dictMonoid);
        return function(f) {
            return foldl2(function(acc) {
                return function(x) {
                    return append(acc)(f(x));
                };
            })(mempty);
        };
    };
};
var foldMap = function(dict) {
    return dict.foldMap;
};
var foldMap1 = /* #__PURE__ */ foldMap(foldableMaybe);
var foldableApp = function(dictFoldable) {
    var foldr2 = foldr(dictFoldable);
    var foldl2 = foldl(dictFoldable);
    var foldMap2 = foldMap(dictFoldable);
    return {
        foldr: function(f) {
            return function(i) {
                return function(v) {
                    return foldr2(f)(i)(v);
                };
            };
        },
        foldl: function(f) {
            return function(i) {
                return function(v) {
                    return foldl2(f)(i)(v);
                };
            };
        },
        foldMap: function(dictMonoid) {
            var foldMap3 = foldMap2(dictMonoid);
            return function(f) {
                return function(v) {
                    return foldMap3(f)(v);
                };
            };
        }
    };
};
var foldableCompose = function(dictFoldable) {
    var foldr2 = foldr(dictFoldable);
    var foldl2 = foldl(dictFoldable);
    var foldMap2 = foldMap(dictFoldable);
    return function(dictFoldable1) {
        var foldr3 = foldr(dictFoldable1);
        var foldl3 = foldl(dictFoldable1);
        var foldMap3 = foldMap(dictFoldable1);
        return {
            foldr: function(f) {
                return function(i) {
                    return function(v) {
                        return foldr2(_indexJs8.flip(foldr3(f)))(i)(v);
                    };
                };
            },
            foldl: function(f) {
                return function(i) {
                    return function(v) {
                        return foldl2(foldl3(f))(i)(v);
                    };
                };
            },
            foldMap: function(dictMonoid) {
                var foldMap4 = foldMap2(dictMonoid);
                var foldMap5 = foldMap3(dictMonoid);
                return function(f) {
                    return function(v) {
                        return foldMap4(foldMap5(f))(v);
                    };
                };
            }
        };
    };
};
var foldableCoproduct = function(dictFoldable) {
    var foldr2 = foldr(dictFoldable);
    var foldl2 = foldl(dictFoldable);
    var foldMap2 = foldMap(dictFoldable);
    return function(dictFoldable1) {
        var foldr3 = foldr(dictFoldable1);
        var foldl3 = foldl(dictFoldable1);
        var foldMap3 = foldMap(dictFoldable1);
        return {
            foldr: function(f) {
                return function(z) {
                    return _indexJs9.coproduct(foldr2(f)(z))(foldr3(f)(z));
                };
            },
            foldl: function(f) {
                return function(z) {
                    return _indexJs9.coproduct(foldl2(f)(z))(foldl3(f)(z));
                };
            },
            foldMap: function(dictMonoid) {
                var foldMap4 = foldMap2(dictMonoid);
                var foldMap5 = foldMap3(dictMonoid);
                return function(f) {
                    return _indexJs9.coproduct(foldMap4(f))(foldMap5(f));
                };
            }
        };
    };
};
var foldableFirst = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return foldr1(f)(z)(v);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return foldl1(f)(z)(v);
            };
        };
    },
    foldMap: function(dictMonoid) {
        var foldMap2 = foldMap1(dictMonoid);
        return function(f) {
            return function(v) {
                return foldMap2(f)(v);
            };
        };
    }
};
var foldableLast = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return foldr1(f)(z)(v);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return foldl1(f)(z)(v);
            };
        };
    },
    foldMap: function(dictMonoid) {
        var foldMap2 = foldMap1(dictMonoid);
        return function(f) {
            return function(v) {
                return foldMap2(f)(v);
            };
        };
    }
};
var foldableProduct = function(dictFoldable) {
    var foldr2 = foldr(dictFoldable);
    var foldl2 = foldl(dictFoldable);
    var foldMap2 = foldMap(dictFoldable);
    return function(dictFoldable1) {
        var foldr3 = foldr(dictFoldable1);
        var foldl3 = foldl(dictFoldable1);
        var foldMap3 = foldMap(dictFoldable1);
        return {
            foldr: function(f) {
                return function(z) {
                    return function(v) {
                        return foldr2(f)(foldr3(f)(z)(v.value1))(v.value0);
                    };
                };
            },
            foldl: function(f) {
                return function(z) {
                    return function(v) {
                        return foldl3(f)(foldl2(f)(z)(v.value0))(v.value1);
                    };
                };
            },
            foldMap: function(dictMonoid) {
                var append = _indexJs21.append(dictMonoid.Semigroup0());
                var foldMap4 = foldMap2(dictMonoid);
                var foldMap5 = foldMap3(dictMonoid);
                return function(f) {
                    return function(v) {
                        return append(foldMap4(f)(v.value0))(foldMap5(f)(v.value1));
                    };
                };
            }
        };
    };
};
var foldlDefault = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable)(monoidDual);
    return function(c) {
        return function(u) {
            return function(xs) {
                return unwrap(unwrap(foldMap2(function() {
                    var $457 = _indexJs8.flip(c);
                    return function($458) {
                        return _indexJs16.Dual(_indexJs17.Endo($457($458)));
                    };
                }())(xs)))(u);
            };
        };
    };
};
var foldrDefault = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable)(monoidEndo);
    return function(c) {
        return function(u) {
            return function(xs) {
                return unwrap(foldMap2(function($459) {
                    return _indexJs17.Endo(c($459));
                })(xs))(u);
            };
        };
    };
};
var lookup = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable)(_indexJs12.monoidFirst);
    return function(dictEq) {
        var eq2 = _indexJs7.eq(dictEq);
        return function(a) {
            var $460 = foldMap2(function(v) {
                var $444 = eq2(a)(v.value0);
                if ($444) return new _indexJs11.Just(v.value1);
                return _indexJs11.Nothing.value;
            });
            return function($461) {
                return unwrap($460($461));
            };
        };
    };
};
var surroundMap = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable)(monoidEndo);
    return function(dictSemigroup) {
        var append = _indexJs21.append(dictSemigroup);
        return function(d) {
            return function(t) {
                return function(f) {
                    var joined = function(a) {
                        return function(m) {
                            return append(d)(append(t(a))(m));
                        };
                    };
                    return unwrap(foldMap2(joined)(f))(d);
                };
            };
        };
    };
};
var surround = function(dictFoldable) {
    var surroundMap1 = surroundMap(dictFoldable);
    return function(dictSemigroup) {
        var surroundMap2 = surroundMap1(dictSemigroup);
        return function(d) {
            return surroundMap2(d)(identity);
        };
    };
};
var foldM = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(dictMonad) {
        var bind = _indexJs3.bind(dictMonad.Bind1());
        var pure = _indexJs1.pure(dictMonad.Applicative0());
        return function(f) {
            return function(b0) {
                return foldl2(function(b) {
                    return function(a) {
                        return bind(b)(_indexJs8.flip(f)(a));
                    };
                })(pure(b0));
            };
        };
    };
};
var fold = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable);
    return function(dictMonoid) {
        return foldMap2(dictMonoid)(identity);
    };
};
var findMap = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(p) {
        var go = function(v) {
            return function(v1) {
                if (v instanceof _indexJs11.Nothing) return p(v1);
                return v;
            };
        };
        return foldl2(go)(_indexJs11.Nothing.value);
    };
};
var find = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(p) {
        var go = function(v) {
            return function(v1) {
                if (v instanceof _indexJs11.Nothing && p(v1)) return new _indexJs11.Just(v1);
                return v;
            };
        };
        return foldl2(go)(_indexJs11.Nothing.value);
    };
};
var any = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable);
    return function(dictHeytingAlgebra) {
        return alaF(_indexJs15.Disj)(foldMap2(_indexJs15.monoidDisj(dictHeytingAlgebra)));
    };
};
var elem = function(dictFoldable) {
    var any1 = any(dictFoldable)(_indexJs10.heytingAlgebraBoolean);
    return function(dictEq) {
        var $462 = _indexJs7.eq(dictEq);
        return function($463) {
            return any1($462($463));
        };
    };
};
var notElem = function(dictFoldable) {
    var elem1 = elem(dictFoldable);
    return function(dictEq) {
        var elem2 = elem1(dictEq);
        return function(x) {
            var $464 = elem2(x);
            return function($465) {
                return !$464($465);
            };
        };
    };
};
var or = function(dictFoldable) {
    var any1 = any(dictFoldable);
    return function(dictHeytingAlgebra) {
        return any1(dictHeytingAlgebra)(identity);
    };
};
var all = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable);
    return function(dictHeytingAlgebra) {
        return alaF(_indexJs14.Conj)(foldMap2(_indexJs14.monoidConj(dictHeytingAlgebra)));
    };
};
var and = function(dictFoldable) {
    var all1 = all(dictFoldable);
    return function(dictHeytingAlgebra) {
        return all1(dictHeytingAlgebra)(identity);
    };
};

},{"./foreign.js":"6qrMe","../Control.Alt/index.js":"dcz8C","../Control.Applicative/index.js":"5JL6d","../Control.Apply/index.js":"ggN4S","../Control.Bind/index.js":"3yoUR","../Control.Category/index.js":"iWlWa","../Control.Plus/index.js":"a6ULa","../Data.Either/index.js":"9fzbY","../Data.Eq/index.js":"j3zMn","../Data.Function/index.js":"64uwb","../Data.Functor.Coproduct/index.js":"6IbIY","../Data.HeytingAlgebra/index.js":"d84ko","../Data.Maybe/index.js":"ff6lw","../Data.Maybe.First/index.js":"fkx6r","../Data.Monoid/index.js":"6chRZ","../Data.Monoid.Conj/index.js":"aFX4c","../Data.Monoid.Disj/index.js":"1NZlY","../Data.Monoid.Dual/index.js":"elbNG","../Data.Monoid.Endo/index.js":"OTTEB","../Data.Newtype/index.js":"8rbSe","../Data.Ord/index.js":"luB7W","../Data.Ordering/index.js":"2NvYx","../Data.Semigroup/index.js":"evJTv","../Data.Semiring/index.js":"1k57z","../Data.Unit/index.js":"fuCRN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6qrMe":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "foldrArray", ()=>foldrArray);
parcelHelpers.export(exports, "foldlArray", ()=>foldlArray);
const foldrArray = function(f) {
    return function(init) {
        return function(xs) {
            var acc = init;
            var len = xs.length;
            for(var i = len - 1; i >= 0; i--)acc = f(xs[i])(acc);
            return acc;
        };
    };
};
const foldlArray = function(f) {
    return function(init) {
        return function(xs) {
            var acc = init;
            var len = xs.length;
            for(var i = 0; i < len; i++)acc = f(acc)(xs[i]);
            return acc;
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6IbIY":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Coproduct", ()=>Coproduct);
parcelHelpers.export(exports, "left", ()=>left);
parcelHelpers.export(exports, "right", ()=>right);
parcelHelpers.export(exports, "coproduct", ()=>coproduct);
parcelHelpers.export(exports, "bihoistCoproduct", ()=>bihoistCoproduct);
parcelHelpers.export(exports, "newtypeCoproduct", ()=>newtypeCoproduct);
parcelHelpers.export(exports, "eqCoproduct", ()=>eqCoproduct);
parcelHelpers.export(exports, "eq1Coproduct", ()=>eq1Coproduct);
parcelHelpers.export(exports, "ordCoproduct", ()=>ordCoproduct);
parcelHelpers.export(exports, "ord1Coproduct", ()=>ord1Coproduct);
parcelHelpers.export(exports, "showCoproduct", ()=>showCoproduct);
parcelHelpers.export(exports, "functorCoproduct", ()=>functorCoproduct);
parcelHelpers.export(exports, "extendCoproduct", ()=>extendCoproduct);
parcelHelpers.export(exports, "comonadCoproduct", ()=>comonadCoproduct);
var _indexJs = require("../Control.Comonad/index.js");
var _indexJs1 = require("../Control.Extend/index.js");
var _indexJs2 = require("../Data.Bifunctor/index.js");
var _indexJs3 = require("../Data.Either/index.js");
var _indexJs4 = require("../Data.Eq/index.js");
var _indexJs5 = require("../Data.Functor/index.js");
var _indexJs6 = require("../Data.Ord/index.js");
var _indexJs7 = require("../Data.Ordering/index.js");
var _indexJs8 = require("../Data.Show/index.js");
var bimap = /* #__PURE__ */ _indexJs2.bimap(_indexJs2.bifunctorEither);
var Coproduct = function(x) {
    return x;
};
var showCoproduct = function(dictShow) {
    var show = _indexJs8.show(dictShow);
    return function(dictShow1) {
        var show1 = _indexJs8.show(dictShow1);
        return {
            show: function(v) {
                if (v instanceof _indexJs3.Left) return "(left " + (show(v.value0) + ")");
                if (v instanceof _indexJs3.Right) return "(right " + (show1(v.value0) + ")");
                throw new Error("Failed pattern match at Data.Functor.Coproduct (line 63, column 1 - line 65, column 60): " + [
                    v.constructor.name
                ]);
            }
        };
    };
};
var right = function(ga) {
    return new _indexJs3.Right(ga);
};
var newtypeCoproduct = {
    Coercible0: function() {
        return undefined;
    }
};
var left = function(fa) {
    return new _indexJs3.Left(fa);
};
var functorCoproduct = function(dictFunctor) {
    var map = _indexJs5.map(dictFunctor);
    return function(dictFunctor1) {
        var map1 = _indexJs5.map(dictFunctor1);
        return {
            map: function(f) {
                return function(v) {
                    return bimap(map(f))(map1(f))(v);
                };
            }
        };
    };
};
var eq1Coproduct = function(dictEq1) {
    var eq1 = _indexJs4.eq1(dictEq1);
    return function(dictEq11) {
        var eq11 = _indexJs4.eq1(dictEq11);
        return {
            eq1: function(dictEq) {
                var eq12 = eq1(dictEq);
                var eq13 = eq11(dictEq);
                return function(v) {
                    return function(v1) {
                        if (v instanceof _indexJs3.Left && v1 instanceof _indexJs3.Left) return eq12(v.value0)(v1.value0);
                        if (v instanceof _indexJs3.Right && v1 instanceof _indexJs3.Right) return eq13(v.value0)(v1.value0);
                        return false;
                    };
                };
            }
        };
    };
};
var eqCoproduct = function(dictEq1) {
    var eq1Coproduct1 = eq1Coproduct(dictEq1);
    return function(dictEq11) {
        var eq1 = _indexJs4.eq1(eq1Coproduct1(dictEq11));
        return function(dictEq) {
            return {
                eq: eq1(dictEq)
            };
        };
    };
};
var ord1Coproduct = function(dictOrd1) {
    var compare1 = _indexJs6.compare1(dictOrd1);
    var eq1Coproduct1 = eq1Coproduct(dictOrd1.Eq10());
    return function(dictOrd11) {
        var compare11 = _indexJs6.compare1(dictOrd11);
        var eq1Coproduct2 = eq1Coproduct1(dictOrd11.Eq10());
        return {
            compare1: function(dictOrd) {
                var compare12 = compare1(dictOrd);
                var compare13 = compare11(dictOrd);
                return function(v) {
                    return function(v1) {
                        if (v instanceof _indexJs3.Left && v1 instanceof _indexJs3.Left) return compare12(v.value0)(v1.value0);
                        if (v instanceof _indexJs3.Left) return _indexJs7.LT.value;
                        if (v1 instanceof _indexJs3.Left) return _indexJs7.GT.value;
                        if (v instanceof _indexJs3.Right && v1 instanceof _indexJs3.Right) return compare13(v.value0)(v1.value0);
                        throw new Error("Failed pattern match at Data.Functor.Coproduct (line 57, column 5 - line 61, column 43): " + [
                            v.constructor.name,
                            v1.constructor.name
                        ]);
                    };
                };
            },
            Eq10: function() {
                return eq1Coproduct2;
            }
        };
    };
};
var ordCoproduct = function(dictOrd1) {
    var ord1Coproduct1 = ord1Coproduct(dictOrd1);
    var eqCoproduct1 = eqCoproduct(dictOrd1.Eq10());
    return function(dictOrd11) {
        var compare1 = _indexJs6.compare1(ord1Coproduct1(dictOrd11));
        var eqCoproduct2 = eqCoproduct1(dictOrd11.Eq10());
        return function(dictOrd) {
            var eqCoproduct3 = eqCoproduct2(dictOrd.Eq0());
            return {
                compare: compare1(dictOrd),
                Eq0: function() {
                    return eqCoproduct3;
                }
            };
        };
    };
};
var coproduct = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof _indexJs3.Left) return v(v2.value0);
            if (v2 instanceof _indexJs3.Right) return v1(v2.value0);
            throw new Error("Failed pattern match at Data.Functor.Coproduct (line 27, column 1 - line 27, column 78): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
};
var extendCoproduct = function(dictExtend) {
    var extend = _indexJs1.extend(dictExtend);
    var functorCoproduct1 = functorCoproduct(dictExtend.Functor0());
    return function(dictExtend1) {
        var extend1 = _indexJs1.extend(dictExtend1);
        var functorCoproduct2 = functorCoproduct1(dictExtend1.Functor0());
        return {
            extend: function(f) {
                var $106 = coproduct(function() {
                    var $108 = extend(function($110) {
                        return f(Coproduct(_indexJs3.Left.create($110)));
                    });
                    return function($109) {
                        return _indexJs3.Left.create($108($109));
                    };
                }())(function() {
                    var $111 = extend1(function($113) {
                        return f(Coproduct(_indexJs3.Right.create($113)));
                    });
                    return function($112) {
                        return _indexJs3.Right.create($111($112));
                    };
                }());
                return function($107) {
                    return Coproduct($106($107));
                };
            },
            Functor0: function() {
                return functorCoproduct2;
            }
        };
    };
};
var comonadCoproduct = function(dictComonad) {
    var extract = _indexJs.extract(dictComonad);
    var extendCoproduct1 = extendCoproduct(dictComonad.Extend0());
    return function(dictComonad1) {
        var extendCoproduct2 = extendCoproduct1(dictComonad1.Extend0());
        return {
            extract: coproduct(extract)(_indexJs.extract(dictComonad1)),
            Extend0: function() {
                return extendCoproduct2;
            }
        };
    };
};
var bihoistCoproduct = function(natF) {
    return function(natG) {
        return function(v) {
            return bimap(natF)(natG)(v);
        };
    };
};

},{"../Control.Comonad/index.js":"8130l","../Control.Extend/index.js":"fpzC0","../Data.Bifunctor/index.js":"aFQNr","../Data.Either/index.js":"9fzbY","../Data.Eq/index.js":"j3zMn","../Data.Functor/index.js":"j9NCu","../Data.Ord/index.js":"luB7W","../Data.Ordering/index.js":"2NvYx","../Data.Show/index.js":"lQCRi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8130l":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "duplicate", ()=>(0, _indexJs.duplicate));
parcelHelpers.export(exports, "extend", ()=>(0, _indexJs.extend));
parcelHelpers.export(exports, "map", ()=>(0, _indexJs1.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs1.void));
parcelHelpers.export(exports, "extract", ()=>extract);
var _indexJs = require("../Control.Extend/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var extract = function(dict) {
    return dict.extract;
};

},{"../Control.Extend/index.js":"fpzC0","../Data.Functor/index.js":"j9NCu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fpzC0":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "map", ()=>(0, _indexJs1.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs1.void));
parcelHelpers.export(exports, "extend", ()=>extend);
parcelHelpers.export(exports, "extendFlipped", ()=>extendFlipped);
parcelHelpers.export(exports, "composeCoKleisli", ()=>composeCoKleisli);
parcelHelpers.export(exports, "composeCoKleisliFlipped", ()=>composeCoKleisliFlipped);
parcelHelpers.export(exports, "duplicate", ()=>duplicate);
parcelHelpers.export(exports, "extendFn", ()=>extendFn);
parcelHelpers.export(exports, "extendArray", ()=>extendArray);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var _indexJs2 = require("../Data.Semigroup/index.js");
var identity = /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn);
var extendFn = function(dictSemigroup) {
    var append = _indexJs2.append(dictSemigroup);
    return {
        extend: function(f) {
            return function(g) {
                return function(w) {
                    return f(function(w$prime) {
                        return g(append(w)(w$prime));
                    });
                };
            };
        },
        Functor0: function() {
            return _indexJs1.functorFn;
        }
    };
};
var extendArray = {
    extend: _foreignJs.arrayExtend,
    Functor0: function() {
        return _indexJs1.functorArray;
    }
};
var extend = function(dict) {
    return dict.extend;
};
var extendFlipped = function(dictExtend) {
    var extend1 = extend(dictExtend);
    return function(w) {
        return function(f) {
            return extend1(f)(w);
        };
    };
};
var duplicate = function(dictExtend) {
    return extend(dictExtend)(identity);
};
var composeCoKleisliFlipped = function(dictExtend) {
    var extend1 = extend(dictExtend);
    return function(f) {
        return function(g) {
            return function(w) {
                return f(extend1(g)(w));
            };
        };
    };
};
var composeCoKleisli = function(dictExtend) {
    var extend1 = extend(dictExtend);
    return function(f) {
        return function(g) {
            return function(w) {
                return g(extend1(f)(w));
            };
        };
    };
};

},{"./foreign.js":"fs1vc","../Control.Category/index.js":"iWlWa","../Data.Functor/index.js":"j9NCu","../Data.Semigroup/index.js":"evJTv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fs1vc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "arrayExtend", ()=>arrayExtend);
const arrayExtend = function(f) {
    return function(xs) {
        return xs.map(function(_, i, xs) {
            return f(xs.slice(i));
        });
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fkx6r":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "First", ()=>First);
parcelHelpers.export(exports, "newtypeFirst", ()=>newtypeFirst);
parcelHelpers.export(exports, "eqFirst", ()=>eqFirst);
parcelHelpers.export(exports, "eq1First", ()=>eq1First);
parcelHelpers.export(exports, "ordFirst", ()=>ordFirst);
parcelHelpers.export(exports, "ord1First", ()=>ord1First);
parcelHelpers.export(exports, "boundedFirst", ()=>boundedFirst);
parcelHelpers.export(exports, "functorFirst", ()=>functorFirst);
parcelHelpers.export(exports, "invariantFirst", ()=>invariantFirst);
parcelHelpers.export(exports, "applyFirst", ()=>applyFirst);
parcelHelpers.export(exports, "applicativeFirst", ()=>applicativeFirst);
parcelHelpers.export(exports, "bindFirst", ()=>bindFirst);
parcelHelpers.export(exports, "monadFirst", ()=>monadFirst);
parcelHelpers.export(exports, "extendFirst", ()=>extendFirst);
parcelHelpers.export(exports, "showFirst", ()=>showFirst);
parcelHelpers.export(exports, "semigroupFirst", ()=>semigroupFirst);
parcelHelpers.export(exports, "monoidFirst", ()=>monoidFirst);
parcelHelpers.export(exports, "altFirst", ()=>altFirst);
parcelHelpers.export(exports, "plusFirst", ()=>plusFirst);
parcelHelpers.export(exports, "alternativeFirst", ()=>alternativeFirst);
var _indexJs = require("../Data.Maybe/index.js");
var _indexJs1 = require("../Data.Monoid/index.js");
var _indexJs2 = require("../Data.Semigroup/index.js");
var _indexJs3 = require("../Data.Show/index.js");
var First = function(x) {
    return x;
};
var showFirst = function(dictShow) {
    var show = _indexJs3.show(_indexJs.showMaybe(dictShow));
    return {
        show: function(v) {
            return "First (" + (show(v) + ")");
        }
    };
};
var semigroupFirst = {
    append: function(v) {
        return function(v1) {
            if (v instanceof _indexJs.Just) return v;
            return v1;
        };
    }
};
var ordFirst = function(dictOrd) {
    return _indexJs.ordMaybe(dictOrd);
};
var ord1First = _indexJs.ord1Maybe;
var newtypeFirst = {
    Coercible0: function() {
        return undefined;
    }
};
var monoidFirst = /* #__PURE__ */ function() {
    return {
        mempty: _indexJs.Nothing.value,
        Semigroup0: function() {
            return semigroupFirst;
        }
    };
}();
var monadFirst = _indexJs.monadMaybe;
var invariantFirst = _indexJs.invariantMaybe;
var functorFirst = _indexJs.functorMaybe;
var extendFirst = _indexJs.extendMaybe;
var eqFirst = function(dictEq) {
    return _indexJs.eqMaybe(dictEq);
};
var eq1First = _indexJs.eq1Maybe;
var boundedFirst = function(dictBounded) {
    return _indexJs.boundedMaybe(dictBounded);
};
var bindFirst = _indexJs.bindMaybe;
var applyFirst = _indexJs.applyMaybe;
var applicativeFirst = _indexJs.applicativeMaybe;
var altFirst = {
    alt: /* #__PURE__ */ _indexJs2.append(semigroupFirst),
    Functor0: function() {
        return functorFirst;
    }
};
var plusFirst = {
    empty: /* #__PURE__ */ _indexJs1.mempty(monoidFirst),
    Alt0: function() {
        return altFirst;
    }
};
var alternativeFirst = {
    Applicative0: function() {
        return applicativeFirst;
    },
    Plus1: function() {
        return plusFirst;
    }
};

},{"../Data.Maybe/index.js":"ff6lw","../Data.Monoid/index.js":"6chRZ","../Data.Semigroup/index.js":"evJTv","../Data.Show/index.js":"lQCRi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aFX4c":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Conj", ()=>Conj);
parcelHelpers.export(exports, "eqConj", ()=>eqConj);
parcelHelpers.export(exports, "eq1Conj", ()=>eq1Conj);
parcelHelpers.export(exports, "ordConj", ()=>ordConj);
parcelHelpers.export(exports, "ord1Conj", ()=>ord1Conj);
parcelHelpers.export(exports, "boundedConj", ()=>boundedConj);
parcelHelpers.export(exports, "showConj", ()=>showConj);
parcelHelpers.export(exports, "functorConj", ()=>functorConj);
parcelHelpers.export(exports, "applyConj", ()=>applyConj);
parcelHelpers.export(exports, "applicativeConj", ()=>applicativeConj);
parcelHelpers.export(exports, "bindConj", ()=>bindConj);
parcelHelpers.export(exports, "monadConj", ()=>monadConj);
parcelHelpers.export(exports, "semigroupConj", ()=>semigroupConj);
parcelHelpers.export(exports, "monoidConj", ()=>monoidConj);
parcelHelpers.export(exports, "semiringConj", ()=>semiringConj);
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.HeytingAlgebra/index.js");
var _indexJs2 = require("../Data.Ord/index.js");
var _indexJs3 = require("../Data.Show/index.js");
var Conj = function(x) {
    return x;
};
var showConj = function(dictShow) {
    var show = _indexJs3.show(dictShow);
    return {
        show: function(v) {
            return "(Conj " + (show(v) + ")");
        }
    };
};
var semiringConj = function(dictHeytingAlgebra) {
    var conj = _indexJs1.conj(dictHeytingAlgebra);
    var disj = _indexJs1.disj(dictHeytingAlgebra);
    return {
        zero: _indexJs1.tt(dictHeytingAlgebra),
        one: _indexJs1.ff(dictHeytingAlgebra),
        add: function(v) {
            return function(v1) {
                return conj(v)(v1);
            };
        },
        mul: function(v) {
            return function(v1) {
                return disj(v)(v1);
            };
        }
    };
};
var semigroupConj = function(dictHeytingAlgebra) {
    var conj = _indexJs1.conj(dictHeytingAlgebra);
    return {
        append: function(v) {
            return function(v1) {
                return conj(v)(v1);
            };
        }
    };
};
var ordConj = function(dictOrd) {
    return dictOrd;
};
var monoidConj = function(dictHeytingAlgebra) {
    var semigroupConj1 = semigroupConj(dictHeytingAlgebra);
    return {
        mempty: _indexJs1.tt(dictHeytingAlgebra),
        Semigroup0: function() {
            return semigroupConj1;
        }
    };
};
var functorConj = {
    map: function(f) {
        return function(m) {
            return f(m);
        };
    }
};
var eqConj = function(dictEq) {
    return dictEq;
};
var eq1Conj = {
    eq1: function(dictEq) {
        return _indexJs.eq(eqConj(dictEq));
    }
};
var ord1Conj = {
    compare1: function(dictOrd) {
        return _indexJs2.compare(ordConj(dictOrd));
    },
    Eq10: function() {
        return eq1Conj;
    }
};
var boundedConj = function(dictBounded) {
    return dictBounded;
};
var applyConj = {
    apply: function(v) {
        return function(v1) {
            return v(v1);
        };
    },
    Functor0: function() {
        return functorConj;
    }
};
var bindConj = {
    bind: function(v) {
        return function(f) {
            return f(v);
        };
    },
    Apply0: function() {
        return applyConj;
    }
};
var applicativeConj = {
    pure: Conj,
    Apply0: function() {
        return applyConj;
    }
};
var monadConj = {
    Applicative0: function() {
        return applicativeConj;
    },
    Bind1: function() {
        return bindConj;
    }
};

},{"../Data.Eq/index.js":"j3zMn","../Data.HeytingAlgebra/index.js":"d84ko","../Data.Ord/index.js":"luB7W","../Data.Show/index.js":"lQCRi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1NZlY":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Disj", ()=>Disj);
parcelHelpers.export(exports, "eqDisj", ()=>eqDisj);
parcelHelpers.export(exports, "eq1Disj", ()=>eq1Disj);
parcelHelpers.export(exports, "ordDisj", ()=>ordDisj);
parcelHelpers.export(exports, "ord1Disj", ()=>ord1Disj);
parcelHelpers.export(exports, "boundedDisj", ()=>boundedDisj);
parcelHelpers.export(exports, "showDisj", ()=>showDisj);
parcelHelpers.export(exports, "functorDisj", ()=>functorDisj);
parcelHelpers.export(exports, "applyDisj", ()=>applyDisj);
parcelHelpers.export(exports, "applicativeDisj", ()=>applicativeDisj);
parcelHelpers.export(exports, "bindDisj", ()=>bindDisj);
parcelHelpers.export(exports, "monadDisj", ()=>monadDisj);
parcelHelpers.export(exports, "semigroupDisj", ()=>semigroupDisj);
parcelHelpers.export(exports, "monoidDisj", ()=>monoidDisj);
parcelHelpers.export(exports, "semiringDisj", ()=>semiringDisj);
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.HeytingAlgebra/index.js");
var _indexJs2 = require("../Data.Ord/index.js");
var _indexJs3 = require("../Data.Show/index.js");
var Disj = function(x) {
    return x;
};
var showDisj = function(dictShow) {
    var show = _indexJs3.show(dictShow);
    return {
        show: function(v) {
            return "(Disj " + (show(v) + ")");
        }
    };
};
var semiringDisj = function(dictHeytingAlgebra) {
    var disj = _indexJs1.disj(dictHeytingAlgebra);
    var conj = _indexJs1.conj(dictHeytingAlgebra);
    return {
        zero: _indexJs1.ff(dictHeytingAlgebra),
        one: _indexJs1.tt(dictHeytingAlgebra),
        add: function(v) {
            return function(v1) {
                return disj(v)(v1);
            };
        },
        mul: function(v) {
            return function(v1) {
                return conj(v)(v1);
            };
        }
    };
};
var semigroupDisj = function(dictHeytingAlgebra) {
    var disj = _indexJs1.disj(dictHeytingAlgebra);
    return {
        append: function(v) {
            return function(v1) {
                return disj(v)(v1);
            };
        }
    };
};
var ordDisj = function(dictOrd) {
    return dictOrd;
};
var monoidDisj = function(dictHeytingAlgebra) {
    var semigroupDisj1 = semigroupDisj(dictHeytingAlgebra);
    return {
        mempty: _indexJs1.ff(dictHeytingAlgebra),
        Semigroup0: function() {
            return semigroupDisj1;
        }
    };
};
var functorDisj = {
    map: function(f) {
        return function(m) {
            return f(m);
        };
    }
};
var eqDisj = function(dictEq) {
    return dictEq;
};
var eq1Disj = {
    eq1: function(dictEq) {
        return _indexJs.eq(eqDisj(dictEq));
    }
};
var ord1Disj = {
    compare1: function(dictOrd) {
        return _indexJs2.compare(ordDisj(dictOrd));
    },
    Eq10: function() {
        return eq1Disj;
    }
};
var boundedDisj = function(dictBounded) {
    return dictBounded;
};
var applyDisj = {
    apply: function(v) {
        return function(v1) {
            return v(v1);
        };
    },
    Functor0: function() {
        return functorDisj;
    }
};
var bindDisj = {
    bind: function(v) {
        return function(f) {
            return f(v);
        };
    },
    Apply0: function() {
        return applyDisj;
    }
};
var applicativeDisj = {
    pure: Disj,
    Apply0: function() {
        return applyDisj;
    }
};
var monadDisj = {
    Applicative0: function() {
        return applicativeDisj;
    },
    Bind1: function() {
        return bindDisj;
    }
};

},{"../Data.Eq/index.js":"j3zMn","../Data.HeytingAlgebra/index.js":"d84ko","../Data.Ord/index.js":"luB7W","../Data.Show/index.js":"lQCRi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"elbNG":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Dual", ()=>Dual);
parcelHelpers.export(exports, "eqDual", ()=>eqDual);
parcelHelpers.export(exports, "eq1Dual", ()=>eq1Dual);
parcelHelpers.export(exports, "ordDual", ()=>ordDual);
parcelHelpers.export(exports, "ord1Dual", ()=>ord1Dual);
parcelHelpers.export(exports, "boundedDual", ()=>boundedDual);
parcelHelpers.export(exports, "showDual", ()=>showDual);
parcelHelpers.export(exports, "functorDual", ()=>functorDual);
parcelHelpers.export(exports, "applyDual", ()=>applyDual);
parcelHelpers.export(exports, "applicativeDual", ()=>applicativeDual);
parcelHelpers.export(exports, "bindDual", ()=>bindDual);
parcelHelpers.export(exports, "monadDual", ()=>monadDual);
parcelHelpers.export(exports, "semigroupDual", ()=>semigroupDual);
parcelHelpers.export(exports, "monoidDual", ()=>monoidDual);
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Monoid/index.js");
var _indexJs2 = require("../Data.Ord/index.js");
var _indexJs3 = require("../Data.Semigroup/index.js");
var _indexJs4 = require("../Data.Show/index.js");
var Dual = function(x) {
    return x;
};
var showDual = function(dictShow) {
    var show = _indexJs4.show(dictShow);
    return {
        show: function(v) {
            return "(Dual " + (show(v) + ")");
        }
    };
};
var semigroupDual = function(dictSemigroup) {
    var append1 = _indexJs3.append(dictSemigroup);
    return {
        append: function(v) {
            return function(v1) {
                return append1(v1)(v);
            };
        }
    };
};
var ordDual = function(dictOrd) {
    return dictOrd;
};
var monoidDual = function(dictMonoid) {
    var semigroupDual1 = semigroupDual(dictMonoid.Semigroup0());
    return {
        mempty: _indexJs1.mempty(dictMonoid),
        Semigroup0: function() {
            return semigroupDual1;
        }
    };
};
var functorDual = {
    map: function(f) {
        return function(m) {
            return f(m);
        };
    }
};
var eqDual = function(dictEq) {
    return dictEq;
};
var eq1Dual = {
    eq1: function(dictEq) {
        return _indexJs.eq(eqDual(dictEq));
    }
};
var ord1Dual = {
    compare1: function(dictOrd) {
        return _indexJs2.compare(ordDual(dictOrd));
    },
    Eq10: function() {
        return eq1Dual;
    }
};
var boundedDual = function(dictBounded) {
    return dictBounded;
};
var applyDual = {
    apply: function(v) {
        return function(v1) {
            return v(v1);
        };
    },
    Functor0: function() {
        return functorDual;
    }
};
var bindDual = {
    bind: function(v) {
        return function(f) {
            return f(v);
        };
    },
    Apply0: function() {
        return applyDual;
    }
};
var applicativeDual = {
    pure: Dual,
    Apply0: function() {
        return applyDual;
    }
};
var monadDual = {
    Applicative0: function() {
        return applicativeDual;
    },
    Bind1: function() {
        return bindDual;
    }
};

},{"../Data.Eq/index.js":"j3zMn","../Data.Monoid/index.js":"6chRZ","../Data.Ord/index.js":"luB7W","../Data.Semigroup/index.js":"evJTv","../Data.Show/index.js":"lQCRi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"OTTEB":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Endo", ()=>Endo);
parcelHelpers.export(exports, "eqEndo", ()=>eqEndo);
parcelHelpers.export(exports, "ordEndo", ()=>ordEndo);
parcelHelpers.export(exports, "boundedEndo", ()=>boundedEndo);
parcelHelpers.export(exports, "showEndo", ()=>showEndo);
parcelHelpers.export(exports, "semigroupEndo", ()=>semigroupEndo);
parcelHelpers.export(exports, "monoidEndo", ()=>monoidEndo);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Control.Semigroupoid/index.js");
var _indexJs2 = require("../Data.Show/index.js");
var Endo = function(x) {
    return x;
};
var showEndo = function(dictShow) {
    var show = _indexJs2.show(dictShow);
    return {
        show: function(v) {
            return "(Endo " + (show(v) + ")");
        }
    };
};
var semigroupEndo = function(dictSemigroupoid) {
    var compose = _indexJs1.compose(dictSemigroupoid);
    return {
        append: function(v) {
            return function(v1) {
                return compose(v)(v1);
            };
        }
    };
};
var ordEndo = function(dictOrd) {
    return dictOrd;
};
var monoidEndo = function(dictCategory) {
    var semigroupEndo1 = semigroupEndo(dictCategory.Semigroupoid0());
    return {
        mempty: _indexJs.identity(dictCategory),
        Semigroup0: function() {
            return semigroupEndo1;
        }
    };
};
var eqEndo = function(dictEq) {
    return dictEq;
};
var boundedEndo = function(dictBounded) {
    return dictBounded;
};

},{"../Control.Category/index.js":"iWlWa","../Control.Semigroupoid/index.js":"lM9FC","../Data.Show/index.js":"lQCRi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8rbSe":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "wrap", ()=>wrap);
parcelHelpers.export(exports, "unwrap", ()=>unwrap);
parcelHelpers.export(exports, "un", ()=>un);
parcelHelpers.export(exports, "modify", ()=>modify);
parcelHelpers.export(exports, "ala", ()=>ala);
parcelHelpers.export(exports, "alaF", ()=>alaF);
parcelHelpers.export(exports, "over", ()=>over);
parcelHelpers.export(exports, "overF", ()=>overF);
parcelHelpers.export(exports, "under", ()=>under);
parcelHelpers.export(exports, "underF", ()=>underF);
parcelHelpers.export(exports, "over2", ()=>over2);
parcelHelpers.export(exports, "overF2", ()=>overF2);
parcelHelpers.export(exports, "under2", ()=>under2);
parcelHelpers.export(exports, "underF2", ()=>underF2);
parcelHelpers.export(exports, "traverse", ()=>traverse);
parcelHelpers.export(exports, "collect", ()=>collect);
parcelHelpers.export(exports, "newtypeAdditive", ()=>newtypeAdditive);
parcelHelpers.export(exports, "newtypeMultiplicative", ()=>newtypeMultiplicative);
parcelHelpers.export(exports, "newtypeConj", ()=>newtypeConj);
parcelHelpers.export(exports, "newtypeDisj", ()=>newtypeDisj);
parcelHelpers.export(exports, "newtypeDual", ()=>newtypeDual);
parcelHelpers.export(exports, "newtypeEndo", ()=>newtypeEndo);
parcelHelpers.export(exports, "newtypeFirst", ()=>newtypeFirst);
parcelHelpers.export(exports, "newtypeLast", ()=>newtypeLast);
var _indexJs = require("../Safe.Coerce/index.js");
var coerce = /* #__PURE__ */ _indexJs.coerce();
var wrap = function() {
    return coerce;
};
var wrap1 = /* #__PURE__ */ wrap();
var unwrap = function() {
    return coerce;
};
var unwrap1 = /* #__PURE__ */ unwrap();
var underF2 = function() {
    return function() {
        return function() {
            return function() {
                return function(v) {
                    return coerce;
                };
            };
        };
    };
};
var underF = function() {
    return function() {
        return function() {
            return function() {
                return function(v) {
                    return coerce;
                };
            };
        };
    };
};
var under2 = function() {
    return function() {
        return function(v) {
            return coerce;
        };
    };
};
var under = function() {
    return function() {
        return function(v) {
            return coerce;
        };
    };
};
var un = function() {
    return function(v) {
        return unwrap1;
    };
};
var traverse = function() {
    return function() {
        return function(v) {
            return coerce;
        };
    };
};
var overF2 = function() {
    return function() {
        return function() {
            return function() {
                return function(v) {
                    return coerce;
                };
            };
        };
    };
};
var overF = function() {
    return function() {
        return function() {
            return function() {
                return function(v) {
                    return coerce;
                };
            };
        };
    };
};
var over2 = function() {
    return function() {
        return function(v) {
            return coerce;
        };
    };
};
var over = function() {
    return function() {
        return function(v) {
            return coerce;
        };
    };
};
var newtypeMultiplicative = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeLast = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeFirst = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeEndo = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeDual = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeDisj = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeConj = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeAdditive = {
    Coercible0: function() {
        return undefined;
    }
};
var modify = function() {
    return function(fn) {
        return function(t) {
            return wrap1(fn(unwrap1(t)));
        };
    };
};
var collect = function() {
    return function() {
        return function(v) {
            return coerce;
        };
    };
};
var alaF = function() {
    return function() {
        return function() {
            return function() {
                return function(v) {
                    return coerce;
                };
            };
        };
    };
};
var ala = function() {
    return function() {
        return function() {
            return function(v) {
                return function(f) {
                    return coerce(f(wrap1));
                };
            };
        };
    };
};

},{"../Safe.Coerce/index.js":"aT567","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aT567":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "coerce", ()=>coerce);
var _indexJs = require("../Unsafe.Coerce/index.js");
var coerce = function() {
    return _indexJs.unsafeCoerce;
};

},{"../Unsafe.Coerce/index.js":"kRX7u","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jS0Ca":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "App", ()=>App);
parcelHelpers.export(exports, "hoistApp", ()=>hoistApp);
parcelHelpers.export(exports, "hoistLiftApp", ()=>hoistLiftApp);
parcelHelpers.export(exports, "hoistLowerApp", ()=>hoistLowerApp);
parcelHelpers.export(exports, "newtypeApp", ()=>newtypeApp);
parcelHelpers.export(exports, "eqApp", ()=>eqApp);
parcelHelpers.export(exports, "eq1App", ()=>eq1App);
parcelHelpers.export(exports, "ordApp", ()=>ordApp);
parcelHelpers.export(exports, "ord1App", ()=>ord1App);
parcelHelpers.export(exports, "showApp", ()=>showApp);
parcelHelpers.export(exports, "semigroupApp", ()=>semigroupApp);
parcelHelpers.export(exports, "monoidApp", ()=>monoidApp);
parcelHelpers.export(exports, "functorApp", ()=>functorApp);
parcelHelpers.export(exports, "applyApp", ()=>applyApp);
parcelHelpers.export(exports, "applicativeApp", ()=>applicativeApp);
parcelHelpers.export(exports, "bindApp", ()=>bindApp);
parcelHelpers.export(exports, "monadApp", ()=>monadApp);
parcelHelpers.export(exports, "altApp", ()=>altApp);
parcelHelpers.export(exports, "plusApp", ()=>plusApp);
parcelHelpers.export(exports, "alternativeApp", ()=>alternativeApp);
parcelHelpers.export(exports, "monadPlusApp", ()=>monadPlusApp);
parcelHelpers.export(exports, "lazyApp", ()=>lazyApp);
parcelHelpers.export(exports, "extendApp", ()=>extendApp);
parcelHelpers.export(exports, "comonadApp", ()=>comonadApp);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Data.Eq/index.js");
var _indexJs3 = require("../Data.Monoid/index.js");
var _indexJs4 = require("../Data.Ord/index.js");
var _indexJs5 = require("../Data.Semigroup/index.js");
var _indexJs6 = require("../Data.Show/index.js");
var _indexJs7 = require("../Unsafe.Coerce/index.js");
var App = function(x) {
    return x;
};
var showApp = function(dictShow) {
    var show = _indexJs6.show(dictShow);
    return {
        show: function(v) {
            return "(App " + (show(v) + ")");
        }
    };
};
var semigroupApp = function(dictApply) {
    var lift2 = _indexJs1.lift2(dictApply);
    return function(dictSemigroup) {
        var append1 = _indexJs5.append(dictSemigroup);
        return {
            append: function(v) {
                return function(v1) {
                    return lift2(append1)(v)(v1);
                };
            }
        };
    };
};
var plusApp = function(dictPlus) {
    return dictPlus;
};
var newtypeApp = {
    Coercible0: function() {
        return undefined;
    }
};
var monoidApp = function(dictApplicative) {
    var pure = _indexJs.pure(dictApplicative);
    var semigroupApp1 = semigroupApp(dictApplicative.Apply0());
    return function(dictMonoid) {
        var semigroupApp2 = semigroupApp1(dictMonoid.Semigroup0());
        return {
            mempty: pure(_indexJs3.mempty(dictMonoid)),
            Semigroup0: function() {
                return semigroupApp2;
            }
        };
    };
};
var monadPlusApp = function(dictMonadPlus) {
    return dictMonadPlus;
};
var monadApp = function(dictMonad) {
    return dictMonad;
};
var lazyApp = function(dictLazy) {
    return dictLazy;
};
var hoistLowerApp = _indexJs7.unsafeCoerce;
var hoistLiftApp = _indexJs7.unsafeCoerce;
var hoistApp = function(f) {
    return function(v) {
        return f(v);
    };
};
var functorApp = function(dictFunctor) {
    return dictFunctor;
};
var extendApp = function(dictExtend) {
    return dictExtend;
};
var eqApp = function(dictEq1) {
    var eq1 = _indexJs2.eq1(dictEq1);
    return function(dictEq) {
        var eq11 = eq1(dictEq);
        return {
            eq: function(x) {
                return function(y) {
                    return eq11(x)(y);
                };
            }
        };
    };
};
var ordApp = function(dictOrd1) {
    var compare1 = _indexJs4.compare1(dictOrd1);
    var eqApp1 = eqApp(dictOrd1.Eq10());
    return function(dictOrd) {
        var compare11 = compare1(dictOrd);
        var eqApp2 = eqApp1(dictOrd.Eq0());
        return {
            compare: function(x) {
                return function(y) {
                    return compare11(x)(y);
                };
            },
            Eq0: function() {
                return eqApp2;
            }
        };
    };
};
var eq1App = function(dictEq1) {
    var eqApp1 = eqApp(dictEq1);
    return {
        eq1: function(dictEq) {
            return _indexJs2.eq(eqApp1(dictEq));
        }
    };
};
var ord1App = function(dictOrd1) {
    var ordApp1 = ordApp(dictOrd1);
    var eq1App1 = eq1App(dictOrd1.Eq10());
    return {
        compare1: function(dictOrd) {
            return _indexJs4.compare(ordApp1(dictOrd));
        },
        Eq10: function() {
            return eq1App1;
        }
    };
};
var comonadApp = function(dictComonad) {
    return dictComonad;
};
var bindApp = function(dictBind) {
    return dictBind;
};
var applyApp = function(dictApply) {
    return dictApply;
};
var applicativeApp = function(dictApplicative) {
    return dictApplicative;
};
var alternativeApp = function(dictAlternative) {
    return dictAlternative;
};
var altApp = function(dictAlt) {
    return dictAlt;
};

},{"../Control.Applicative/index.js":"5JL6d","../Control.Apply/index.js":"ggN4S","../Data.Eq/index.js":"j3zMn","../Data.Monoid/index.js":"6chRZ","../Data.Ord/index.js":"luB7W","../Data.Semigroup/index.js":"evJTv","../Data.Show/index.js":"lQCRi","../Unsafe.Coerce/index.js":"kRX7u","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5KA6k":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Compose", ()=>Compose);
parcelHelpers.export(exports, "bihoistCompose", ()=>bihoistCompose);
parcelHelpers.export(exports, "newtypeCompose", ()=>newtypeCompose);
parcelHelpers.export(exports, "eqCompose", ()=>eqCompose);
parcelHelpers.export(exports, "eq1Compose", ()=>eq1Compose);
parcelHelpers.export(exports, "ordCompose", ()=>ordCompose);
parcelHelpers.export(exports, "ord1Compose", ()=>ord1Compose);
parcelHelpers.export(exports, "showCompose", ()=>showCompose);
parcelHelpers.export(exports, "functorCompose", ()=>functorCompose);
parcelHelpers.export(exports, "applyCompose", ()=>applyCompose);
parcelHelpers.export(exports, "applicativeCompose", ()=>applicativeCompose);
parcelHelpers.export(exports, "altCompose", ()=>altCompose);
parcelHelpers.export(exports, "plusCompose", ()=>plusCompose);
parcelHelpers.export(exports, "alternativeCompose", ()=>alternativeCompose);
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Applicative/index.js");
var _indexJs2 = require("../Control.Apply/index.js");
var _indexJs3 = require("../Control.Plus/index.js");
var _indexJs4 = require("../Data.Eq/index.js");
var _indexJs5 = require("../Data.Functor/index.js");
var _indexJs6 = require("../Data.Functor.App/index.js");
var _indexJs7 = require("../Data.Ord/index.js");
var _indexJs8 = require("../Data.Show/index.js");
var Compose = function(x) {
    return x;
};
var showCompose = function(dictShow) {
    var show = _indexJs8.show(dictShow);
    return {
        show: function(v) {
            return "(Compose " + (show(v) + ")");
        }
    };
};
var newtypeCompose = {
    Coercible0: function() {
        return undefined;
    }
};
var functorCompose = function(dictFunctor) {
    var map = _indexJs5.map(dictFunctor);
    return function(dictFunctor1) {
        var map1 = _indexJs5.map(dictFunctor1);
        return {
            map: function(f) {
                return function(v) {
                    return map(map1(f))(v);
                };
            }
        };
    };
};
var eqCompose = function(dictEq1) {
    var eq1 = _indexJs4.eq1(dictEq1);
    return function(dictEq11) {
        var eqApp = _indexJs6.eqApp(dictEq11);
        return function(dictEq) {
            var eq11 = eq1(eqApp(dictEq));
            return {
                eq: function(v) {
                    return function(v1) {
                        return eq11(_indexJs6.hoistLiftApp(v))(_indexJs6.hoistLiftApp(v1));
                    };
                }
            };
        };
    };
};
var ordCompose = function(dictOrd1) {
    var compare1 = _indexJs7.compare1(dictOrd1);
    var eqCompose1 = eqCompose(dictOrd1.Eq10());
    return function(dictOrd11) {
        var ordApp = _indexJs6.ordApp(dictOrd11);
        var eqCompose2 = eqCompose1(dictOrd11.Eq10());
        return function(dictOrd) {
            var compare11 = compare1(ordApp(dictOrd));
            var eqCompose3 = eqCompose2(dictOrd.Eq0());
            return {
                compare: function(v) {
                    return function(v1) {
                        return compare11(_indexJs6.hoistLiftApp(v))(_indexJs6.hoistLiftApp(v1));
                    };
                },
                Eq0: function() {
                    return eqCompose3;
                }
            };
        };
    };
};
var eq1Compose = function(dictEq1) {
    var eqCompose1 = eqCompose(dictEq1);
    return function(dictEq11) {
        var eqCompose2 = eqCompose1(dictEq11);
        return {
            eq1: function(dictEq) {
                return _indexJs4.eq(eqCompose2(dictEq));
            }
        };
    };
};
var ord1Compose = function(dictOrd1) {
    var ordCompose1 = ordCompose(dictOrd1);
    var eq1Compose1 = eq1Compose(dictOrd1.Eq10());
    return function(dictOrd11) {
        var ordCompose2 = ordCompose1(dictOrd11);
        var eq1Compose2 = eq1Compose1(dictOrd11.Eq10());
        return {
            compare1: function(dictOrd) {
                return _indexJs7.compare(ordCompose2(dictOrd));
            },
            Eq10: function() {
                return eq1Compose2;
            }
        };
    };
};
var bihoistCompose = function(dictFunctor) {
    var map = _indexJs5.map(dictFunctor);
    return function(natF) {
        return function(natG) {
            return function(v) {
                return natF(map(natG)(v));
            };
        };
    };
};
var applyCompose = function(dictApply) {
    var apply = _indexJs2.apply(dictApply);
    var Functor0 = dictApply.Functor0();
    var map = _indexJs5.map(Functor0);
    var functorCompose1 = functorCompose(Functor0);
    return function(dictApply1) {
        var apply1 = _indexJs2.apply(dictApply1);
        var functorCompose2 = functorCompose1(dictApply1.Functor0());
        return {
            apply: function(v) {
                return function(v1) {
                    return apply(map(apply1)(v))(v1);
                };
            },
            Functor0: function() {
                return functorCompose2;
            }
        };
    };
};
var applicativeCompose = function(dictApplicative) {
    var pure = _indexJs1.pure(dictApplicative);
    var applyCompose1 = applyCompose(dictApplicative.Apply0());
    return function(dictApplicative1) {
        var applyCompose2 = applyCompose1(dictApplicative1.Apply0());
        return {
            pure: function() {
                var $112 = _indexJs1.pure(dictApplicative1);
                return function($113) {
                    return Compose(pure($112($113)));
                };
            }(),
            Apply0: function() {
                return applyCompose2;
            }
        };
    };
};
var altCompose = function(dictAlt) {
    var alt = _indexJs.alt(dictAlt);
    var functorCompose1 = functorCompose(dictAlt.Functor0());
    return function(dictFunctor) {
        var functorCompose2 = functorCompose1(dictFunctor);
        return {
            alt: function(v) {
                return function(v1) {
                    return alt(v)(v1);
                };
            },
            Functor0: function() {
                return functorCompose2;
            }
        };
    };
};
var plusCompose = function(dictPlus) {
    var empty = _indexJs3.empty(dictPlus);
    var altCompose1 = altCompose(dictPlus.Alt0());
    return function(dictFunctor) {
        var altCompose2 = altCompose1(dictFunctor);
        return {
            empty: empty,
            Alt0: function() {
                return altCompose2;
            }
        };
    };
};
var alternativeCompose = function(dictAlternative) {
    var applicativeCompose1 = applicativeCompose(dictAlternative.Applicative0());
    var plusCompose1 = plusCompose(dictAlternative.Plus1());
    return function(dictApplicative) {
        var applicativeCompose2 = applicativeCompose1(dictApplicative);
        var plusCompose2 = plusCompose1(dictApplicative.Apply0().Functor0());
        return {
            Applicative0: function() {
                return applicativeCompose2;
            },
            Plus1: function() {
                return plusCompose2;
            }
        };
    };
};

},{"../Control.Alt/index.js":"dcz8C","../Control.Applicative/index.js":"5JL6d","../Control.Apply/index.js":"ggN4S","../Control.Plus/index.js":"a6ULa","../Data.Eq/index.js":"j3zMn","../Data.Functor/index.js":"j9NCu","../Data.Functor.App/index.js":"jS0Ca","../Data.Ord/index.js":"luB7W","../Data.Show/index.js":"lQCRi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9bIvs":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Product", ()=>Product);
parcelHelpers.export(exports, "product", ()=>product);
parcelHelpers.export(exports, "bihoistProduct", ()=>bihoistProduct);
parcelHelpers.export(exports, "newtypeProduct", ()=>newtypeProduct);
parcelHelpers.export(exports, "eqProduct", ()=>eqProduct);
parcelHelpers.export(exports, "eq1Product", ()=>eq1Product);
parcelHelpers.export(exports, "ordProduct", ()=>ordProduct);
parcelHelpers.export(exports, "ord1Product", ()=>ord1Product);
parcelHelpers.export(exports, "showProduct", ()=>showProduct);
parcelHelpers.export(exports, "functorProduct", ()=>functorProduct);
parcelHelpers.export(exports, "applyProduct", ()=>applyProduct);
parcelHelpers.export(exports, "applicativeProduct", ()=>applicativeProduct);
parcelHelpers.export(exports, "bindProduct", ()=>bindProduct);
parcelHelpers.export(exports, "monadProduct", ()=>monadProduct);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Bind/index.js");
var _indexJs3 = require("../Data.Bifunctor/index.js");
var _indexJs4 = require("../Data.Eq/index.js");
var _indexJs5 = require("../Data.Functor/index.js");
var _indexJs6 = require("../Data.Newtype/index.js");
var _indexJs7 = require("../Data.Ord/index.js");
var _indexJs8 = require("../Data.Ordering/index.js");
var _indexJs9 = require("../Data.Show/index.js");
var _indexJs10 = require("../Data.Tuple/index.js");
var bimap = /* #__PURE__ */ _indexJs3.bimap(_indexJs3.bifunctorTuple);
var unwrap = /* #__PURE__ */ _indexJs6.unwrap();
var Product = function(x) {
    return x;
};
var showProduct = function(dictShow) {
    var show = _indexJs9.show(dictShow);
    return function(dictShow1) {
        var show1 = _indexJs9.show(dictShow1);
        return {
            show: function(v) {
                return "(product " + (show(v.value0) + (" " + (show1(v.value1) + ")")));
            }
        };
    };
};
var product = function(fa) {
    return function(ga) {
        return new _indexJs10.Tuple(fa, ga);
    };
};
var newtypeProduct = {
    Coercible0: function() {
        return undefined;
    }
};
var functorProduct = function(dictFunctor) {
    var map = _indexJs5.map(dictFunctor);
    return function(dictFunctor1) {
        var map1 = _indexJs5.map(dictFunctor1);
        return {
            map: function(f) {
                return function(v) {
                    return bimap(map(f))(map1(f))(v);
                };
            }
        };
    };
};
var eq1Product = function(dictEq1) {
    var eq1 = _indexJs4.eq1(dictEq1);
    return function(dictEq11) {
        var eq11 = _indexJs4.eq1(dictEq11);
        return {
            eq1: function(dictEq) {
                var eq12 = eq1(dictEq);
                var eq13 = eq11(dictEq);
                return function(v) {
                    return function(v1) {
                        return eq12(v.value0)(v1.value0) && eq13(v.value1)(v1.value1);
                    };
                };
            }
        };
    };
};
var eqProduct = function(dictEq1) {
    var eq1Product1 = eq1Product(dictEq1);
    return function(dictEq11) {
        var eq1 = _indexJs4.eq1(eq1Product1(dictEq11));
        return function(dictEq) {
            return {
                eq: eq1(dictEq)
            };
        };
    };
};
var ord1Product = function(dictOrd1) {
    var compare1 = _indexJs7.compare1(dictOrd1);
    var eq1Product1 = eq1Product(dictOrd1.Eq10());
    return function(dictOrd11) {
        var compare11 = _indexJs7.compare1(dictOrd11);
        var eq1Product2 = eq1Product1(dictOrd11.Eq10());
        return {
            compare1: function(dictOrd) {
                var compare12 = compare1(dictOrd);
                var compare13 = compare11(dictOrd);
                return function(v) {
                    return function(v1) {
                        var v2 = compare12(v.value0)(v1.value0);
                        if (v2 instanceof _indexJs8.EQ) return compare13(v.value1)(v1.value1);
                        return v2;
                    };
                };
            },
            Eq10: function() {
                return eq1Product2;
            }
        };
    };
};
var ordProduct = function(dictOrd1) {
    var ord1Product1 = ord1Product(dictOrd1);
    var eqProduct1 = eqProduct(dictOrd1.Eq10());
    return function(dictOrd11) {
        var compare1 = _indexJs7.compare1(ord1Product1(dictOrd11));
        var eqProduct2 = eqProduct1(dictOrd11.Eq10());
        return function(dictOrd) {
            var eqProduct3 = eqProduct2(dictOrd.Eq0());
            return {
                compare: compare1(dictOrd),
                Eq0: function() {
                    return eqProduct3;
                }
            };
        };
    };
};
var bihoistProduct = function(natF) {
    return function(natG) {
        return function(v) {
            return bimap(natF)(natG)(v);
        };
    };
};
var applyProduct = function(dictApply) {
    var apply = _indexJs1.apply(dictApply);
    var functorProduct1 = functorProduct(dictApply.Functor0());
    return function(dictApply1) {
        var apply1 = _indexJs1.apply(dictApply1);
        var functorProduct2 = functorProduct1(dictApply1.Functor0());
        return {
            apply: function(v) {
                return function(v1) {
                    return product(apply(v.value0)(v1.value0))(apply1(v.value1)(v1.value1));
                };
            },
            Functor0: function() {
                return functorProduct2;
            }
        };
    };
};
var bindProduct = function(dictBind) {
    var bind = _indexJs2.bind(dictBind);
    var applyProduct1 = applyProduct(dictBind.Apply0());
    return function(dictBind1) {
        var bind1 = _indexJs2.bind(dictBind1);
        var applyProduct2 = applyProduct1(dictBind1.Apply0());
        return {
            bind: function(v) {
                return function(f) {
                    return product(bind(v.value0)(function($128) {
                        return _indexJs10.fst(unwrap(f($128)));
                    }))(bind1(v.value1)(function($129) {
                        return _indexJs10.snd(unwrap(f($129)));
                    }));
                };
            },
            Apply0: function() {
                return applyProduct2;
            }
        };
    };
};
var applicativeProduct = function(dictApplicative) {
    var pure = _indexJs.pure(dictApplicative);
    var applyProduct1 = applyProduct(dictApplicative.Apply0());
    return function(dictApplicative1) {
        var pure1 = _indexJs.pure(dictApplicative1);
        var applyProduct2 = applyProduct1(dictApplicative1.Apply0());
        return {
            pure: function(a) {
                return product(pure(a))(pure1(a));
            },
            Apply0: function() {
                return applyProduct2;
            }
        };
    };
};
var monadProduct = function(dictMonad) {
    var applicativeProduct1 = applicativeProduct(dictMonad.Applicative0());
    var bindProduct1 = bindProduct(dictMonad.Bind1());
    return function(dictMonad1) {
        var applicativeProduct2 = applicativeProduct1(dictMonad1.Applicative0());
        var bindProduct2 = bindProduct1(dictMonad1.Bind1());
        return {
            Applicative0: function() {
                return applicativeProduct2;
            },
            Bind1: function() {
                return bindProduct2;
            }
        };
    };
};

},{"../Control.Applicative/index.js":"5JL6d","../Control.Apply/index.js":"ggN4S","../Control.Bind/index.js":"3yoUR","../Data.Bifunctor/index.js":"aFQNr","../Data.Eq/index.js":"j3zMn","../Data.Functor/index.js":"j9NCu","../Data.Newtype/index.js":"8rbSe","../Data.Ord/index.js":"luB7W","../Data.Ordering/index.js":"2NvYx","../Data.Show/index.js":"lQCRi","../Data.Tuple/index.js":"beFyY","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"58mWv":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Identity", ()=>Identity);
parcelHelpers.export(exports, "newtypeIdentity", ()=>newtypeIdentity);
parcelHelpers.export(exports, "eqIdentity", ()=>eqIdentity);
parcelHelpers.export(exports, "ordIdentity", ()=>ordIdentity);
parcelHelpers.export(exports, "boundedIdentity", ()=>boundedIdentity);
parcelHelpers.export(exports, "heytingAlgebraIdentity", ()=>heytingAlgebraIdentity);
parcelHelpers.export(exports, "booleanAlgebraIdentity", ()=>booleanAlgebraIdentity);
parcelHelpers.export(exports, "semigroupIdentity", ()=>semigroupIdentity);
parcelHelpers.export(exports, "monoidIdentity", ()=>monoidIdentity);
parcelHelpers.export(exports, "semiringIdentity", ()=>semiringIdentity);
parcelHelpers.export(exports, "euclideanRingIdentity", ()=>euclideanRingIdentity);
parcelHelpers.export(exports, "ringIdentity", ()=>ringIdentity);
parcelHelpers.export(exports, "commutativeRingIdentity", ()=>commutativeRingIdentity);
parcelHelpers.export(exports, "lazyIdentity", ()=>lazyIdentity);
parcelHelpers.export(exports, "showIdentity", ()=>showIdentity);
parcelHelpers.export(exports, "eq1Identity", ()=>eq1Identity);
parcelHelpers.export(exports, "ord1Identity", ()=>ord1Identity);
parcelHelpers.export(exports, "functorIdentity", ()=>functorIdentity);
parcelHelpers.export(exports, "invariantIdentity", ()=>invariantIdentity);
parcelHelpers.export(exports, "altIdentity", ()=>altIdentity);
parcelHelpers.export(exports, "applyIdentity", ()=>applyIdentity);
parcelHelpers.export(exports, "applicativeIdentity", ()=>applicativeIdentity);
parcelHelpers.export(exports, "bindIdentity", ()=>bindIdentity);
parcelHelpers.export(exports, "monadIdentity", ()=>monadIdentity);
parcelHelpers.export(exports, "extendIdentity", ()=>extendIdentity);
parcelHelpers.export(exports, "comonadIdentity", ()=>comonadIdentity);
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Functor.Invariant/index.js");
var _indexJs2 = require("../Data.Ord/index.js");
var _indexJs3 = require("../Data.Show/index.js");
var Identity = function(x) {
    return x;
};
var showIdentity = function(dictShow) {
    var show = _indexJs3.show(dictShow);
    return {
        show: function(v) {
            return "(Identity " + (show(v) + ")");
        }
    };
};
var semiringIdentity = function(dictSemiring) {
    return dictSemiring;
};
var semigroupIdentity = function(dictSemigroup) {
    return dictSemigroup;
};
var ringIdentity = function(dictRing) {
    return dictRing;
};
var ordIdentity = function(dictOrd) {
    return dictOrd;
};
var newtypeIdentity = {
    Coercible0: function() {
        return undefined;
    }
};
var monoidIdentity = function(dictMonoid) {
    return dictMonoid;
};
var lazyIdentity = function(dictLazy) {
    return dictLazy;
};
var heytingAlgebraIdentity = function(dictHeytingAlgebra) {
    return dictHeytingAlgebra;
};
var functorIdentity = {
    map: function(f) {
        return function(m) {
            return f(m);
        };
    }
};
var invariantIdentity = {
    imap: /* #__PURE__ */ _indexJs1.imapF(functorIdentity)
};
var extendIdentity = {
    extend: function(f) {
        return function(m) {
            return f(m);
        };
    },
    Functor0: function() {
        return functorIdentity;
    }
};
var euclideanRingIdentity = function(dictEuclideanRing) {
    return dictEuclideanRing;
};
var eqIdentity = function(dictEq) {
    return dictEq;
};
var eq1Identity = {
    eq1: function(dictEq) {
        return _indexJs.eq(eqIdentity(dictEq));
    }
};
var ord1Identity = {
    compare1: function(dictOrd) {
        return _indexJs2.compare(ordIdentity(dictOrd));
    },
    Eq10: function() {
        return eq1Identity;
    }
};
var comonadIdentity = {
    extract: function(v) {
        return v;
    },
    Extend0: function() {
        return extendIdentity;
    }
};
var commutativeRingIdentity = function(dictCommutativeRing) {
    return dictCommutativeRing;
};
var boundedIdentity = function(dictBounded) {
    return dictBounded;
};
var booleanAlgebraIdentity = function(dictBooleanAlgebra) {
    return dictBooleanAlgebra;
};
var applyIdentity = {
    apply: function(v) {
        return function(v1) {
            return v(v1);
        };
    },
    Functor0: function() {
        return functorIdentity;
    }
};
var bindIdentity = {
    bind: function(v) {
        return function(f) {
            return f(v);
        };
    },
    Apply0: function() {
        return applyIdentity;
    }
};
var applicativeIdentity = {
    pure: Identity,
    Apply0: function() {
        return applyIdentity;
    }
};
var monadIdentity = {
    Applicative0: function() {
        return applicativeIdentity;
    },
    Bind1: function() {
        return bindIdentity;
    }
};
var altIdentity = {
    alt: function(x) {
        return function(v) {
            return x;
        };
    },
    Functor0: function() {
        return functorIdentity;
    }
};

},{"../Data.Eq/index.js":"j3zMn","../Data.Functor.Invariant/index.js":"h8WwJ","../Data.Ord/index.js":"luB7W","../Data.Show/index.js":"lQCRi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5mQDC":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Last", ()=>Last);
parcelHelpers.export(exports, "newtypeLast", ()=>newtypeLast);
parcelHelpers.export(exports, "eqLast", ()=>eqLast);
parcelHelpers.export(exports, "eq1Last", ()=>eq1Last);
parcelHelpers.export(exports, "ordLast", ()=>ordLast);
parcelHelpers.export(exports, "ord1Last", ()=>ord1Last);
parcelHelpers.export(exports, "boundedLast", ()=>boundedLast);
parcelHelpers.export(exports, "functorLast", ()=>functorLast);
parcelHelpers.export(exports, "invariantLast", ()=>invariantLast);
parcelHelpers.export(exports, "applyLast", ()=>applyLast);
parcelHelpers.export(exports, "applicativeLast", ()=>applicativeLast);
parcelHelpers.export(exports, "bindLast", ()=>bindLast);
parcelHelpers.export(exports, "monadLast", ()=>monadLast);
parcelHelpers.export(exports, "extendLast", ()=>extendLast);
parcelHelpers.export(exports, "showLast", ()=>showLast);
parcelHelpers.export(exports, "semigroupLast", ()=>semigroupLast);
parcelHelpers.export(exports, "monoidLast", ()=>monoidLast);
parcelHelpers.export(exports, "altLast", ()=>altLast);
parcelHelpers.export(exports, "plusLast", ()=>plusLast);
parcelHelpers.export(exports, "alternativeLast", ()=>alternativeLast);
var _indexJs = require("../Data.Maybe/index.js");
var _indexJs1 = require("../Data.Monoid/index.js");
var _indexJs2 = require("../Data.Semigroup/index.js");
var _indexJs3 = require("../Data.Show/index.js");
var Last = function(x) {
    return x;
};
var showLast = function(dictShow) {
    var show = _indexJs3.show(_indexJs.showMaybe(dictShow));
    return {
        show: function(v) {
            return "(Last " + (show(v) + ")");
        }
    };
};
var semigroupLast = {
    append: function(v) {
        return function(v1) {
            if (v1 instanceof _indexJs.Just) return v1;
            if (v1 instanceof _indexJs.Nothing) return v;
            throw new Error("Failed pattern match at Data.Maybe.Last (line 54, column 1 - line 56, column 36): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    }
};
var ordLast = function(dictOrd) {
    return _indexJs.ordMaybe(dictOrd);
};
var ord1Last = _indexJs.ord1Maybe;
var newtypeLast = {
    Coercible0: function() {
        return undefined;
    }
};
var monoidLast = /* #__PURE__ */ function() {
    return {
        mempty: _indexJs.Nothing.value,
        Semigroup0: function() {
            return semigroupLast;
        }
    };
}();
var monadLast = _indexJs.monadMaybe;
var invariantLast = _indexJs.invariantMaybe;
var functorLast = _indexJs.functorMaybe;
var extendLast = _indexJs.extendMaybe;
var eqLast = function(dictEq) {
    return _indexJs.eqMaybe(dictEq);
};
var eq1Last = _indexJs.eq1Maybe;
var boundedLast = function(dictBounded) {
    return _indexJs.boundedMaybe(dictBounded);
};
var bindLast = _indexJs.bindMaybe;
var applyLast = _indexJs.applyMaybe;
var applicativeLast = _indexJs.applicativeMaybe;
var altLast = {
    alt: /* #__PURE__ */ _indexJs2.append(semigroupLast),
    Functor0: function() {
        return functorLast;
    }
};
var plusLast = {
    empty: /* #__PURE__ */ _indexJs1.mempty(monoidLast),
    Alt0: function() {
        return altLast;
    }
};
var alternativeLast = {
    Applicative0: function() {
        return applicativeLast;
    },
    Plus1: function() {
        return plusLast;
    }
};

},{"../Data.Maybe/index.js":"ff6lw","../Data.Monoid/index.js":"6chRZ","../Data.Semigroup/index.js":"evJTv","../Data.Show/index.js":"lQCRi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"l27ha":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Additive", ()=>Additive);
parcelHelpers.export(exports, "eqAdditive", ()=>eqAdditive);
parcelHelpers.export(exports, "eq1Additive", ()=>eq1Additive);
parcelHelpers.export(exports, "ordAdditive", ()=>ordAdditive);
parcelHelpers.export(exports, "ord1Additive", ()=>ord1Additive);
parcelHelpers.export(exports, "boundedAdditive", ()=>boundedAdditive);
parcelHelpers.export(exports, "showAdditive", ()=>showAdditive);
parcelHelpers.export(exports, "functorAdditive", ()=>functorAdditive);
parcelHelpers.export(exports, "applyAdditive", ()=>applyAdditive);
parcelHelpers.export(exports, "applicativeAdditive", ()=>applicativeAdditive);
parcelHelpers.export(exports, "bindAdditive", ()=>bindAdditive);
parcelHelpers.export(exports, "monadAdditive", ()=>monadAdditive);
parcelHelpers.export(exports, "semigroupAdditive", ()=>semigroupAdditive);
parcelHelpers.export(exports, "monoidAdditive", ()=>monoidAdditive);
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Ord/index.js");
var _indexJs2 = require("../Data.Semiring/index.js");
var _indexJs3 = require("../Data.Show/index.js");
var Additive = function(x) {
    return x;
};
var showAdditive = function(dictShow) {
    var show = _indexJs3.show(dictShow);
    return {
        show: function(v) {
            return "(Additive " + (show(v) + ")");
        }
    };
};
var semigroupAdditive = function(dictSemiring) {
    var add = _indexJs2.add(dictSemiring);
    return {
        append: function(v) {
            return function(v1) {
                return add(v)(v1);
            };
        }
    };
};
var ordAdditive = function(dictOrd) {
    return dictOrd;
};
var monoidAdditive = function(dictSemiring) {
    var semigroupAdditive1 = semigroupAdditive(dictSemiring);
    return {
        mempty: _indexJs2.zero(dictSemiring),
        Semigroup0: function() {
            return semigroupAdditive1;
        }
    };
};
var functorAdditive = {
    map: function(f) {
        return function(m) {
            return f(m);
        };
    }
};
var eqAdditive = function(dictEq) {
    return dictEq;
};
var eq1Additive = {
    eq1: function(dictEq) {
        return _indexJs.eq(eqAdditive(dictEq));
    }
};
var ord1Additive = {
    compare1: function(dictOrd) {
        return _indexJs1.compare(ordAdditive(dictOrd));
    },
    Eq10: function() {
        return eq1Additive;
    }
};
var boundedAdditive = function(dictBounded) {
    return dictBounded;
};
var applyAdditive = {
    apply: function(v) {
        return function(v1) {
            return v(v1);
        };
    },
    Functor0: function() {
        return functorAdditive;
    }
};
var bindAdditive = {
    bind: function(v) {
        return function(f) {
            return f(v);
        };
    },
    Apply0: function() {
        return applyAdditive;
    }
};
var applicativeAdditive = {
    pure: Additive,
    Apply0: function() {
        return applyAdditive;
    }
};
var monadAdditive = {
    Applicative0: function() {
        return applicativeAdditive;
    },
    Bind1: function() {
        return bindAdditive;
    }
};

},{"../Data.Eq/index.js":"j3zMn","../Data.Ord/index.js":"luB7W","../Data.Semiring/index.js":"1k57z","../Data.Show/index.js":"lQCRi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3EBL8":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Multiplicative", ()=>Multiplicative);
parcelHelpers.export(exports, "eqMultiplicative", ()=>eqMultiplicative);
parcelHelpers.export(exports, "eq1Multiplicative", ()=>eq1Multiplicative);
parcelHelpers.export(exports, "ordMultiplicative", ()=>ordMultiplicative);
parcelHelpers.export(exports, "ord1Multiplicative", ()=>ord1Multiplicative);
parcelHelpers.export(exports, "boundedMultiplicative", ()=>boundedMultiplicative);
parcelHelpers.export(exports, "showMultiplicative", ()=>showMultiplicative);
parcelHelpers.export(exports, "functorMultiplicative", ()=>functorMultiplicative);
parcelHelpers.export(exports, "applyMultiplicative", ()=>applyMultiplicative);
parcelHelpers.export(exports, "applicativeMultiplicative", ()=>applicativeMultiplicative);
parcelHelpers.export(exports, "bindMultiplicative", ()=>bindMultiplicative);
parcelHelpers.export(exports, "monadMultiplicative", ()=>monadMultiplicative);
parcelHelpers.export(exports, "semigroupMultiplicative", ()=>semigroupMultiplicative);
parcelHelpers.export(exports, "monoidMultiplicative", ()=>monoidMultiplicative);
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Ord/index.js");
var _indexJs2 = require("../Data.Semiring/index.js");
var _indexJs3 = require("../Data.Show/index.js");
var Multiplicative = function(x) {
    return x;
};
var showMultiplicative = function(dictShow) {
    var show = _indexJs3.show(dictShow);
    return {
        show: function(v) {
            return "(Multiplicative " + (show(v) + ")");
        }
    };
};
var semigroupMultiplicative = function(dictSemiring) {
    var mul = _indexJs2.mul(dictSemiring);
    return {
        append: function(v) {
            return function(v1) {
                return mul(v)(v1);
            };
        }
    };
};
var ordMultiplicative = function(dictOrd) {
    return dictOrd;
};
var monoidMultiplicative = function(dictSemiring) {
    var semigroupMultiplicative1 = semigroupMultiplicative(dictSemiring);
    return {
        mempty: _indexJs2.one(dictSemiring),
        Semigroup0: function() {
            return semigroupMultiplicative1;
        }
    };
};
var functorMultiplicative = {
    map: function(f) {
        return function(m) {
            return f(m);
        };
    }
};
var eqMultiplicative = function(dictEq) {
    return dictEq;
};
var eq1Multiplicative = {
    eq1: function(dictEq) {
        return _indexJs.eq(eqMultiplicative(dictEq));
    }
};
var ord1Multiplicative = {
    compare1: function(dictOrd) {
        return _indexJs1.compare(ordMultiplicative(dictOrd));
    },
    Eq10: function() {
        return eq1Multiplicative;
    }
};
var boundedMultiplicative = function(dictBounded) {
    return dictBounded;
};
var applyMultiplicative = {
    apply: function(v) {
        return function(v1) {
            return v(v1);
        };
    },
    Functor0: function() {
        return functorMultiplicative;
    }
};
var bindMultiplicative = {
    bind: function(v) {
        return function(f) {
            return f(v);
        };
    },
    Apply0: function() {
        return applyMultiplicative;
    }
};
var applicativeMultiplicative = {
    pure: Multiplicative,
    Apply0: function() {
        return applyMultiplicative;
    }
};
var monadMultiplicative = {
    Applicative0: function() {
        return applicativeMultiplicative;
    },
    Bind1: function() {
        return bindMultiplicative;
    }
};

},{"../Data.Eq/index.js":"j3zMn","../Data.Ord/index.js":"luB7W","../Data.Semiring/index.js":"1k57z","../Data.Show/index.js":"lQCRi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7M1av":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15

},{}],"iWIPi":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "StateL", ()=>StateL);
parcelHelpers.export(exports, "stateL", ()=>stateL);
parcelHelpers.export(exports, "StateR", ()=>StateR);
parcelHelpers.export(exports, "stateR", ()=>stateR);
parcelHelpers.export(exports, "functorStateL", ()=>functorStateL);
parcelHelpers.export(exports, "applyStateL", ()=>applyStateL);
parcelHelpers.export(exports, "applicativeStateL", ()=>applicativeStateL);
parcelHelpers.export(exports, "functorStateR", ()=>functorStateR);
parcelHelpers.export(exports, "applyStateR", ()=>applyStateR);
parcelHelpers.export(exports, "applicativeStateR", ()=>applicativeStateR);
var StateR = function(x) {
    return x;
};
var StateL = function(x) {
    return x;
};
var stateR = function(v) {
    return v;
};
var stateL = function(v) {
    return v;
};
var functorStateR = {
    map: function(f) {
        return function(k) {
            return function(s) {
                var v = stateR(k)(s);
                return {
                    accum: v.accum,
                    value: f(v.value)
                };
            };
        };
    }
};
var functorStateL = {
    map: function(f) {
        return function(k) {
            return function(s) {
                var v = stateL(k)(s);
                return {
                    accum: v.accum,
                    value: f(v.value)
                };
            };
        };
    }
};
var applyStateR = {
    apply: function(f) {
        return function(x) {
            return function(s) {
                var v = stateR(x)(s);
                var v1 = stateR(f)(v.accum);
                return {
                    accum: v1.accum,
                    value: v1.value(v.value)
                };
            };
        };
    },
    Functor0: function() {
        return functorStateR;
    }
};
var applyStateL = {
    apply: function(f) {
        return function(x) {
            return function(s) {
                var v = stateL(f)(s);
                var v1 = stateL(x)(v.accum);
                return {
                    accum: v1.accum,
                    value: v.value(v1.value)
                };
            };
        };
    },
    Functor0: function() {
        return functorStateL;
    }
};
var applicativeStateR = {
    pure: function(a) {
        return function(s) {
            return {
                accum: s,
                value: a
            };
        };
    },
    Apply0: function() {
        return applyStateR;
    }
};
var applicativeStateL = {
    pure: function(a) {
        return function(s) {
            return {
                accum: s,
                value: a
            };
        };
    },
    Apply0: function() {
        return applyStateL;
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dTxmS":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unfoldr1", ()=>unfoldr1);
parcelHelpers.export(exports, "replicate1", ()=>replicate1);
parcelHelpers.export(exports, "replicate1A", ()=>replicate1A);
parcelHelpers.export(exports, "singleton", ()=>singleton);
parcelHelpers.export(exports, "range", ()=>range);
parcelHelpers.export(exports, "iterateN", ()=>iterateN);
parcelHelpers.export(exports, "unfoldable1Array", ()=>unfoldable1Array);
parcelHelpers.export(exports, "unfoldable1Maybe", ()=>unfoldable1Maybe);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Boolean/index.js");
var _indexJs1 = require("../Data.Maybe/index.js");
var _indexJs2 = require("../Data.Semigroup.Traversable/index.js");
var _indexJs3 = require("../Data.Tuple/index.js");
var fromJust = /* #__PURE__ */ _indexJs1.fromJust();
var unfoldr1 = function(dict) {
    return dict.unfoldr1;
};
var unfoldable1Maybe = {
    unfoldr1: function(f) {
        return function(b) {
            return new _indexJs1.Just(_indexJs3.fst(f(b)));
        };
    }
};
var unfoldable1Array = {
    unfoldr1: /* #__PURE__ */ _foreignJs.unfoldr1ArrayImpl(_indexJs1.isNothing)(fromJust)(_indexJs3.fst)(_indexJs3.snd)
};
var replicate1 = function(dictUnfoldable1) {
    var unfoldr11 = unfoldr1(dictUnfoldable1);
    return function(n) {
        return function(v) {
            var step = function(i) {
                if (i <= 0) return new _indexJs3.Tuple(v, _indexJs1.Nothing.value);
                if (_indexJs.otherwise) return new _indexJs3.Tuple(v, new _indexJs1.Just(i - 1 | 0));
                throw new Error("Failed pattern match at Data.Unfoldable1 (line 68, column 5 - line 68, column 39): " + [
                    i.constructor.name
                ]);
            };
            return unfoldr11(step)(n - 1 | 0);
        };
    };
};
var replicate1A = function(dictApply) {
    return function(dictUnfoldable1) {
        var replicate11 = replicate1(dictUnfoldable1);
        return function(dictTraversable1) {
            var sequence1 = _indexJs2.sequence1(dictTraversable1)(dictApply);
            return function(n) {
                return function(m) {
                    return sequence1(replicate11(n)(m));
                };
            };
        };
    };
};
var singleton = function(dictUnfoldable1) {
    return replicate1(dictUnfoldable1)(1);
};
var range = function(dictUnfoldable1) {
    var unfoldr11 = unfoldr1(dictUnfoldable1);
    return function(start) {
        return function(end) {
            var go = function(delta) {
                return function(i) {
                    var i$prime = i + delta | 0;
                    return new _indexJs3.Tuple(i, function() {
                        var $25 = i === end;
                        if ($25) return _indexJs1.Nothing.value;
                        return new _indexJs1.Just(i$prime);
                    }());
                };
            };
            var delta = function() {
                var $26 = end >= start;
                if ($26) return 1;
                return -1;
            }();
            return unfoldr11(go(delta))(start);
        };
    };
};
var iterateN = function(dictUnfoldable1) {
    var unfoldr11 = unfoldr1(dictUnfoldable1);
    return function(n) {
        return function(f) {
            return function(s) {
                var go = function(v) {
                    return new _indexJs3.Tuple(v.value0, function() {
                        var $28 = v.value1 > 0;
                        if ($28) return new _indexJs1.Just(new _indexJs3.Tuple(f(v.value0), v.value1 - 1 | 0));
                        return _indexJs1.Nothing.value;
                    }());
                };
                return unfoldr11(go)(new _indexJs3.Tuple(s, n - 1 | 0));
            };
        };
    };
};

},{"./foreign.js":"j1Lxh","../Data.Boolean/index.js":"spBQ3","../Data.Maybe/index.js":"ff6lw","../Data.Semigroup.Traversable/index.js":"cBbV2","../Data.Tuple/index.js":"beFyY","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j1Lxh":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unfoldr1ArrayImpl", ()=>unfoldr1ArrayImpl);
const unfoldr1ArrayImpl = function(isNothing) {
    return function(fromJust) {
        return function(fst) {
            return function(snd) {
                return function(f) {
                    return function(b) {
                        var result = [];
                        var value = b;
                        while(true){
                            var tuple = f(value);
                            result.push(fst(tuple));
                            var maybe = snd(tuple);
                            if (isNothing(maybe)) return result;
                            value = fromJust(maybe);
                        }
                    };
                };
            };
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cBbV2":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "sequence1", ()=>sequence1);
parcelHelpers.export(exports, "traverse1", ()=>traverse1);
parcelHelpers.export(exports, "traverse1Default", ()=>traverse1Default);
parcelHelpers.export(exports, "sequence1Default", ()=>sequence1Default);
parcelHelpers.export(exports, "traversableDual", ()=>traversableDual);
parcelHelpers.export(exports, "traversableMultiplicative", ()=>traversableMultiplicative);
parcelHelpers.export(exports, "traversableTuple", ()=>traversableTuple);
parcelHelpers.export(exports, "traversableIdentity", ()=>traversableIdentity);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var _indexJs2 = require("../Data.Identity/index.js");
var _indexJs3 = require("../Data.Monoid.Dual/index.js");
var _indexJs4 = require("../Data.Monoid.Multiplicative/index.js");
var _indexJs5 = require("../Data.Semigroup.Foldable/index.js");
var _indexJs6 = require("../Data.Traversable/index.js");
var _indexJs7 = require("../Data.Tuple/index.js");
var identity = /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn);
var traverse1 = function(dict) {
    return dict.traverse1;
};
var traversableTuple = {
    traverse1: function(dictApply) {
        var map = _indexJs1.map(dictApply.Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs7.Tuple.create(v.value0))(f(v.value1));
            };
        };
    },
    sequence1: function(dictApply) {
        var map = _indexJs1.map(dictApply.Functor0());
        return function(v) {
            return map(_indexJs7.Tuple.create(v.value0))(v.value1);
        };
    },
    Foldable10: function() {
        return _indexJs5.foldableTuple;
    },
    Traversable1: function() {
        return _indexJs6.traversableTuple;
    }
};
var traversableIdentity = {
    traverse1: function(dictApply) {
        var map = _indexJs1.map(dictApply.Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs2.Identity)(f(v));
            };
        };
    },
    sequence1: function(dictApply) {
        var map = _indexJs1.map(dictApply.Functor0());
        return function(v) {
            return map(_indexJs2.Identity)(v);
        };
    },
    Foldable10: function() {
        return _indexJs5.foldableIdentity;
    },
    Traversable1: function() {
        return _indexJs6.traversableIdentity;
    }
};
var sequence1Default = function(dictTraversable1) {
    var traverse11 = traverse1(dictTraversable1);
    return function(dictApply) {
        return traverse11(dictApply)(identity);
    };
};
var traversableDual = {
    traverse1: function(dictApply) {
        var map = _indexJs1.map(dictApply.Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs3.Dual)(f(v));
            };
        };
    },
    sequence1: function(dictApply) {
        return sequence1Default(traversableDual)(dictApply);
    },
    Foldable10: function() {
        return _indexJs5.foldableDual;
    },
    Traversable1: function() {
        return _indexJs6.traversableDual;
    }
};
var traversableMultiplicative = {
    traverse1: function(dictApply) {
        var map = _indexJs1.map(dictApply.Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs4.Multiplicative)(f(v));
            };
        };
    },
    sequence1: function(dictApply) {
        return sequence1Default(traversableMultiplicative)(dictApply);
    },
    Foldable10: function() {
        return _indexJs5.foldableMultiplicative;
    },
    Traversable1: function() {
        return _indexJs6.traversableMultiplicative;
    }
};
var sequence1 = function(dict) {
    return dict.sequence1;
};
var traverse1Default = function(dictTraversable1) {
    var sequence11 = sequence1(dictTraversable1);
    var map = _indexJs1.map(dictTraversable1.Traversable1().Functor0());
    return function(dictApply) {
        var sequence12 = sequence11(dictApply);
        return function(f) {
            return function(ta) {
                return sequence12(map(f)(ta));
            };
        };
    };
};

},{"../Control.Category/index.js":"iWlWa","../Data.Functor/index.js":"j9NCu","../Data.Identity/index.js":"58mWv","../Data.Monoid.Dual/index.js":"elbNG","../Data.Monoid.Multiplicative/index.js":"3EBL8","../Data.Semigroup.Foldable/index.js":"gBw36","../Data.Traversable/index.js":"7FOgx","../Data.Tuple/index.js":"beFyY","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gBw36":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "foldMap1", ()=>foldMap1);
parcelHelpers.export(exports, "fold1", ()=>fold1);
parcelHelpers.export(exports, "foldr1", ()=>foldr1);
parcelHelpers.export(exports, "foldl1", ()=>foldl1);
parcelHelpers.export(exports, "traverse1_", ()=>traverse1_);
parcelHelpers.export(exports, "for1_", ()=>for1_);
parcelHelpers.export(exports, "sequence1_", ()=>sequence1_);
parcelHelpers.export(exports, "foldr1Default", ()=>foldr1Default);
parcelHelpers.export(exports, "foldl1Default", ()=>foldl1Default);
parcelHelpers.export(exports, "foldMap1DefaultR", ()=>foldMap1DefaultR);
parcelHelpers.export(exports, "foldMap1DefaultL", ()=>foldMap1DefaultL);
parcelHelpers.export(exports, "intercalate", ()=>intercalate);
parcelHelpers.export(exports, "intercalateMap", ()=>intercalateMap);
parcelHelpers.export(exports, "maximum", ()=>maximum);
parcelHelpers.export(exports, "maximumBy", ()=>maximumBy);
parcelHelpers.export(exports, "minimum", ()=>minimum);
parcelHelpers.export(exports, "minimumBy", ()=>minimumBy);
parcelHelpers.export(exports, "foldableDual", ()=>foldableDual);
parcelHelpers.export(exports, "foldableMultiplicative", ()=>foldableMultiplicative);
parcelHelpers.export(exports, "foldableTuple", ()=>foldableTuple);
parcelHelpers.export(exports, "foldableIdentity", ()=>foldableIdentity);
var _indexJs = require("../Control.Apply/index.js");
var _indexJs1 = require("../Control.Category/index.js");
var _indexJs2 = require("../Data.Eq/index.js");
var _indexJs3 = require("../Data.Foldable/index.js");
var _indexJs4 = require("../Data.Function/index.js");
var _indexJs5 = require("../Data.Functor/index.js");
var _indexJs6 = require("../Data.Monoid.Dual/index.js");
var _indexJs7 = require("../Data.Newtype/index.js");
var _indexJs8 = require("../Data.Ord.Max/index.js");
var _indexJs9 = require("../Data.Ord.Min/index.js");
var _indexJs10 = require("../Data.Ordering/index.js");
var _indexJs11 = require("../Data.Semigroup/index.js");
var _indexJs12 = require("../Data.Unit/index.js");
var eq = /* #__PURE__ */ _indexJs2.eq(_indexJs10.eqOrdering);
var alaF = /* #__PURE__ */ _indexJs7.alaF()()()();
var identity = /* #__PURE__ */ _indexJs1.identity(_indexJs1.categoryFn);
var ala = /* #__PURE__ */ _indexJs7.ala()()();
var JoinWith = function(x) {
    return x;
};
var FoldRight1 = /* #__PURE__ */ function() {
    function FoldRight1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    FoldRight1.create = function(value0) {
        return function(value1) {
            return new FoldRight1(value0, value1);
        };
    };
    return FoldRight1;
}();
var Act = function(x) {
    return x;
};
var semigroupJoinWith = function(dictSemigroup) {
    var append = _indexJs11.append(dictSemigroup);
    return {
        append: function(v) {
            return function(v1) {
                return function(j) {
                    return append(v(j))(append(j)(v1(j)));
                };
            };
        }
    };
};
var semigroupAct = function(dictApply) {
    var applySecond = _indexJs.applySecond(dictApply);
    return {
        append: function(v) {
            return function(v1) {
                return applySecond(v)(v1);
            };
        }
    };
};
var runFoldRight1 = function(v) {
    return v.value0(v.value1);
};
var mkFoldRight1 = /* #__PURE__ */ function() {
    return FoldRight1.create(_indexJs4["const"]);
}();
var joinee = function(v) {
    return v;
};
var getAct = function(v) {
    return v;
};
var foldr1 = function(dict) {
    return dict.foldr1;
};
var foldl1 = function(dict) {
    return dict.foldl1;
};
var maximumBy = function(dictFoldable1) {
    var foldl11 = foldl1(dictFoldable1);
    return function(cmp) {
        return foldl11(function(x) {
            return function(y) {
                var $120 = eq(cmp(x)(y))(_indexJs10.GT.value);
                if ($120) return x;
                return y;
            };
        });
    };
};
var minimumBy = function(dictFoldable1) {
    var foldl11 = foldl1(dictFoldable1);
    return function(cmp) {
        return foldl11(function(x) {
            return function(y) {
                var $121 = eq(cmp(x)(y))(_indexJs10.LT.value);
                if ($121) return x;
                return y;
            };
        });
    };
};
var foldableTuple = {
    foldMap1: function(dictSemigroup) {
        return function(f) {
            return function(v) {
                return f(v.value1);
            };
        };
    },
    foldr1: function(v) {
        return function(v1) {
            return v1.value1;
        };
    },
    foldl1: function(v) {
        return function(v1) {
            return v1.value1;
        };
    },
    Foldable0: function() {
        return _indexJs3.foldableTuple;
    }
};
var foldableMultiplicative = {
    foldr1: function(v) {
        return function(v1) {
            return v1;
        };
    },
    foldl1: function(v) {
        return function(v1) {
            return v1;
        };
    },
    foldMap1: function(dictSemigroup) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    },
    Foldable0: function() {
        return _indexJs3.foldableMultiplicative;
    }
};
var foldableIdentity = {
    foldMap1: function(dictSemigroup) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    },
    foldl1: function(v) {
        return function(v1) {
            return v1;
        };
    },
    foldr1: function(v) {
        return function(v1) {
            return v1;
        };
    },
    Foldable0: function() {
        return _indexJs3.foldableIdentity;
    }
};
var foldableDual = {
    foldr1: function(v) {
        return function(v1) {
            return v1;
        };
    },
    foldl1: function(v) {
        return function(v1) {
            return v1;
        };
    },
    foldMap1: function(dictSemigroup) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    },
    Foldable0: function() {
        return _indexJs3.foldableDual;
    }
};
var foldRight1Semigroup = {
    append: function(v) {
        return function(v1) {
            return new FoldRight1(function(a) {
                return function(f) {
                    return v.value0(f(v.value1)(v1.value0(a)(f)))(f);
                };
            }, v1.value1);
        };
    }
};
var semigroupDual = /* #__PURE__ */ _indexJs6.semigroupDual(foldRight1Semigroup);
var foldMap1DefaultR = function(dictFoldable1) {
    var foldr11 = foldr1(dictFoldable1);
    return function(dictFunctor) {
        var map = _indexJs5.map(dictFunctor);
        return function(dictSemigroup) {
            var append = _indexJs11.append(dictSemigroup);
            return function(f) {
                var $159 = foldr11(append);
                var $160 = map(f);
                return function($161) {
                    return $159($160($161));
                };
            };
        };
    };
};
var foldMap1DefaultL = function(dictFoldable1) {
    var foldl11 = foldl1(dictFoldable1);
    return function(dictFunctor) {
        var map = _indexJs5.map(dictFunctor);
        return function(dictSemigroup) {
            var append = _indexJs11.append(dictSemigroup);
            return function(f) {
                var $162 = foldl11(append);
                var $163 = map(f);
                return function($164) {
                    return $162($163($164));
                };
            };
        };
    };
};
var foldMap1 = function(dict) {
    return dict.foldMap1;
};
var foldl1Default = function(dictFoldable1) {
    var $165 = _indexJs4.flip(function() {
        var $167 = alaF(_indexJs6.Dual)(foldMap1(dictFoldable1)(semigroupDual))(mkFoldRight1);
        return function($168) {
            return runFoldRight1($167($168));
        };
    }());
    return function($166) {
        return $165(_indexJs4.flip($166));
    };
};
var foldr1Default = function(dictFoldable1) {
    return _indexJs4.flip(function() {
        var $169 = foldMap1(dictFoldable1)(foldRight1Semigroup)(mkFoldRight1);
        return function($170) {
            return runFoldRight1($169($170));
        };
    }());
};
var intercalateMap = function(dictFoldable1) {
    var foldMap11 = foldMap1(dictFoldable1);
    return function(dictSemigroup) {
        var foldMap12 = foldMap11(semigroupJoinWith(dictSemigroup));
        return function(j) {
            return function(f) {
                return function(foldable) {
                    return joinee(foldMap12(function($171) {
                        return JoinWith(_indexJs4["const"](f($171)));
                    })(foldable))(j);
                };
            };
        };
    };
};
var intercalate = function(dictFoldable1) {
    var intercalateMap1 = intercalateMap(dictFoldable1);
    return function(dictSemigroup) {
        return _indexJs4.flip(intercalateMap1(dictSemigroup))(identity);
    };
};
var maximum = function(dictOrd) {
    var semigroupMax = _indexJs8.semigroupMax(dictOrd);
    return function(dictFoldable1) {
        return ala(_indexJs8.Max)(foldMap1(dictFoldable1)(semigroupMax));
    };
};
var minimum = function(dictOrd) {
    var semigroupMin = _indexJs9.semigroupMin(dictOrd);
    return function(dictFoldable1) {
        return ala(_indexJs9.Min)(foldMap1(dictFoldable1)(semigroupMin));
    };
};
var traverse1_ = function(dictFoldable1) {
    var foldMap11 = foldMap1(dictFoldable1);
    return function(dictApply) {
        var voidRight = _indexJs5.voidRight(dictApply.Functor0());
        var foldMap12 = foldMap11(semigroupAct(dictApply));
        return function(f) {
            return function(t) {
                return voidRight(_indexJs12.unit)(getAct(foldMap12(function($172) {
                    return Act(f($172));
                })(t)));
            };
        };
    };
};
var for1_ = function(dictFoldable1) {
    var traverse1_1 = traverse1_(dictFoldable1);
    return function(dictApply) {
        return _indexJs4.flip(traverse1_1(dictApply));
    };
};
var sequence1_ = function(dictFoldable1) {
    var traverse1_1 = traverse1_(dictFoldable1);
    return function(dictApply) {
        return traverse1_1(dictApply)(identity);
    };
};
var fold1 = function(dictFoldable1) {
    var foldMap11 = foldMap1(dictFoldable1);
    return function(dictSemigroup) {
        return foldMap11(dictSemigroup)(identity);
    };
};

},{"../Control.Apply/index.js":"ggN4S","../Control.Category/index.js":"iWlWa","../Data.Eq/index.js":"j3zMn","../Data.Foldable/index.js":"4O9wL","../Data.Function/index.js":"64uwb","../Data.Functor/index.js":"j9NCu","../Data.Monoid.Dual/index.js":"elbNG","../Data.Newtype/index.js":"8rbSe","../Data.Ord.Max/index.js":"gwXeP","../Data.Ord.Min/index.js":"cXJ8N","../Data.Ordering/index.js":"2NvYx","../Data.Semigroup/index.js":"evJTv","../Data.Unit/index.js":"fuCRN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gwXeP":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Max", ()=>Max);
parcelHelpers.export(exports, "newtypeMax", ()=>newtypeMax);
parcelHelpers.export(exports, "eqMax", ()=>eqMax);
parcelHelpers.export(exports, "ordMax", ()=>ordMax);
parcelHelpers.export(exports, "semigroupMax", ()=>semigroupMax);
parcelHelpers.export(exports, "monoidMax", ()=>monoidMax);
parcelHelpers.export(exports, "showMax", ()=>showMax);
var _indexJs = require("../Data.Bounded/index.js");
var _indexJs1 = require("../Data.Ord/index.js");
var _indexJs2 = require("../Data.Show/index.js");
var Max = function(x) {
    return x;
};
var showMax = function(dictShow) {
    var show = _indexJs2.show(dictShow);
    return {
        show: function(v) {
            return "(Max " + (show(v) + ")");
        }
    };
};
var semigroupMax = function(dictOrd) {
    var max = _indexJs1.max(dictOrd);
    return {
        append: function(v) {
            return function(v1) {
                return max(v)(v1);
            };
        }
    };
};
var newtypeMax = {
    Coercible0: function() {
        return undefined;
    }
};
var monoidMax = function(dictBounded) {
    var semigroupMax1 = semigroupMax(dictBounded.Ord0());
    return {
        mempty: _indexJs.bottom(dictBounded),
        Semigroup0: function() {
            return semigroupMax1;
        }
    };
};
var eqMax = function(dictEq) {
    return dictEq;
};
var ordMax = function(dictOrd) {
    var compare = _indexJs1.compare(dictOrd);
    var eqMax1 = eqMax(dictOrd.Eq0());
    return {
        compare: function(v) {
            return function(v1) {
                return compare(v)(v1);
            };
        },
        Eq0: function() {
            return eqMax1;
        }
    };
};

},{"../Data.Bounded/index.js":"j0YdY","../Data.Ord/index.js":"luB7W","../Data.Show/index.js":"lQCRi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cXJ8N":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Min", ()=>Min);
parcelHelpers.export(exports, "newtypeMin", ()=>newtypeMin);
parcelHelpers.export(exports, "eqMin", ()=>eqMin);
parcelHelpers.export(exports, "ordMin", ()=>ordMin);
parcelHelpers.export(exports, "semigroupMin", ()=>semigroupMin);
parcelHelpers.export(exports, "monoidMin", ()=>monoidMin);
parcelHelpers.export(exports, "showMin", ()=>showMin);
var _indexJs = require("../Data.Bounded/index.js");
var _indexJs1 = require("../Data.Ord/index.js");
var _indexJs2 = require("../Data.Show/index.js");
var Min = function(x) {
    return x;
};
var showMin = function(dictShow) {
    var show = _indexJs2.show(dictShow);
    return {
        show: function(v) {
            return "(Min " + (show(v) + ")");
        }
    };
};
var semigroupMin = function(dictOrd) {
    var min = _indexJs1.min(dictOrd);
    return {
        append: function(v) {
            return function(v1) {
                return min(v)(v1);
            };
        }
    };
};
var newtypeMin = {
    Coercible0: function() {
        return undefined;
    }
};
var monoidMin = function(dictBounded) {
    var semigroupMin1 = semigroupMin(dictBounded.Ord0());
    return {
        mempty: _indexJs.top(dictBounded),
        Semigroup0: function() {
            return semigroupMin1;
        }
    };
};
var eqMin = function(dictEq) {
    return dictEq;
};
var ordMin = function(dictOrd) {
    var compare = _indexJs1.compare(dictOrd);
    var eqMin1 = eqMin(dictOrd.Eq0());
    return {
        compare: function(v) {
            return function(v1) {
                return compare(v)(v1);
            };
        },
        Eq0: function() {
            return eqMin1;
        }
    };
};

},{"../Data.Bounded/index.js":"j0YdY","../Data.Ord/index.js":"luB7W","../Data.Show/index.js":"lQCRi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gH9dz":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Unspecified", ()=>Unspecified);
parcelHelpers.export(exports, "Maybe", ()=>Maybe);
parcelHelpers.export(exports, "Probably", ()=>Probably);
parcelHelpers.export(exports, "parse", ()=>parse);
parcelHelpers.export(exports, "print", ()=>print);
parcelHelpers.export(exports, "eqCanPlayType", ()=>eqCanPlayType);
parcelHelpers.export(exports, "ordCanPlayType", ()=>ordCanPlayType);
parcelHelpers.export(exports, "showCanPlayType", ()=>showCanPlayType);
var _indexJs = require("../Data.Maybe/index.js");
var _indexJs1 = require("../Data.Ordering/index.js");
var Unspecified = /* #__PURE__ */ function() {
    function Unspecified() {}
    Unspecified.value = new Unspecified();
    return Unspecified;
}();
var Maybe = /* #__PURE__ */ function() {
    function Maybe() {}
    Maybe.value = new Maybe();
    return Maybe;
}();
var Probably = /* #__PURE__ */ function() {
    function Probably() {}
    Probably.value = new Probably();
    return Probably;
}();
var showCanPlayType = {
    show: function(v) {
        if (v instanceof Unspecified) return "Unspecified";
        if (v instanceof Maybe) return "Maybe";
        if (v instanceof Probably) return "Probably";
        throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 16, column 10 - line 19, column 27): " + [
            v.constructor.name
        ]);
    }
};
var print = function(v) {
    if (v instanceof Unspecified) return "";
    if (v instanceof Maybe) return "maybe";
    if (v instanceof Probably) return "probably";
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 29, column 9 - line 32, column 25): " + [
        v.constructor.name
    ]);
};
var parse = function(v) {
    if (v === "") return new _indexJs.Just(Unspecified.value);
    if (v === "maybe") return new _indexJs.Just(Maybe.value);
    if (v === "probably") return new _indexJs.Just(Probably.value);
    return _indexJs.Nothing.value;
};
var eqCanPlayType = {
    eq: function(x) {
        return function(y) {
            if (x instanceof Unspecified && y instanceof Unspecified) return true;
            if (x instanceof Maybe && y instanceof Maybe) return true;
            if (x instanceof Probably && y instanceof Probably) return true;
            return false;
        };
    }
};
var ordCanPlayType = {
    compare: function(x) {
        return function(y) {
            if (x instanceof Unspecified && y instanceof Unspecified) return _indexJs1.EQ.value;
            if (x instanceof Unspecified) return _indexJs1.LT.value;
            if (y instanceof Unspecified) return _indexJs1.GT.value;
            if (x instanceof Maybe && y instanceof Maybe) return _indexJs1.EQ.value;
            if (x instanceof Maybe) return _indexJs1.LT.value;
            if (y instanceof Maybe) return _indexJs1.GT.value;
            if (x instanceof Probably && y instanceof Probably) return _indexJs1.EQ.value;
            throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 0, column 0 - line 0, column 0): " + [
                x.constructor.name,
                y.constructor.name
            ]);
        };
    },
    Eq0: function() {
        return eqCanPlayType;
    }
};

},{"../Data.Maybe/index.js":"ff6lw","../Data.Ordering/index.js":"2NvYx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dVnLq":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Empty", ()=>Empty);
parcelHelpers.export(exports, "Idle", ()=>Idle);
parcelHelpers.export(exports, "Loading", ()=>Loading);
parcelHelpers.export(exports, "NoSource", ()=>NoSource);
parcelHelpers.export(exports, "eqNetworkState", ()=>eqNetworkState);
parcelHelpers.export(exports, "ordNetworkState", ()=>ordNetworkState);
parcelHelpers.export(exports, "boundedNetworkState", ()=>boundedNetworkState);
parcelHelpers.export(exports, "enumNetworkState", ()=>enumNetworkState);
parcelHelpers.export(exports, "boundedEnumNetworkState", ()=>boundedEnumNetworkState);
parcelHelpers.export(exports, "showNetworkState", ()=>showNetworkState);
var _indexJs = require("../Data.Enum/index.js");
var _indexJs1 = require("../Data.Maybe/index.js");
var _indexJs2 = require("../Data.Ordering/index.js");
var Empty = /* #__PURE__ */ function() {
    function Empty() {}
    Empty.value = new Empty();
    return Empty;
}();
var Idle = /* #__PURE__ */ function() {
    function Idle() {}
    Idle.value = new Idle();
    return Idle;
}();
var Loading = /* #__PURE__ */ function() {
    function Loading() {}
    Loading.value = new Loading();
    return Loading;
}();
var NoSource = /* #__PURE__ */ function() {
    function NoSource() {}
    NoSource.value = new NoSource();
    return NoSource;
}();
var toEnumNetworkState = function(v) {
    if (v === 0) return new _indexJs1.Just(Empty.value);
    if (v === 1) return new _indexJs1.Just(Idle.value);
    if (v === 2) return new _indexJs1.Just(Loading.value);
    if (v === 3) return new _indexJs1.Just(NoSource.value);
    return _indexJs1.Nothing.value;
};
var showNetworkState = {
    show: function(v) {
        if (v instanceof Empty) return "Empty";
        if (v instanceof Idle) return "Idle";
        if (v instanceof Loading) return "Loading";
        if (v instanceof NoSource) return "NoSource";
        throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 30, column 1 - line 34, column 29): " + [
            v.constructor.name
        ]);
    }
};
var fromEnumNetworkState = function(v) {
    if (v instanceof Empty) return 0;
    if (v instanceof Idle) return 1;
    if (v instanceof Loading) return 2;
    if (v instanceof NoSource) return 3;
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 47, column 3 - line 51, column 18): " + [
        v.constructor.name
    ]);
};
var eqNetworkState = {
    eq: function(x) {
        return function(y) {
            if (x instanceof Empty && y instanceof Empty) return true;
            if (x instanceof Idle && y instanceof Idle) return true;
            if (x instanceof Loading && y instanceof Loading) return true;
            if (x instanceof NoSource && y instanceof NoSource) return true;
            return false;
        };
    }
};
var ordNetworkState = {
    compare: function(x) {
        return function(y) {
            if (x instanceof Empty && y instanceof Empty) return _indexJs2.EQ.value;
            if (x instanceof Empty) return _indexJs2.LT.value;
            if (y instanceof Empty) return _indexJs2.GT.value;
            if (x instanceof Idle && y instanceof Idle) return _indexJs2.EQ.value;
            if (x instanceof Idle) return _indexJs2.LT.value;
            if (y instanceof Idle) return _indexJs2.GT.value;
            if (x instanceof Loading && y instanceof Loading) return _indexJs2.EQ.value;
            if (x instanceof Loading) return _indexJs2.LT.value;
            if (y instanceof Loading) return _indexJs2.GT.value;
            if (x instanceof NoSource && y instanceof NoSource) return _indexJs2.EQ.value;
            throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 0, column 0 - line 0, column 0): " + [
                x.constructor.name,
                y.constructor.name
            ]);
        };
    },
    Eq0: function() {
        return eqNetworkState;
    }
};
var enumNetworkState = {
    succ: /* #__PURE__ */ _indexJs.defaultSucc(toEnumNetworkState)(fromEnumNetworkState),
    pred: /* #__PURE__ */ _indexJs.defaultPred(toEnumNetworkState)(fromEnumNetworkState),
    Ord0: function() {
        return ordNetworkState;
    }
};
var boundedNetworkState = /* #__PURE__ */ function() {
    return {
        bottom: Empty.value,
        top: NoSource.value,
        Ord0: function() {
            return ordNetworkState;
        }
    };
}();
var boundedEnumNetworkState = {
    cardinality: 4,
    toEnum: toEnumNetworkState,
    fromEnum: fromEnumNetworkState,
    Bounded0: function() {
        return boundedNetworkState;
    },
    Enum1: function() {
        return enumNetworkState;
    }
};

},{"../Data.Enum/index.js":"8sa8v","../Data.Maybe/index.js":"ff6lw","../Data.Ordering/index.js":"2NvYx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"etmAf":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HaveNothing", ()=>HaveNothing);
parcelHelpers.export(exports, "HaveMetadata", ()=>HaveMetadata);
parcelHelpers.export(exports, "HaveCurrentData", ()=>HaveCurrentData);
parcelHelpers.export(exports, "HaveFutureData", ()=>HaveFutureData);
parcelHelpers.export(exports, "HaveEnoughData", ()=>HaveEnoughData);
parcelHelpers.export(exports, "eqReadyState", ()=>eqReadyState);
parcelHelpers.export(exports, "ordReadyState", ()=>ordReadyState);
parcelHelpers.export(exports, "boundedReadyState", ()=>boundedReadyState);
parcelHelpers.export(exports, "enumReadyState", ()=>enumReadyState);
parcelHelpers.export(exports, "boundedEnumReadyState", ()=>boundedEnumReadyState);
parcelHelpers.export(exports, "showReadyState", ()=>showReadyState);
var _indexJs = require("../Data.Enum/index.js");
var _indexJs1 = require("../Data.Maybe/index.js");
var _indexJs2 = require("../Data.Ordering/index.js");
var HaveNothing = /* #__PURE__ */ function() {
    function HaveNothing() {}
    HaveNothing.value = new HaveNothing();
    return HaveNothing;
}();
var HaveMetadata = /* #__PURE__ */ function() {
    function HaveMetadata() {}
    HaveMetadata.value = new HaveMetadata();
    return HaveMetadata;
}();
var HaveCurrentData = /* #__PURE__ */ function() {
    function HaveCurrentData() {}
    HaveCurrentData.value = new HaveCurrentData();
    return HaveCurrentData;
}();
var HaveFutureData = /* #__PURE__ */ function() {
    function HaveFutureData() {}
    HaveFutureData.value = new HaveFutureData();
    return HaveFutureData;
}();
var HaveEnoughData = /* #__PURE__ */ function() {
    function HaveEnoughData() {}
    HaveEnoughData.value = new HaveEnoughData();
    return HaveEnoughData;
}();
var toEnumReadyState = function(v) {
    if (v === 0) return new _indexJs1.Just(HaveNothing.value);
    if (v === 1) return new _indexJs1.Just(HaveMetadata.value);
    if (v === 2) return new _indexJs1.Just(HaveCurrentData.value);
    if (v === 3) return new _indexJs1.Just(HaveFutureData.value);
    if (v === 4) return new _indexJs1.Just(HaveEnoughData.value);
    return _indexJs1.Nothing.value;
};
var showReadyState = {
    show: function(v) {
        if (v instanceof HaveNothing) return "HaveNothing";
        if (v instanceof HaveMetadata) return "HaveMetadata";
        if (v instanceof HaveCurrentData) return "HaveCurrentData";
        if (v instanceof HaveFutureData) return "HaveFutureData";
        if (v instanceof HaveEnoughData) return "HaveEnoughData";
        throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 31, column 1 - line 36, column 41): " + [
            v.constructor.name
        ]);
    }
};
var fromEnumReadyState = function(v) {
    if (v instanceof HaveNothing) return 0;
    if (v instanceof HaveMetadata) return 1;
    if (v instanceof HaveCurrentData) return 2;
    if (v instanceof HaveFutureData) return 3;
    if (v instanceof HaveEnoughData) return 4;
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 50, column 3 - line 55, column 24): " + [
        v.constructor.name
    ]);
};
var eqReadyState = {
    eq: function(x) {
        return function(y) {
            if (x instanceof HaveNothing && y instanceof HaveNothing) return true;
            if (x instanceof HaveMetadata && y instanceof HaveMetadata) return true;
            if (x instanceof HaveCurrentData && y instanceof HaveCurrentData) return true;
            if (x instanceof HaveFutureData && y instanceof HaveFutureData) return true;
            if (x instanceof HaveEnoughData && y instanceof HaveEnoughData) return true;
            return false;
        };
    }
};
var ordReadyState = {
    compare: function(x) {
        return function(y) {
            if (x instanceof HaveNothing && y instanceof HaveNothing) return _indexJs2.EQ.value;
            if (x instanceof HaveNothing) return _indexJs2.LT.value;
            if (y instanceof HaveNothing) return _indexJs2.GT.value;
            if (x instanceof HaveMetadata && y instanceof HaveMetadata) return _indexJs2.EQ.value;
            if (x instanceof HaveMetadata) return _indexJs2.LT.value;
            if (y instanceof HaveMetadata) return _indexJs2.GT.value;
            if (x instanceof HaveCurrentData && y instanceof HaveCurrentData) return _indexJs2.EQ.value;
            if (x instanceof HaveCurrentData) return _indexJs2.LT.value;
            if (y instanceof HaveCurrentData) return _indexJs2.GT.value;
            if (x instanceof HaveFutureData && y instanceof HaveFutureData) return _indexJs2.EQ.value;
            if (x instanceof HaveFutureData) return _indexJs2.LT.value;
            if (y instanceof HaveFutureData) return _indexJs2.GT.value;
            if (x instanceof HaveEnoughData && y instanceof HaveEnoughData) return _indexJs2.EQ.value;
            throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 0, column 0 - line 0, column 0): " + [
                x.constructor.name,
                y.constructor.name
            ]);
        };
    },
    Eq0: function() {
        return eqReadyState;
    }
};
var enumReadyState = {
    succ: /* #__PURE__ */ _indexJs.defaultSucc(toEnumReadyState)(fromEnumReadyState),
    pred: /* #__PURE__ */ _indexJs.defaultPred(toEnumReadyState)(fromEnumReadyState),
    Ord0: function() {
        return ordReadyState;
    }
};
var boundedReadyState = /* #__PURE__ */ function() {
    return {
        bottom: HaveNothing.value,
        top: HaveEnoughData.value,
        Ord0: function() {
            return ordReadyState;
        }
    };
}();
var boundedEnumReadyState = {
    cardinality: 5,
    toEnum: toEnumReadyState,
    fromEnum: fromEnumReadyState,
    Bounded0: function() {
        return boundedReadyState;
    },
    Enum1: function() {
        return enumReadyState;
    }
};

},{"../Data.Enum/index.js":"8sa8v","../Data.Maybe/index.js":"ff6lw","../Data.Ordering/index.js":"2NvYx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2F0uX":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "name", ()=>(0, _foreignJs.name));
parcelHelpers.export(exports, "setName", ()=>(0, _foreignJs.setName));
parcelHelpers.export(exports, "httpEquiv", ()=>(0, _foreignJs.httpEquiv));
parcelHelpers.export(exports, "setHttpEquiv", ()=>(0, _foreignJs.setHttpEquiv));
parcelHelpers.export(exports, "content", ()=>(0, _foreignJs.content));
parcelHelpers.export(exports, "setContent", ()=>(0, _foreignJs.setContent));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMetaElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMetaElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMetaElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMetaElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMetaElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMetaElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMetaElement");

},{"./foreign.js":"499DD","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"499DD":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "name", ()=>name);
parcelHelpers.export(exports, "setName", ()=>setName);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "httpEquiv", ()=>httpEquiv);
parcelHelpers.export(exports, "setHttpEquiv", ()=>setHttpEquiv);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "content", ()=>content);
parcelHelpers.export(exports, "setContent", ()=>setContent);
function name(meta) {
    return function() {
        return meta.name;
    };
}
function setName(name) {
    return function(meta) {
        return function() {
            meta.name = name;
        };
    };
}
function httpEquiv(meta) {
    return function() {
        return meta.httpEquiv;
    };
}
function setHttpEquiv(httpEquiv) {
    return function(meta) {
        return function() {
            meta.httpEquiv = httpEquiv;
        };
    };
}
function content(meta) {
    return function() {
        return meta.content;
    };
}
function setContent(content) {
    return function(meta) {
        return function() {
            meta.content = content;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3iBgC":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "value", ()=>(0, _foreignJs.value));
parcelHelpers.export(exports, "setValue", ()=>(0, _foreignJs.setValue));
parcelHelpers.export(exports, "min", ()=>(0, _foreignJs.min));
parcelHelpers.export(exports, "setMin", ()=>(0, _foreignJs.setMin));
parcelHelpers.export(exports, "max", ()=>(0, _foreignJs.max));
parcelHelpers.export(exports, "setMax", ()=>(0, _foreignJs.setMax));
parcelHelpers.export(exports, "low", ()=>(0, _foreignJs.low));
parcelHelpers.export(exports, "setLow", ()=>(0, _foreignJs.setLow));
parcelHelpers.export(exports, "high", ()=>(0, _foreignJs.high));
parcelHelpers.export(exports, "setHigh", ()=>(0, _foreignJs.setHigh));
parcelHelpers.export(exports, "optimum", ()=>(0, _foreignJs.optimum));
parcelHelpers.export(exports, "setOptimum", ()=>(0, _foreignJs.setOptimum));
parcelHelpers.export(exports, "labels", ()=>(0, _foreignJs.labels));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMeterElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMeterElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMeterElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMeterElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMeterElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMeterElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLMeterElement");

},{"./foreign.js":"5owIH","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5owIH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "value", ()=>value);
parcelHelpers.export(exports, "setValue", ()=>setValue);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "min", ()=>min);
parcelHelpers.export(exports, "setMin", ()=>setMin);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "max", ()=>max);
parcelHelpers.export(exports, "setMax", ()=>setMax);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "low", ()=>low);
parcelHelpers.export(exports, "setLow", ()=>setLow);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "high", ()=>high);
parcelHelpers.export(exports, "setHigh", ()=>setHigh);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "optimum", ()=>optimum);
parcelHelpers.export(exports, "setOptimum", ()=>setOptimum);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "labels", ()=>labels);
function value(meter) {
    return function() {
        return meter.value;
    };
}
function setValue(value) {
    return function(meter) {
        return function() {
            meter.value = value;
        };
    };
}
function min(meter) {
    return function() {
        return meter.min;
    };
}
function setMin(min) {
    return function(meter) {
        return function() {
            meter.min = min;
        };
    };
}
function max(meter) {
    return function() {
        return meter.max;
    };
}
function setMax(max) {
    return function(meter) {
        return function() {
            meter.max = max;
        };
    };
}
function low(meter) {
    return function() {
        return meter.low;
    };
}
function setLow(low) {
    return function(meter) {
        return function() {
            meter.low = low;
        };
    };
}
function high(meter) {
    return function() {
        return meter.high;
    };
}
function setHigh(high) {
    return function(meter) {
        return function() {
            meter.high = high;
        };
    };
}
function optimum(meter) {
    return function() {
        return meter.optimum;
    };
}
function setOptimum(optimum) {
    return function(meter) {
        return function() {
            meter.optimum = optimum;
        };
    };
}
function labels(meter) {
    return function() {
        return meter.labels;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lhDKP":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cite", ()=>(0, _foreignJs.cite));
parcelHelpers.export(exports, "setCite", ()=>(0, _foreignJs.setCite));
parcelHelpers.export(exports, "dateTime", ()=>(0, _foreignJs.dateTime));
parcelHelpers.export(exports, "setDateTime", ()=>(0, _foreignJs.setDateTime));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLModElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLModElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLModElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLModElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLModElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLModElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLModElement");

},{"./foreign.js":"hidPu","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hidPu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cite", ()=>cite);
parcelHelpers.export(exports, "setCite", ()=>setCite);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "dateTime", ()=>dateTime);
parcelHelpers.export(exports, "setDateTime", ()=>setDateTime);
function cite(mod) {
    return function() {
        return mod.cite;
    };
}
function setCite(cite) {
    return function(mod) {
        return function() {
            mod.cite = cite;
        };
    };
}
function dateTime(mod) {
    return function() {
        return mod.dateTime;
    };
}
function setDateTime(dateTime) {
    return function(mod) {
        return function() {
            mod.dateTime = dateTime;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3XjDj":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "reversed", ()=>(0, _foreignJs.reversed));
parcelHelpers.export(exports, "setReversed", ()=>(0, _foreignJs.setReversed));
parcelHelpers.export(exports, "start", ()=>(0, _foreignJs.start));
parcelHelpers.export(exports, "setStart", ()=>(0, _foreignJs.setStart));
parcelHelpers.export(exports, "type_", ()=>(0, _foreignJs.type_));
parcelHelpers.export(exports, "setType", ()=>(0, _foreignJs.setType));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLOListElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLOListElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLOListElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLOListElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLOListElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLOListElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLOListElement");

},{"./foreign.js":"7snkb","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7snkb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "reversed", ()=>reversed);
parcelHelpers.export(exports, "setReversed", ()=>setReversed);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "start", ()=>start);
parcelHelpers.export(exports, "setStart", ()=>setStart);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "type_", ()=>type_);
parcelHelpers.export(exports, "setType", ()=>setType);
function reversed(ol) {
    return function() {
        return ol.reversed;
    };
}
function setReversed(reversed) {
    return function(ol) {
        return function() {
            ol.reversed = reversed;
        };
    };
}
function start(ol) {
    return function() {
        return ol.start;
    };
}
function setStart(start) {
    return function(ol) {
        return function() {
            ol.start = start;
        };
    };
}
function type_(ol) {
    return function() {
        return ol.type;
    };
}
function setType(type) {
    return function(ol) {
        return function() {
            ol.type = type;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3EKFV":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "data_", ()=>(0, _foreignJs.data_));
parcelHelpers.export(exports, "setData", ()=>(0, _foreignJs.setData));
parcelHelpers.export(exports, "type_", ()=>(0, _foreignJs.type_));
parcelHelpers.export(exports, "setType", ()=>(0, _foreignJs.setType));
parcelHelpers.export(exports, "typeMustMatch", ()=>(0, _foreignJs.typeMustMatch));
parcelHelpers.export(exports, "name", ()=>(0, _foreignJs.name));
parcelHelpers.export(exports, "setName", ()=>(0, _foreignJs.setName));
parcelHelpers.export(exports, "useMap", ()=>(0, _foreignJs.useMap));
parcelHelpers.export(exports, "setUseMap", ()=>(0, _foreignJs.setUseMap));
parcelHelpers.export(exports, "width", ()=>(0, _foreignJs.width));
parcelHelpers.export(exports, "setWidth", ()=>(0, _foreignJs.setWidth));
parcelHelpers.export(exports, "height", ()=>(0, _foreignJs.height));
parcelHelpers.export(exports, "setHeight", ()=>(0, _foreignJs.setHeight));
parcelHelpers.export(exports, "willValidate", ()=>(0, _foreignJs.willValidate));
parcelHelpers.export(exports, "validity", ()=>(0, _foreignJs.validity));
parcelHelpers.export(exports, "validationMessage", ()=>(0, _foreignJs.validationMessage));
parcelHelpers.export(exports, "checkValidity", ()=>(0, _foreignJs.checkValidity));
parcelHelpers.export(exports, "reportValidity", ()=>(0, _foreignJs.reportValidity));
parcelHelpers.export(exports, "setCustomValidity", ()=>(0, _foreignJs.setCustomValidity));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "form", ()=>form);
parcelHelpers.export(exports, "contentDocument", ()=>contentDocument);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Nullable/index.js");
var _indexJs2 = require("../Effect/index.js");
var _indexJs3 = require("../Unsafe.Coerce/index.js");
var _indexJs4 = require("../Web.Internal.FFI/index.js");
var map = /* #__PURE__ */ _indexJs.map(_indexJs2.functorEffect);
var toParentNode = _indexJs3.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs3.unsafeCoerce;
var toNode = _indexJs3.unsafeCoerce;
var toHTMLElement = _indexJs3.unsafeCoerce;
var toEventTarget = _indexJs3.unsafeCoerce;
var toElement = _indexJs3.unsafeCoerce;
var toChildNode = _indexJs3.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLObjectElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLObjectElement");
var fromNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLObjectElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLObjectElement");
var fromEventTarget = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLObjectElement");
var fromElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLObjectElement");
var fromChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLObjectElement");
var form = /* #__PURE__ */ function() {
    var $2 = map(_indexJs1.toMaybe);
    return function($3) {
        return $2(_foreignJs["_form"]($3));
    };
}();
var contentDocument = /* #__PURE__ */ function() {
    var $4 = map(_indexJs1.toMaybe);
    return function($5) {
        return $4(_foreignJs["_contentDocument"]($5));
    };
}();

},{"./foreign.js":"dsF8Q","../Data.Functor/index.js":"j9NCu","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dsF8Q":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "data_", ()=>data_);
parcelHelpers.export(exports, "setData", ()=>setData);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "type_", ()=>type_);
parcelHelpers.export(exports, "setType", ()=>setType);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "typeMustMatch", ()=>typeMustMatch);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "name", ()=>name);
parcelHelpers.export(exports, "setName", ()=>setName);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "useMap", ()=>useMap);
parcelHelpers.export(exports, "setUseMap", ()=>setUseMap);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_form", ()=>_form);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "width", ()=>width);
parcelHelpers.export(exports, "setWidth", ()=>setWidth);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "height", ()=>height);
parcelHelpers.export(exports, "setHeight", ()=>setHeight);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_contentDocument", ()=>_contentDocument);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "willValidate", ()=>willValidate);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "validity", ()=>validity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "validationMessage", ()=>validationMessage);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "checkValidity", ()=>checkValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "reportValidity", ()=>reportValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "setCustomValidity", ()=>setCustomValidity);
function data_(object) {
    return function() {
        return object.data;
    };
}
function setData(data) {
    return function(object) {
        return function() {
            object.data = data;
        };
    };
}
function type_(object) {
    return function() {
        return object.type;
    };
}
function setType(type) {
    return function(object) {
        return function() {
            object.type = type;
        };
    };
}
function typeMustMatch(object) {
    return function() {
        return object.typeMustMatch;
    };
}
function name(object) {
    return function() {
        return object.name;
    };
}
function setName(name) {
    return function(object) {
        return function() {
            object.name = name;
        };
    };
}
function useMap(object) {
    return function() {
        return object.useMap;
    };
}
function setUseMap(useMap) {
    return function(object) {
        return function() {
            object.useMap = useMap;
        };
    };
}
function _form(object) {
    return function() {
        return object.form;
    };
}
function width(object) {
    return function() {
        return object.width;
    };
}
function setWidth(width) {
    return function(object) {
        return function() {
            object.width = width;
        };
    };
}
function height(object) {
    return function() {
        return object.height;
    };
}
function setHeight(height) {
    return function(object) {
        return function() {
            object.height = height;
        };
    };
}
function _contentDocument(object) {
    return function() {
        return object.contentDocument;
    };
}
function willValidate(object) {
    return function() {
        return object.willValidate;
    };
}
function validity(object) {
    return function() {
        return object.validity;
    };
}
function validationMessage(object) {
    return function() {
        return object.validationMessage;
    };
}
function checkValidity(object) {
    return function() {
        return object.checkValidity();
    };
}
function reportValidity(object) {
    return function() {
        return object.reportValidity();
    };
}
function setCustomValidity(value) {
    return function(object) {
        return function() {
            object.setCustomValidity(value);
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8EHTn":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "disabled", ()=>(0, _foreignJs.disabled));
parcelHelpers.export(exports, "setDisabled", ()=>(0, _foreignJs.setDisabled));
parcelHelpers.export(exports, "label", ()=>(0, _foreignJs.label));
parcelHelpers.export(exports, "setLabel", ()=>(0, _foreignJs.setLabel));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLOptGroupElement");

},{"./foreign.js":"4CaDY","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4CaDY":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "disabled", ()=>disabled);
parcelHelpers.export(exports, "setDisabled", ()=>setDisabled);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "label", ()=>label);
parcelHelpers.export(exports, "setLabel", ()=>setLabel);
function disabled(optgroup) {
    return function() {
        return optgroup.disabled;
    };
}
function setDisabled(disabled) {
    return function(optgroup) {
        return function() {
            optgroup.disabled = disabled;
        };
    };
}
function label(optgroup) {
    return function() {
        return optgroup.label;
    };
}
function setLabel(label) {
    return function(optgroup) {
        return function() {
            optgroup.label = label;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dGVZ2":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "disabled", ()=>(0, _foreignJs.disabled));
parcelHelpers.export(exports, "setDisabled", ()=>(0, _foreignJs.setDisabled));
parcelHelpers.export(exports, "label", ()=>(0, _foreignJs.label));
parcelHelpers.export(exports, "setLabel", ()=>(0, _foreignJs.setLabel));
parcelHelpers.export(exports, "defaultSelected", ()=>(0, _foreignJs.defaultSelected));
parcelHelpers.export(exports, "setDefaultSelected", ()=>(0, _foreignJs.setDefaultSelected));
parcelHelpers.export(exports, "selected", ()=>(0, _foreignJs.selected));
parcelHelpers.export(exports, "setSelected", ()=>(0, _foreignJs.setSelected));
parcelHelpers.export(exports, "value", ()=>(0, _foreignJs.value));
parcelHelpers.export(exports, "setValue", ()=>(0, _foreignJs.setValue));
parcelHelpers.export(exports, "text", ()=>(0, _foreignJs.text));
parcelHelpers.export(exports, "setText", ()=>(0, _foreignJs.setText));
parcelHelpers.export(exports, "index", ()=>(0, _foreignJs.index));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "form", ()=>form);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Nullable/index.js");
var _indexJs2 = require("../Effect/index.js");
var _indexJs3 = require("../Unsafe.Coerce/index.js");
var _indexJs4 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs3.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs3.unsafeCoerce;
var toNode = _indexJs3.unsafeCoerce;
var toHTMLElement = _indexJs3.unsafeCoerce;
var toEventTarget = _indexJs3.unsafeCoerce;
var toElement = _indexJs3.unsafeCoerce;
var toChildNode = _indexJs3.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLOptionElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLOptionElement");
var fromNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLOptionElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLOptionElement");
var fromEventTarget = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLOptionElement");
var fromElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLOptionElement");
var fromChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLOptionElement");
var form = /* #__PURE__ */ function() {
    var $2 = _indexJs.map(_indexJs2.functorEffect)(_indexJs1.toMaybe);
    return function($3) {
        return $2(_foreignJs["_form"]($3));
    };
}();

},{"./foreign.js":"davvR","../Data.Functor/index.js":"j9NCu","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"davvR":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "disabled", ()=>disabled);
parcelHelpers.export(exports, "setDisabled", ()=>setDisabled);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_form", ()=>_form);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "label", ()=>label);
parcelHelpers.export(exports, "setLabel", ()=>setLabel);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "defaultSelected", ()=>defaultSelected);
parcelHelpers.export(exports, "setDefaultSelected", ()=>setDefaultSelected);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "selected", ()=>selected);
parcelHelpers.export(exports, "setSelected", ()=>setSelected);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "value", ()=>value);
parcelHelpers.export(exports, "setValue", ()=>setValue);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "text", ()=>text);
parcelHelpers.export(exports, "setText", ()=>setText);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "index", ()=>index);
function disabled(option) {
    return function() {
        return option.disabled;
    };
}
function setDisabled(disabled) {
    return function(option) {
        return function() {
            option.disabled = disabled;
        };
    };
}
function _form(option) {
    return function() {
        return option.form;
    };
}
function label(option) {
    return function() {
        return option.label;
    };
}
function setLabel(label) {
    return function(option) {
        return function() {
            option.label = label;
        };
    };
}
function defaultSelected(option) {
    return function() {
        return option.defaultSelected;
    };
}
function setDefaultSelected(defaultSelected) {
    return function(option) {
        return function() {
            option.defaultSelected = defaultSelected;
        };
    };
}
function selected(option) {
    return function() {
        return option.selected;
    };
}
function setSelected(selected) {
    return function(option) {
        return function() {
            option.selected = selected;
        };
    };
}
function value(option) {
    return function() {
        return option.value;
    };
}
function setValue(value) {
    return function(option) {
        return function() {
            option.value = value;
        };
    };
}
function text(option) {
    return function() {
        return option.text;
    };
}
function setText(text) {
    return function(option) {
        return function() {
            option.text = text;
        };
    };
}
function index(option) {
    return function() {
        return option.index;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8m3pe":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "name", ()=>(0, _foreignJs.name));
parcelHelpers.export(exports, "setName", ()=>(0, _foreignJs.setName));
parcelHelpers.export(exports, "type_", ()=>(0, _foreignJs.type_));
parcelHelpers.export(exports, "defaultValue", ()=>(0, _foreignJs.defaultValue));
parcelHelpers.export(exports, "setDefaultValue", ()=>(0, _foreignJs.setDefaultValue));
parcelHelpers.export(exports, "value", ()=>(0, _foreignJs.value));
parcelHelpers.export(exports, "setValue", ()=>(0, _foreignJs.setValue));
parcelHelpers.export(exports, "willValidate", ()=>(0, _foreignJs.willValidate));
parcelHelpers.export(exports, "validity", ()=>(0, _foreignJs.validity));
parcelHelpers.export(exports, "validationMessage", ()=>(0, _foreignJs.validationMessage));
parcelHelpers.export(exports, "checkValidity", ()=>(0, _foreignJs.checkValidity));
parcelHelpers.export(exports, "reportValidity", ()=>(0, _foreignJs.reportValidity));
parcelHelpers.export(exports, "setCustomValidity", ()=>(0, _foreignJs.setCustomValidity));
parcelHelpers.export(exports, "labels", ()=>(0, _foreignJs.labels));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "form", ()=>form);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Nullable/index.js");
var _indexJs2 = require("../Effect/index.js");
var _indexJs3 = require("../Unsafe.Coerce/index.js");
var _indexJs4 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs3.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs3.unsafeCoerce;
var toNode = _indexJs3.unsafeCoerce;
var toHTMLElement = _indexJs3.unsafeCoerce;
var toEventTarget = _indexJs3.unsafeCoerce;
var toElement = _indexJs3.unsafeCoerce;
var toChildNode = _indexJs3.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLOutputElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLOutputElement");
var fromNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLOutputElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLOutputElement");
var fromEventTarget = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLOutputElement");
var fromElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLOutputElement");
var fromChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLOutputElement");
var form = /* #__PURE__ */ function() {
    var $2 = _indexJs.map(_indexJs2.functorEffect)(_indexJs1.toMaybe);
    return function($3) {
        return $2(_foreignJs["_form"]($3));
    };
}();

},{"./foreign.js":"81UoT","../Data.Functor/index.js":"j9NCu","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"81UoT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_form", ()=>_form);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "name", ()=>name);
parcelHelpers.export(exports, "setName", ()=>setName);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "type_", ()=>type_);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "defaultValue", ()=>defaultValue);
parcelHelpers.export(exports, "setDefaultValue", ()=>setDefaultValue);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "value", ()=>value);
parcelHelpers.export(exports, "setValue", ()=>setValue);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "willValidate", ()=>willValidate);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "validity", ()=>validity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "validationMessage", ()=>validationMessage);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "checkValidity", ()=>checkValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "reportValidity", ()=>reportValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "setCustomValidity", ()=>setCustomValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "labels", ()=>labels);
function _form(output) {
    return function() {
        return output.form;
    };
}
function name(output) {
    return function() {
        return output.name;
    };
}
function setName(name) {
    return function(output) {
        return function() {
            output.name = name;
        };
    };
}
function type_(output) {
    return function() {
        return output.type;
    };
}
function defaultValue(output) {
    return function() {
        return output.defaultValue;
    };
}
function setDefaultValue(defaultValue) {
    return function(output) {
        return function() {
            output.defaultValue = defaultValue;
        };
    };
}
function value(output) {
    return function() {
        return output.value;
    };
}
function setValue(value) {
    return function(output) {
        return function() {
            output.value = value;
        };
    };
}
function willValidate(output) {
    return function() {
        return output.willValidate;
    };
}
function validity(output) {
    return function() {
        return output.validity;
    };
}
function validationMessage(output) {
    return function() {
        return output.validationMessage;
    };
}
function checkValidity(output) {
    return function() {
        return output.checkValidity();
    };
}
function reportValidity(output) {
    return function() {
        return output.reportValidity();
    };
}
function setCustomValidity(value) {
    return function(output) {
        return function() {
            output.setCustomValidity(value);
        };
    };
}
function labels(output) {
    return function() {
        return output.labels;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jO62l":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLParagraphElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLParagraphElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLParagraphElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLParagraphElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLParagraphElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLParagraphElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLParagraphElement");

},{"../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"78U7A":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "name", ()=>(0, _foreignJs.name));
parcelHelpers.export(exports, "setName", ()=>(0, _foreignJs.setName));
parcelHelpers.export(exports, "value", ()=>(0, _foreignJs.value));
parcelHelpers.export(exports, "setValue", ()=>(0, _foreignJs.setValue));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLParamElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLParamElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLParamElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLParamElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLParamElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLParamElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLParamElement");

},{"./foreign.js":"iRtMg","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iRtMg":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "name", ()=>name);
parcelHelpers.export(exports, "setName", ()=>setName);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "value", ()=>value);
parcelHelpers.export(exports, "setValue", ()=>setValue);
function name(param) {
    return function() {
        return param.name;
    };
}
function setName(name) {
    return function(param) {
        return function() {
            param.name = name;
        };
    };
}
function value(param) {
    return function() {
        return param.value;
    };
}
function setValue(value) {
    return function(param) {
        return function() {
            param.value = value;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7X1uu":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLPreElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLPreElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLPreElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLPreElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLPreElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLPreElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLPreElement");

},{"../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5pUr8":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "value", ()=>(0, _foreignJs.value));
parcelHelpers.export(exports, "setValue", ()=>(0, _foreignJs.setValue));
parcelHelpers.export(exports, "max", ()=>(0, _foreignJs.max));
parcelHelpers.export(exports, "setMax", ()=>(0, _foreignJs.setMax));
parcelHelpers.export(exports, "position", ()=>(0, _foreignJs.position));
parcelHelpers.export(exports, "labels", ()=>(0, _foreignJs.labels));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLProgressElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLProgressElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLProgressElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLProgressElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLProgressElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLProgressElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLProgressElement");

},{"./foreign.js":"fERXS","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fERXS":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "value", ()=>value);
parcelHelpers.export(exports, "setValue", ()=>setValue);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "max", ()=>max);
parcelHelpers.export(exports, "setMax", ()=>setMax);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "position", ()=>position);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "labels", ()=>labels);
function value(progress) {
    return function() {
        return progress.value;
    };
}
function setValue(value) {
    return function(progress) {
        return function() {
            progress.value = value;
        };
    };
}
function max(progress) {
    return function() {
        return progress.max;
    };
}
function setMax(max) {
    return function(progress) {
        return function() {
            progress.max = max;
        };
    };
}
function position(progress) {
    return function() {
        return progress.position;
    };
}
function labels(progress) {
    return function() {
        return progress.labels;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"elfIr":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cite", ()=>(0, _foreignJs.cite));
parcelHelpers.export(exports, "setCite", ()=>(0, _foreignJs.setCite));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLQuoteElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLQuoteElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLQuoteElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLQuoteElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLQuoteElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLQuoteElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLQuoteElement");

},{"./foreign.js":"eYaOu","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eYaOu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cite", ()=>cite);
parcelHelpers.export(exports, "setCite", ()=>setCite);
function cite(quote) {
    return function() {
        return quote.cite;
    };
}
function setCite(cite) {
    return function(quote) {
        return function() {
            quote.cite = cite;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"h7NEM":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "src", ()=>(0, _foreignJs.src));
parcelHelpers.export(exports, "setSrc", ()=>(0, _foreignJs.setSrc));
parcelHelpers.export(exports, "type_", ()=>(0, _foreignJs.type_));
parcelHelpers.export(exports, "setType", ()=>(0, _foreignJs.setType));
parcelHelpers.export(exports, "charset", ()=>(0, _foreignJs.charset));
parcelHelpers.export(exports, "setCharset", ()=>(0, _foreignJs.setCharset));
parcelHelpers.export(exports, "async", ()=>(0, _foreignJs.async));
parcelHelpers.export(exports, "setAsync", ()=>(0, _foreignJs.setAsync));
parcelHelpers.export(exports, "defer", ()=>(0, _foreignJs.defer));
parcelHelpers.export(exports, "setDefer", ()=>(0, _foreignJs.setDefer));
parcelHelpers.export(exports, "crossOrigin", ()=>(0, _foreignJs.crossOrigin));
parcelHelpers.export(exports, "setCrossOrigin", ()=>(0, _foreignJs.setCrossOrigin));
parcelHelpers.export(exports, "text", ()=>(0, _foreignJs.text));
parcelHelpers.export(exports, "setText", ()=>(0, _foreignJs.setText));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLScriptElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLScriptElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLScriptElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLScriptElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLScriptElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLScriptElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLScriptElement");

},{"./foreign.js":"NCcy3","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"NCcy3":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "src", ()=>src);
parcelHelpers.export(exports, "setSrc", ()=>setSrc);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "type_", ()=>type_);
parcelHelpers.export(exports, "setType", ()=>setType);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "charset", ()=>charset);
parcelHelpers.export(exports, "setCharset", ()=>setCharset);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "async", ()=>async);
parcelHelpers.export(exports, "setAsync", ()=>setAsync);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "defer", ()=>defer);
parcelHelpers.export(exports, "setDefer", ()=>setDefer);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "crossOrigin", ()=>crossOrigin);
parcelHelpers.export(exports, "setCrossOrigin", ()=>setCrossOrigin);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "text", ()=>text);
parcelHelpers.export(exports, "setText", ()=>setText);
function src(script) {
    return function() {
        return script.src;
    };
}
function setSrc(src) {
    return function(script) {
        return function() {
            script.src = src;
        };
    };
}
function type_(script) {
    return function() {
        return script.type;
    };
}
function setType(type) {
    return function(script) {
        return function() {
            script.type = type;
        };
    };
}
function charset(script) {
    return function() {
        return script.charset;
    };
}
function setCharset(charset) {
    return function(script) {
        return function() {
            script.charset = charset;
        };
    };
}
function async(script) {
    return function() {
        return script.async;
    };
}
function setAsync(async) {
    return function(script) {
        return function() {
            script.async = async;
        };
    };
}
function defer(script) {
    return function() {
        return script.defer;
    };
}
function setDefer(defer) {
    return function(script) {
        return function() {
            script.defer = defer;
        };
    };
}
function crossOrigin(script) {
    return function() {
        return script.crossOrigin;
    };
}
function setCrossOrigin(crossOrigin) {
    return function(script) {
        return function() {
            script.crossOrigin = crossOrigin;
        };
    };
}
function text(script) {
    return function() {
        return script.text;
    };
}
function setText(text) {
    return function(script) {
        return function() {
            script.text = text;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6CiSR":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "autofocus", ()=>(0, _foreignJs.autofocus));
parcelHelpers.export(exports, "setAutofocus", ()=>(0, _foreignJs.setAutofocus));
parcelHelpers.export(exports, "disabled", ()=>(0, _foreignJs.disabled));
parcelHelpers.export(exports, "setDisabled", ()=>(0, _foreignJs.setDisabled));
parcelHelpers.export(exports, "multiple", ()=>(0, _foreignJs.multiple));
parcelHelpers.export(exports, "setMultiple", ()=>(0, _foreignJs.setMultiple));
parcelHelpers.export(exports, "name", ()=>(0, _foreignJs.name));
parcelHelpers.export(exports, "setName", ()=>(0, _foreignJs.setName));
parcelHelpers.export(exports, "required", ()=>(0, _foreignJs.required));
parcelHelpers.export(exports, "setRequired", ()=>(0, _foreignJs.setRequired));
parcelHelpers.export(exports, "size", ()=>(0, _foreignJs.size));
parcelHelpers.export(exports, "setSize", ()=>(0, _foreignJs.setSize));
parcelHelpers.export(exports, "type_", ()=>(0, _foreignJs.type_));
parcelHelpers.export(exports, "length", ()=>(0, _foreignJs.length));
parcelHelpers.export(exports, "setLength", ()=>(0, _foreignJs.setLength));
parcelHelpers.export(exports, "selectedOptions", ()=>(0, _foreignJs.selectedOptions));
parcelHelpers.export(exports, "selectedIndex", ()=>(0, _foreignJs.selectedIndex));
parcelHelpers.export(exports, "setSelectedIndex", ()=>(0, _foreignJs.setSelectedIndex));
parcelHelpers.export(exports, "value", ()=>(0, _foreignJs.value));
parcelHelpers.export(exports, "setValue", ()=>(0, _foreignJs.setValue));
parcelHelpers.export(exports, "willValidate", ()=>(0, _foreignJs.willValidate));
parcelHelpers.export(exports, "validity", ()=>(0, _foreignJs.validity));
parcelHelpers.export(exports, "validationMessage", ()=>(0, _foreignJs.validationMessage));
parcelHelpers.export(exports, "checkValidity", ()=>(0, _foreignJs.checkValidity));
parcelHelpers.export(exports, "reportValidity", ()=>(0, _foreignJs.reportValidity));
parcelHelpers.export(exports, "setCustomValidity", ()=>(0, _foreignJs.setCustomValidity));
parcelHelpers.export(exports, "labels", ()=>(0, _foreignJs.labels));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "form", ()=>form);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Nullable/index.js");
var _indexJs2 = require("../Effect/index.js");
var _indexJs3 = require("../Unsafe.Coerce/index.js");
var _indexJs4 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs3.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs3.unsafeCoerce;
var toNode = _indexJs3.unsafeCoerce;
var toHTMLElement = _indexJs3.unsafeCoerce;
var toEventTarget = _indexJs3.unsafeCoerce;
var toElement = _indexJs3.unsafeCoerce;
var toChildNode = _indexJs3.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLSelectElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLSelectElement");
var fromNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLSelectElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLSelectElement");
var fromEventTarget = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLSelectElement");
var fromElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLSelectElement");
var fromChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLSelectElement");
var form = /* #__PURE__ */ function() {
    var $2 = _indexJs.map(_indexJs2.functorEffect)(_indexJs1.toMaybe);
    return function($3) {
        return $2(_foreignJs["_form"]($3));
    };
}();

},{"./foreign.js":"bB7RJ","../Data.Functor/index.js":"j9NCu","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bB7RJ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "autofocus", ()=>autofocus);
parcelHelpers.export(exports, "setAutofocus", ()=>setAutofocus);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "disabled", ()=>disabled);
parcelHelpers.export(exports, "setDisabled", ()=>setDisabled);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "multiple", ()=>multiple);
parcelHelpers.export(exports, "setMultiple", ()=>setMultiple);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_form", ()=>_form);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "name", ()=>name);
parcelHelpers.export(exports, "setName", ()=>setName);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "required", ()=>required);
parcelHelpers.export(exports, "setRequired", ()=>setRequired);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "size", ()=>size);
parcelHelpers.export(exports, "setSize", ()=>setSize);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "type_", ()=>type_);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "length", ()=>length);
parcelHelpers.export(exports, "setLength", ()=>setLength);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "selectedOptions", ()=>selectedOptions);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "selectedIndex", ()=>selectedIndex);
parcelHelpers.export(exports, "setSelectedIndex", ()=>setSelectedIndex);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "value", ()=>value);
parcelHelpers.export(exports, "setValue", ()=>setValue);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "willValidate", ()=>willValidate);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "validity", ()=>validity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "validationMessage", ()=>validationMessage);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "checkValidity", ()=>checkValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "reportValidity", ()=>reportValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "setCustomValidity", ()=>setCustomValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "labels", ()=>labels);
function autofocus(select) {
    return function() {
        return select.autofocus;
    };
}
function setAutofocus(autofocus) {
    return function(select) {
        return function() {
            select.autofocus = autofocus;
        };
    };
}
function disabled(select) {
    return function() {
        return select.disabled;
    };
}
function setDisabled(disabled) {
    return function(select) {
        return function() {
            select.disabled = disabled;
        };
    };
}
function multiple(select) {
    return function() {
        return select.multiple;
    };
}
function setMultiple(multiple) {
    return function(select) {
        return function() {
            select.multiple = multiple;
        };
    };
}
function _form(select) {
    return function() {
        return select.form;
    };
}
function name(select) {
    return function() {
        return select.name;
    };
}
function setName(name) {
    return function(select) {
        return function() {
            select.name = name;
        };
    };
}
function required(select) {
    return function() {
        return select.required;
    };
}
function setRequired(required) {
    return function(select) {
        return function() {
            select.required = required;
        };
    };
}
function size(select) {
    return function() {
        return select.size;
    };
}
function setSize(size) {
    return function(select) {
        return function() {
            select.size = size;
        };
    };
}
function type_(select) {
    return function() {
        return select.type;
    };
}
function length(select) {
    return function() {
        return select.length;
    };
}
function setLength(length) {
    return function(select) {
        return function() {
            select.length = length;
        };
    };
}
function selectedOptions(select) {
    return function() {
        return select.selectedOptions;
    };
}
function selectedIndex(select) {
    return function() {
        return select.selectedIndex;
    };
}
function setSelectedIndex(selectedIndex) {
    return function(select) {
        return function() {
            select.selectedIndex = selectedIndex;
        };
    };
}
function value(select) {
    return function() {
        return select.value;
    };
}
function setValue(value) {
    return function(select) {
        return function() {
            select.value = value;
        };
    };
}
function willValidate(select) {
    return function() {
        return select.willValidate;
    };
}
function validity(select) {
    return function() {
        return select.validity;
    };
}
function validationMessage(select) {
    return function() {
        return select.validationMessage;
    };
}
function checkValidity(select) {
    return function() {
        return select.checkValidity();
    };
}
function reportValidity(select) {
    return function() {
        return select.reportValidity();
    };
}
function setCustomValidity(value) {
    return function(select) {
        return function() {
            select.setCustomValidity(value);
        };
    };
}
function labels(select) {
    return function() {
        return select.labels;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8LDDl":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "src", ()=>(0, _foreignJs.src));
parcelHelpers.export(exports, "setSrc", ()=>(0, _foreignJs.setSrc));
parcelHelpers.export(exports, "type_", ()=>(0, _foreignJs.type_));
parcelHelpers.export(exports, "setType", ()=>(0, _foreignJs.setType));
parcelHelpers.export(exports, "media", ()=>(0, _foreignJs.media));
parcelHelpers.export(exports, "setMedia", ()=>(0, _foreignJs.setMedia));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLSourceElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLSourceElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLSourceElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLSourceElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLSourceElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLSourceElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLSourceElement");

},{"./foreign.js":"edKkf","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"edKkf":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "src", ()=>src);
parcelHelpers.export(exports, "setSrc", ()=>setSrc);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "type_", ()=>type_);
parcelHelpers.export(exports, "setType", ()=>setType);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "media", ()=>media);
parcelHelpers.export(exports, "setMedia", ()=>setMedia);
function src(source) {
    return function() {
        return source.src;
    };
}
function setSrc(src) {
    return function(source) {
        return function() {
            source.src = src;
        };
    };
}
function type_(source) {
    return function() {
        return source.type;
    };
}
function setType(type) {
    return function(source) {
        return function() {
            source.type = type;
        };
    };
}
function media(source) {
    return function() {
        return source.media;
    };
}
function setMedia(media) {
    return function(source) {
        return function() {
            source.media = media;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"liiy2":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLSpanElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLSpanElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLSpanElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLSpanElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLSpanElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLSpanElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLSpanElement");

},{"../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9kDVk":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "media", ()=>(0, _foreignJs.media));
parcelHelpers.export(exports, "setMedia", ()=>(0, _foreignJs.setMedia));
parcelHelpers.export(exports, "type_", ()=>(0, _foreignJs.type_));
parcelHelpers.export(exports, "setType", ()=>(0, _foreignJs.setType));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLStyleElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLStyleElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLStyleElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLStyleElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLStyleElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLStyleElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLStyleElement");

},{"./foreign.js":"aYoX4","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aYoX4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "media", ()=>media);
parcelHelpers.export(exports, "setMedia", ()=>setMedia);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "type_", ()=>type_);
parcelHelpers.export(exports, "setType", ()=>setType);
function media(style) {
    return function() {
        return style.media;
    };
}
function setMedia(media) {
    return function(style) {
        return function() {
            style.media = media;
        };
    };
}
function type_(style) {
    return function() {
        return style.type;
    };
}
function setType(type) {
    return function(style) {
        return function() {
            style.type = type;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9D10a":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableCaptionElement");

},{"../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5AZY9":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "colSpan", ()=>(0, _foreignJs.colSpan));
parcelHelpers.export(exports, "setColSpan", ()=>(0, _foreignJs.setColSpan));
parcelHelpers.export(exports, "rowSpan", ()=>(0, _foreignJs.rowSpan));
parcelHelpers.export(exports, "setRowSpan", ()=>(0, _foreignJs.setRowSpan));
parcelHelpers.export(exports, "cellIndex", ()=>(0, _foreignJs.cellIndex));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableCellElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableCellElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableCellElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableCellElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableCellElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableCellElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableCellElement");

},{"./foreign.js":"5dr5w","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5dr5w":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "colSpan", ()=>colSpan);
parcelHelpers.export(exports, "setColSpan", ()=>setColSpan);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "rowSpan", ()=>rowSpan);
parcelHelpers.export(exports, "setRowSpan", ()=>setRowSpan);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "cellIndex", ()=>cellIndex);
function colSpan(cell) {
    return function() {
        return cell.colSpan;
    };
}
function setColSpan(colSpan) {
    return function(cell) {
        return function() {
            cell.colSpan = colSpan;
        };
    };
}
function rowSpan(cell) {
    return function() {
        return cell.rowSpan;
    };
}
function setRowSpan(rowSpan) {
    return function(cell) {
        return function() {
            cell.rowSpan = rowSpan;
        };
    };
}
function cellIndex(cell) {
    return function() {
        return cell.cellIndex;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"16T7N":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "span", ()=>(0, _foreignJs.span));
parcelHelpers.export(exports, "setSpan", ()=>(0, _foreignJs.setSpan));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableColElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableColElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableColElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableColElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableColElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableColElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableColElement");

},{"./foreign.js":"iify9","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iify9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "span", ()=>span);
parcelHelpers.export(exports, "setSpan", ()=>setSpan);
function span(col) {
    return function() {
        return col.span;
    };
}
function setSpan(span) {
    return function(col) {
        return function() {
            col.span = span;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bhMJr":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromHTMLTableCellElement", ()=>fromHTMLTableCellElement);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLTableCellElement", ()=>toHTMLTableCellElement);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLTableCellElement = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromHTMLTableCellElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableDataCellElement");

},{"../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eljCd":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createCaption", ()=>(0, _foreignJs.createCaption));
parcelHelpers.export(exports, "deleteCaption", ()=>(0, _foreignJs.deleteCaption));
parcelHelpers.export(exports, "createTHead", ()=>(0, _foreignJs.createTHead));
parcelHelpers.export(exports, "deleteTHead", ()=>(0, _foreignJs.deleteTHead));
parcelHelpers.export(exports, "createTFoot", ()=>(0, _foreignJs.createTFoot));
parcelHelpers.export(exports, "deleteTFoot", ()=>(0, _foreignJs.deleteTFoot));
parcelHelpers.export(exports, "tBodies", ()=>(0, _foreignJs.tBodies));
parcelHelpers.export(exports, "createTBody", ()=>(0, _foreignJs.createTBody));
parcelHelpers.export(exports, "rows", ()=>(0, _foreignJs.rows));
parcelHelpers.export(exports, "deleteRow", ()=>(0, _foreignJs.deleteRow));
parcelHelpers.export(exports, "border", ()=>(0, _foreignJs.border));
parcelHelpers.export(exports, "setBorder", ()=>(0, _foreignJs.setBorder));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "caption", ()=>caption);
parcelHelpers.export(exports, "setCaption", ()=>setCaption);
parcelHelpers.export(exports, "tHead", ()=>tHead);
parcelHelpers.export(exports, "setTHead", ()=>setTHead);
parcelHelpers.export(exports, "tFoot", ()=>tFoot);
parcelHelpers.export(exports, "setTFoot", ()=>setTFoot);
parcelHelpers.export(exports, "insertRow", ()=>insertRow);
parcelHelpers.export(exports, "insertRow$prime", ()=>insertRow$prime);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Nullable/index.js");
var _indexJs2 = require("../Effect/index.js");
var _indexJs3 = require("../Unsafe.Coerce/index.js");
var _indexJs4 = require("../Web.Internal.FFI/index.js");
var map = /* #__PURE__ */ _indexJs.map(_indexJs2.functorEffect);
var toParentNode = _indexJs3.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs3.unsafeCoerce;
var toNode = _indexJs3.unsafeCoerce;
var toHTMLElement = _indexJs3.unsafeCoerce;
var toEventTarget = _indexJs3.unsafeCoerce;
var toElement = _indexJs3.unsafeCoerce;
var toChildNode = _indexJs3.unsafeCoerce;
var tHead = /* #__PURE__ */ function() {
    var $3 = map(_indexJs1.toMaybe);
    return function($4) {
        return $3(_foreignJs["_tHead"]($4));
    };
}();
var tFoot = /* #__PURE__ */ function() {
    var $5 = map(_indexJs1.toMaybe);
    return function($6) {
        return $5(_foreignJs["_tFoot"]($6));
    };
}();
var setTHead = function($7) {
    return _foreignJs["_setTHead"](_indexJs1.toNullable($7));
};
var setTFoot = function($8) {
    return _foreignJs["_setTFoot"](_indexJs1.toNullable($8));
};
var setCaption = function($9) {
    return _foreignJs["_setCaption"](_indexJs1.toNullable($9));
};
var insertRow$prime = _foreignJs.insertRowAt;
var insertRow = /* #__PURE__ */ function() {
    return insertRow$prime(-1);
}();
var fromParentNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLTableElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLTableElement");
var fromNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLTableElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLTableElement");
var fromEventTarget = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLTableElement");
var fromElement = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLTableElement");
var fromChildNode = /* #__PURE__ */ _indexJs4.unsafeReadProtoTagged("HTMLTableElement");
var caption = /* #__PURE__ */ function() {
    var $10 = map(_indexJs1.toMaybe);
    return function($11) {
        return $10(_foreignJs["_caption"]($11));
    };
}();

},{"./foreign.js":"9fxfl","../Data.Functor/index.js":"j9NCu","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9fxfl":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_caption", ()=>_caption);
parcelHelpers.export(exports, "_setCaption", ()=>_setCaption);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "createCaption", ()=>createCaption);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "deleteCaption", ()=>deleteCaption);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_tHead", ()=>_tHead);
parcelHelpers.export(exports, "_setTHead", ()=>_setTHead);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "createTHead", ()=>createTHead);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "deleteTHead", ()=>deleteTHead);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_tFoot", ()=>_tFoot);
parcelHelpers.export(exports, "_setTFoot", ()=>_setTFoot);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "createTFoot", ()=>createTFoot);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "deleteTFoot", ()=>deleteTFoot);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "tBodies", ()=>tBodies);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "createTBody", ()=>createTBody);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "rows", ()=>rows);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "insertRowAt", ()=>insertRowAt);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "deleteRow", ()=>deleteRow);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "border", ()=>border);
parcelHelpers.export(exports, "setBorder", ()=>setBorder);
function _caption(table) {
    return function() {
        return table.caption;
    };
}
function _setCaption(caption) {
    return function(table) {
        return function() {
            table.caption = caption;
        };
    };
}
function createCaption(table) {
    return function() {
        return table.createCaption();
    };
}
function deleteCaption(table) {
    return function() {
        table.deleteCaption();
    };
}
function _tHead(table) {
    return function() {
        return table.tHead;
    };
}
function _setTHead(tHead) {
    return function(table) {
        return function() {
            table.tHead = tHead;
        };
    };
}
function createTHead(table) {
    return function() {
        return table.createTHead();
    };
}
function deleteTHead(table) {
    return function() {
        table.deleteTHead();
    };
}
function _tFoot(table) {
    return function() {
        return table.tFoot;
    };
}
function _setTFoot(tFoot) {
    return function(table) {
        return function() {
            table.tFoot = tFoot;
        };
    };
}
function createTFoot(table) {
    return function() {
        return table.createTFoot();
    };
}
function deleteTFoot(table) {
    return function() {
        table.deleteTFoot();
    };
}
function tBodies(table) {
    return function() {
        return table.tBodies;
    };
}
function createTBody(table) {
    return function() {
        return table.createTBody();
    };
}
function rows(table) {
    return function() {
        return table.rows;
    };
}
function insertRowAt(index) {
    return function(table) {
        return function() {
            return table.insertRow(index);
        };
    };
}
function deleteRow(index) {
    return function(table) {
        return function() {
            table.deleteRow(index);
        };
    };
}
function border(table) {
    return function() {
        return table.border;
    };
}
function setBorder(border) {
    return function(table) {
        return function() {
            table.border = border;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8zYT9":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "scope", ()=>(0, _foreignJs.scope));
parcelHelpers.export(exports, "setScope", ()=>(0, _foreignJs.setScope));
parcelHelpers.export(exports, "abbr", ()=>(0, _foreignJs.abbr));
parcelHelpers.export(exports, "setAbbr", ()=>(0, _foreignJs.setAbbr));
parcelHelpers.export(exports, "fromHTMLTableCellElement", ()=>fromHTMLTableCellElement);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLTableCellElement", ()=>toHTMLTableCellElement);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLTableCellElement = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromHTMLTableCellElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableHeaderCellElement");

},{"./foreign.js":"dJTnX","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dJTnX":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "scope", ()=>scope);
parcelHelpers.export(exports, "setScope", ()=>setScope);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "abbr", ()=>abbr);
parcelHelpers.export(exports, "setAbbr", ()=>setAbbr);
function scope(cell) {
    return function() {
        return cell.scope;
    };
}
function setScope(scope) {
    return function(cell) {
        return function() {
            cell.scope = scope;
        };
    };
}
function abbr(cell) {
    return function() {
        return cell.abbr;
    };
}
function setAbbr(abbr) {
    return function(cell) {
        return function() {
            cell.abbr = abbr;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"q4Ebc":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "rowIndex", ()=>(0, _foreignJs.rowIndex));
parcelHelpers.export(exports, "sectionRowIndex", ()=>(0, _foreignJs.sectionRowIndex));
parcelHelpers.export(exports, "cells", ()=>(0, _foreignJs.cells));
parcelHelpers.export(exports, "deleteCell", ()=>(0, _foreignJs.deleteCell));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "insertCell", ()=>insertCell);
parcelHelpers.export(exports, "insertCell$prime", ()=>insertCell$prime);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var insertCell$prime = _foreignJs.insertCellAt;
var insertCell = /* #__PURE__ */ function() {
    return insertCell$prime(-1);
}();
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableRowElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableRowElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableRowElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableRowElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableRowElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableRowElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableRowElement");

},{"./foreign.js":"jMsVO","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jMsVO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "rowIndex", ()=>rowIndex);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "sectionRowIndex", ()=>sectionRowIndex);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "cells", ()=>cells);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "insertCellAt", ()=>insertCellAt);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "deleteCell", ()=>deleteCell);
function rowIndex(row) {
    return function() {
        return row.rowIndex;
    };
}
function sectionRowIndex(row) {
    return function() {
        return row.sectionRowIndex;
    };
}
function cells(row) {
    return function() {
        return row.cells;
    };
}
function insertCellAt(index) {
    return function(row) {
        return function() {
            return row.insertCell(index);
        };
    };
}
function deleteCell(index) {
    return function(row) {
        return function() {
            row.deleteCell(index);
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6nzBi":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "rows", ()=>(0, _foreignJs.rows));
parcelHelpers.export(exports, "deleteRow", ()=>(0, _foreignJs.deleteRow));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "insertRow", ()=>insertRow);
parcelHelpers.export(exports, "insertRow$prime", ()=>insertRow$prime);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var insertRow$prime = _foreignJs.insertRowAt;
var insertRow = /* #__PURE__ */ function() {
    return insertRow$prime(-1);
}();
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTableSectionElement");

},{"./foreign.js":"8SDrq","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8SDrq":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "rows", ()=>rows);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "insertRowAt", ()=>insertRowAt);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "deleteRow", ()=>deleteRow);
function rows(section) {
    return function() {
        return section.rows;
    };
}
function insertRowAt(index) {
    return function(section) {
        return function() {
            return section.insertRow(index);
        };
    };
}
function deleteRow(index) {
    return function(section) {
        return function() {
            section.deleteRow(index);
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eyX86":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "content", ()=>(0, _foreignJs.content));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTemplateElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTemplateElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTemplateElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTemplateElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTemplateElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTemplateElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTemplateElement");

},{"./foreign.js":"alDq1","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"alDq1":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "content", ()=>content);
function content(template) {
    return function() {
        return template.content;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9OikO":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "autocomplete", ()=>(0, _foreignJs.autocomplete));
parcelHelpers.export(exports, "setAutocomplete", ()=>(0, _foreignJs.setAutocomplete));
parcelHelpers.export(exports, "autofocus", ()=>(0, _foreignJs.autofocus));
parcelHelpers.export(exports, "setAutofocus", ()=>(0, _foreignJs.setAutofocus));
parcelHelpers.export(exports, "cols", ()=>(0, _foreignJs.cols));
parcelHelpers.export(exports, "setCols", ()=>(0, _foreignJs.setCols));
parcelHelpers.export(exports, "dirName", ()=>(0, _foreignJs.dirName));
parcelHelpers.export(exports, "setDirName", ()=>(0, _foreignJs.setDirName));
parcelHelpers.export(exports, "disabled", ()=>(0, _foreignJs.disabled));
parcelHelpers.export(exports, "setDisabled", ()=>(0, _foreignJs.setDisabled));
parcelHelpers.export(exports, "maxLength", ()=>(0, _foreignJs.maxLength));
parcelHelpers.export(exports, "setMaxLength", ()=>(0, _foreignJs.setMaxLength));
parcelHelpers.export(exports, "minLength", ()=>(0, _foreignJs.minLength));
parcelHelpers.export(exports, "setMinLength", ()=>(0, _foreignJs.setMinLength));
parcelHelpers.export(exports, "name", ()=>(0, _foreignJs.name));
parcelHelpers.export(exports, "setName", ()=>(0, _foreignJs.setName));
parcelHelpers.export(exports, "placeholder", ()=>(0, _foreignJs.placeholder));
parcelHelpers.export(exports, "setPlaceholder", ()=>(0, _foreignJs.setPlaceholder));
parcelHelpers.export(exports, "readOnly", ()=>(0, _foreignJs.readOnly));
parcelHelpers.export(exports, "setReadOnly", ()=>(0, _foreignJs.setReadOnly));
parcelHelpers.export(exports, "required", ()=>(0, _foreignJs.required));
parcelHelpers.export(exports, "setRequired", ()=>(0, _foreignJs.setRequired));
parcelHelpers.export(exports, "rows", ()=>(0, _foreignJs.rows));
parcelHelpers.export(exports, "setRows", ()=>(0, _foreignJs.setRows));
parcelHelpers.export(exports, "wrap", ()=>(0, _foreignJs.wrap));
parcelHelpers.export(exports, "setWrap", ()=>(0, _foreignJs.setWrap));
parcelHelpers.export(exports, "type_", ()=>(0, _foreignJs.type_));
parcelHelpers.export(exports, "defaultValue", ()=>(0, _foreignJs.defaultValue));
parcelHelpers.export(exports, "setDefaultValue", ()=>(0, _foreignJs.setDefaultValue));
parcelHelpers.export(exports, "value", ()=>(0, _foreignJs.value));
parcelHelpers.export(exports, "setValue", ()=>(0, _foreignJs.setValue));
parcelHelpers.export(exports, "textLength", ()=>(0, _foreignJs.textLength));
parcelHelpers.export(exports, "willValidate", ()=>(0, _foreignJs.willValidate));
parcelHelpers.export(exports, "validity", ()=>(0, _foreignJs.validity));
parcelHelpers.export(exports, "validationMessage", ()=>(0, _foreignJs.validationMessage));
parcelHelpers.export(exports, "checkValidity", ()=>(0, _foreignJs.checkValidity));
parcelHelpers.export(exports, "reportValidity", ()=>(0, _foreignJs.reportValidity));
parcelHelpers.export(exports, "setCustomValidity", ()=>(0, _foreignJs.setCustomValidity));
parcelHelpers.export(exports, "labels", ()=>(0, _foreignJs.labels));
parcelHelpers.export(exports, "select", ()=>(0, _foreignJs.select));
parcelHelpers.export(exports, "selectionStart", ()=>(0, _foreignJs.selectionStart));
parcelHelpers.export(exports, "setSelectionStart", ()=>(0, _foreignJs.setSelectionStart));
parcelHelpers.export(exports, "selectionEnd", ()=>(0, _foreignJs.selectionEnd));
parcelHelpers.export(exports, "setSelectionEnd", ()=>(0, _foreignJs.setSelectionEnd));
parcelHelpers.export(exports, "selectionDirection", ()=>(0, _foreignJs.selectionDirection));
parcelHelpers.export(exports, "setSelectionDirection", ()=>(0, _foreignJs.setSelectionDirection));
parcelHelpers.export(exports, "setRangeText", ()=>(0, _foreignJs.setRangeText));
parcelHelpers.export(exports, "setSelectionRange", ()=>(0, _foreignJs.setSelectionRange));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "form", ()=>form);
parcelHelpers.export(exports, "setRangeText$prime", ()=>setRangeText$prime);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Nullable/index.js");
var _indexJs2 = require("../Effect/index.js");
var _indexJs3 = require("../Unsafe.Coerce/index.js");
var _indexJs4 = require("../Web.HTML.SelectionMode/index.js");
var _indexJs5 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs3.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs3.unsafeCoerce;
var toNode = _indexJs3.unsafeCoerce;
var toHTMLElement = _indexJs3.unsafeCoerce;
var toEventTarget = _indexJs3.unsafeCoerce;
var toElement = _indexJs3.unsafeCoerce;
var toChildNode = _indexJs3.unsafeCoerce;
var setRangeText$prime = function(rpl) {
    return function(s) {
        return function(e) {
            return function(mode) {
                return function(area) {
                    return function() {
                        return _foreignJs["_setRangeText"](rpl, s, e, _indexJs4.print(mode), area);
                    };
                };
            };
        };
    };
};
var fromParentNode = /* #__PURE__ */ _indexJs5.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs5.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromNode = /* #__PURE__ */ _indexJs5.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs5.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromEventTarget = /* #__PURE__ */ _indexJs5.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromElement = /* #__PURE__ */ _indexJs5.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromChildNode = /* #__PURE__ */ _indexJs5.unsafeReadProtoTagged("HTMLTextAreaElement");
var form = /* #__PURE__ */ function() {
    var $2 = _indexJs.map(_indexJs2.functorEffect)(_indexJs1.toMaybe);
    return function($3) {
        return $2(_foreignJs["_form"]($3));
    };
}();

},{"./foreign.js":"kjhfD","../Data.Functor/index.js":"j9NCu","../Data.Nullable/index.js":"aaBaJ","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.HTML.SelectionMode/index.js":"4IpJO","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kjhfD":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "autocomplete", ()=>autocomplete);
parcelHelpers.export(exports, "setAutocomplete", ()=>setAutocomplete);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "autofocus", ()=>autofocus);
parcelHelpers.export(exports, "setAutofocus", ()=>setAutofocus);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "cols", ()=>cols);
parcelHelpers.export(exports, "setCols", ()=>setCols);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "dirName", ()=>dirName);
parcelHelpers.export(exports, "setDirName", ()=>setDirName);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "disabled", ()=>disabled);
parcelHelpers.export(exports, "setDisabled", ()=>setDisabled);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_form", ()=>_form);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "maxLength", ()=>maxLength);
parcelHelpers.export(exports, "setMaxLength", ()=>setMaxLength);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "minLength", ()=>minLength);
parcelHelpers.export(exports, "setMinLength", ()=>setMinLength);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "name", ()=>name);
parcelHelpers.export(exports, "setName", ()=>setName);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "placeholder", ()=>placeholder);
parcelHelpers.export(exports, "setPlaceholder", ()=>setPlaceholder);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "readOnly", ()=>readOnly);
parcelHelpers.export(exports, "setReadOnly", ()=>setReadOnly);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "required", ()=>required);
parcelHelpers.export(exports, "setRequired", ()=>setRequired);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "rows", ()=>rows);
parcelHelpers.export(exports, "setRows", ()=>setRows);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "wrap", ()=>wrap);
parcelHelpers.export(exports, "setWrap", ()=>setWrap);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "type_", ()=>type_);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "defaultValue", ()=>defaultValue);
parcelHelpers.export(exports, "setDefaultValue", ()=>setDefaultValue);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "value", ()=>value);
parcelHelpers.export(exports, "setValue", ()=>setValue);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "textLength", ()=>textLength);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "willValidate", ()=>willValidate);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "validity", ()=>validity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "validationMessage", ()=>validationMessage);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "checkValidity", ()=>checkValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "reportValidity", ()=>reportValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "setCustomValidity", ()=>setCustomValidity);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "labels", ()=>labels);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "select", ()=>select);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "selectionStart", ()=>selectionStart);
parcelHelpers.export(exports, "setSelectionStart", ()=>setSelectionStart);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "selectionEnd", ()=>selectionEnd);
parcelHelpers.export(exports, "setSelectionEnd", ()=>setSelectionEnd);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "selectionDirection", ()=>selectionDirection);
parcelHelpers.export(exports, "setSelectionDirection", ()=>setSelectionDirection);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "setRangeText", ()=>setRangeText);
parcelHelpers.export(exports, "_setRangeText", ()=>_setRangeText);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "setSelectionRange", ()=>setSelectionRange);
function autocomplete(textarea) {
    return function() {
        return textarea.autocomplete;
    };
}
function setAutocomplete(autocomplete) {
    return function(textarea) {
        return function() {
            textarea.autocomplete = autocomplete;
        };
    };
}
function autofocus(textarea) {
    return function() {
        return textarea.autofocus;
    };
}
function setAutofocus(autofocus) {
    return function(textarea) {
        return function() {
            textarea.autofocus = autofocus;
        };
    };
}
function cols(textarea) {
    return function() {
        return textarea.cols;
    };
}
function setCols(cols) {
    return function(textarea) {
        return function() {
            textarea.cols = cols;
        };
    };
}
function dirName(textarea) {
    return function() {
        return textarea.dirName;
    };
}
function setDirName(dirName) {
    return function(textarea) {
        return function() {
            textarea.dirName = dirName;
        };
    };
}
function disabled(textarea) {
    return function() {
        return textarea.disabled;
    };
}
function setDisabled(disabled) {
    return function(textarea) {
        return function() {
            textarea.disabled = disabled;
        };
    };
}
function _form(textarea) {
    return function() {
        return textarea.form;
    };
}
function maxLength(textarea) {
    return function() {
        return textarea.maxLength;
    };
}
function setMaxLength(maxLength) {
    return function(textarea) {
        return function() {
            textarea.maxLength = maxLength;
        };
    };
}
function minLength(textarea) {
    return function() {
        return textarea.minLength;
    };
}
function setMinLength(minLength) {
    return function(textarea) {
        return function() {
            textarea.minLength = minLength;
        };
    };
}
function name(textarea) {
    return function() {
        return textarea.name;
    };
}
function setName(name) {
    return function(textarea) {
        return function() {
            textarea.name = name;
        };
    };
}
function placeholder(textarea) {
    return function() {
        return textarea.placeholder;
    };
}
function setPlaceholder(placeholder) {
    return function(textarea) {
        return function() {
            textarea.placeholder = placeholder;
        };
    };
}
function readOnly(textarea) {
    return function() {
        return textarea.readOnly;
    };
}
function setReadOnly(readOnly) {
    return function(textarea) {
        return function() {
            textarea.readOnly = readOnly;
        };
    };
}
function required(textarea) {
    return function() {
        return textarea.required;
    };
}
function setRequired(required) {
    return function(textarea) {
        return function() {
            textarea.required = required;
        };
    };
}
function rows(textarea) {
    return function() {
        return textarea.rows;
    };
}
function setRows(rows) {
    return function(textarea) {
        return function() {
            textarea.rows = rows;
        };
    };
}
function wrap(textarea) {
    return function() {
        return textarea.wrap;
    };
}
function setWrap(wrap) {
    return function(textarea) {
        return function() {
            textarea.wrap = wrap;
        };
    };
}
function type_(textarea) {
    return function() {
        return textarea.type;
    };
}
function defaultValue(textarea) {
    return function() {
        return textarea.defaultValue;
    };
}
function setDefaultValue(defaultValue) {
    return function(textarea) {
        return function() {
            textarea.defaultValue = defaultValue;
        };
    };
}
function value(textarea) {
    return function() {
        return textarea.value;
    };
}
function setValue(value) {
    return function(textarea) {
        return function() {
            textarea.value = value;
        };
    };
}
function textLength(textarea) {
    return function() {
        return textarea.textLength;
    };
}
function willValidate(textarea) {
    return function() {
        return textarea.willValidate;
    };
}
function validity(textarea) {
    return function() {
        return textarea.validity;
    };
}
function validationMessage(textarea) {
    return function() {
        return textarea.validationMessage;
    };
}
function checkValidity(textarea) {
    return function() {
        return textarea.checkValidity();
    };
}
function reportValidity(textarea) {
    return function() {
        return textarea.reportValidity();
    };
}
function setCustomValidity(value) {
    return function(textarea) {
        return function() {
            textarea.setCustomValidity(value);
        };
    };
}
function labels(textarea) {
    return function() {
        return textarea.labels;
    };
}
function select(textarea) {
    return function() {
        textarea.select();
    };
}
function selectionStart(textarea) {
    return function() {
        return textarea.selectionStart;
    };
}
function setSelectionStart(selectionStart) {
    return function(textarea) {
        return function() {
            textarea.selectionStart = selectionStart;
        };
    };
}
function selectionEnd(textarea) {
    return function() {
        return textarea.selectionEnd;
    };
}
function setSelectionEnd(selectionEnd) {
    return function(textarea) {
        return function() {
            textarea.selectionEnd = selectionEnd;
        };
    };
}
function selectionDirection(textarea) {
    return function() {
        return textarea.selectionDirection;
    };
}
function setSelectionDirection(selectionDirection) {
    return function(textarea) {
        return function() {
            textarea.selectionDirection = selectionDirection;
        };
    };
}
function setRangeText(replacement) {
    return function(textarea) {
        return function() {
            textarea.setRangeText(replacement);
        };
    };
}
function _setRangeText(replacement, start, end, selectionMode, textarea) {
    textarea.setRangeText(replacement, start, end, selectionMode);
}
function setSelectionRange(start) {
    return function(end) {
        return function(direction) {
            return function(textarea) {
                return function() {
                    textarea.setSelectionRange(start, end, direction);
                };
            };
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hF3Xf":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "dateTime", ()=>(0, _foreignJs.dateTime));
parcelHelpers.export(exports, "setDateTime", ()=>(0, _foreignJs.setDateTime));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTimeElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTimeElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTimeElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTimeElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTimeElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTimeElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTimeElement");

},{"./foreign.js":"blRKZ","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"blRKZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "dateTime", ()=>dateTime);
parcelHelpers.export(exports, "setDateTime", ()=>setDateTime);
function dateTime(time) {
    return function() {
        return time.dateTime;
    };
}
function setDateTime(dateTime) {
    return function(time) {
        return function() {
            time.dateTime = dateTime;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5Cb0S":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "text", ()=>(0, _foreignJs.text));
parcelHelpers.export(exports, "setText", ()=>(0, _foreignJs.setText));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTitleElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTitleElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTitleElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTitleElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTitleElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTitleElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLTitleElement");

},{"./foreign.js":"6Lv2C","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6Lv2C":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "text", ()=>text);
parcelHelpers.export(exports, "setText", ()=>setText);
function text(title) {
    return function() {
        return title.text;
    };
}
function setText(text) {
    return function(title) {
        return function() {
            title.text = text;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3Eh0H":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "kind", ()=>(0, _foreignJs.kind));
parcelHelpers.export(exports, "setKind", ()=>(0, _foreignJs.setKind));
parcelHelpers.export(exports, "src", ()=>(0, _foreignJs.src));
parcelHelpers.export(exports, "setSrc", ()=>(0, _foreignJs.setSrc));
parcelHelpers.export(exports, "srclang", ()=>(0, _foreignJs.srclang));
parcelHelpers.export(exports, "setSrclang", ()=>(0, _foreignJs.setSrclang));
parcelHelpers.export(exports, "label", ()=>(0, _foreignJs.label));
parcelHelpers.export(exports, "setLabel", ()=>(0, _foreignJs.setLabel));
parcelHelpers.export(exports, "default", ()=>(0, _foreignJsDefault.default));
parcelHelpers.export(exports, "setDefault", ()=>(0, _foreignJs.setDefault));
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "readyState", ()=>readyState);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Enum/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var _indexJs2 = require("../Data.Maybe/index.js");
var _indexJs3 = require("../Effect/index.js");
var _indexJs4 = require("../Unsafe.Coerce/index.js");
var _indexJs5 = require("../Web.HTML.HTMLTrackElement.ReadyState/index.js");
var _indexJs6 = require("../Web.Internal.FFI/index.js");
var _foreignJsDefault = parcelHelpers.interopDefault(_foreignJs);
var map = /* #__PURE__ */ _indexJs1.map(_indexJs3.functorEffect);
var toEnum = /* #__PURE__ */ _indexJs.toEnum(_indexJs5.boundedEnumReadyState);
var toParentNode = _indexJs4.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs4.unsafeCoerce;
var toNode = _indexJs4.unsafeCoerce;
var toHTMLElement = _indexJs4.unsafeCoerce;
var toEventTarget = _indexJs4.unsafeCoerce;
var toElement = _indexJs4.unsafeCoerce;
var toChildNode = _indexJs4.unsafeCoerce;
var readyState = function(el) {
    return map(function() {
        var $3 = _indexJs2.fromMaybe(_indexJs5.None.value);
        return function($4) {
            return $3(toEnum($4));
        };
    }())(function() {
        return _foreignJs["_readyState"](el);
    });
};
var fromParentNode = /* #__PURE__ */ _indexJs6.unsafeReadProtoTagged("HTMLTrackElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs6.unsafeReadProtoTagged("HTMLTrackElement");
var fromNode = /* #__PURE__ */ _indexJs6.unsafeReadProtoTagged("HTMLTrackElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs6.unsafeReadProtoTagged("HTMLTrackElement");
var fromEventTarget = /* #__PURE__ */ _indexJs6.unsafeReadProtoTagged("HTMLTrackElement");
var fromElement = /* #__PURE__ */ _indexJs6.unsafeReadProtoTagged("HTMLTrackElement");
var fromChildNode = /* #__PURE__ */ _indexJs6.unsafeReadProtoTagged("HTMLTrackElement");

},{"./foreign.js":"1zsZc","../Data.Enum/index.js":"8sa8v","../Data.Functor/index.js":"j9NCu","../Data.Maybe/index.js":"ff6lw","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.HTML.HTMLTrackElement.ReadyState/index.js":"dd5JW","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1zsZc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "kind", ()=>kind);
parcelHelpers.export(exports, "setKind", ()=>setKind);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "src", ()=>src);
parcelHelpers.export(exports, "setSrc", ()=>setSrc);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "srclang", ()=>srclang);
parcelHelpers.export(exports, "setSrclang", ()=>setSrclang);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "label", ()=>label);
parcelHelpers.export(exports, "setLabel", ()=>setLabel);
parcelHelpers.export(exports, "default", ()=>defaultImpl);
parcelHelpers.export(exports, "setDefault", ()=>setDefault);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "_readyState", ()=>_readyState);
function kind(track) {
    return function() {
        return track.kind;
    };
}
function setKind(kind) {
    return function(track) {
        return function() {
            track.kind = kind;
        };
    };
}
function src(track) {
    return function() {
        return track.src;
    };
}
function setSrc(src) {
    return function(track) {
        return function() {
            track.src = src;
        };
    };
}
function srclang(track) {
    return function() {
        return track.srclang;
    };
}
function setSrclang(srclang) {
    return function(track) {
        return function() {
            track.srclang = srclang;
        };
    };
}
function label(track) {
    return function() {
        return track.label;
    };
}
function setLabel(label) {
    return function(track) {
        return function() {
            track.label = label;
        };
    };
}
// ----------------------------------------------------------------------------
const defaultImpl = function(track) {
    return function() {
        return track["default"];
    };
};
function setDefault(def) {
    return function(track) {
        return function() {
            track["default"] = def;
        };
    };
}
function _readyState(track) {
    return track.readyState;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dd5JW":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "None", ()=>None);
parcelHelpers.export(exports, "Loading", ()=>Loading);
parcelHelpers.export(exports, "Loaded", ()=>Loaded);
parcelHelpers.export(exports, "Error", ()=>$$Error);
parcelHelpers.export(exports, "toEnumReadyState", ()=>toEnumReadyState);
parcelHelpers.export(exports, "fromEnumReadyState", ()=>fromEnumReadyState);
parcelHelpers.export(exports, "eqReadyState", ()=>eqReadyState);
parcelHelpers.export(exports, "ordReadyState", ()=>ordReadyState);
parcelHelpers.export(exports, "boundedReadyState", ()=>boundedReadyState);
parcelHelpers.export(exports, "enumReadyState", ()=>enumReadyState);
parcelHelpers.export(exports, "boundedEnumReadyState", ()=>boundedEnumReadyState);
parcelHelpers.export(exports, "showReadyState", ()=>showReadyState);
var _indexJs = require("../Data.Enum/index.js");
var _indexJs1 = require("../Data.Maybe/index.js");
var _indexJs2 = require("../Data.Ordering/index.js");
var None = /* #__PURE__ */ function() {
    function None() {}
    None.value = new None();
    return None;
}();
var Loading = /* #__PURE__ */ function() {
    function Loading() {}
    Loading.value = new Loading();
    return Loading;
}();
var Loaded = /* #__PURE__ */ function() {
    function Loaded() {}
    Loaded.value = new Loaded();
    return Loaded;
}();
var $$Error = /* #__PURE__ */ function() {
    function $$Error() {}
    $$Error.value = new $$Error();
    return $$Error;
}();
var toEnumReadyState = function(v) {
    if (v === 0) return new _indexJs1.Just(None.value);
    if (v === 1) return new _indexJs1.Just(Loading.value);
    if (v === 2) return new _indexJs1.Just(Loaded.value);
    if (v === 3) return new _indexJs1.Just($$Error.value);
    return _indexJs1.Nothing.value;
};
var showReadyState = {
    show: function(v) {
        if (v instanceof None) return "None";
        if (v instanceof Loading) return "Loading";
        if (v instanceof Loaded) return "Loaded";
        if (v instanceof $$Error) return "Error";
        throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 30, column 1 - line 34, column 23): " + [
            v.constructor.name
        ]);
    }
};
var fromEnumReadyState = function(v) {
    if (v instanceof None) return 0;
    if (v instanceof Loading) return 1;
    if (v instanceof Loaded) return 2;
    if (v instanceof $$Error) return 3;
    throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 47, column 3 - line 51, column 15): " + [
        v.constructor.name
    ]);
};
var eqReadyState = {
    eq: function(x) {
        return function(y) {
            if (x instanceof None && y instanceof None) return true;
            if (x instanceof Loading && y instanceof Loading) return true;
            if (x instanceof Loaded && y instanceof Loaded) return true;
            if (x instanceof $$Error && y instanceof $$Error) return true;
            return false;
        };
    }
};
var ordReadyState = {
    compare: function(x) {
        return function(y) {
            if (x instanceof None && y instanceof None) return _indexJs2.EQ.value;
            if (x instanceof None) return _indexJs2.LT.value;
            if (y instanceof None) return _indexJs2.GT.value;
            if (x instanceof Loading && y instanceof Loading) return _indexJs2.EQ.value;
            if (x instanceof Loading) return _indexJs2.LT.value;
            if (y instanceof Loading) return _indexJs2.GT.value;
            if (x instanceof Loaded && y instanceof Loaded) return _indexJs2.EQ.value;
            if (x instanceof Loaded) return _indexJs2.LT.value;
            if (y instanceof Loaded) return _indexJs2.GT.value;
            if (x instanceof $$Error && y instanceof $$Error) return _indexJs2.EQ.value;
            throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 0, column 0 - line 0, column 0): " + [
                x.constructor.name,
                y.constructor.name
            ]);
        };
    },
    Eq0: function() {
        return eqReadyState;
    }
};
var enumReadyState = {
    succ: /* #__PURE__ */ _indexJs.defaultSucc(toEnumReadyState)(fromEnumReadyState),
    pred: /* #__PURE__ */ _indexJs.defaultPred(toEnumReadyState)(fromEnumReadyState),
    Ord0: function() {
        return ordReadyState;
    }
};
var boundedReadyState = /* #__PURE__ */ function() {
    return {
        bottom: None.value,
        top: $$Error.value,
        Ord0: function() {
            return ordReadyState;
        }
    };
}();
var boundedEnumReadyState = {
    cardinality: 4,
    toEnum: toEnumReadyState,
    fromEnum: fromEnumReadyState,
    Bounded0: function() {
        return boundedReadyState;
    },
    Enum1: function() {
        return enumReadyState;
    }
};

},{"../Data.Enum/index.js":"8sa8v","../Data.Maybe/index.js":"ff6lw","../Data.Ordering/index.js":"2NvYx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bI2XE":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLUListElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLUListElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLUListElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLUListElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLUListElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLUListElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLUListElement");

},{"../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ktlWY":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "width", ()=>(0, _foreignJs.width));
parcelHelpers.export(exports, "setWidth", ()=>(0, _foreignJs.setWidth));
parcelHelpers.export(exports, "height", ()=>(0, _foreignJs.height));
parcelHelpers.export(exports, "setHeight", ()=>(0, _foreignJs.setHeight));
parcelHelpers.export(exports, "videoWidth", ()=>(0, _foreignJs.videoWidth));
parcelHelpers.export(exports, "videoHeight", ()=>(0, _foreignJs.videoHeight));
parcelHelpers.export(exports, "poster", ()=>(0, _foreignJs.poster));
parcelHelpers.export(exports, "setPoster", ()=>(0, _foreignJs.setPoster));
parcelHelpers.export(exports, "fromHTMLMediaElement", ()=>fromHTMLMediaElement);
parcelHelpers.export(exports, "fromHTMLElement", ()=>fromHTMLElement);
parcelHelpers.export(exports, "fromElement", ()=>fromElement);
parcelHelpers.export(exports, "fromNode", ()=>fromNode);
parcelHelpers.export(exports, "fromChildNode", ()=>fromChildNode);
parcelHelpers.export(exports, "fromNonDocumentTypeChildNode", ()=>fromNonDocumentTypeChildNode);
parcelHelpers.export(exports, "fromParentNode", ()=>fromParentNode);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "toHTMLMediaElement", ()=>toHTMLMediaElement);
parcelHelpers.export(exports, "toHTMLElement", ()=>toHTMLElement);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "toChildNode", ()=>toChildNode);
parcelHelpers.export(exports, "toNonDocumentTypeChildNode", ()=>toNonDocumentTypeChildNode);
parcelHelpers.export(exports, "toParentNode", ()=>toParentNode);
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Unsafe.Coerce/index.js");
var _indexJs1 = require("../Web.Internal.FFI/index.js");
var toParentNode = _indexJs.unsafeCoerce;
var toNonDocumentTypeChildNode = _indexJs.unsafeCoerce;
var toNode = _indexJs.unsafeCoerce;
var toHTMLMediaElement = _indexJs.unsafeCoerce;
var toHTMLElement = _indexJs.unsafeCoerce;
var toEventTarget = _indexJs.unsafeCoerce;
var toElement = _indexJs.unsafeCoerce;
var toChildNode = _indexJs.unsafeCoerce;
var fromParentNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLVideoElement");
var fromNonDocumentTypeChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLVideoElement");
var fromNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLVideoElement");
var fromHTMLMediaElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLVideoElement");
var fromHTMLElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLVideoElement");
var fromEventTarget = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLVideoElement");
var fromElement = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLVideoElement");
var fromChildNode = /* #__PURE__ */ _indexJs1.unsafeReadProtoTagged("HTMLVideoElement");

},{"./foreign.js":"iTcmc","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iTcmc":[function(require,module,exports,__globalThis) {
// ----------------------------------------------------------------------------
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "width", ()=>width);
parcelHelpers.export(exports, "setWidth", ()=>setWidth);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "height", ()=>height);
parcelHelpers.export(exports, "setHeight", ()=>setHeight);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "videoWidth", ()=>videoWidth);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "videoHeight", ()=>videoHeight);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "poster", ()=>poster);
parcelHelpers.export(exports, "setPoster", ()=>setPoster);
function width(video) {
    return function() {
        return video.width;
    };
}
function setWidth(width) {
    return function(video) {
        return function() {
            video.width = width;
        };
    };
}
function height(video) {
    return function() {
        return video.height;
    };
}
function setHeight(height) {
    return function(video) {
        return function() {
            video.height = height;
        };
    };
}
function videoWidth(video) {
    return function() {
        return video.videoWidth;
    };
}
function videoHeight(video) {
    return function() {
        return video.videoHeight;
    };
}
function poster(video) {
    return function() {
        return video.poster;
    };
}
function setPoster(poster) {
    return function(video) {
        return function() {
            video.poster = poster;
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"c8ZiO":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "back", ()=>(0, _foreignJs.back));
parcelHelpers.export(exports, "forward", ()=>(0, _foreignJs.forward));
parcelHelpers.export(exports, "go", ()=>(0, _foreignJs.go));
parcelHelpers.export(exports, "pushState", ()=>(0, _foreignJs.pushState));
parcelHelpers.export(exports, "replaceState", ()=>(0, _foreignJs.replaceState));
parcelHelpers.export(exports, "state", ()=>(0, _foreignJs.state));
parcelHelpers.export(exports, "DocumentTitle", ()=>DocumentTitle);
parcelHelpers.export(exports, "Delta", ()=>Delta);
parcelHelpers.export(exports, "URL", ()=>URL);
parcelHelpers.export(exports, "eqDocumentTitle", ()=>eqDocumentTitle);
parcelHelpers.export(exports, "ordDocumentTitle", ()=>ordDocumentTitle);
parcelHelpers.export(exports, "newtypeDocumentTitle", ()=>newtypeDocumentTitle);
parcelHelpers.export(exports, "eqDelta", ()=>eqDelta);
parcelHelpers.export(exports, "ordDelta", ()=>ordDelta);
parcelHelpers.export(exports, "newtypeDelta", ()=>newtypeDelta);
parcelHelpers.export(exports, "eqURL", ()=>eqURL);
parcelHelpers.export(exports, "ordURL", ()=>ordURL);
parcelHelpers.export(exports, "newtypeURL", ()=>newtypeURL);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Ord/index.js");
var compare = /* #__PURE__ */ _indexJs.compare(_indexJs.ordString);
var compare1 = /* #__PURE__ */ _indexJs.compare(_indexJs.ordInt);
var URL = function(x) {
    return x;
};
var DocumentTitle = function(x) {
    return x;
};
var Delta = function(x) {
    return x;
};
var newtypeURL = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeDocumentTitle = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeDelta = {
    Coercible0: function() {
        return undefined;
    }
};
var eqURL = {
    eq: function(x) {
        return function(y) {
            return x === y;
        };
    }
};
var ordURL = {
    compare: function(x) {
        return function(y) {
            return compare(x)(y);
        };
    },
    Eq0: function() {
        return eqURL;
    }
};
var eqDocumentTitle = {
    eq: function(x) {
        return function(y) {
            return x === y;
        };
    }
};
var ordDocumentTitle = {
    compare: function(x) {
        return function(y) {
            return compare(x)(y);
        };
    },
    Eq0: function() {
        return eqDocumentTitle;
    }
};
var eqDelta = {
    eq: function(x) {
        return function(y) {
            return x === y;
        };
    }
};
var ordDelta = {
    compare: function(x) {
        return function(y) {
            return compare1(x)(y);
        };
    },
    Eq0: function() {
        return eqDelta;
    }
};

},{"./foreign.js":"gBXHO","../Data.Ord/index.js":"luB7W","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gBXHO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "back", ()=>back);
parcelHelpers.export(exports, "forward", ()=>forward);
parcelHelpers.export(exports, "go", ()=>go);
parcelHelpers.export(exports, "pushState", ()=>pushState);
parcelHelpers.export(exports, "replaceState", ()=>replaceState);
parcelHelpers.export(exports, "state", ()=>state);
function back(history) {
    return function() {
        return history.back();
    };
}
function forward(history) {
    return function() {
        return history.forward();
    };
}
function go(delta) {
    return function(history) {
        return function() {
            return history.go(delta);
        };
    };
}
function pushState(a) {
    return function(docTitle) {
        return function(url) {
            return function(history) {
                return function() {
                    return history.pushState(a, docTitle, url);
                };
            };
        };
    };
}
function replaceState(a) {
    return function(docTitle) {
        return function(url) {
            return function(history) {
                return function() {
                    return history.replaceState(a, docTitle, url);
                };
            };
        };
    };
}
function state(history) {
    return function() {
        return history.state;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fvayZ":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hash", ()=>(0, _foreignJs.hash));
parcelHelpers.export(exports, "setHash", ()=>(0, _foreignJs.setHash));
parcelHelpers.export(exports, "host", ()=>(0, _foreignJs.host));
parcelHelpers.export(exports, "setHost", ()=>(0, _foreignJs.setHost));
parcelHelpers.export(exports, "hostname", ()=>(0, _foreignJs.hostname));
parcelHelpers.export(exports, "setHostname", ()=>(0, _foreignJs.setHostname));
parcelHelpers.export(exports, "href", ()=>(0, _foreignJs.href));
parcelHelpers.export(exports, "setHref", ()=>(0, _foreignJs.setHref));
parcelHelpers.export(exports, "origin", ()=>(0, _foreignJs.origin));
parcelHelpers.export(exports, "setOrigin", ()=>(0, _foreignJs.setOrigin));
parcelHelpers.export(exports, "pathname", ()=>(0, _foreignJs.pathname));
parcelHelpers.export(exports, "setPathname", ()=>(0, _foreignJs.setPathname));
parcelHelpers.export(exports, "port", ()=>(0, _foreignJs.port));
parcelHelpers.export(exports, "setPort", ()=>(0, _foreignJs.setPort));
parcelHelpers.export(exports, "protocol", ()=>(0, _foreignJs.protocol));
parcelHelpers.export(exports, "setProtocol", ()=>(0, _foreignJs.setProtocol));
parcelHelpers.export(exports, "search", ()=>(0, _foreignJs.search));
parcelHelpers.export(exports, "setSearch", ()=>(0, _foreignJs.setSearch));
parcelHelpers.export(exports, "assign", ()=>(0, _foreignJs.assign));
parcelHelpers.export(exports, "replace", ()=>(0, _foreignJs.replace));
parcelHelpers.export(exports, "reload", ()=>(0, _foreignJs.reload));
var _foreignJs = require("./foreign.js");

},{"./foreign.js":"cpeie","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cpeie":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hash", ()=>hash);
parcelHelpers.export(exports, "setHash", ()=>setHash);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "host", ()=>host);
parcelHelpers.export(exports, "setHost", ()=>setHost);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "hostname", ()=>hostname);
parcelHelpers.export(exports, "setHostname", ()=>setHostname);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "href", ()=>href);
parcelHelpers.export(exports, "setHref", ()=>setHref);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "origin", ()=>origin);
parcelHelpers.export(exports, "setOrigin", ()=>setOrigin);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "pathname", ()=>pathname);
parcelHelpers.export(exports, "setPathname", ()=>setPathname);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "port", ()=>port);
parcelHelpers.export(exports, "setPort", ()=>setPort);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "protocol", ()=>protocol);
parcelHelpers.export(exports, "setProtocol", ()=>setProtocol);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "search", ()=>search);
parcelHelpers.export(exports, "setSearch", ()=>setSearch);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "assign", ()=>assign);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "replace", ()=>replace);
// ----------------------------------------------------------------------------
parcelHelpers.export(exports, "reload", ()=>reload);
function hash(location) {
    return function() {
        return location.hash;
    };
}
function setHash(hash) {
    return function(location) {
        return function() {
            location.hash = hash;
        };
    };
}
function host(location) {
    return function() {
        return location.host;
    };
}
function setHost(host) {
    return function(location) {
        return function() {
            location.host = host;
        };
    };
}
function hostname(location) {
    return function() {
        return location.hostname;
    };
}
function setHostname(hostname) {
    return function(location) {
        return function() {
            location.hostname = hostname;
        };
    };
}
function href(location) {
    return function() {
        return location.href;
    };
}
function setHref(href) {
    return function(location) {
        return function() {
            location.href = href;
        };
    };
}
function origin(location) {
    return function() {
        return location.origin;
    };
}
function setOrigin(origin) {
    return function(location) {
        return function() {
            location.origin = origin;
        };
    };
}
function pathname(location) {
    return function() {
        return location.pathname;
    };
}
function setPathname(pathname) {
    return function(location) {
        return function() {
            location.pathname = pathname;
        };
    };
}
function port(location) {
    return function() {
        return location.port;
    };
}
function setPort(port) {
    return function(location) {
        return function() {
            location.port = port;
        };
    };
}
function protocol(location) {
    return function() {
        return location.protocol;
    };
}
function setProtocol(protocol) {
    return function(location) {
        return function() {
            location.protocol = protocol;
        };
    };
}
function search(location) {
    return function() {
        return location.search;
    };
}
function setSearch(search) {
    return function(location) {
        return function() {
            location.search = search;
        };
    };
}
function assign(url) {
    return function(location) {
        return function() {
            location.assign(url);
        };
    };
}
function replace(url) {
    return function(location) {
        return function() {
            location.replace(url);
        };
    };
}
function reload(location) {
    return function() {
        location.reload();
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2CcJu":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "language", ()=>(0, _foreignJs.language));
parcelHelpers.export(exports, "languages", ()=>(0, _foreignJs.languages));
parcelHelpers.export(exports, "onLine", ()=>(0, _foreignJs.onLine));
parcelHelpers.export(exports, "platform", ()=>(0, _foreignJs.platform));
parcelHelpers.export(exports, "userAgent", ()=>(0, _foreignJs.userAgent));
var _foreignJs = require("./foreign.js");

},{"./foreign.js":"gzHtB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gzHtB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "language", ()=>language);
parcelHelpers.export(exports, "languages", ()=>languages);
parcelHelpers.export(exports, "onLine", ()=>onLine);
parcelHelpers.export(exports, "platform", ()=>platform);
parcelHelpers.export(exports, "userAgent", ()=>userAgent);
function language(navigator) {
    return function() {
        return navigator.language;
    };
}
function languages(navigator) {
    return function() {
        return navigator.languages;
    };
}
function onLine(navigator) {
    return function() {
        return navigator.onLine;
    };
}
function platform(navigator) {
    return function() {
        return navigator.platform;
    };
}
function userAgent(navigator) {
    return function() {
        return navigator.userAgent;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"e88Om":[function(require,module,exports,__globalThis) {
// Generated by purs version 0.15.15
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "document", ()=>(0, _foreignJs.document));
parcelHelpers.export(exports, "navigator", ()=>(0, _foreignJs.navigator));
parcelHelpers.export(exports, "location", ()=>(0, _foreignJs.location));
parcelHelpers.export(exports, "history", ()=>(0, _foreignJs.history));
parcelHelpers.export(exports, "innerWidth", ()=>(0, _foreignJs.innerWidth));
parcelHelpers.export(exports, "innerHeight", ()=>(0, _foreignJs.innerHeight));
parcelHelpers.export(exports, "alert", ()=>(0, _foreignJs.alert));
parcelHelpers.export(exports, "confirm", ()=>(0, _foreignJs.confirm));
parcelHelpers.export(exports, "moveBy", ()=>(0, _foreignJs.moveBy));
parcelHelpers.export(exports, "moveTo", ()=>(0, _foreignJs.moveTo));
parcelHelpers.export(exports, "close", ()=>(0, _foreignJs.close));
parcelHelpers.export(exports, "outerHeight", ()=>(0, _foreignJs.outerHeight));
parcelHelpers.export(exports, "outerWidth", ()=>(0, _foreignJs.outerWidth));
parcelHelpers.export(exports, "print", ()=>(0, _foreignJs.print));
parcelHelpers.export(exports, "resizeBy", ()=>(0, _foreignJs.resizeBy));
parcelHelpers.export(exports, "resizeTo", ()=>(0, _foreignJs.resizeTo));
parcelHelpers.export(exports, "screenX", ()=>(0, _foreignJs.screenX));
parcelHelpers.export(exports, "screenY", ()=>(0, _foreignJs.screenY));
parcelHelpers.export(exports, "scroll", ()=>(0, _foreignJs.scroll));
parcelHelpers.export(exports, "scrollBy", ()=>(0, _foreignJs.scrollBy));
parcelHelpers.export(exports, "scrollX", ()=>(0, _foreignJs.scrollX));
parcelHelpers.export(exports, "scrollY", ()=>(0, _foreignJs.scrollY));
parcelHelpers.export(exports, "localStorage", ()=>(0, _foreignJs.localStorage));
parcelHelpers.export(exports, "sessionStorage", ()=>(0, _foreignJs.sessionStorage));
parcelHelpers.export(exports, "requestAnimationFrame", ()=>(0, _foreignJs.requestAnimationFrame));
parcelHelpers.export(exports, "cancelAnimationFrame", ()=>(0, _foreignJs.cancelAnimationFrame));
parcelHelpers.export(exports, "requestIdleCallback", ()=>(0, _foreignJs.requestIdleCallback));
parcelHelpers.export(exports, "cancelIdleCallback", ()=>(0, _foreignJs.cancelIdleCallback));
parcelHelpers.export(exports, "parent", ()=>(0, _foreignJs.parent));
parcelHelpers.export(exports, "toEventTarget", ()=>toEventTarget);
parcelHelpers.export(exports, "fromEventTarget", ()=>fromEventTarget);
parcelHelpers.export(exports, "open", ()=>open);
parcelHelpers.export(exports, "prompt", ()=>prompt);
parcelHelpers.export(exports, "promptDefault", ()=>promptDefault);
parcelHelpers.export(exports, "opener", ()=>opener);
parcelHelpers.export(exports, "eqRequestAnimationFrameId", ()=>eqRequestAnimationFrameId);
parcelHelpers.export(exports, "ordRequestAnimationFrameId", ()=>ordRequestAnimationFrameId);
parcelHelpers.export(exports, "eqRequestIdleCallbackId", ()=>eqRequestIdleCallbackId);
parcelHelpers.export(exports, "ordRequestIdleCallbackId", ()=>ordRequestIdleCallbackId);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Nullable/index.js");
var _indexJs2 = require("../Data.Ord/index.js");
var _indexJs3 = require("../Effect/index.js");
var _indexJs4 = require("../Unsafe.Coerce/index.js");
var _indexJs5 = require("../Web.Internal.FFI/index.js");
var map = /* #__PURE__ */ _indexJs.map(_indexJs3.functorEffect);
var compare = /* #__PURE__ */ _indexJs2.compare(_indexJs2.ordInt);
var RequestIdleCallbackId = function(x) {
    return x;
};
var RequestAnimationFrameId = function(x) {
    return x;
};
var toEventTarget = _indexJs4.unsafeCoerce;
var promptDefault = function(msg) {
    return function(defaultText) {
        return function(window) {
            return map(_indexJs1.toMaybe)(_foreignJs["_prompt"](msg)(defaultText)(window));
        };
    };
};
var prompt = function(msg) {
    return function(window) {
        return map(_indexJs1.toMaybe)(_foreignJs["_prompt"](msg)("")(window));
    };
};
var opener = function(window) {
    return map(_indexJs1.toMaybe)(_foreignJs["_opener"](window));
};
var open = function(url$prime) {
    return function(name) {
        return function(features) {
            return function(window) {
                return map(_indexJs1.toMaybe)(_foreignJs["_open"](url$prime)(name)(features)(window));
            };
        };
    };
};
var fromEventTarget = /* #__PURE__ */ _indexJs5.unsafeReadProtoTagged("Window");
var eqRequestIdleCallbackId = {
    eq: function(x) {
        return function(y) {
            return x === y;
        };
    }
};
var ordRequestIdleCallbackId = {
    compare: function(x) {
        return function(y) {
            return compare(x)(y);
        };
    },
    Eq0: function() {
        return eqRequestIdleCallbackId;
    }
};
var eqRequestAnimationFrameId = {
    eq: function(x) {
        return function(y) {
            return x === y;
        };
    }
};
var ordRequestAnimationFrameId = {
    compare: function(x) {
        return function(y) {
            return compare(x)(y);
        };
    },
    Eq0: function() {
        return eqRequestAnimationFrameId;
    }
};

},{"./foreign.js":"aE1bo","../Data.Functor/index.js":"j9NCu","../Data.Nullable/index.js":"aaBaJ","../Data.Ord/index.js":"luB7W","../Effect/index.js":"jyor1","../Unsafe.Coerce/index.js":"kRX7u","../Web.Internal.FFI/index.js":"7WRHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aE1bo":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "document", ()=>document);
parcelHelpers.export(exports, "navigator", ()=>navigator);
parcelHelpers.export(exports, "location", ()=>location);
parcelHelpers.export(exports, "history", ()=>history);
parcelHelpers.export(exports, "innerWidth", ()=>innerWidth);
parcelHelpers.export(exports, "innerHeight", ()=>innerHeight);
parcelHelpers.export(exports, "alert", ()=>alert);
parcelHelpers.export(exports, "confirm", ()=>confirm);
parcelHelpers.export(exports, "moveBy", ()=>moveBy);
parcelHelpers.export(exports, "moveTo", ()=>moveTo);
parcelHelpers.export(exports, "_open", ()=>_open);
parcelHelpers.export(exports, "close", ()=>close);
parcelHelpers.export(exports, "outerHeight", ()=>outerHeight);
parcelHelpers.export(exports, "outerWidth", ()=>outerWidth);
parcelHelpers.export(exports, "print", ()=>print);
parcelHelpers.export(exports, "_prompt", ()=>_prompt);
parcelHelpers.export(exports, "resizeBy", ()=>resizeBy);
parcelHelpers.export(exports, "resizeTo", ()=>resizeTo);
parcelHelpers.export(exports, "screenX", ()=>screenX);
parcelHelpers.export(exports, "screenY", ()=>screenY);
parcelHelpers.export(exports, "scroll", ()=>scroll);
parcelHelpers.export(exports, "scrollBy", ()=>scrollBy);
parcelHelpers.export(exports, "scrollX", ()=>scrollX);
parcelHelpers.export(exports, "scrollY", ()=>scrollY);
parcelHelpers.export(exports, "localStorage", ()=>localStorage);
parcelHelpers.export(exports, "sessionStorage", ()=>sessionStorage);
parcelHelpers.export(exports, "requestAnimationFrame", ()=>requestAnimationFrame);
parcelHelpers.export(exports, "cancelAnimationFrame", ()=>cancelAnimationFrame);
parcelHelpers.export(exports, "requestIdleCallback", ()=>requestIdleCallback);
parcelHelpers.export(exports, "cancelIdleCallback", ()=>cancelIdleCallback);
parcelHelpers.export(exports, "parent", ()=>parent);
parcelHelpers.export(exports, "_opener", ()=>_opener);
function document(window) {
    return function() {
        return window.document;
    };
}
function navigator(window) {
    return function() {
        return window.navigator;
    };
}
function location(window) {
    return function() {
        return window.location;
    };
}
function history(window) {
    return function() {
        return window.history;
    };
}
function innerWidth(window) {
    return function() {
        return window.innerWidth;
    };
}
function innerHeight(window) {
    return function() {
        return window.innerHeight;
    };
}
function alert(str) {
    return function(window) {
        return function() {
            window.alert(str);
        };
    };
}
function confirm(str) {
    return function(window) {
        return function() {
            return window.confirm(str);
        };
    };
}
function moveBy(xDelta) {
    return function(yDelta) {
        return function(window) {
            return function() {
                window.moveBy(xDelta, yDelta);
            };
        };
    };
}
function moveTo(width) {
    return function(height) {
        return function(window) {
            return function() {
                window.moveTo(width, height);
            };
        };
    };
}
function _open(url) {
    return function(name) {
        return function(features) {
            return function(window) {
                return function() {
                    return window.open(url, name, features);
                };
            };
        };
    };
}
function close(window) {
    return function() {
        return window.close();
    };
}
function outerHeight(window) {
    return function() {
        return window.outerHeight;
    };
}
function outerWidth(window) {
    return function() {
        return window.outerWidth;
    };
}
function print(window) {
    return function() {
        window.print();
    };
}
function _prompt(str) {
    return function(defaultText) {
        return function(window) {
            return function() {
                return window.prompt(str, defaultText);
            };
        };
    };
}
function resizeBy(xDelta) {
    return function(yDelta) {
        return function(window) {
            return function() {
                window.resizeBy(xDelta, yDelta);
            };
        };
    };
}
function resizeTo(width) {
    return function(height) {
        return function(window) {
            return function() {
                window.resizeTo(width, height);
            };
        };
    };
}
function screenX(window) {
    return function() {
        return window.screenX;
    };
}
function screenY(window) {
    return function() {
        return window.screenY;
    };
}
function scroll(xCoord) {
    return function(yCoord) {
        return function(window) {
            return function() {
                window.scroll(xCoord, yCoord);
            };
        };
    };
}
function scrollBy(xCoord) {
    return function(yCoord) {
        return function(window) {
            return function() {
                window.scrollBy(xCoord, yCoord);
            };
        };
    };
}
function scrollX(window) {
    return function() {
        return window.scrollX;
    };
}
function scrollY(window) {
    return function() {
        return window.scrollY;
    };
}
function localStorage(window) {
    return function() {
        return window.localStorage;
    };
}
function sessionStorage(window) {
    return function() {
        return window.sessionStorage;
    };
}
function requestAnimationFrame(fn) {
    return function(window) {
        return function() {
            return window.requestAnimationFrame(fn);
        };
    };
}
function cancelAnimationFrame(id) {
    return function(window) {
        return function() {
            return window.cancelAnimationFrame(id);
        };
    };
}
function requestIdleCallback(opts) {
    return function(fn) {
        return function(window) {
            return function() {
                return window.requestIdleCallback(fn, opts);
            };
        };
    };
}
function cancelIdleCallback(id) {
    return function(window) {
        return function() {
            return window.cancelIdleCallback(id);
        };
    };
}
function parent(window) {
    return function() {
        return window.parent;
    };
}
function _opener(window) {
    return function() {
        return window.opener;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}]},["5j6Kf","a0t4e"], "a0t4e", "parcelRequire5207", {}, null, null, "http://localhost:1234")

//# sourceMappingURL=public.31b563d9.js.map
